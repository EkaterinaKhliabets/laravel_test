/*! jQuery v3.4.1 | (c) JS Foundation and other contributors | jquery.org/license */
!function(e,t){"use strict";"object"==typeof module&&"object"==typeof module.exports?module.exports=e.document?t(e,!0):function(e){if(!e.document)throw new Error("jQuery requires a window with a document");return t(e)}:t(e)}("undefined"!=typeof window?window:this,function(C,e){"use strict";var t=[],E=C.document,r=Object.getPrototypeOf,s=t.slice,g=t.concat,u=t.push,i=t.indexOf,n={},o=n.toString,v=n.hasOwnProperty,a=v.toString,l=a.call(Object),y={},m=function(e){return"function"==typeof e&&"number"!=typeof e.nodeType},x=function(e){return null!=e&&e===e.window},c={type:!0,src:!0,nonce:!0,noModule:!0};function b(e,t,n){var r,i,o=(n=n||E).createElement("script");if(o.text=e,t)for(r in c)(i=t[r]||t.getAttribute&&t.getAttribute(r))&&o.setAttribute(r,i);n.head.appendChild(o).parentNode.removeChild(o)}function w(e){return null==e?e+"":"object"==typeof e||"function"==typeof e?n[o.call(e)]||"object":typeof e}var f="3.4.1",k=function(e,t){return new k.fn.init(e,t)},p=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;function d(e){var t=!!e&&"length"in e&&e.length,n=w(e);return!m(e)&&!x(e)&&("array"===n||0===t||"number"==typeof t&&0<t&&t-1 in e)}k.fn=k.prototype={jquery:f,constructor:k,length:0,toArray:function(){return s.call(this)},get:function(e){return null==e?s.call(this):e<0?this[e+this.length]:this[e]},pushStack:function(e){var t=k.merge(this.constructor(),e);return t.prevObject=this,t},each:function(e){return k.each(this,e)},map:function(n){return this.pushStack(k.map(this,function(e,t){return n.call(e,t,e)}))},slice:function(){return this.pushStack(s.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(e){var t=this.length,n=+e+(e<0?t:0);return this.pushStack(0<=n&&n<t?[this[n]]:[])},end:function(){return this.prevObject||this.constructor()},push:u,sort:t.sort,splice:t.splice},k.extend=k.fn.extend=function(){var e,t,n,r,i,o,a=arguments[0]||{},s=1,u=arguments.length,l=!1;for("boolean"==typeof a&&(l=a,a=arguments[s]||{},s++),"object"==typeof a||m(a)||(a={}),s===u&&(a=this,s--);s<u;s++)if(null!=(e=arguments[s]))for(t in e)r=e[t],"__proto__"!==t&&a!==r&&(l&&r&&(k.isPlainObject(r)||(i=Array.isArray(r)))?(n=a[t],o=i&&!Array.isArray(n)?[]:i||k.isPlainObject(n)?n:{},i=!1,a[t]=k.extend(l,o,r)):void 0!==r&&(a[t]=r));return a},k.extend({expando:"jQuery"+(f+Math.random()).replace(/\D/g,""),isReady:!0,error:function(e){throw new Error(e)},noop:function(){},isPlainObject:function(e){var t,n;return!(!e||"[object Object]"!==o.call(e))&&(!(t=r(e))||"function"==typeof(n=v.call(t,"constructor")&&t.constructor)&&a.call(n)===l)},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},globalEval:function(e,t){b(e,{nonce:t&&t.nonce})},each:function(e,t){var n,r=0;if(d(e)){for(n=e.length;r<n;r++)if(!1===t.call(e[r],r,e[r]))break}else for(r in e)if(!1===t.call(e[r],r,e[r]))break;return e},trim:function(e){return null==e?"":(e+"").replace(p,"")},makeArray:function(e,t){var n=t||[];return null!=e&&(d(Object(e))?k.merge(n,"string"==typeof e?[e]:e):u.call(n,e)),n},inArray:function(e,t,n){return null==t?-1:i.call(t,e,n)},merge:function(e,t){for(var n=+t.length,r=0,i=e.length;r<n;r++)e[i++]=t[r];return e.length=i,e},grep:function(e,t,n){for(var r=[],i=0,o=e.length,a=!n;i<o;i++)!t(e[i],i)!==a&&r.push(e[i]);return r},map:function(e,t,n){var r,i,o=0,a=[];if(d(e))for(r=e.length;o<r;o++)null!=(i=t(e[o],o,n))&&a.push(i);else for(o in e)null!=(i=t(e[o],o,n))&&a.push(i);return g.apply([],a)},guid:1,support:y}),"function"==typeof Symbol&&(k.fn[Symbol.iterator]=t[Symbol.iterator]),k.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(e,t){n["[object "+t+"]"]=t.toLowerCase()});var h=function(n){var e,d,b,o,i,h,f,g,w,u,l,T,C,a,E,v,s,c,y,k="sizzle"+1*new Date,m=n.document,S=0,r=0,p=ue(),x=ue(),N=ue(),A=ue(),D=function(e,t){return e===t&&(l=!0),0},j={}.hasOwnProperty,t=[],q=t.pop,L=t.push,H=t.push,O=t.slice,P=function(e,t){for(var n=0,r=e.length;n<r;n++)if(e[n]===t)return n;return-1},R="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",M="[\\x20\\t\\r\\n\\f]",I="(?:\\\\.|[\\w-]|[^\0-\\xa0])+",W="\\["+M+"*("+I+")(?:"+M+"*([*^$|!~]?=)"+M+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+I+"))|)"+M+"*\\]",$=":("+I+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+W+")*)|.*)\\)|)",F=new RegExp(M+"+","g"),B=new RegExp("^"+M+"+|((?:^|[^\\\\])(?:\\\\.)*)"+M+"+$","g"),_=new RegExp("^"+M+"*,"+M+"*"),z=new RegExp("^"+M+"*([>+~]|"+M+")"+M+"*"),U=new RegExp(M+"|>"),X=new RegExp($),V=new RegExp("^"+I+"$"),G={ID:new RegExp("^#("+I+")"),CLASS:new RegExp("^\\.("+I+")"),TAG:new RegExp("^("+I+"|[*])"),ATTR:new RegExp("^"+W),PSEUDO:new RegExp("^"+$),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+M+"*(even|odd|(([+-]|)(\\d*)n|)"+M+"*(?:([+-]|)"+M+"*(\\d+)|))"+M+"*\\)|)","i"),bool:new RegExp("^(?:"+R+")$","i"),needsContext:new RegExp("^"+M+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+M+"*((?:-\\d)?\\d*)"+M+"*\\)|)(?=[^-]|$)","i")},Y=/HTML$/i,Q=/^(?:input|select|textarea|button)$/i,J=/^h\d$/i,K=/^[^{]+\{\s*\[native \w/,Z=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,ee=/[+~]/,te=new RegExp("\\\\([\\da-f]{1,6}"+M+"?|("+M+")|.)","ig"),ne=function(e,t,n){var r="0x"+t-65536;return r!=r||n?t:r<0?String.fromCharCode(r+65536):String.fromCharCode(r>>10|55296,1023&r|56320)},re=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,ie=function(e,t){return t?"\0"===e?"\ufffd":e.slice(0,-1)+"\\"+e.charCodeAt(e.length-1).toString(16)+" ":"\\"+e},oe=function(){T()},ae=be(function(e){return!0===e.disabled&&"fieldset"===e.nodeName.toLowerCase()},{dir:"parentNode",next:"legend"});try{H.apply(t=O.call(m.childNodes),m.childNodes),t[m.childNodes.length].nodeType}catch(e){H={apply:t.length?function(e,t){L.apply(e,O.call(t))}:function(e,t){var n=e.length,r=0;while(e[n++]=t[r++]);e.length=n-1}}}function se(t,e,n,r){var i,o,a,s,u,l,c,f=e&&e.ownerDocument,p=e?e.nodeType:9;if(n=n||[],"string"!=typeof t||!t||1!==p&&9!==p&&11!==p)return n;if(!r&&((e?e.ownerDocument||e:m)!==C&&T(e),e=e||C,E)){if(11!==p&&(u=Z.exec(t)))if(i=u[1]){if(9===p){if(!(a=e.getElementById(i)))return n;if(a.id===i)return n.push(a),n}else if(f&&(a=f.getElementById(i))&&y(e,a)&&a.id===i)return n.push(a),n}else{if(u[2])return H.apply(n,e.getElementsByTagName(t)),n;if((i=u[3])&&d.getElementsByClassName&&e.getElementsByClassName)return H.apply(n,e.getElementsByClassName(i)),n}if(d.qsa&&!A[t+" "]&&(!v||!v.test(t))&&(1!==p||"object"!==e.nodeName.toLowerCase())){if(c=t,f=e,1===p&&U.test(t)){(s=e.getAttribute("id"))?s=s.replace(re,ie):e.setAttribute("id",s=k),o=(l=h(t)).length;while(o--)l[o]="#"+s+" "+xe(l[o]);c=l.join(","),f=ee.test(t)&&ye(e.parentNode)||e}try{return H.apply(n,f.querySelectorAll(c)),n}catch(e){A(t,!0)}finally{s===k&&e.removeAttribute("id")}}}return g(t.replace(B,"$1"),e,n,r)}function ue(){var r=[];return function e(t,n){return r.push(t+" ")>b.cacheLength&&delete e[r.shift()],e[t+" "]=n}}function le(e){return e[k]=!0,e}function ce(e){var t=C.createElement("fieldset");try{return!!e(t)}catch(e){return!1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null}}function fe(e,t){var n=e.split("|"),r=n.length;while(r--)b.attrHandle[n[r]]=t}function pe(e,t){var n=t&&e,r=n&&1===e.nodeType&&1===t.nodeType&&e.sourceIndex-t.sourceIndex;if(r)return r;if(n)while(n=n.nextSibling)if(n===t)return-1;return e?1:-1}function de(t){return function(e){return"input"===e.nodeName.toLowerCase()&&e.type===t}}function he(n){return function(e){var t=e.nodeName.toLowerCase();return("input"===t||"button"===t)&&e.type===n}}function ge(t){return function(e){return"form"in e?e.parentNode&&!1===e.disabled?"label"in e?"label"in e.parentNode?e.parentNode.disabled===t:e.disabled===t:e.isDisabled===t||e.isDisabled!==!t&&ae(e)===t:e.disabled===t:"label"in e&&e.disabled===t}}function ve(a){return le(function(o){return o=+o,le(function(e,t){var n,r=a([],e.length,o),i=r.length;while(i--)e[n=r[i]]&&(e[n]=!(t[n]=e[n]))})})}function ye(e){return e&&"undefined"!=typeof e.getElementsByTagName&&e}for(e in d=se.support={},i=se.isXML=function(e){var t=e.namespaceURI,n=(e.ownerDocument||e).documentElement;return!Y.test(t||n&&n.nodeName||"HTML")},T=se.setDocument=function(e){var t,n,r=e?e.ownerDocument||e:m;return r!==C&&9===r.nodeType&&r.documentElement&&(a=(C=r).documentElement,E=!i(C),m!==C&&(n=C.defaultView)&&n.top!==n&&(n.addEventListener?n.addEventListener("unload",oe,!1):n.attachEvent&&n.attachEvent("onunload",oe)),d.attributes=ce(function(e){return e.className="i",!e.getAttribute("className")}),d.getElementsByTagName=ce(function(e){return e.appendChild(C.createComment("")),!e.getElementsByTagName("*").length}),d.getElementsByClassName=K.test(C.getElementsByClassName),d.getById=ce(function(e){return a.appendChild(e).id=k,!C.getElementsByName||!C.getElementsByName(k).length}),d.getById?(b.filter.ID=function(e){var t=e.replace(te,ne);return function(e){return e.getAttribute("id")===t}},b.find.ID=function(e,t){if("undefined"!=typeof t.getElementById&&E){var n=t.getElementById(e);return n?[n]:[]}}):(b.filter.ID=function(e){var n=e.replace(te,ne);return function(e){var t="undefined"!=typeof e.getAttributeNode&&e.getAttributeNode("id");return t&&t.value===n}},b.find.ID=function(e,t){if("undefined"!=typeof t.getElementById&&E){var n,r,i,o=t.getElementById(e);if(o){if((n=o.getAttributeNode("id"))&&n.value===e)return[o];i=t.getElementsByName(e),r=0;while(o=i[r++])if((n=o.getAttributeNode("id"))&&n.value===e)return[o]}return[]}}),b.find.TAG=d.getElementsByTagName?function(e,t){return"undefined"!=typeof t.getElementsByTagName?t.getElementsByTagName(e):d.qsa?t.querySelectorAll(e):void 0}:function(e,t){var n,r=[],i=0,o=t.getElementsByTagName(e);if("*"===e){while(n=o[i++])1===n.nodeType&&r.push(n);return r}return o},b.find.CLASS=d.getElementsByClassName&&function(e,t){if("undefined"!=typeof t.getElementsByClassName&&E)return t.getElementsByClassName(e)},s=[],v=[],(d.qsa=K.test(C.querySelectorAll))&&(ce(function(e){a.appendChild(e).innerHTML="<a id='"+k+"'></a><select id='"+k+"-\r\\' msallowcapture=''><option selected=''></option></select>",e.querySelectorAll("[msallowcapture^='']").length&&v.push("[*^$]="+M+"*(?:''|\"\")"),e.querySelectorAll("[selected]").length||v.push("\\["+M+"*(?:value|"+R+")"),e.querySelectorAll("[id~="+k+"-]").length||v.push("~="),e.querySelectorAll(":checked").length||v.push(":checked"),e.querySelectorAll("a#"+k+"+*").length||v.push(".#.+[+~]")}),ce(function(e){e.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var t=C.createElement("input");t.setAttribute("type","hidden"),e.appendChild(t).setAttribute("name","D"),e.querySelectorAll("[name=d]").length&&v.push("name"+M+"*[*^$|!~]?="),2!==e.querySelectorAll(":enabled").length&&v.push(":enabled",":disabled"),a.appendChild(e).disabled=!0,2!==e.querySelectorAll(":disabled").length&&v.push(":enabled",":disabled"),e.querySelectorAll("*,:x"),v.push(",.*:")})),(d.matchesSelector=K.test(c=a.matches||a.webkitMatchesSelector||a.mozMatchesSelector||a.oMatchesSelector||a.msMatchesSelector))&&ce(function(e){d.disconnectedMatch=c.call(e,"*"),c.call(e,"[s!='']:x"),s.push("!=",$)}),v=v.length&&new RegExp(v.join("|")),s=s.length&&new RegExp(s.join("|")),t=K.test(a.compareDocumentPosition),y=t||K.test(a.contains)?function(e,t){var n=9===e.nodeType?e.documentElement:e,r=t&&t.parentNode;return e===r||!(!r||1!==r.nodeType||!(n.contains?n.contains(r):e.compareDocumentPosition&&16&e.compareDocumentPosition(r)))}:function(e,t){if(t)while(t=t.parentNode)if(t===e)return!0;return!1},D=t?function(e,t){if(e===t)return l=!0,0;var n=!e.compareDocumentPosition-!t.compareDocumentPosition;return n||(1&(n=(e.ownerDocument||e)===(t.ownerDocument||t)?e.compareDocumentPosition(t):1)||!d.sortDetached&&t.compareDocumentPosition(e)===n?e===C||e.ownerDocument===m&&y(m,e)?-1:t===C||t.ownerDocument===m&&y(m,t)?1:u?P(u,e)-P(u,t):0:4&n?-1:1)}:function(e,t){if(e===t)return l=!0,0;var n,r=0,i=e.parentNode,o=t.parentNode,a=[e],s=[t];if(!i||!o)return e===C?-1:t===C?1:i?-1:o?1:u?P(u,e)-P(u,t):0;if(i===o)return pe(e,t);n=e;while(n=n.parentNode)a.unshift(n);n=t;while(n=n.parentNode)s.unshift(n);while(a[r]===s[r])r++;return r?pe(a[r],s[r]):a[r]===m?-1:s[r]===m?1:0}),C},se.matches=function(e,t){return se(e,null,null,t)},se.matchesSelector=function(e,t){if((e.ownerDocument||e)!==C&&T(e),d.matchesSelector&&E&&!A[t+" "]&&(!s||!s.test(t))&&(!v||!v.test(t)))try{var n=c.call(e,t);if(n||d.disconnectedMatch||e.document&&11!==e.document.nodeType)return n}catch(e){A(t,!0)}return 0<se(t,C,null,[e]).length},se.contains=function(e,t){return(e.ownerDocument||e)!==C&&T(e),y(e,t)},se.attr=function(e,t){(e.ownerDocument||e)!==C&&T(e);var n=b.attrHandle[t.toLowerCase()],r=n&&j.call(b.attrHandle,t.toLowerCase())?n(e,t,!E):void 0;return void 0!==r?r:d.attributes||!E?e.getAttribute(t):(r=e.getAttributeNode(t))&&r.specified?r.value:null},se.escape=function(e){return(e+"").replace(re,ie)},se.error=function(e){throw new Error("Syntax error, unrecognized expression: "+e)},se.uniqueSort=function(e){var t,n=[],r=0,i=0;if(l=!d.detectDuplicates,u=!d.sortStable&&e.slice(0),e.sort(D),l){while(t=e[i++])t===e[i]&&(r=n.push(i));while(r--)e.splice(n[r],1)}return u=null,e},o=se.getText=function(e){var t,n="",r=0,i=e.nodeType;if(i){if(1===i||9===i||11===i){if("string"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)n+=o(e)}else if(3===i||4===i)return e.nodeValue}else while(t=e[r++])n+=o(t);return n},(b=se.selectors={cacheLength:50,createPseudo:le,match:G,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(te,ne),e[3]=(e[3]||e[4]||e[5]||"").replace(te,ne),"~="===e[2]&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),"nth"===e[1].slice(0,3)?(e[3]||se.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*("even"===e[3]||"odd"===e[3])),e[5]=+(e[7]+e[8]||"odd"===e[3])):e[3]&&se.error(e[0]),e},PSEUDO:function(e){var t,n=!e[6]&&e[2];return G.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||"":n&&X.test(n)&&(t=h(n,!0))&&(t=n.indexOf(")",n.length-t)-n.length)&&(e[0]=e[0].slice(0,t),e[2]=n.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(te,ne).toLowerCase();return"*"===e?function(){return!0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=p[e+" "];return t||(t=new RegExp("(^|"+M+")"+e+"("+M+"|$)"))&&p(e,function(e){return t.test("string"==typeof e.className&&e.className||"undefined"!=typeof e.getAttribute&&e.getAttribute("class")||"")})},ATTR:function(n,r,i){return function(e){var t=se.attr(e,n);return null==t?"!="===r:!r||(t+="","="===r?t===i:"!="===r?t!==i:"^="===r?i&&0===t.indexOf(i):"*="===r?i&&-1<t.indexOf(i):"$="===r?i&&t.slice(-i.length)===i:"~="===r?-1<(" "+t.replace(F," ")+" ").indexOf(i):"|="===r&&(t===i||t.slice(0,i.length+1)===i+"-"))}},CHILD:function(h,e,t,g,v){var y="nth"!==h.slice(0,3),m="last"!==h.slice(-4),x="of-type"===e;return 1===g&&0===v?function(e){return!!e.parentNode}:function(e,t,n){var r,i,o,a,s,u,l=y!==m?"nextSibling":"previousSibling",c=e.parentNode,f=x&&e.nodeName.toLowerCase(),p=!n&&!x,d=!1;if(c){if(y){while(l){a=e;while(a=a[l])if(x?a.nodeName.toLowerCase()===f:1===a.nodeType)return!1;u=l="only"===h&&!u&&"nextSibling"}return!0}if(u=[m?c.firstChild:c.lastChild],m&&p){d=(s=(r=(i=(o=(a=c)[k]||(a[k]={}))[a.uniqueID]||(o[a.uniqueID]={}))[h]||[])[0]===S&&r[1])&&r[2],a=s&&c.childNodes[s];while(a=++s&&a&&a[l]||(d=s=0)||u.pop())if(1===a.nodeType&&++d&&a===e){i[h]=[S,s,d];break}}else if(p&&(d=s=(r=(i=(o=(a=e)[k]||(a[k]={}))[a.uniqueID]||(o[a.uniqueID]={}))[h]||[])[0]===S&&r[1]),!1===d)while(a=++s&&a&&a[l]||(d=s=0)||u.pop())if((x?a.nodeName.toLowerCase()===f:1===a.nodeType)&&++d&&(p&&((i=(o=a[k]||(a[k]={}))[a.uniqueID]||(o[a.uniqueID]={}))[h]=[S,d]),a===e))break;return(d-=v)===g||d%g==0&&0<=d/g}}},PSEUDO:function(e,o){var t,a=b.pseudos[e]||b.setFilters[e.toLowerCase()]||se.error("unsupported pseudo: "+e);return a[k]?a(o):1<a.length?(t=[e,e,"",o],b.setFilters.hasOwnProperty(e.toLowerCase())?le(function(e,t){var n,r=a(e,o),i=r.length;while(i--)e[n=P(e,r[i])]=!(t[n]=r[i])}):function(e){return a(e,0,t)}):a}},pseudos:{not:le(function(e){var r=[],i=[],s=f(e.replace(B,"$1"));return s[k]?le(function(e,t,n,r){var i,o=s(e,null,r,[]),a=e.length;while(a--)(i=o[a])&&(e[a]=!(t[a]=i))}):function(e,t,n){return r[0]=e,s(r,null,n,i),r[0]=null,!i.pop()}}),has:le(function(t){return function(e){return 0<se(t,e).length}}),contains:le(function(t){return t=t.replace(te,ne),function(e){return-1<(e.textContent||o(e)).indexOf(t)}}),lang:le(function(n){return V.test(n||"")||se.error("unsupported lang: "+n),n=n.replace(te,ne).toLowerCase(),function(e){var t;do{if(t=E?e.lang:e.getAttribute("xml:lang")||e.getAttribute("lang"))return(t=t.toLowerCase())===n||0===t.indexOf(n+"-")}while((e=e.parentNode)&&1===e.nodeType);return!1}}),target:function(e){var t=n.location&&n.location.hash;return t&&t.slice(1)===e.id},root:function(e){return e===a},focus:function(e){return e===C.activeElement&&(!C.hasFocus||C.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:ge(!1),disabled:ge(!0),checked:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&!!e.checked||"option"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,!0===e.selected},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType<6)return!1;return!0},parent:function(e){return!b.pseudos.empty(e)},header:function(e){return J.test(e.nodeName)},input:function(e){return Q.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&"button"===e.type||"button"===t},text:function(e){var t;return"input"===e.nodeName.toLowerCase()&&"text"===e.type&&(null==(t=e.getAttribute("type"))||"text"===t.toLowerCase())},first:ve(function(){return[0]}),last:ve(function(e,t){return[t-1]}),eq:ve(function(e,t,n){return[n<0?n+t:n]}),even:ve(function(e,t){for(var n=0;n<t;n+=2)e.push(n);return e}),odd:ve(function(e,t){for(var n=1;n<t;n+=2)e.push(n);return e}),lt:ve(function(e,t,n){for(var r=n<0?n+t:t<n?t:n;0<=--r;)e.push(r);return e}),gt:ve(function(e,t,n){for(var r=n<0?n+t:n;++r<t;)e.push(r);return e})}}).pseudos.nth=b.pseudos.eq,{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})b.pseudos[e]=de(e);for(e in{submit:!0,reset:!0})b.pseudos[e]=he(e);function me(){}function xe(e){for(var t=0,n=e.length,r="";t<n;t++)r+=e[t].value;return r}function be(s,e,t){var u=e.dir,l=e.next,c=l||u,f=t&&"parentNode"===c,p=r++;return e.first?function(e,t,n){while(e=e[u])if(1===e.nodeType||f)return s(e,t,n);return!1}:function(e,t,n){var r,i,o,a=[S,p];if(n){while(e=e[u])if((1===e.nodeType||f)&&s(e,t,n))return!0}else while(e=e[u])if(1===e.nodeType||f)if(i=(o=e[k]||(e[k]={}))[e.uniqueID]||(o[e.uniqueID]={}),l&&l===e.nodeName.toLowerCase())e=e[u]||e;else{if((r=i[c])&&r[0]===S&&r[1]===p)return a[2]=r[2];if((i[c]=a)[2]=s(e,t,n))return!0}return!1}}function we(i){return 1<i.length?function(e,t,n){var r=i.length;while(r--)if(!i[r](e,t,n))return!1;return!0}:i[0]}function Te(e,t,n,r,i){for(var o,a=[],s=0,u=e.length,l=null!=t;s<u;s++)(o=e[s])&&(n&&!n(o,r,i)||(a.push(o),l&&t.push(s)));return a}function Ce(d,h,g,v,y,e){return v&&!v[k]&&(v=Ce(v)),y&&!y[k]&&(y=Ce(y,e)),le(function(e,t,n,r){var i,o,a,s=[],u=[],l=t.length,c=e||function(e,t,n){for(var r=0,i=t.length;r<i;r++)se(e,t[r],n);return n}(h||"*",n.nodeType?[n]:n,[]),f=!d||!e&&h?c:Te(c,s,d,n,r),p=g?y||(e?d:l||v)?[]:t:f;if(g&&g(f,p,n,r),v){i=Te(p,u),v(i,[],n,r),o=i.length;while(o--)(a=i[o])&&(p[u[o]]=!(f[u[o]]=a))}if(e){if(y||d){if(y){i=[],o=p.length;while(o--)(a=p[o])&&i.push(f[o]=a);y(null,p=[],i,r)}o=p.length;while(o--)(a=p[o])&&-1<(i=y?P(e,a):s[o])&&(e[i]=!(t[i]=a))}}else p=Te(p===t?p.splice(l,p.length):p),y?y(null,t,p,r):H.apply(t,p)})}function Ee(e){for(var i,t,n,r=e.length,o=b.relative[e[0].type],a=o||b.relative[" "],s=o?1:0,u=be(function(e){return e===i},a,!0),l=be(function(e){return-1<P(i,e)},a,!0),c=[function(e,t,n){var r=!o&&(n||t!==w)||((i=t).nodeType?u(e,t,n):l(e,t,n));return i=null,r}];s<r;s++)if(t=b.relative[e[s].type])c=[be(we(c),t)];else{if((t=b.filter[e[s].type].apply(null,e[s].matches))[k]){for(n=++s;n<r;n++)if(b.relative[e[n].type])break;return Ce(1<s&&we(c),1<s&&xe(e.slice(0,s-1).concat({value:" "===e[s-2].type?"*":""})).replace(B,"$1"),t,s<n&&Ee(e.slice(s,n)),n<r&&Ee(e=e.slice(n)),n<r&&xe(e))}c.push(t)}return we(c)}return me.prototype=b.filters=b.pseudos,b.setFilters=new me,h=se.tokenize=function(e,t){var n,r,i,o,a,s,u,l=x[e+" "];if(l)return t?0:l.slice(0);a=e,s=[],u=b.preFilter;while(a){for(o in n&&!(r=_.exec(a))||(r&&(a=a.slice(r[0].length)||a),s.push(i=[])),n=!1,(r=z.exec(a))&&(n=r.shift(),i.push({value:n,type:r[0].replace(B," ")}),a=a.slice(n.length)),b.filter)!(r=G[o].exec(a))||u[o]&&!(r=u[o](r))||(n=r.shift(),i.push({value:n,type:o,matches:r}),a=a.slice(n.length));if(!n)break}return t?a.length:a?se.error(e):x(e,s).slice(0)},f=se.compile=function(e,t){var n,v,y,m,x,r,i=[],o=[],a=N[e+" "];if(!a){t||(t=h(e)),n=t.length;while(n--)(a=Ee(t[n]))[k]?i.push(a):o.push(a);(a=N(e,(v=o,m=0<(y=i).length,x=0<v.length,r=function(e,t,n,r,i){var o,a,s,u=0,l="0",c=e&&[],f=[],p=w,d=e||x&&b.find.TAG("*",i),h=S+=null==p?1:Math.random()||.1,g=d.length;for(i&&(w=t===C||t||i);l!==g&&null!=(o=d[l]);l++){if(x&&o){a=0,t||o.ownerDocument===C||(T(o),n=!E);while(s=v[a++])if(s(o,t||C,n)){r.push(o);break}i&&(S=h)}m&&((o=!s&&o)&&u--,e&&c.push(o))}if(u+=l,m&&l!==u){a=0;while(s=y[a++])s(c,f,t,n);if(e){if(0<u)while(l--)c[l]||f[l]||(f[l]=q.call(r));f=Te(f)}H.apply(r,f),i&&!e&&0<f.length&&1<u+y.length&&se.uniqueSort(r)}return i&&(S=h,w=p),c},m?le(r):r))).selector=e}return a},g=se.select=function(e,t,n,r){var i,o,a,s,u,l="function"==typeof e&&e,c=!r&&h(e=l.selector||e);if(n=n||[],1===c.length){if(2<(o=c[0]=c[0].slice(0)).length&&"ID"===(a=o[0]).type&&9===t.nodeType&&E&&b.relative[o[1].type]){if(!(t=(b.find.ID(a.matches[0].replace(te,ne),t)||[])[0]))return n;l&&(t=t.parentNode),e=e.slice(o.shift().value.length)}i=G.needsContext.test(e)?0:o.length;while(i--){if(a=o[i],b.relative[s=a.type])break;if((u=b.find[s])&&(r=u(a.matches[0].replace(te,ne),ee.test(o[0].type)&&ye(t.parentNode)||t))){if(o.splice(i,1),!(e=r.length&&xe(o)))return H.apply(n,r),n;break}}}return(l||f(e,c))(r,t,!E,n,!t||ee.test(e)&&ye(t.parentNode)||t),n},d.sortStable=k.split("").sort(D).join("")===k,d.detectDuplicates=!!l,T(),d.sortDetached=ce(function(e){return 1&e.compareDocumentPosition(C.createElement("fieldset"))}),ce(function(e){return e.innerHTML="<a href='#'></a>","#"===e.firstChild.getAttribute("href")})||fe("type|href|height|width",function(e,t,n){if(!n)return e.getAttribute(t,"type"===t.toLowerCase()?1:2)}),d.attributes&&ce(function(e){return e.innerHTML="<input/>",e.firstChild.setAttribute("value",""),""===e.firstChild.getAttribute("value")})||fe("value",function(e,t,n){if(!n&&"input"===e.nodeName.toLowerCase())return e.defaultValue}),ce(function(e){return null==e.getAttribute("disabled")})||fe(R,function(e,t,n){var r;if(!n)return!0===e[t]?t.toLowerCase():(r=e.getAttributeNode(t))&&r.specified?r.value:null}),se}(C);k.find=h,k.expr=h.selectors,k.expr[":"]=k.expr.pseudos,k.uniqueSort=k.unique=h.uniqueSort,k.text=h.getText,k.isXMLDoc=h.isXML,k.contains=h.contains,k.escapeSelector=h.escape;var T=function(e,t,n){var r=[],i=void 0!==n;while((e=e[t])&&9!==e.nodeType)if(1===e.nodeType){if(i&&k(e).is(n))break;r.push(e)}return r},S=function(e,t){for(var n=[];e;e=e.nextSibling)1===e.nodeType&&e!==t&&n.push(e);return n},N=k.expr.match.needsContext;function A(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()}var D=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;function j(e,n,r){return m(n)?k.grep(e,function(e,t){return!!n.call(e,t,e)!==r}):n.nodeType?k.grep(e,function(e){return e===n!==r}):"string"!=typeof n?k.grep(e,function(e){return-1<i.call(n,e)!==r}):k.filter(n,e,r)}k.filter=function(e,t,n){var r=t[0];return n&&(e=":not("+e+")"),1===t.length&&1===r.nodeType?k.find.matchesSelector(r,e)?[r]:[]:k.find.matches(e,k.grep(t,function(e){return 1===e.nodeType}))},k.fn.extend({find:function(e){var t,n,r=this.length,i=this;if("string"!=typeof e)return this.pushStack(k(e).filter(function(){for(t=0;t<r;t++)if(k.contains(i[t],this))return!0}));for(n=this.pushStack([]),t=0;t<r;t++)k.find(e,i[t],n);return 1<r?k.uniqueSort(n):n},filter:function(e){return this.pushStack(j(this,e||[],!1))},not:function(e){return this.pushStack(j(this,e||[],!0))},is:function(e){return!!j(this,"string"==typeof e&&N.test(e)?k(e):e||[],!1).length}});var q,L=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;(k.fn.init=function(e,t,n){var r,i;if(!e)return this;if(n=n||q,"string"==typeof e){if(!(r="<"===e[0]&&">"===e[e.length-1]&&3<=e.length?[null,e,null]:L.exec(e))||!r[1]&&t)return!t||t.jquery?(t||n).find(e):this.constructor(t).find(e);if(r[1]){if(t=t instanceof k?t[0]:t,k.merge(this,k.parseHTML(r[1],t&&t.nodeType?t.ownerDocument||t:E,!0)),D.test(r[1])&&k.isPlainObject(t))for(r in t)m(this[r])?this[r](t[r]):this.attr(r,t[r]);return this}return(i=E.getElementById(r[2]))&&(this[0]=i,this.length=1),this}return e.nodeType?(this[0]=e,this.length=1,this):m(e)?void 0!==n.ready?n.ready(e):e(k):k.makeArray(e,this)}).prototype=k.fn,q=k(E);var H=/^(?:parents|prev(?:Until|All))/,O={children:!0,contents:!0,next:!0,prev:!0};function P(e,t){while((e=e[t])&&1!==e.nodeType);return e}k.fn.extend({has:function(e){var t=k(e,this),n=t.length;return this.filter(function(){for(var e=0;e<n;e++)if(k.contains(this,t[e]))return!0})},closest:function(e,t){var n,r=0,i=this.length,o=[],a="string"!=typeof e&&k(e);if(!N.test(e))for(;r<i;r++)for(n=this[r];n&&n!==t;n=n.parentNode)if(n.nodeType<11&&(a?-1<a.index(n):1===n.nodeType&&k.find.matchesSelector(n,e))){o.push(n);break}return this.pushStack(1<o.length?k.uniqueSort(o):o)},index:function(e){return e?"string"==typeof e?i.call(k(e),this[0]):i.call(this,e.jquery?e[0]:e):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){return this.pushStack(k.uniqueSort(k.merge(this.get(),k(e,t))))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),k.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return T(e,"parentNode")},parentsUntil:function(e,t,n){return T(e,"parentNode",n)},next:function(e){return P(e,"nextSibling")},prev:function(e){return P(e,"previousSibling")},nextAll:function(e){return T(e,"nextSibling")},prevAll:function(e){return T(e,"previousSibling")},nextUntil:function(e,t,n){return T(e,"nextSibling",n)},prevUntil:function(e,t,n){return T(e,"previousSibling",n)},siblings:function(e){return S((e.parentNode||{}).firstChild,e)},children:function(e){return S(e.firstChild)},contents:function(e){return"undefined"!=typeof e.contentDocument?e.contentDocument:(A(e,"template")&&(e=e.content||e),k.merge([],e.childNodes))}},function(r,i){k.fn[r]=function(e,t){var n=k.map(this,i,e);return"Until"!==r.slice(-5)&&(t=e),t&&"string"==typeof t&&(n=k.filter(t,n)),1<this.length&&(O[r]||k.uniqueSort(n),H.test(r)&&n.reverse()),this.pushStack(n)}});var R=/[^\x20\t\r\n\f]+/g;function M(e){return e}function I(e){throw e}function W(e,t,n,r){var i;try{e&&m(i=e.promise)?i.call(e).done(t).fail(n):e&&m(i=e.then)?i.call(e,t,n):t.apply(void 0,[e].slice(r))}catch(e){n.apply(void 0,[e])}}k.Callbacks=function(r){var e,n;r="string"==typeof r?(e=r,n={},k.each(e.match(R)||[],function(e,t){n[t]=!0}),n):k.extend({},r);var i,t,o,a,s=[],u=[],l=-1,c=function(){for(a=a||r.once,o=i=!0;u.length;l=-1){t=u.shift();while(++l<s.length)!1===s[l].apply(t[0],t[1])&&r.stopOnFalse&&(l=s.length,t=!1)}r.memory||(t=!1),i=!1,a&&(s=t?[]:"")},f={add:function(){return s&&(t&&!i&&(l=s.length-1,u.push(t)),function n(e){k.each(e,function(e,t){m(t)?r.unique&&f.has(t)||s.push(t):t&&t.length&&"string"!==w(t)&&n(t)})}(arguments),t&&!i&&c()),this},remove:function(){return k.each(arguments,function(e,t){var n;while(-1<(n=k.inArray(t,s,n)))s.splice(n,1),n<=l&&l--}),this},has:function(e){return e?-1<k.inArray(e,s):0<s.length},empty:function(){return s&&(s=[]),this},disable:function(){return a=u=[],s=t="",this},disabled:function(){return!s},lock:function(){return a=u=[],t||i||(s=t=""),this},locked:function(){return!!a},fireWith:function(e,t){return a||(t=[e,(t=t||[]).slice?t.slice():t],u.push(t),i||c()),this},fire:function(){return f.fireWith(this,arguments),this},fired:function(){return!!o}};return f},k.extend({Deferred:function(e){var o=[["notify","progress",k.Callbacks("memory"),k.Callbacks("memory"),2],["resolve","done",k.Callbacks("once memory"),k.Callbacks("once memory"),0,"resolved"],["reject","fail",k.Callbacks("once memory"),k.Callbacks("once memory"),1,"rejected"]],i="pending",a={state:function(){return i},always:function(){return s.done(arguments).fail(arguments),this},"catch":function(e){return a.then(null,e)},pipe:function(){var i=arguments;return k.Deferred(function(r){k.each(o,function(e,t){var n=m(i[t[4]])&&i[t[4]];s[t[1]](function(){var e=n&&n.apply(this,arguments);e&&m(e.promise)?e.promise().progress(r.notify).done(r.resolve).fail(r.reject):r[t[0]+"With"](this,n?[e]:arguments)})}),i=null}).promise()},then:function(t,n,r){var u=0;function l(i,o,a,s){return function(){var n=this,r=arguments,e=function(){var e,t;if(!(i<u)){if((e=a.apply(n,r))===o.promise())throw new TypeError("Thenable self-resolution");t=e&&("object"==typeof e||"function"==typeof e)&&e.then,m(t)?s?t.call(e,l(u,o,M,s),l(u,o,I,s)):(u++,t.call(e,l(u,o,M,s),l(u,o,I,s),l(u,o,M,o.notifyWith))):(a!==M&&(n=void 0,r=[e]),(s||o.resolveWith)(n,r))}},t=s?e:function(){try{e()}catch(e){k.Deferred.exceptionHook&&k.Deferred.exceptionHook(e,t.stackTrace),u<=i+1&&(a!==I&&(n=void 0,r=[e]),o.rejectWith(n,r))}};i?t():(k.Deferred.getStackHook&&(t.stackTrace=k.Deferred.getStackHook()),C.setTimeout(t))}}return k.Deferred(function(e){o[0][3].add(l(0,e,m(r)?r:M,e.notifyWith)),o[1][3].add(l(0,e,m(t)?t:M)),o[2][3].add(l(0,e,m(n)?n:I))}).promise()},promise:function(e){return null!=e?k.extend(e,a):a}},s={};return k.each(o,function(e,t){var n=t[2],r=t[5];a[t[1]]=n.add,r&&n.add(function(){i=r},o[3-e][2].disable,o[3-e][3].disable,o[0][2].lock,o[0][3].lock),n.add(t[3].fire),s[t[0]]=function(){return s[t[0]+"With"](this===s?void 0:this,arguments),this},s[t[0]+"With"]=n.fireWith}),a.promise(s),e&&e.call(s,s),s},when:function(e){var n=arguments.length,t=n,r=Array(t),i=s.call(arguments),o=k.Deferred(),a=function(t){return function(e){r[t]=this,i[t]=1<arguments.length?s.call(arguments):e,--n||o.resolveWith(r,i)}};if(n<=1&&(W(e,o.done(a(t)).resolve,o.reject,!n),"pending"===o.state()||m(i[t]&&i[t].then)))return o.then();while(t--)W(i[t],a(t),o.reject);return o.promise()}});var $=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;k.Deferred.exceptionHook=function(e,t){C.console&&C.console.warn&&e&&$.test(e.name)&&C.console.warn("jQuery.Deferred exception: "+e.message,e.stack,t)},k.readyException=function(e){C.setTimeout(function(){throw e})};var F=k.Deferred();function B(){E.removeEventListener("DOMContentLoaded",B),C.removeEventListener("load",B),k.ready()}k.fn.ready=function(e){return F.then(e)["catch"](function(e){k.readyException(e)}),this},k.extend({isReady:!1,readyWait:1,ready:function(e){(!0===e?--k.readyWait:k.isReady)||(k.isReady=!0)!==e&&0<--k.readyWait||F.resolveWith(E,[k])}}),k.ready.then=F.then,"complete"===E.readyState||"loading"!==E.readyState&&!E.documentElement.doScroll?C.setTimeout(k.ready):(E.addEventListener("DOMContentLoaded",B),C.addEventListener("load",B));var _=function(e,t,n,r,i,o,a){var s=0,u=e.length,l=null==n;if("object"===w(n))for(s in i=!0,n)_(e,t,s,n[s],!0,o,a);else if(void 0!==r&&(i=!0,m(r)||(a=!0),l&&(a?(t.call(e,r),t=null):(l=t,t=function(e,t,n){return l.call(k(e),n)})),t))for(;s<u;s++)t(e[s],n,a?r:r.call(e[s],s,t(e[s],n)));return i?e:l?t.call(e):u?t(e[0],n):o},z=/^-ms-/,U=/-([a-z])/g;function X(e,t){return t.toUpperCase()}function V(e){return e.replace(z,"ms-").replace(U,X)}var G=function(e){return 1===e.nodeType||9===e.nodeType||!+e.nodeType};function Y(){this.expando=k.expando+Y.uid++}Y.uid=1,Y.prototype={cache:function(e){var t=e[this.expando];return t||(t={},G(e)&&(e.nodeType?e[this.expando]=t:Object.defineProperty(e,this.expando,{value:t,configurable:!0}))),t},set:function(e,t,n){var r,i=this.cache(e);if("string"==typeof t)i[V(t)]=n;else for(r in t)i[V(r)]=t[r];return i},get:function(e,t){return void 0===t?this.cache(e):e[this.expando]&&e[this.expando][V(t)]},access:function(e,t,n){return void 0===t||t&&"string"==typeof t&&void 0===n?this.get(e,t):(this.set(e,t,n),void 0!==n?n:t)},remove:function(e,t){var n,r=e[this.expando];if(void 0!==r){if(void 0!==t){n=(t=Array.isArray(t)?t.map(V):(t=V(t))in r?[t]:t.match(R)||[]).length;while(n--)delete r[t[n]]}(void 0===t||k.isEmptyObject(r))&&(e.nodeType?e[this.expando]=void 0:delete e[this.expando])}},hasData:function(e){var t=e[this.expando];return void 0!==t&&!k.isEmptyObject(t)}};var Q=new Y,J=new Y,K=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,Z=/[A-Z]/g;function ee(e,t,n){var r,i;if(void 0===n&&1===e.nodeType)if(r="data-"+t.replace(Z,"-$&").toLowerCase(),"string"==typeof(n=e.getAttribute(r))){try{n="true"===(i=n)||"false"!==i&&("null"===i?null:i===+i+""?+i:K.test(i)?JSON.parse(i):i)}catch(e){}J.set(e,t,n)}else n=void 0;return n}k.extend({hasData:function(e){return J.hasData(e)||Q.hasData(e)},data:function(e,t,n){return J.access(e,t,n)},removeData:function(e,t){J.remove(e,t)},_data:function(e,t,n){return Q.access(e,t,n)},_removeData:function(e,t){Q.remove(e,t)}}),k.fn.extend({data:function(n,e){var t,r,i,o=this[0],a=o&&o.attributes;if(void 0===n){if(this.length&&(i=J.get(o),1===o.nodeType&&!Q.get(o,"hasDataAttrs"))){t=a.length;while(t--)a[t]&&0===(r=a[t].name).indexOf("data-")&&(r=V(r.slice(5)),ee(o,r,i[r]));Q.set(o,"hasDataAttrs",!0)}return i}return"object"==typeof n?this.each(function(){J.set(this,n)}):_(this,function(e){var t;if(o&&void 0===e)return void 0!==(t=J.get(o,n))?t:void 0!==(t=ee(o,n))?t:void 0;this.each(function(){J.set(this,n,e)})},null,e,1<arguments.length,null,!0)},removeData:function(e){return this.each(function(){J.remove(this,e)})}}),k.extend({queue:function(e,t,n){var r;if(e)return t=(t||"fx")+"queue",r=Q.get(e,t),n&&(!r||Array.isArray(n)?r=Q.access(e,t,k.makeArray(n)):r.push(n)),r||[]},dequeue:function(e,t){t=t||"fx";var n=k.queue(e,t),r=n.length,i=n.shift(),o=k._queueHooks(e,t);"inprogress"===i&&(i=n.shift(),r--),i&&("fx"===t&&n.unshift("inprogress"),delete o.stop,i.call(e,function(){k.dequeue(e,t)},o)),!r&&o&&o.empty.fire()},_queueHooks:function(e,t){var n=t+"queueHooks";return Q.get(e,n)||Q.access(e,n,{empty:k.Callbacks("once memory").add(function(){Q.remove(e,[t+"queue",n])})})}}),k.fn.extend({queue:function(t,n){var e=2;return"string"!=typeof t&&(n=t,t="fx",e--),arguments.length<e?k.queue(this[0],t):void 0===n?this:this.each(function(){var e=k.queue(this,t,n);k._queueHooks(this,t),"fx"===t&&"inprogress"!==e[0]&&k.dequeue(this,t)})},dequeue:function(e){return this.each(function(){k.dequeue(this,e)})},clearQueue:function(e){return this.queue(e||"fx",[])},promise:function(e,t){var n,r=1,i=k.Deferred(),o=this,a=this.length,s=function(){--r||i.resolveWith(o,[o])};"string"!=typeof e&&(t=e,e=void 0),e=e||"fx";while(a--)(n=Q.get(o[a],e+"queueHooks"))&&n.empty&&(r++,n.empty.add(s));return s(),i.promise(t)}});var te=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,ne=new RegExp("^(?:([+-])=|)("+te+")([a-z%]*)$","i"),re=["Top","Right","Bottom","Left"],ie=E.documentElement,oe=function(e){return k.contains(e.ownerDocument,e)},ae={composed:!0};ie.getRootNode&&(oe=function(e){return k.contains(e.ownerDocument,e)||e.getRootNode(ae)===e.ownerDocument});var se=function(e,t){return"none"===(e=t||e).style.display||""===e.style.display&&oe(e)&&"none"===k.css(e,"display")},ue=function(e,t,n,r){var i,o,a={};for(o in t)a[o]=e.style[o],e.style[o]=t[o];for(o in i=n.apply(e,r||[]),t)e.style[o]=a[o];return i};function le(e,t,n,r){var i,o,a=20,s=r?function(){return r.cur()}:function(){return k.css(e,t,"")},u=s(),l=n&&n[3]||(k.cssNumber[t]?"":"px"),c=e.nodeType&&(k.cssNumber[t]||"px"!==l&&+u)&&ne.exec(k.css(e,t));if(c&&c[3]!==l){u/=2,l=l||c[3],c=+u||1;while(a--)k.style(e,t,c+l),(1-o)*(1-(o=s()/u||.5))<=0&&(a=0),c/=o;c*=2,k.style(e,t,c+l),n=n||[]}return n&&(c=+c||+u||0,i=n[1]?c+(n[1]+1)*n[2]:+n[2],r&&(r.unit=l,r.start=c,r.end=i)),i}var ce={};function fe(e,t){for(var n,r,i,o,a,s,u,l=[],c=0,f=e.length;c<f;c++)(r=e[c]).style&&(n=r.style.display,t?("none"===n&&(l[c]=Q.get(r,"display")||null,l[c]||(r.style.display="")),""===r.style.display&&se(r)&&(l[c]=(u=a=o=void 0,a=(i=r).ownerDocument,s=i.nodeName,(u=ce[s])||(o=a.body.appendChild(a.createElement(s)),u=k.css(o,"display"),o.parentNode.removeChild(o),"none"===u&&(u="block"),ce[s]=u)))):"none"!==n&&(l[c]="none",Q.set(r,"display",n)));for(c=0;c<f;c++)null!=l[c]&&(e[c].style.display=l[c]);return e}k.fn.extend({show:function(){return fe(this,!0)},hide:function(){return fe(this)},toggle:function(e){return"boolean"==typeof e?e?this.show():this.hide():this.each(function(){se(this)?k(this).show():k(this).hide()})}});var pe=/^(?:checkbox|radio)$/i,de=/<([a-z][^\/\0>\x20\t\r\n\f]*)/i,he=/^$|^module$|\/(?:java|ecma)script/i,ge={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};function ve(e,t){var n;return n="undefined"!=typeof e.getElementsByTagName?e.getElementsByTagName(t||"*"):"undefined"!=typeof e.querySelectorAll?e.querySelectorAll(t||"*"):[],void 0===t||t&&A(e,t)?k.merge([e],n):n}function ye(e,t){for(var n=0,r=e.length;n<r;n++)Q.set(e[n],"globalEval",!t||Q.get(t[n],"globalEval"))}ge.optgroup=ge.option,ge.tbody=ge.tfoot=ge.colgroup=ge.caption=ge.thead,ge.th=ge.td;var me,xe,be=/<|&#?\w+;/;function we(e,t,n,r,i){for(var o,a,s,u,l,c,f=t.createDocumentFragment(),p=[],d=0,h=e.length;d<h;d++)if((o=e[d])||0===o)if("object"===w(o))k.merge(p,o.nodeType?[o]:o);else if(be.test(o)){a=a||f.appendChild(t.createElement("div")),s=(de.exec(o)||["",""])[1].toLowerCase(),u=ge[s]||ge._default,a.innerHTML=u[1]+k.htmlPrefilter(o)+u[2],c=u[0];while(c--)a=a.lastChild;k.merge(p,a.childNodes),(a=f.firstChild).textContent=""}else p.push(t.createTextNode(o));f.textContent="",d=0;while(o=p[d++])if(r&&-1<k.inArray(o,r))i&&i.push(o);else if(l=oe(o),a=ve(f.appendChild(o),"script"),l&&ye(a),n){c=0;while(o=a[c++])he.test(o.type||"")&&n.push(o)}return f}me=E.createDocumentFragment().appendChild(E.createElement("div")),(xe=E.createElement("input")).setAttribute("type","radio"),xe.setAttribute("checked","checked"),xe.setAttribute("name","t"),me.appendChild(xe),y.checkClone=me.cloneNode(!0).cloneNode(!0).lastChild.checked,me.innerHTML="<textarea>x</textarea>",y.noCloneChecked=!!me.cloneNode(!0).lastChild.defaultValue;var Te=/^key/,Ce=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,Ee=/^([^.]*)(?:\.(.+)|)/;function ke(){return!0}function Se(){return!1}function Ne(e,t){return e===function(){try{return E.activeElement}catch(e){}}()==("focus"===t)}function Ae(e,t,n,r,i,o){var a,s;if("object"==typeof t){for(s in"string"!=typeof n&&(r=r||n,n=void 0),t)Ae(e,s,n,r,t[s],o);return e}if(null==r&&null==i?(i=n,r=n=void 0):null==i&&("string"==typeof n?(i=r,r=void 0):(i=r,r=n,n=void 0)),!1===i)i=Se;else if(!i)return e;return 1===o&&(a=i,(i=function(e){return k().off(e),a.apply(this,arguments)}).guid=a.guid||(a.guid=k.guid++)),e.each(function(){k.event.add(this,t,i,r,n)})}function De(e,i,o){o?(Q.set(e,i,!1),k.event.add(e,i,{namespace:!1,handler:function(e){var t,n,r=Q.get(this,i);if(1&e.isTrigger&&this[i]){if(r.length)(k.event.special[i]||{}).delegateType&&e.stopPropagation();else if(r=s.call(arguments),Q.set(this,i,r),t=o(this,i),this[i](),r!==(n=Q.get(this,i))||t?Q.set(this,i,!1):n={},r!==n)return e.stopImmediatePropagation(),e.preventDefault(),n.value}else r.length&&(Q.set(this,i,{value:k.event.trigger(k.extend(r[0],k.Event.prototype),r.slice(1),this)}),e.stopImmediatePropagation())}})):void 0===Q.get(e,i)&&k.event.add(e,i,ke)}k.event={global:{},add:function(t,e,n,r,i){var o,a,s,u,l,c,f,p,d,h,g,v=Q.get(t);if(v){n.handler&&(n=(o=n).handler,i=o.selector),i&&k.find.matchesSelector(ie,i),n.guid||(n.guid=k.guid++),(u=v.events)||(u=v.events={}),(a=v.handle)||(a=v.handle=function(e){return"undefined"!=typeof k&&k.event.triggered!==e.type?k.event.dispatch.apply(t,arguments):void 0}),l=(e=(e||"").match(R)||[""]).length;while(l--)d=g=(s=Ee.exec(e[l])||[])[1],h=(s[2]||"").split(".").sort(),d&&(f=k.event.special[d]||{},d=(i?f.delegateType:f.bindType)||d,f=k.event.special[d]||{},c=k.extend({type:d,origType:g,data:r,handler:n,guid:n.guid,selector:i,needsContext:i&&k.expr.match.needsContext.test(i),namespace:h.join(".")},o),(p=u[d])||((p=u[d]=[]).delegateCount=0,f.setup&&!1!==f.setup.call(t,r,h,a)||t.addEventListener&&t.addEventListener(d,a)),f.add&&(f.add.call(t,c),c.handler.guid||(c.handler.guid=n.guid)),i?p.splice(p.delegateCount++,0,c):p.push(c),k.event.global[d]=!0)}},remove:function(e,t,n,r,i){var o,a,s,u,l,c,f,p,d,h,g,v=Q.hasData(e)&&Q.get(e);if(v&&(u=v.events)){l=(t=(t||"").match(R)||[""]).length;while(l--)if(d=g=(s=Ee.exec(t[l])||[])[1],h=(s[2]||"").split(".").sort(),d){f=k.event.special[d]||{},p=u[d=(r?f.delegateType:f.bindType)||d]||[],s=s[2]&&new RegExp("(^|\\.)"+h.join("\\.(?:.*\\.|)")+"(\\.|$)"),a=o=p.length;while(o--)c=p[o],!i&&g!==c.origType||n&&n.guid!==c.guid||s&&!s.test(c.namespace)||r&&r!==c.selector&&("**"!==r||!c.selector)||(p.splice(o,1),c.selector&&p.delegateCount--,f.remove&&f.remove.call(e,c));a&&!p.length&&(f.teardown&&!1!==f.teardown.call(e,h,v.handle)||k.removeEvent(e,d,v.handle),delete u[d])}else for(d in u)k.event.remove(e,d+t[l],n,r,!0);k.isEmptyObject(u)&&Q.remove(e,"handle events")}},dispatch:function(e){var t,n,r,i,o,a,s=k.event.fix(e),u=new Array(arguments.length),l=(Q.get(this,"events")||{})[s.type]||[],c=k.event.special[s.type]||{};for(u[0]=s,t=1;t<arguments.length;t++)u[t]=arguments[t];if(s.delegateTarget=this,!c.preDispatch||!1!==c.preDispatch.call(this,s)){a=k.event.handlers.call(this,s,l),t=0;while((i=a[t++])&&!s.isPropagationStopped()){s.currentTarget=i.elem,n=0;while((o=i.handlers[n++])&&!s.isImmediatePropagationStopped())s.rnamespace&&!1!==o.namespace&&!s.rnamespace.test(o.namespace)||(s.handleObj=o,s.data=o.data,void 0!==(r=((k.event.special[o.origType]||{}).handle||o.handler).apply(i.elem,u))&&!1===(s.result=r)&&(s.preventDefault(),s.stopPropagation()))}return c.postDispatch&&c.postDispatch.call(this,s),s.result}},handlers:function(e,t){var n,r,i,o,a,s=[],u=t.delegateCount,l=e.target;if(u&&l.nodeType&&!("click"===e.type&&1<=e.button))for(;l!==this;l=l.parentNode||this)if(1===l.nodeType&&("click"!==e.type||!0!==l.disabled)){for(o=[],a={},n=0;n<u;n++)void 0===a[i=(r=t[n]).selector+" "]&&(a[i]=r.needsContext?-1<k(i,this).index(l):k.find(i,this,null,[l]).length),a[i]&&o.push(r);o.length&&s.push({elem:l,handlers:o})}return l=this,u<t.length&&s.push({elem:l,handlers:t.slice(u)}),s},addProp:function(t,e){Object.defineProperty(k.Event.prototype,t,{enumerable:!0,configurable:!0,get:m(e)?function(){if(this.originalEvent)return e(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[t]},set:function(e){Object.defineProperty(this,t,{enumerable:!0,configurable:!0,writable:!0,value:e})}})},fix:function(e){return e[k.expando]?e:new k.Event(e)},special:{load:{noBubble:!0},click:{setup:function(e){var t=this||e;return pe.test(t.type)&&t.click&&A(t,"input")&&De(t,"click",ke),!1},trigger:function(e){var t=this||e;return pe.test(t.type)&&t.click&&A(t,"input")&&De(t,"click"),!0},_default:function(e){var t=e.target;return pe.test(t.type)&&t.click&&A(t,"input")&&Q.get(t,"click")||A(t,"a")}},beforeunload:{postDispatch:function(e){void 0!==e.result&&e.originalEvent&&(e.originalEvent.returnValue=e.result)}}}},k.removeEvent=function(e,t,n){e.removeEventListener&&e.removeEventListener(t,n)},k.Event=function(e,t){if(!(this instanceof k.Event))return new k.Event(e,t);e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||void 0===e.defaultPrevented&&!1===e.returnValue?ke:Se,this.target=e.target&&3===e.target.nodeType?e.target.parentNode:e.target,this.currentTarget=e.currentTarget,this.relatedTarget=e.relatedTarget):this.type=e,t&&k.extend(this,t),this.timeStamp=e&&e.timeStamp||Date.now(),this[k.expando]=!0},k.Event.prototype={constructor:k.Event,isDefaultPrevented:Se,isPropagationStopped:Se,isImmediatePropagationStopped:Se,isSimulated:!1,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=ke,e&&!this.isSimulated&&e.preventDefault()},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=ke,e&&!this.isSimulated&&e.stopPropagation()},stopImmediatePropagation:function(){var e=this.originalEvent;this.isImmediatePropagationStopped=ke,e&&!this.isSimulated&&e.stopImmediatePropagation(),this.stopPropagation()}},k.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,"char":!0,code:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:function(e){var t=e.button;return null==e.which&&Te.test(e.type)?null!=e.charCode?e.charCode:e.keyCode:!e.which&&void 0!==t&&Ce.test(e.type)?1&t?1:2&t?3:4&t?2:0:e.which}},k.event.addProp),k.each({focus:"focusin",blur:"focusout"},function(e,t){k.event.special[e]={setup:function(){return De(this,e,Ne),!1},trigger:function(){return De(this,e),!0},delegateType:t}}),k.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(e,i){k.event.special[e]={delegateType:i,bindType:i,handle:function(e){var t,n=e.relatedTarget,r=e.handleObj;return n&&(n===this||k.contains(this,n))||(e.type=r.origType,t=r.handler.apply(this,arguments),e.type=i),t}}}),k.fn.extend({on:function(e,t,n,r){return Ae(this,e,t,n,r)},one:function(e,t,n,r){return Ae(this,e,t,n,r,1)},off:function(e,t,n){var r,i;if(e&&e.preventDefault&&e.handleObj)return r=e.handleObj,k(e.delegateTarget).off(r.namespace?r.origType+"."+r.namespace:r.origType,r.selector,r.handler),this;if("object"==typeof e){for(i in e)this.off(i,t,e[i]);return this}return!1!==t&&"function"!=typeof t||(n=t,t=void 0),!1===n&&(n=Se),this.each(function(){k.event.remove(this,e,n,t)})}});var je=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,qe=/<script|<style|<link/i,Le=/checked\s*(?:[^=]|=\s*.checked.)/i,He=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;function Oe(e,t){return A(e,"table")&&A(11!==t.nodeType?t:t.firstChild,"tr")&&k(e).children("tbody")[0]||e}function Pe(e){return e.type=(null!==e.getAttribute("type"))+"/"+e.type,e}function Re(e){return"true/"===(e.type||"").slice(0,5)?e.type=e.type.slice(5):e.removeAttribute("type"),e}function Me(e,t){var n,r,i,o,a,s,u,l;if(1===t.nodeType){if(Q.hasData(e)&&(o=Q.access(e),a=Q.set(t,o),l=o.events))for(i in delete a.handle,a.events={},l)for(n=0,r=l[i].length;n<r;n++)k.event.add(t,i,l[i][n]);J.hasData(e)&&(s=J.access(e),u=k.extend({},s),J.set(t,u))}}function Ie(n,r,i,o){r=g.apply([],r);var e,t,a,s,u,l,c=0,f=n.length,p=f-1,d=r[0],h=m(d);if(h||1<f&&"string"==typeof d&&!y.checkClone&&Le.test(d))return n.each(function(e){var t=n.eq(e);h&&(r[0]=d.call(this,e,t.html())),Ie(t,r,i,o)});if(f&&(t=(e=we(r,n[0].ownerDocument,!1,n,o)).firstChild,1===e.childNodes.length&&(e=t),t||o)){for(s=(a=k.map(ve(e,"script"),Pe)).length;c<f;c++)u=e,c!==p&&(u=k.clone(u,!0,!0),s&&k.merge(a,ve(u,"script"))),i.call(n[c],u,c);if(s)for(l=a[a.length-1].ownerDocument,k.map(a,Re),c=0;c<s;c++)u=a[c],he.test(u.type||"")&&!Q.access(u,"globalEval")&&k.contains(l,u)&&(u.src&&"module"!==(u.type||"").toLowerCase()?k._evalUrl&&!u.noModule&&k._evalUrl(u.src,{nonce:u.nonce||u.getAttribute("nonce")}):b(u.textContent.replace(He,""),u,l))}return n}function We(e,t,n){for(var r,i=t?k.filter(t,e):e,o=0;null!=(r=i[o]);o++)n||1!==r.nodeType||k.cleanData(ve(r)),r.parentNode&&(n&&oe(r)&&ye(ve(r,"script")),r.parentNode.removeChild(r));return e}k.extend({htmlPrefilter:function(e){return e.replace(je,"<$1></$2>")},clone:function(e,t,n){var r,i,o,a,s,u,l,c=e.cloneNode(!0),f=oe(e);if(!(y.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||k.isXMLDoc(e)))for(a=ve(c),r=0,i=(o=ve(e)).length;r<i;r++)s=o[r],u=a[r],void 0,"input"===(l=u.nodeName.toLowerCase())&&pe.test(s.type)?u.checked=s.checked:"input"!==l&&"textarea"!==l||(u.defaultValue=s.defaultValue);if(t)if(n)for(o=o||ve(e),a=a||ve(c),r=0,i=o.length;r<i;r++)Me(o[r],a[r]);else Me(e,c);return 0<(a=ve(c,"script")).length&&ye(a,!f&&ve(e,"script")),c},cleanData:function(e){for(var t,n,r,i=k.event.special,o=0;void 0!==(n=e[o]);o++)if(G(n)){if(t=n[Q.expando]){if(t.events)for(r in t.events)i[r]?k.event.remove(n,r):k.removeEvent(n,r,t.handle);n[Q.expando]=void 0}n[J.expando]&&(n[J.expando]=void 0)}}}),k.fn.extend({detach:function(e){return We(this,e,!0)},remove:function(e){return We(this,e)},text:function(e){return _(this,function(e){return void 0===e?k.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=e)})},null,e,arguments.length)},append:function(){return Ie(this,arguments,function(e){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||Oe(this,e).appendChild(e)})},prepend:function(){return Ie(this,arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=Oe(this,e);t.insertBefore(e,t.firstChild)}})},before:function(){return Ie(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return Ie(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},empty:function(){for(var e,t=0;null!=(e=this[t]);t++)1===e.nodeType&&(k.cleanData(ve(e,!1)),e.textContent="");return this},clone:function(e,t){return e=null!=e&&e,t=null==t?e:t,this.map(function(){return k.clone(this,e,t)})},html:function(e){return _(this,function(e){var t=this[0]||{},n=0,r=this.length;if(void 0===e&&1===t.nodeType)return t.innerHTML;if("string"==typeof e&&!qe.test(e)&&!ge[(de.exec(e)||["",""])[1].toLowerCase()]){e=k.htmlPrefilter(e);try{for(;n<r;n++)1===(t=this[n]||{}).nodeType&&(k.cleanData(ve(t,!1)),t.innerHTML=e);t=0}catch(e){}}t&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(){var n=[];return Ie(this,arguments,function(e){var t=this.parentNode;k.inArray(this,n)<0&&(k.cleanData(ve(this)),t&&t.replaceChild(e,this))},n)}}),k.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(e,a){k.fn[e]=function(e){for(var t,n=[],r=k(e),i=r.length-1,o=0;o<=i;o++)t=o===i?this:this.clone(!0),k(r[o])[a](t),u.apply(n,t.get());return this.pushStack(n)}});var $e=new RegExp("^("+te+")(?!px)[a-z%]+$","i"),Fe=function(e){var t=e.ownerDocument.defaultView;return t&&t.opener||(t=C),t.getComputedStyle(e)},Be=new RegExp(re.join("|"),"i");function _e(e,t,n){var r,i,o,a,s=e.style;return(n=n||Fe(e))&&(""!==(a=n.getPropertyValue(t)||n[t])||oe(e)||(a=k.style(e,t)),!y.pixelBoxStyles()&&$e.test(a)&&Be.test(t)&&(r=s.width,i=s.minWidth,o=s.maxWidth,s.minWidth=s.maxWidth=s.width=a,a=n.width,s.width=r,s.minWidth=i,s.maxWidth=o)),void 0!==a?a+"":a}function ze(e,t){return{get:function(){if(!e())return(this.get=t).apply(this,arguments);delete this.get}}}!function(){function e(){if(u){s.style.cssText="position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0",u.style.cssText="position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%",ie.appendChild(s).appendChild(u);var e=C.getComputedStyle(u);n="1%"!==e.top,a=12===t(e.marginLeft),u.style.right="60%",o=36===t(e.right),r=36===t(e.width),u.style.position="absolute",i=12===t(u.offsetWidth/3),ie.removeChild(s),u=null}}function t(e){return Math.round(parseFloat(e))}var n,r,i,o,a,s=E.createElement("div"),u=E.createElement("div");u.style&&(u.style.backgroundClip="content-box",u.cloneNode(!0).style.backgroundClip="",y.clearCloneStyle="content-box"===u.style.backgroundClip,k.extend(y,{boxSizingReliable:function(){return e(),r},pixelBoxStyles:function(){return e(),o},pixelPosition:function(){return e(),n},reliableMarginLeft:function(){return e(),a},scrollboxSize:function(){return e(),i}}))}();var Ue=["Webkit","Moz","ms"],Xe=E.createElement("div").style,Ve={};function Ge(e){var t=k.cssProps[e]||Ve[e];return t||(e in Xe?e:Ve[e]=function(e){var t=e[0].toUpperCase()+e.slice(1),n=Ue.length;while(n--)if((e=Ue[n]+t)in Xe)return e}(e)||e)}var Ye=/^(none|table(?!-c[ea]).+)/,Qe=/^--/,Je={position:"absolute",visibility:"hidden",display:"block"},Ke={letterSpacing:"0",fontWeight:"400"};function Ze(e,t,n){var r=ne.exec(t);return r?Math.max(0,r[2]-(n||0))+(r[3]||"px"):t}function et(e,t,n,r,i,o){var a="width"===t?1:0,s=0,u=0;if(n===(r?"border":"content"))return 0;for(;a<4;a+=2)"margin"===n&&(u+=k.css(e,n+re[a],!0,i)),r?("content"===n&&(u-=k.css(e,"padding"+re[a],!0,i)),"margin"!==n&&(u-=k.css(e,"border"+re[a]+"Width",!0,i))):(u+=k.css(e,"padding"+re[a],!0,i),"padding"!==n?u+=k.css(e,"border"+re[a]+"Width",!0,i):s+=k.css(e,"border"+re[a]+"Width",!0,i));return!r&&0<=o&&(u+=Math.max(0,Math.ceil(e["offset"+t[0].toUpperCase()+t.slice(1)]-o-u-s-.5))||0),u}function tt(e,t,n){var r=Fe(e),i=(!y.boxSizingReliable()||n)&&"border-box"===k.css(e,"boxSizing",!1,r),o=i,a=_e(e,t,r),s="offset"+t[0].toUpperCase()+t.slice(1);if($e.test(a)){if(!n)return a;a="auto"}return(!y.boxSizingReliable()&&i||"auto"===a||!parseFloat(a)&&"inline"===k.css(e,"display",!1,r))&&e.getClientRects().length&&(i="border-box"===k.css(e,"boxSizing",!1,r),(o=s in e)&&(a=e[s])),(a=parseFloat(a)||0)+et(e,t,n||(i?"border":"content"),o,r,a)+"px"}function nt(e,t,n,r,i){return new nt.prototype.init(e,t,n,r,i)}k.extend({cssHooks:{opacity:{get:function(e,t){if(t){var n=_e(e,"opacity");return""===n?"1":n}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,gridArea:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnStart:!0,gridRow:!0,gridRowEnd:!0,gridRowStart:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{},style:function(e,t,n,r){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var i,o,a,s=V(t),u=Qe.test(t),l=e.style;if(u||(t=Ge(s)),a=k.cssHooks[t]||k.cssHooks[s],void 0===n)return a&&"get"in a&&void 0!==(i=a.get(e,!1,r))?i:l[t];"string"===(o=typeof n)&&(i=ne.exec(n))&&i[1]&&(n=le(e,t,i),o="number"),null!=n&&n==n&&("number"!==o||u||(n+=i&&i[3]||(k.cssNumber[s]?"":"px")),y.clearCloneStyle||""!==n||0!==t.indexOf("background")||(l[t]="inherit"),a&&"set"in a&&void 0===(n=a.set(e,n,r))||(u?l.setProperty(t,n):l[t]=n))}},css:function(e,t,n,r){var i,o,a,s=V(t);return Qe.test(t)||(t=Ge(s)),(a=k.cssHooks[t]||k.cssHooks[s])&&"get"in a&&(i=a.get(e,!0,n)),void 0===i&&(i=_e(e,t,r)),"normal"===i&&t in Ke&&(i=Ke[t]),""===n||n?(o=parseFloat(i),!0===n||isFinite(o)?o||0:i):i}}),k.each(["height","width"],function(e,u){k.cssHooks[u]={get:function(e,t,n){if(t)return!Ye.test(k.css(e,"display"))||e.getClientRects().length&&e.getBoundingClientRect().width?tt(e,u,n):ue(e,Je,function(){return tt(e,u,n)})},set:function(e,t,n){var r,i=Fe(e),o=!y.scrollboxSize()&&"absolute"===i.position,a=(o||n)&&"border-box"===k.css(e,"boxSizing",!1,i),s=n?et(e,u,n,a,i):0;return a&&o&&(s-=Math.ceil(e["offset"+u[0].toUpperCase()+u.slice(1)]-parseFloat(i[u])-et(e,u,"border",!1,i)-.5)),s&&(r=ne.exec(t))&&"px"!==(r[3]||"px")&&(e.style[u]=t,t=k.css(e,u)),Ze(0,t,s)}}}),k.cssHooks.marginLeft=ze(y.reliableMarginLeft,function(e,t){if(t)return(parseFloat(_e(e,"marginLeft"))||e.getBoundingClientRect().left-ue(e,{marginLeft:0},function(){return e.getBoundingClientRect().left}))+"px"}),k.each({margin:"",padding:"",border:"Width"},function(i,o){k.cssHooks[i+o]={expand:function(e){for(var t=0,n={},r="string"==typeof e?e.split(" "):[e];t<4;t++)n[i+re[t]+o]=r[t]||r[t-2]||r[0];return n}},"margin"!==i&&(k.cssHooks[i+o].set=Ze)}),k.fn.extend({css:function(e,t){return _(this,function(e,t,n){var r,i,o={},a=0;if(Array.isArray(t)){for(r=Fe(e),i=t.length;a<i;a++)o[t[a]]=k.css(e,t[a],!1,r);return o}return void 0!==n?k.style(e,t,n):k.css(e,t)},e,t,1<arguments.length)}}),((k.Tween=nt).prototype={constructor:nt,init:function(e,t,n,r,i,o){this.elem=e,this.prop=n,this.easing=i||k.easing._default,this.options=t,this.start=this.now=this.cur(),this.end=r,this.unit=o||(k.cssNumber[n]?"":"px")},cur:function(){var e=nt.propHooks[this.prop];return e&&e.get?e.get(this):nt.propHooks._default.get(this)},run:function(e){var t,n=nt.propHooks[this.prop];return this.options.duration?this.pos=t=k.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):this.pos=t=e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):nt.propHooks._default.set(this),this}}).init.prototype=nt.prototype,(nt.propHooks={_default:{get:function(e){var t;return 1!==e.elem.nodeType||null!=e.elem[e.prop]&&null==e.elem.style[e.prop]?e.elem[e.prop]:(t=k.css(e.elem,e.prop,""))&&"auto"!==t?t:0},set:function(e){k.fx.step[e.prop]?k.fx.step[e.prop](e):1!==e.elem.nodeType||!k.cssHooks[e.prop]&&null==e.elem.style[Ge(e.prop)]?e.elem[e.prop]=e.now:k.style(e.elem,e.prop,e.now+e.unit)}}}).scrollTop=nt.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},k.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2},_default:"swing"},k.fx=nt.prototype.init,k.fx.step={};var rt,it,ot,at,st=/^(?:toggle|show|hide)$/,ut=/queueHooks$/;function lt(){it&&(!1===E.hidden&&C.requestAnimationFrame?C.requestAnimationFrame(lt):C.setTimeout(lt,k.fx.interval),k.fx.tick())}function ct(){return C.setTimeout(function(){rt=void 0}),rt=Date.now()}function ft(e,t){var n,r=0,i={height:e};for(t=t?1:0;r<4;r+=2-t)i["margin"+(n=re[r])]=i["padding"+n]=e;return t&&(i.opacity=i.width=e),i}function pt(e,t,n){for(var r,i=(dt.tweeners[t]||[]).concat(dt.tweeners["*"]),o=0,a=i.length;o<a;o++)if(r=i[o].call(n,t,e))return r}function dt(o,e,t){var n,a,r=0,i=dt.prefilters.length,s=k.Deferred().always(function(){delete u.elem}),u=function(){if(a)return!1;for(var e=rt||ct(),t=Math.max(0,l.startTime+l.duration-e),n=1-(t/l.duration||0),r=0,i=l.tweens.length;r<i;r++)l.tweens[r].run(n);return s.notifyWith(o,[l,n,t]),n<1&&i?t:(i||s.notifyWith(o,[l,1,0]),s.resolveWith(o,[l]),!1)},l=s.promise({elem:o,props:k.extend({},e),opts:k.extend(!0,{specialEasing:{},easing:k.easing._default},t),originalProperties:e,originalOptions:t,startTime:rt||ct(),duration:t.duration,tweens:[],createTween:function(e,t){var n=k.Tween(o,l.opts,e,t,l.opts.specialEasing[e]||l.opts.easing);return l.tweens.push(n),n},stop:function(e){var t=0,n=e?l.tweens.length:0;if(a)return this;for(a=!0;t<n;t++)l.tweens[t].run(1);return e?(s.notifyWith(o,[l,1,0]),s.resolveWith(o,[l,e])):s.rejectWith(o,[l,e]),this}}),c=l.props;for(!function(e,t){var n,r,i,o,a;for(n in e)if(i=t[r=V(n)],o=e[n],Array.isArray(o)&&(i=o[1],o=e[n]=o[0]),n!==r&&(e[r]=o,delete e[n]),(a=k.cssHooks[r])&&"expand"in a)for(n in o=a.expand(o),delete e[r],o)n in e||(e[n]=o[n],t[n]=i);else t[r]=i}(c,l.opts.specialEasing);r<i;r++)if(n=dt.prefilters[r].call(l,o,c,l.opts))return m(n.stop)&&(k._queueHooks(l.elem,l.opts.queue).stop=n.stop.bind(n)),n;return k.map(c,pt,l),m(l.opts.start)&&l.opts.start.call(o,l),l.progress(l.opts.progress).done(l.opts.done,l.opts.complete).fail(l.opts.fail).always(l.opts.always),k.fx.timer(k.extend(u,{elem:o,anim:l,queue:l.opts.queue})),l}k.Animation=k.extend(dt,{tweeners:{"*":[function(e,t){var n=this.createTween(e,t);return le(n.elem,e,ne.exec(t),n),n}]},tweener:function(e,t){m(e)?(t=e,e=["*"]):e=e.match(R);for(var n,r=0,i=e.length;r<i;r++)n=e[r],dt.tweeners[n]=dt.tweeners[n]||[],dt.tweeners[n].unshift(t)},prefilters:[function(e,t,n){var r,i,o,a,s,u,l,c,f="width"in t||"height"in t,p=this,d={},h=e.style,g=e.nodeType&&se(e),v=Q.get(e,"fxshow");for(r in n.queue||(null==(a=k._queueHooks(e,"fx")).unqueued&&(a.unqueued=0,s=a.empty.fire,a.empty.fire=function(){a.unqueued||s()}),a.unqueued++,p.always(function(){p.always(function(){a.unqueued--,k.queue(e,"fx").length||a.empty.fire()})})),t)if(i=t[r],st.test(i)){if(delete t[r],o=o||"toggle"===i,i===(g?"hide":"show")){if("show"!==i||!v||void 0===v[r])continue;g=!0}d[r]=v&&v[r]||k.style(e,r)}if((u=!k.isEmptyObject(t))||!k.isEmptyObject(d))for(r in f&&1===e.nodeType&&(n.overflow=[h.overflow,h.overflowX,h.overflowY],null==(l=v&&v.display)&&(l=Q.get(e,"display")),"none"===(c=k.css(e,"display"))&&(l?c=l:(fe([e],!0),l=e.style.display||l,c=k.css(e,"display"),fe([e]))),("inline"===c||"inline-block"===c&&null!=l)&&"none"===k.css(e,"float")&&(u||(p.done(function(){h.display=l}),null==l&&(c=h.display,l="none"===c?"":c)),h.display="inline-block")),n.overflow&&(h.overflow="hidden",p.always(function(){h.overflow=n.overflow[0],h.overflowX=n.overflow[1],h.overflowY=n.overflow[2]})),u=!1,d)u||(v?"hidden"in v&&(g=v.hidden):v=Q.access(e,"fxshow",{display:l}),o&&(v.hidden=!g),g&&fe([e],!0),p.done(function(){for(r in g||fe([e]),Q.remove(e,"fxshow"),d)k.style(e,r,d[r])})),u=pt(g?v[r]:0,r,p),r in v||(v[r]=u.start,g&&(u.end=u.start,u.start=0))}],prefilter:function(e,t){t?dt.prefilters.unshift(e):dt.prefilters.push(e)}}),k.speed=function(e,t,n){var r=e&&"object"==typeof e?k.extend({},e):{complete:n||!n&&t||m(e)&&e,duration:e,easing:n&&t||t&&!m(t)&&t};return k.fx.off?r.duration=0:"number"!=typeof r.duration&&(r.duration in k.fx.speeds?r.duration=k.fx.speeds[r.duration]:r.duration=k.fx.speeds._default),null!=r.queue&&!0!==r.queue||(r.queue="fx"),r.old=r.complete,r.complete=function(){m(r.old)&&r.old.call(this),r.queue&&k.dequeue(this,r.queue)},r},k.fn.extend({fadeTo:function(e,t,n,r){return this.filter(se).css("opacity",0).show().end().animate({opacity:t},e,n,r)},animate:function(t,e,n,r){var i=k.isEmptyObject(t),o=k.speed(e,n,r),a=function(){var e=dt(this,k.extend({},t),o);(i||Q.get(this,"finish"))&&e.stop(!0)};return a.finish=a,i||!1===o.queue?this.each(a):this.queue(o.queue,a)},stop:function(i,e,o){var a=function(e){var t=e.stop;delete e.stop,t(o)};return"string"!=typeof i&&(o=e,e=i,i=void 0),e&&!1!==i&&this.queue(i||"fx",[]),this.each(function(){var e=!0,t=null!=i&&i+"queueHooks",n=k.timers,r=Q.get(this);if(t)r[t]&&r[t].stop&&a(r[t]);else for(t in r)r[t]&&r[t].stop&&ut.test(t)&&a(r[t]);for(t=n.length;t--;)n[t].elem!==this||null!=i&&n[t].queue!==i||(n[t].anim.stop(o),e=!1,n.splice(t,1));!e&&o||k.dequeue(this,i)})},finish:function(a){return!1!==a&&(a=a||"fx"),this.each(function(){var e,t=Q.get(this),n=t[a+"queue"],r=t[a+"queueHooks"],i=k.timers,o=n?n.length:0;for(t.finish=!0,k.queue(this,a,[]),r&&r.stop&&r.stop.call(this,!0),e=i.length;e--;)i[e].elem===this&&i[e].queue===a&&(i[e].anim.stop(!0),i.splice(e,1));for(e=0;e<o;e++)n[e]&&n[e].finish&&n[e].finish.call(this);delete t.finish})}}),k.each(["toggle","show","hide"],function(e,r){var i=k.fn[r];k.fn[r]=function(e,t,n){return null==e||"boolean"==typeof e?i.apply(this,arguments):this.animate(ft(r,!0),e,t,n)}}),k.each({slideDown:ft("show"),slideUp:ft("hide"),slideToggle:ft("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(e,r){k.fn[e]=function(e,t,n){return this.animate(r,e,t,n)}}),k.timers=[],k.fx.tick=function(){var e,t=0,n=k.timers;for(rt=Date.now();t<n.length;t++)(e=n[t])()||n[t]!==e||n.splice(t--,1);n.length||k.fx.stop(),rt=void 0},k.fx.timer=function(e){k.timers.push(e),k.fx.start()},k.fx.interval=13,k.fx.start=function(){it||(it=!0,lt())},k.fx.stop=function(){it=null},k.fx.speeds={slow:600,fast:200,_default:400},k.fn.delay=function(r,e){return r=k.fx&&k.fx.speeds[r]||r,e=e||"fx",this.queue(e,function(e,t){var n=C.setTimeout(e,r);t.stop=function(){C.clearTimeout(n)}})},ot=E.createElement("input"),at=E.createElement("select").appendChild(E.createElement("option")),ot.type="checkbox",y.checkOn=""!==ot.value,y.optSelected=at.selected,(ot=E.createElement("input")).value="t",ot.type="radio",y.radioValue="t"===ot.value;var ht,gt=k.expr.attrHandle;k.fn.extend({attr:function(e,t){return _(this,k.attr,e,t,1<arguments.length)},removeAttr:function(e){return this.each(function(){k.removeAttr(this,e)})}}),k.extend({attr:function(e,t,n){var r,i,o=e.nodeType;if(3!==o&&8!==o&&2!==o)return"undefined"==typeof e.getAttribute?k.prop(e,t,n):(1===o&&k.isXMLDoc(e)||(i=k.attrHooks[t.toLowerCase()]||(k.expr.match.bool.test(t)?ht:void 0)),void 0!==n?null===n?void k.removeAttr(e,t):i&&"set"in i&&void 0!==(r=i.set(e,n,t))?r:(e.setAttribute(t,n+""),n):i&&"get"in i&&null!==(r=i.get(e,t))?r:null==(r=k.find.attr(e,t))?void 0:r)},attrHooks:{type:{set:function(e,t){if(!y.radioValue&&"radio"===t&&A(e,"input")){var n=e.value;return e.setAttribute("type",t),n&&(e.value=n),t}}}},removeAttr:function(e,t){var n,r=0,i=t&&t.match(R);if(i&&1===e.nodeType)while(n=i[r++])e.removeAttribute(n)}}),ht={set:function(e,t,n){return!1===t?k.removeAttr(e,n):e.setAttribute(n,n),n}},k.each(k.expr.match.bool.source.match(/\w+/g),function(e,t){var a=gt[t]||k.find.attr;gt[t]=function(e,t,n){var r,i,o=t.toLowerCase();return n||(i=gt[o],gt[o]=r,r=null!=a(e,t,n)?o:null,gt[o]=i),r}});var vt=/^(?:input|select|textarea|button)$/i,yt=/^(?:a|area)$/i;function mt(e){return(e.match(R)||[]).join(" ")}function xt(e){return e.getAttribute&&e.getAttribute("class")||""}function bt(e){return Array.isArray(e)?e:"string"==typeof e&&e.match(R)||[]}k.fn.extend({prop:function(e,t){return _(this,k.prop,e,t,1<arguments.length)},removeProp:function(e){return this.each(function(){delete this[k.propFix[e]||e]})}}),k.extend({prop:function(e,t,n){var r,i,o=e.nodeType;if(3!==o&&8!==o&&2!==o)return 1===o&&k.isXMLDoc(e)||(t=k.propFix[t]||t,i=k.propHooks[t]),void 0!==n?i&&"set"in i&&void 0!==(r=i.set(e,n,t))?r:e[t]=n:i&&"get"in i&&null!==(r=i.get(e,t))?r:e[t]},propHooks:{tabIndex:{get:function(e){var t=k.find.attr(e,"tabindex");return t?parseInt(t,10):vt.test(e.nodeName)||yt.test(e.nodeName)&&e.href?0:-1}}},propFix:{"for":"htmlFor","class":"className"}}),y.optSelected||(k.propHooks.selected={get:function(e){var t=e.parentNode;return t&&t.parentNode&&t.parentNode.selectedIndex,null},set:function(e){var t=e.parentNode;t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex)}}),k.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){k.propFix[this.toLowerCase()]=this}),k.fn.extend({addClass:function(t){var e,n,r,i,o,a,s,u=0;if(m(t))return this.each(function(e){k(this).addClass(t.call(this,e,xt(this)))});if((e=bt(t)).length)while(n=this[u++])if(i=xt(n),r=1===n.nodeType&&" "+mt(i)+" "){a=0;while(o=e[a++])r.indexOf(" "+o+" ")<0&&(r+=o+" ");i!==(s=mt(r))&&n.setAttribute("class",s)}return this},removeClass:function(t){var e,n,r,i,o,a,s,u=0;if(m(t))return this.each(function(e){k(this).removeClass(t.call(this,e,xt(this)))});if(!arguments.length)return this.attr("class","");if((e=bt(t)).length)while(n=this[u++])if(i=xt(n),r=1===n.nodeType&&" "+mt(i)+" "){a=0;while(o=e[a++])while(-1<r.indexOf(" "+o+" "))r=r.replace(" "+o+" "," ");i!==(s=mt(r))&&n.setAttribute("class",s)}return this},toggleClass:function(i,t){var o=typeof i,a="string"===o||Array.isArray(i);return"boolean"==typeof t&&a?t?this.addClass(i):this.removeClass(i):m(i)?this.each(function(e){k(this).toggleClass(i.call(this,e,xt(this),t),t)}):this.each(function(){var e,t,n,r;if(a){t=0,n=k(this),r=bt(i);while(e=r[t++])n.hasClass(e)?n.removeClass(e):n.addClass(e)}else void 0!==i&&"boolean"!==o||((e=xt(this))&&Q.set(this,"__className__",e),this.setAttribute&&this.setAttribute("class",e||!1===i?"":Q.get(this,"__className__")||""))})},hasClass:function(e){var t,n,r=0;t=" "+e+" ";while(n=this[r++])if(1===n.nodeType&&-1<(" "+mt(xt(n))+" ").indexOf(t))return!0;return!1}});var wt=/\r/g;k.fn.extend({val:function(n){var r,e,i,t=this[0];return arguments.length?(i=m(n),this.each(function(e){var t;1===this.nodeType&&(null==(t=i?n.call(this,e,k(this).val()):n)?t="":"number"==typeof t?t+="":Array.isArray(t)&&(t=k.map(t,function(e){return null==e?"":e+""})),(r=k.valHooks[this.type]||k.valHooks[this.nodeName.toLowerCase()])&&"set"in r&&void 0!==r.set(this,t,"value")||(this.value=t))})):t?(r=k.valHooks[t.type]||k.valHooks[t.nodeName.toLowerCase()])&&"get"in r&&void 0!==(e=r.get(t,"value"))?e:"string"==typeof(e=t.value)?e.replace(wt,""):null==e?"":e:void 0}}),k.extend({valHooks:{option:{get:function(e){var t=k.find.attr(e,"value");return null!=t?t:mt(k.text(e))}},select:{get:function(e){var t,n,r,i=e.options,o=e.selectedIndex,a="select-one"===e.type,s=a?null:[],u=a?o+1:i.length;for(r=o<0?u:a?o:0;r<u;r++)if(((n=i[r]).selected||r===o)&&!n.disabled&&(!n.parentNode.disabled||!A(n.parentNode,"optgroup"))){if(t=k(n).val(),a)return t;s.push(t)}return s},set:function(e,t){var n,r,i=e.options,o=k.makeArray(t),a=i.length;while(a--)((r=i[a]).selected=-1<k.inArray(k.valHooks.option.get(r),o))&&(n=!0);return n||(e.selectedIndex=-1),o}}}}),k.each(["radio","checkbox"],function(){k.valHooks[this]={set:function(e,t){if(Array.isArray(t))return e.checked=-1<k.inArray(k(e).val(),t)}},y.checkOn||(k.valHooks[this].get=function(e){return null===e.getAttribute("value")?"on":e.value})}),y.focusin="onfocusin"in C;var Tt=/^(?:focusinfocus|focusoutblur)$/,Ct=function(e){e.stopPropagation()};k.extend(k.event,{trigger:function(e,t,n,r){var i,o,a,s,u,l,c,f,p=[n||E],d=v.call(e,"type")?e.type:e,h=v.call(e,"namespace")?e.namespace.split("."):[];if(o=f=a=n=n||E,3!==n.nodeType&&8!==n.nodeType&&!Tt.test(d+k.event.triggered)&&(-1<d.indexOf(".")&&(d=(h=d.split(".")).shift(),h.sort()),u=d.indexOf(":")<0&&"on"+d,(e=e[k.expando]?e:new k.Event(d,"object"==typeof e&&e)).isTrigger=r?2:3,e.namespace=h.join("."),e.rnamespace=e.namespace?new RegExp("(^|\\.)"+h.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,e.result=void 0,e.target||(e.target=n),t=null==t?[e]:k.makeArray(t,[e]),c=k.event.special[d]||{},r||!c.trigger||!1!==c.trigger.apply(n,t))){if(!r&&!c.noBubble&&!x(n)){for(s=c.delegateType||d,Tt.test(s+d)||(o=o.parentNode);o;o=o.parentNode)p.push(o),a=o;a===(n.ownerDocument||E)&&p.push(a.defaultView||a.parentWindow||C)}i=0;while((o=p[i++])&&!e.isPropagationStopped())f=o,e.type=1<i?s:c.bindType||d,(l=(Q.get(o,"events")||{})[e.type]&&Q.get(o,"handle"))&&l.apply(o,t),(l=u&&o[u])&&l.apply&&G(o)&&(e.result=l.apply(o,t),!1===e.result&&e.preventDefault());return e.type=d,r||e.isDefaultPrevented()||c._default&&!1!==c._default.apply(p.pop(),t)||!G(n)||u&&m(n[d])&&!x(n)&&((a=n[u])&&(n[u]=null),k.event.triggered=d,e.isPropagationStopped()&&f.addEventListener(d,Ct),n[d](),e.isPropagationStopped()&&f.removeEventListener(d,Ct),k.event.triggered=void 0,a&&(n[u]=a)),e.result}},simulate:function(e,t,n){var r=k.extend(new k.Event,n,{type:e,isSimulated:!0});k.event.trigger(r,null,t)}}),k.fn.extend({trigger:function(e,t){return this.each(function(){k.event.trigger(e,t,this)})},triggerHandler:function(e,t){var n=this[0];if(n)return k.event.trigger(e,t,n,!0)}}),y.focusin||k.each({focus:"focusin",blur:"focusout"},function(n,r){var i=function(e){k.event.simulate(r,e.target,k.event.fix(e))};k.event.special[r]={setup:function(){var e=this.ownerDocument||this,t=Q.access(e,r);t||e.addEventListener(n,i,!0),Q.access(e,r,(t||0)+1)},teardown:function(){var e=this.ownerDocument||this,t=Q.access(e,r)-1;t?Q.access(e,r,t):(e.removeEventListener(n,i,!0),Q.remove(e,r))}}});var Et=C.location,kt=Date.now(),St=/\?/;k.parseXML=function(e){var t;if(!e||"string"!=typeof e)return null;try{t=(new C.DOMParser).parseFromString(e,"text/xml")}catch(e){t=void 0}return t&&!t.getElementsByTagName("parsererror").length||k.error("Invalid XML: "+e),t};var Nt=/\[\]$/,At=/\r?\n/g,Dt=/^(?:submit|button|image|reset|file)$/i,jt=/^(?:input|select|textarea|keygen)/i;function qt(n,e,r,i){var t;if(Array.isArray(e))k.each(e,function(e,t){r||Nt.test(n)?i(n,t):qt(n+"["+("object"==typeof t&&null!=t?e:"")+"]",t,r,i)});else if(r||"object"!==w(e))i(n,e);else for(t in e)qt(n+"["+t+"]",e[t],r,i)}k.param=function(e,t){var n,r=[],i=function(e,t){var n=m(t)?t():t;r[r.length]=encodeURIComponent(e)+"="+encodeURIComponent(null==n?"":n)};if(null==e)return"";if(Array.isArray(e)||e.jquery&&!k.isPlainObject(e))k.each(e,function(){i(this.name,this.value)});else for(n in e)qt(n,e[n],t,i);return r.join("&")},k.fn.extend({serialize:function(){return k.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var e=k.prop(this,"elements");return e?k.makeArray(e):this}).filter(function(){var e=this.type;return this.name&&!k(this).is(":disabled")&&jt.test(this.nodeName)&&!Dt.test(e)&&(this.checked||!pe.test(e))}).map(function(e,t){var n=k(this).val();return null==n?null:Array.isArray(n)?k.map(n,function(e){return{name:t.name,value:e.replace(At,"\r\n")}}):{name:t.name,value:n.replace(At,"\r\n")}}).get()}});var Lt=/%20/g,Ht=/#.*$/,Ot=/([?&])_=[^&]*/,Pt=/^(.*?):[ \t]*([^\r\n]*)$/gm,Rt=/^(?:GET|HEAD)$/,Mt=/^\/\//,It={},Wt={},$t="*/".concat("*"),Ft=E.createElement("a");function Bt(o){return function(e,t){"string"!=typeof e&&(t=e,e="*");var n,r=0,i=e.toLowerCase().match(R)||[];if(m(t))while(n=i[r++])"+"===n[0]?(n=n.slice(1)||"*",(o[n]=o[n]||[]).unshift(t)):(o[n]=o[n]||[]).push(t)}}function _t(t,i,o,a){var s={},u=t===Wt;function l(e){var r;return s[e]=!0,k.each(t[e]||[],function(e,t){var n=t(i,o,a);return"string"!=typeof n||u||s[n]?u?!(r=n):void 0:(i.dataTypes.unshift(n),l(n),!1)}),r}return l(i.dataTypes[0])||!s["*"]&&l("*")}function zt(e,t){var n,r,i=k.ajaxSettings.flatOptions||{};for(n in t)void 0!==t[n]&&((i[n]?e:r||(r={}))[n]=t[n]);return r&&k.extend(!0,e,r),e}Ft.href=Et.href,k.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:Et.href,type:"GET",isLocal:/^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(Et.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":$t,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":k.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?zt(zt(e,k.ajaxSettings),t):zt(k.ajaxSettings,e)},ajaxPrefilter:Bt(It),ajaxTransport:Bt(Wt),ajax:function(e,t){"object"==typeof e&&(t=e,e=void 0),t=t||{};var c,f,p,n,d,r,h,g,i,o,v=k.ajaxSetup({},t),y=v.context||v,m=v.context&&(y.nodeType||y.jquery)?k(y):k.event,x=k.Deferred(),b=k.Callbacks("once memory"),w=v.statusCode||{},a={},s={},u="canceled",T={readyState:0,getResponseHeader:function(e){var t;if(h){if(!n){n={};while(t=Pt.exec(p))n[t[1].toLowerCase()+" "]=(n[t[1].toLowerCase()+" "]||[]).concat(t[2])}t=n[e.toLowerCase()+" "]}return null==t?null:t.join(", ")},getAllResponseHeaders:function(){return h?p:null},setRequestHeader:function(e,t){return null==h&&(e=s[e.toLowerCase()]=s[e.toLowerCase()]||e,a[e]=t),this},overrideMimeType:function(e){return null==h&&(v.mimeType=e),this},statusCode:function(e){var t;if(e)if(h)T.always(e[T.status]);else for(t in e)w[t]=[w[t],e[t]];return this},abort:function(e){var t=e||u;return c&&c.abort(t),l(0,t),this}};if(x.promise(T),v.url=((e||v.url||Et.href)+"").replace(Mt,Et.protocol+"//"),v.type=t.method||t.type||v.method||v.type,v.dataTypes=(v.dataType||"*").toLowerCase().match(R)||[""],null==v.crossDomain){r=E.createElement("a");try{r.href=v.url,r.href=r.href,v.crossDomain=Ft.protocol+"//"+Ft.host!=r.protocol+"//"+r.host}catch(e){v.crossDomain=!0}}if(v.data&&v.processData&&"string"!=typeof v.data&&(v.data=k.param(v.data,v.traditional)),_t(It,v,t,T),h)return T;for(i in(g=k.event&&v.global)&&0==k.active++&&k.event.trigger("ajaxStart"),v.type=v.type.toUpperCase(),v.hasContent=!Rt.test(v.type),f=v.url.replace(Ht,""),v.hasContent?v.data&&v.processData&&0===(v.contentType||"").indexOf("application/x-www-form-urlencoded")&&(v.data=v.data.replace(Lt,"+")):(o=v.url.slice(f.length),v.data&&(v.processData||"string"==typeof v.data)&&(f+=(St.test(f)?"&":"?")+v.data,delete v.data),!1===v.cache&&(f=f.replace(Ot,"$1"),o=(St.test(f)?"&":"?")+"_="+kt+++o),v.url=f+o),v.ifModified&&(k.lastModified[f]&&T.setRequestHeader("If-Modified-Since",k.lastModified[f]),k.etag[f]&&T.setRequestHeader("If-None-Match",k.etag[f])),(v.data&&v.hasContent&&!1!==v.contentType||t.contentType)&&T.setRequestHeader("Content-Type",v.contentType),T.setRequestHeader("Accept",v.dataTypes[0]&&v.accepts[v.dataTypes[0]]?v.accepts[v.dataTypes[0]]+("*"!==v.dataTypes[0]?", "+$t+"; q=0.01":""):v.accepts["*"]),v.headers)T.setRequestHeader(i,v.headers[i]);if(v.beforeSend&&(!1===v.beforeSend.call(y,T,v)||h))return T.abort();if(u="abort",b.add(v.complete),T.done(v.success),T.fail(v.error),c=_t(Wt,v,t,T)){if(T.readyState=1,g&&m.trigger("ajaxSend",[T,v]),h)return T;v.async&&0<v.timeout&&(d=C.setTimeout(function(){T.abort("timeout")},v.timeout));try{h=!1,c.send(a,l)}catch(e){if(h)throw e;l(-1,e)}}else l(-1,"No Transport");function l(e,t,n,r){var i,o,a,s,u,l=t;h||(h=!0,d&&C.clearTimeout(d),c=void 0,p=r||"",T.readyState=0<e?4:0,i=200<=e&&e<300||304===e,n&&(s=function(e,t,n){var r,i,o,a,s=e.contents,u=e.dataTypes;while("*"===u[0])u.shift(),void 0===r&&(r=e.mimeType||t.getResponseHeader("Content-Type"));if(r)for(i in s)if(s[i]&&s[i].test(r)){u.unshift(i);break}if(u[0]in n)o=u[0];else{for(i in n){if(!u[0]||e.converters[i+" "+u[0]]){o=i;break}a||(a=i)}o=o||a}if(o)return o!==u[0]&&u.unshift(o),n[o]}(v,T,n)),s=function(e,t,n,r){var i,o,a,s,u,l={},c=e.dataTypes.slice();if(c[1])for(a in e.converters)l[a.toLowerCase()]=e.converters[a];o=c.shift();while(o)if(e.responseFields[o]&&(n[e.responseFields[o]]=t),!u&&r&&e.dataFilter&&(t=e.dataFilter(t,e.dataType)),u=o,o=c.shift())if("*"===o)o=u;else if("*"!==u&&u!==o){if(!(a=l[u+" "+o]||l["* "+o]))for(i in l)if((s=i.split(" "))[1]===o&&(a=l[u+" "+s[0]]||l["* "+s[0]])){!0===a?a=l[i]:!0!==l[i]&&(o=s[0],c.unshift(s[1]));break}if(!0!==a)if(a&&e["throws"])t=a(t);else try{t=a(t)}catch(e){return{state:"parsererror",error:a?e:"No conversion from "+u+" to "+o}}}return{state:"success",data:t}}(v,s,T,i),i?(v.ifModified&&((u=T.getResponseHeader("Last-Modified"))&&(k.lastModified[f]=u),(u=T.getResponseHeader("etag"))&&(k.etag[f]=u)),204===e||"HEAD"===v.type?l="nocontent":304===e?l="notmodified":(l=s.state,o=s.data,i=!(a=s.error))):(a=l,!e&&l||(l="error",e<0&&(e=0))),T.status=e,T.statusText=(t||l)+"",i?x.resolveWith(y,[o,l,T]):x.rejectWith(y,[T,l,a]),T.statusCode(w),w=void 0,g&&m.trigger(i?"ajaxSuccess":"ajaxError",[T,v,i?o:a]),b.fireWith(y,[T,l]),g&&(m.trigger("ajaxComplete",[T,v]),--k.active||k.event.trigger("ajaxStop")))}return T},getJSON:function(e,t,n){return k.get(e,t,n,"json")},getScript:function(e,t){return k.get(e,void 0,t,"script")}}),k.each(["get","post"],function(e,i){k[i]=function(e,t,n,r){return m(t)&&(r=r||n,n=t,t=void 0),k.ajax(k.extend({url:e,type:i,dataType:r,data:t,success:n},k.isPlainObject(e)&&e))}}),k._evalUrl=function(e,t){return k.ajax({url:e,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,converters:{"text script":function(){}},dataFilter:function(e){k.globalEval(e,t)}})},k.fn.extend({wrapAll:function(e){var t;return this[0]&&(m(e)&&(e=e.call(this[0])),t=k(e,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&t.insertBefore(this[0]),t.map(function(){var e=this;while(e.firstElementChild)e=e.firstElementChild;return e}).append(this)),this},wrapInner:function(n){return m(n)?this.each(function(e){k(this).wrapInner(n.call(this,e))}):this.each(function(){var e=k(this),t=e.contents();t.length?t.wrapAll(n):e.append(n)})},wrap:function(t){var n=m(t);return this.each(function(e){k(this).wrapAll(n?t.call(this,e):t)})},unwrap:function(e){return this.parent(e).not("body").each(function(){k(this).replaceWith(this.childNodes)}),this}}),k.expr.pseudos.hidden=function(e){return!k.expr.pseudos.visible(e)},k.expr.pseudos.visible=function(e){return!!(e.offsetWidth||e.offsetHeight||e.getClientRects().length)},k.ajaxSettings.xhr=function(){try{return new C.XMLHttpRequest}catch(e){}};var Ut={0:200,1223:204},Xt=k.ajaxSettings.xhr();y.cors=!!Xt&&"withCredentials"in Xt,y.ajax=Xt=!!Xt,k.ajaxTransport(function(i){var o,a;if(y.cors||Xt&&!i.crossDomain)return{send:function(e,t){var n,r=i.xhr();if(r.open(i.type,i.url,i.async,i.username,i.password),i.xhrFields)for(n in i.xhrFields)r[n]=i.xhrFields[n];for(n in i.mimeType&&r.overrideMimeType&&r.overrideMimeType(i.mimeType),i.crossDomain||e["X-Requested-With"]||(e["X-Requested-With"]="XMLHttpRequest"),e)r.setRequestHeader(n,e[n]);o=function(e){return function(){o&&(o=a=r.onload=r.onerror=r.onabort=r.ontimeout=r.onreadystatechange=null,"abort"===e?r.abort():"error"===e?"number"!=typeof r.status?t(0,"error"):t(r.status,r.statusText):t(Ut[r.status]||r.status,r.statusText,"text"!==(r.responseType||"text")||"string"!=typeof r.responseText?{binary:r.response}:{text:r.responseText},r.getAllResponseHeaders()))}},r.onload=o(),a=r.onerror=r.ontimeout=o("error"),void 0!==r.onabort?r.onabort=a:r.onreadystatechange=function(){4===r.readyState&&C.setTimeout(function(){o&&a()})},o=o("abort");try{r.send(i.hasContent&&i.data||null)}catch(e){if(o)throw e}},abort:function(){o&&o()}}}),k.ajaxPrefilter(function(e){e.crossDomain&&(e.contents.script=!1)}),k.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(e){return k.globalEval(e),e}}}),k.ajaxPrefilter("script",function(e){void 0===e.cache&&(e.cache=!1),e.crossDomain&&(e.type="GET")}),k.ajaxTransport("script",function(n){var r,i;if(n.crossDomain||n.scriptAttrs)return{send:function(e,t){r=k("<script>").attr(n.scriptAttrs||{}).prop({charset:n.scriptCharset,src:n.url}).on("load error",i=function(e){r.remove(),i=null,e&&t("error"===e.type?404:200,e.type)}),E.head.appendChild(r[0])},abort:function(){i&&i()}}});var Vt,Gt=[],Yt=/(=)\?(?=&|$)|\?\?/;k.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var e=Gt.pop()||k.expando+"_"+kt++;return this[e]=!0,e}}),k.ajaxPrefilter("json jsonp",function(e,t,n){var r,i,o,a=!1!==e.jsonp&&(Yt.test(e.url)?"url":"string"==typeof e.data&&0===(e.contentType||"").indexOf("application/x-www-form-urlencoded")&&Yt.test(e.data)&&"data");if(a||"jsonp"===e.dataTypes[0])return r=e.jsonpCallback=m(e.jsonpCallback)?e.jsonpCallback():e.jsonpCallback,a?e[a]=e[a].replace(Yt,"$1"+r):!1!==e.jsonp&&(e.url+=(St.test(e.url)?"&":"?")+e.jsonp+"="+r),e.converters["script json"]=function(){return o||k.error(r+" was not called"),o[0]},e.dataTypes[0]="json",i=C[r],C[r]=function(){o=arguments},n.always(function(){void 0===i?k(C).removeProp(r):C[r]=i,e[r]&&(e.jsonpCallback=t.jsonpCallback,Gt.push(r)),o&&m(i)&&i(o[0]),o=i=void 0}),"script"}),y.createHTMLDocument=((Vt=E.implementation.createHTMLDocument("").body).innerHTML="<form></form><form></form>",2===Vt.childNodes.length),k.parseHTML=function(e,t,n){return"string"!=typeof e?[]:("boolean"==typeof t&&(n=t,t=!1),t||(y.createHTMLDocument?((r=(t=E.implementation.createHTMLDocument("")).createElement("base")).href=E.location.href,t.head.appendChild(r)):t=E),o=!n&&[],(i=D.exec(e))?[t.createElement(i[1])]:(i=we([e],t,o),o&&o.length&&k(o).remove(),k.merge([],i.childNodes)));var r,i,o},k.fn.load=function(e,t,n){var r,i,o,a=this,s=e.indexOf(" ");return-1<s&&(r=mt(e.slice(s)),e=e.slice(0,s)),m(t)?(n=t,t=void 0):t&&"object"==typeof t&&(i="POST"),0<a.length&&k.ajax({url:e,type:i||"GET",dataType:"html",data:t}).done(function(e){o=arguments,a.html(r?k("<div>").append(k.parseHTML(e)).find(r):e)}).always(n&&function(e,t){a.each(function(){n.apply(this,o||[e.responseText,t,e])})}),this},k.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(e,t){k.fn[t]=function(e){return this.on(t,e)}}),k.expr.pseudos.animated=function(t){return k.grep(k.timers,function(e){return t===e.elem}).length},k.offset={setOffset:function(e,t,n){var r,i,o,a,s,u,l=k.css(e,"position"),c=k(e),f={};"static"===l&&(e.style.position="relative"),s=c.offset(),o=k.css(e,"top"),u=k.css(e,"left"),("absolute"===l||"fixed"===l)&&-1<(o+u).indexOf("auto")?(a=(r=c.position()).top,i=r.left):(a=parseFloat(o)||0,i=parseFloat(u)||0),m(t)&&(t=t.call(e,n,k.extend({},s))),null!=t.top&&(f.top=t.top-s.top+a),null!=t.left&&(f.left=t.left-s.left+i),"using"in t?t.using.call(e,f):c.css(f)}},k.fn.extend({offset:function(t){if(arguments.length)return void 0===t?this:this.each(function(e){k.offset.setOffset(this,t,e)});var e,n,r=this[0];return r?r.getClientRects().length?(e=r.getBoundingClientRect(),n=r.ownerDocument.defaultView,{top:e.top+n.pageYOffset,left:e.left+n.pageXOffset}):{top:0,left:0}:void 0},position:function(){if(this[0]){var e,t,n,r=this[0],i={top:0,left:0};if("fixed"===k.css(r,"position"))t=r.getBoundingClientRect();else{t=this.offset(),n=r.ownerDocument,e=r.offsetParent||n.documentElement;while(e&&(e===n.body||e===n.documentElement)&&"static"===k.css(e,"position"))e=e.parentNode;e&&e!==r&&1===e.nodeType&&((i=k(e).offset()).top+=k.css(e,"borderTopWidth",!0),i.left+=k.css(e,"borderLeftWidth",!0))}return{top:t.top-i.top-k.css(r,"marginTop",!0),left:t.left-i.left-k.css(r,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){var e=this.offsetParent;while(e&&"static"===k.css(e,"position"))e=e.offsetParent;return e||ie})}}),k.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(t,i){var o="pageYOffset"===i;k.fn[t]=function(e){return _(this,function(e,t,n){var r;if(x(e)?r=e:9===e.nodeType&&(r=e.defaultView),void 0===n)return r?r[i]:e[t];r?r.scrollTo(o?r.pageXOffset:n,o?n:r.pageYOffset):e[t]=n},t,e,arguments.length)}}),k.each(["top","left"],function(e,n){k.cssHooks[n]=ze(y.pixelPosition,function(e,t){if(t)return t=_e(e,n),$e.test(t)?k(e).position()[n]+"px":t})}),k.each({Height:"height",Width:"width"},function(a,s){k.each({padding:"inner"+a,content:s,"":"outer"+a},function(r,o){k.fn[o]=function(e,t){var n=arguments.length&&(r||"boolean"!=typeof e),i=r||(!0===e||!0===t?"margin":"border");return _(this,function(e,t,n){var r;return x(e)?0===o.indexOf("outer")?e["inner"+a]:e.document.documentElement["client"+a]:9===e.nodeType?(r=e.documentElement,Math.max(e.body["scroll"+a],r["scroll"+a],e.body["offset"+a],r["offset"+a],r["client"+a])):void 0===n?k.css(e,t,i):k.style(e,t,n,i)},s,n?e:void 0,n)}})}),k.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),function(e,n){k.fn[n]=function(e,t){return 0<arguments.length?this.on(n,null,e,t):this.trigger(n)}}),k.fn.extend({hover:function(e,t){return this.mouseenter(e).mouseleave(t||e)}}),k.fn.extend({bind:function(e,t,n){return this.on(e,null,t,n)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,n,r){return this.on(t,e,n,r)},undelegate:function(e,t,n){return 1===arguments.length?this.off(e,"**"):this.off(t,e||"**",n)}}),k.proxy=function(e,t){var n,r,i;if("string"==typeof t&&(n=e[t],t=e,e=n),m(e))return r=s.call(arguments,2),(i=function(){return e.apply(t||this,r.concat(s.call(arguments)))}).guid=e.guid=e.guid||k.guid++,i},k.holdReady=function(e){e?k.readyWait++:k.ready(!0)},k.isArray=Array.isArray,k.parseJSON=JSON.parse,k.nodeName=A,k.isFunction=m,k.isWindow=x,k.camelCase=V,k.type=w,k.now=Date.now,k.isNumeric=function(e){var t=k.type(e);return("number"===t||"string"===t)&&!isNaN(e-parseFloat(e))},"function"==typeof define&&define.amd&&define("jquery",[],function(){return k});var Qt=C.jQuery,Jt=C.$;return k.noConflict=function(e){return C.$===k&&(C.$=Jt),e&&C.jQuery===k&&(C.jQuery=Qt),k},e||(C.jQuery=C.$=k),k});

/*! jQuery UI - v1.12.1 - 2016-09-14
* http://jqueryui.com
* Includes: widget.js, position.js, data.js, disable-selection.js, effect.js, effects/effect-blind.js, effects/effect-bounce.js, effects/effect-clip.js, effects/effect-drop.js, effects/effect-explode.js, effects/effect-fade.js, effects/effect-fold.js, effects/effect-highlight.js, effects/effect-puff.js, effects/effect-pulsate.js, effects/effect-scale.js, effects/effect-shake.js, effects/effect-size.js, effects/effect-slide.js, effects/effect-transfer.js, focusable.js, form-reset-mixin.js, jquery-1-7.js, keycode.js, labels.js, scroll-parent.js, tabbable.js, unique-id.js, widgets/accordion.js, widgets/autocomplete.js, widgets/button.js, widgets/checkboxradio.js, widgets/controlgroup.js, widgets/datepicker.js, widgets/dialog.js, widgets/draggable.js, widgets/droppable.js, widgets/menu.js, widgets/mouse.js, widgets/progressbar.js, widgets/resizable.js, widgets/selectable.js, widgets/selectmenu.js, widgets/slider.js, widgets/sortable.js, widgets/spinner.js, widgets/tabs.js, widgets/tooltip.js
* Copyright jQuery Foundation and other contributors; Licensed MIT */

(function(t){"function"==typeof define&&define.amd?define(["jquery"],t):t(jQuery)})(function(t){function e(t){for(var e=t.css("visibility");"inherit"===e;)t=t.parent(),e=t.css("visibility");return"hidden"!==e}function i(t){for(var e,i;t.length&&t[0]!==document;){if(e=t.css("position"),("absolute"===e||"relative"===e||"fixed"===e)&&(i=parseInt(t.css("zIndex"),10),!isNaN(i)&&0!==i))return i;t=t.parent()}return 0}function s(){this._curInst=null,this._keyEvent=!1,this._disabledInputs=[],this._datepickerShowing=!1,this._inDialog=!1,this._mainDivId="ui-datepicker-div",this._inlineClass="ui-datepicker-inline",this._appendClass="ui-datepicker-append",this._triggerClass="ui-datepicker-trigger",this._dialogClass="ui-datepicker-dialog",this._disableClass="ui-datepicker-disabled",this._unselectableClass="ui-datepicker-unselectable",this._currentClass="ui-datepicker-current-day",this._dayOverClass="ui-datepicker-days-cell-over",this.regional=[],this.regional[""]={closeText:"Done",prevText:"Prev",nextText:"Next",currentText:"Today",monthNames:["January","February","March","April","May","June","July","August","September","October","November","December"],monthNamesShort:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],dayNames:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],dayNamesShort:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],dayNamesMin:["Su","Mo","Tu","We","Th","Fr","Sa"],weekHeader:"Wk",dateFormat:"mm/dd/yy",firstDay:0,isRTL:!1,showMonthAfterYear:!1,yearSuffix:""},this._defaults={showOn:"focus",showAnim:"fadeIn",showOptions:{},defaultDate:null,appendText:"",buttonText:"...",buttonImage:"",buttonImageOnly:!1,hideIfNoPrevNext:!1,navigationAsDateFormat:!1,gotoCurrent:!1,changeMonth:!1,changeYear:!1,yearRange:"c-10:c+10",showOtherMonths:!1,selectOtherMonths:!1,showWeek:!1,calculateWeek:this.iso8601Week,shortYearCutoff:"+10",minDate:null,maxDate:null,duration:"fast",beforeShowDay:null,beforeShow:null,onSelect:null,onChangeMonthYear:null,onClose:null,numberOfMonths:1,showCurrentAtPos:0,stepMonths:1,stepBigMonths:12,altField:"",altFormat:"",constrainInput:!0,showButtonPanel:!1,autoSize:!1,disabled:!1},t.extend(this._defaults,this.regional[""]),this.regional.en=t.extend(!0,{},this.regional[""]),this.regional["en-US"]=t.extend(!0,{},this.regional.en),this.dpDiv=n(t("<div id='"+this._mainDivId+"' class='ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>"))}function n(e){var i="button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";return e.on("mouseout",i,function(){t(this).removeClass("ui-state-hover"),-1!==this.className.indexOf("ui-datepicker-prev")&&t(this).removeClass("ui-datepicker-prev-hover"),-1!==this.className.indexOf("ui-datepicker-next")&&t(this).removeClass("ui-datepicker-next-hover")}).on("mouseover",i,o)}function o(){t.datepicker._isDisabledDatepicker(m.inline?m.dpDiv.parent()[0]:m.input[0])||(t(this).parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover"),t(this).addClass("ui-state-hover"),-1!==this.className.indexOf("ui-datepicker-prev")&&t(this).addClass("ui-datepicker-prev-hover"),-1!==this.className.indexOf("ui-datepicker-next")&&t(this).addClass("ui-datepicker-next-hover"))}function a(e,i){t.extend(e,i);for(var s in i)null==i[s]&&(e[s]=i[s]);return e}function r(t){return function(){var e=this.element.val();t.apply(this,arguments),this._refresh(),e!==this.element.val()&&this._trigger("change")}}t.ui=t.ui||{},t.ui.version="1.12.1";var h=0,l=Array.prototype.slice;t.cleanData=function(e){return function(i){var s,n,o;for(o=0;null!=(n=i[o]);o++)try{s=t._data(n,"events"),s&&s.remove&&t(n).triggerHandler("remove")}catch(a){}e(i)}}(t.cleanData),t.widget=function(e,i,s){var n,o,a,r={},h=e.split(".")[0];e=e.split(".")[1];var l=h+"-"+e;return s||(s=i,i=t.Widget),t.isArray(s)&&(s=t.extend.apply(null,[{}].concat(s))),t.expr[":"][l.toLowerCase()]=function(e){return!!t.data(e,l)},t[h]=t[h]||{},n=t[h][e],o=t[h][e]=function(t,e){return this._createWidget?(arguments.length&&this._createWidget(t,e),void 0):new o(t,e)},t.extend(o,n,{version:s.version,_proto:t.extend({},s),_childConstructors:[]}),a=new i,a.options=t.widget.extend({},a.options),t.each(s,function(e,s){return t.isFunction(s)?(r[e]=function(){function t(){return i.prototype[e].apply(this,arguments)}function n(t){return i.prototype[e].apply(this,t)}return function(){var e,i=this._super,o=this._superApply;return this._super=t,this._superApply=n,e=s.apply(this,arguments),this._super=i,this._superApply=o,e}}(),void 0):(r[e]=s,void 0)}),o.prototype=t.widget.extend(a,{widgetEventPrefix:n?a.widgetEventPrefix||e:e},r,{constructor:o,namespace:h,widgetName:e,widgetFullName:l}),n?(t.each(n._childConstructors,function(e,i){var s=i.prototype;t.widget(s.namespace+"."+s.widgetName,o,i._proto)}),delete n._childConstructors):i._childConstructors.push(o),t.widget.bridge(e,o),o},t.widget.extend=function(e){for(var i,s,n=l.call(arguments,1),o=0,a=n.length;a>o;o++)for(i in n[o])s=n[o][i],n[o].hasOwnProperty(i)&&void 0!==s&&(e[i]=t.isPlainObject(s)?t.isPlainObject(e[i])?t.widget.extend({},e[i],s):t.widget.extend({},s):s);return e},t.widget.bridge=function(e,i){var s=i.prototype.widgetFullName||e;t.fn[e]=function(n){var o="string"==typeof n,a=l.call(arguments,1),r=this;return o?this.length||"instance"!==n?this.each(function(){var i,o=t.data(this,s);return"instance"===n?(r=o,!1):o?t.isFunction(o[n])&&"_"!==n.charAt(0)?(i=o[n].apply(o,a),i!==o&&void 0!==i?(r=i&&i.jquery?r.pushStack(i.get()):i,!1):void 0):t.error("no such method '"+n+"' for "+e+" widget instance"):t.error("cannot call methods on "+e+" prior to initialization; "+"attempted to call method '"+n+"'")}):r=void 0:(a.length&&(n=t.widget.extend.apply(null,[n].concat(a))),this.each(function(){var e=t.data(this,s);e?(e.option(n||{}),e._init&&e._init()):t.data(this,s,new i(n,this))})),r}},t.Widget=function(){},t.Widget._childConstructors=[],t.Widget.prototype={widgetName:"widget",widgetEventPrefix:"",defaultElement:"<div>",options:{classes:{},disabled:!1,create:null},_createWidget:function(e,i){i=t(i||this.defaultElement||this)[0],this.element=t(i),this.uuid=h++,this.eventNamespace="."+this.widgetName+this.uuid,this.bindings=t(),this.hoverable=t(),this.focusable=t(),this.classesElementLookup={},i!==this&&(t.data(i,this.widgetFullName,this),this._on(!0,this.element,{remove:function(t){t.target===i&&this.destroy()}}),this.document=t(i.style?i.ownerDocument:i.document||i),this.window=t(this.document[0].defaultView||this.document[0].parentWindow)),this.options=t.widget.extend({},this.options,this._getCreateOptions(),e),this._create(),this.options.disabled&&this._setOptionDisabled(this.options.disabled),this._trigger("create",null,this._getCreateEventData()),this._init()},_getCreateOptions:function(){return{}},_getCreateEventData:t.noop,_create:t.noop,_init:t.noop,destroy:function(){var e=this;this._destroy(),t.each(this.classesElementLookup,function(t,i){e._removeClass(i,t)}),this.element.off(this.eventNamespace).removeData(this.widgetFullName),this.widget().off(this.eventNamespace).removeAttr("aria-disabled"),this.bindings.off(this.eventNamespace)},_destroy:t.noop,widget:function(){return this.element},option:function(e,i){var s,n,o,a=e;if(0===arguments.length)return t.widget.extend({},this.options);if("string"==typeof e)if(a={},s=e.split("."),e=s.shift(),s.length){for(n=a[e]=t.widget.extend({},this.options[e]),o=0;s.length-1>o;o++)n[s[o]]=n[s[o]]||{},n=n[s[o]];if(e=s.pop(),1===arguments.length)return void 0===n[e]?null:n[e];n[e]=i}else{if(1===arguments.length)return void 0===this.options[e]?null:this.options[e];a[e]=i}return this._setOptions(a),this},_setOptions:function(t){var e;for(e in t)this._setOption(e,t[e]);return this},_setOption:function(t,e){return"classes"===t&&this._setOptionClasses(e),this.options[t]=e,"disabled"===t&&this._setOptionDisabled(e),this},_setOptionClasses:function(e){var i,s,n;for(i in e)n=this.classesElementLookup[i],e[i]!==this.options.classes[i]&&n&&n.length&&(s=t(n.get()),this._removeClass(n,i),s.addClass(this._classes({element:s,keys:i,classes:e,add:!0})))},_setOptionDisabled:function(t){this._toggleClass(this.widget(),this.widgetFullName+"-disabled",null,!!t),t&&(this._removeClass(this.hoverable,null,"ui-state-hover"),this._removeClass(this.focusable,null,"ui-state-focus"))},enable:function(){return this._setOptions({disabled:!1})},disable:function(){return this._setOptions({disabled:!0})},_classes:function(e){function i(i,o){var a,r;for(r=0;i.length>r;r++)a=n.classesElementLookup[i[r]]||t(),a=e.add?t(t.unique(a.get().concat(e.element.get()))):t(a.not(e.element).get()),n.classesElementLookup[i[r]]=a,s.push(i[r]),o&&e.classes[i[r]]&&s.push(e.classes[i[r]])}var s=[],n=this;return e=t.extend({element:this.element,classes:this.options.classes||{}},e),this._on(e.element,{remove:"_untrackClassesElement"}),e.keys&&i(e.keys.match(/\S+/g)||[],!0),e.extra&&i(e.extra.match(/\S+/g)||[]),s.join(" ")},_untrackClassesElement:function(e){var i=this;t.each(i.classesElementLookup,function(s,n){-1!==t.inArray(e.target,n)&&(i.classesElementLookup[s]=t(n.not(e.target).get()))})},_removeClass:function(t,e,i){return this._toggleClass(t,e,i,!1)},_addClass:function(t,e,i){return this._toggleClass(t,e,i,!0)},_toggleClass:function(t,e,i,s){s="boolean"==typeof s?s:i;var n="string"==typeof t||null===t,o={extra:n?e:i,keys:n?t:e,element:n?this.element:t,add:s};return o.element.toggleClass(this._classes(o),s),this},_on:function(e,i,s){var n,o=this;"boolean"!=typeof e&&(s=i,i=e,e=!1),s?(i=n=t(i),this.bindings=this.bindings.add(i)):(s=i,i=this.element,n=this.widget()),t.each(s,function(s,a){function r(){return e||o.options.disabled!==!0&&!t(this).hasClass("ui-state-disabled")?("string"==typeof a?o[a]:a).apply(o,arguments):void 0}"string"!=typeof a&&(r.guid=a.guid=a.guid||r.guid||t.guid++);var h=s.match(/^([\w:-]*)\s*(.*)$/),l=h[1]+o.eventNamespace,c=h[2];c?n.on(l,c,r):i.on(l,r)})},_off:function(e,i){i=(i||"").split(" ").join(this.eventNamespace+" ")+this.eventNamespace,e.off(i).off(i),this.bindings=t(this.bindings.not(e).get()),this.focusable=t(this.focusable.not(e).get()),this.hoverable=t(this.hoverable.not(e).get())},_delay:function(t,e){function i(){return("string"==typeof t?s[t]:t).apply(s,arguments)}var s=this;return setTimeout(i,e||0)},_hoverable:function(e){this.hoverable=this.hoverable.add(e),this._on(e,{mouseenter:function(e){this._addClass(t(e.currentTarget),null,"ui-state-hover")},mouseleave:function(e){this._removeClass(t(e.currentTarget),null,"ui-state-hover")}})},_focusable:function(e){this.focusable=this.focusable.add(e),this._on(e,{focusin:function(e){this._addClass(t(e.currentTarget),null,"ui-state-focus")},focusout:function(e){this._removeClass(t(e.currentTarget),null,"ui-state-focus")}})},_trigger:function(e,i,s){var n,o,a=this.options[e];if(s=s||{},i=t.Event(i),i.type=(e===this.widgetEventPrefix?e:this.widgetEventPrefix+e).toLowerCase(),i.target=this.element[0],o=i.originalEvent)for(n in o)n in i||(i[n]=o[n]);return this.element.trigger(i,s),!(t.isFunction(a)&&a.apply(this.element[0],[i].concat(s))===!1||i.isDefaultPrevented())}},t.each({show:"fadeIn",hide:"fadeOut"},function(e,i){t.Widget.prototype["_"+e]=function(s,n,o){"string"==typeof n&&(n={effect:n});var a,r=n?n===!0||"number"==typeof n?i:n.effect||i:e;n=n||{},"number"==typeof n&&(n={duration:n}),a=!t.isEmptyObject(n),n.complete=o,n.delay&&s.delay(n.delay),a&&t.effects&&t.effects.effect[r]?s[e](n):r!==e&&s[r]?s[r](n.duration,n.easing,o):s.queue(function(i){t(this)[e](),o&&o.call(s[0]),i()})}}),t.widget,function(){function e(t,e,i){return[parseFloat(t[0])*(u.test(t[0])?e/100:1),parseFloat(t[1])*(u.test(t[1])?i/100:1)]}function i(e,i){return parseInt(t.css(e,i),10)||0}function s(e){var i=e[0];return 9===i.nodeType?{width:e.width(),height:e.height(),offset:{top:0,left:0}}:t.isWindow(i)?{width:e.width(),height:e.height(),offset:{top:e.scrollTop(),left:e.scrollLeft()}}:i.preventDefault?{width:0,height:0,offset:{top:i.pageY,left:i.pageX}}:{width:e.outerWidth(),height:e.outerHeight(),offset:e.offset()}}var n,o=Math.max,a=Math.abs,r=/left|center|right/,h=/top|center|bottom/,l=/[\+\-]\d+(\.[\d]+)?%?/,c=/^\w+/,u=/%$/,d=t.fn.position;t.position={scrollbarWidth:function(){if(void 0!==n)return n;var e,i,s=t("<div style='display:block;position:absolute;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>"),o=s.children()[0];return t("body").append(s),e=o.offsetWidth,s.css("overflow","scroll"),i=o.offsetWidth,e===i&&(i=s[0].clientWidth),s.remove(),n=e-i},getScrollInfo:function(e){var i=e.isWindow||e.isDocument?"":e.element.css("overflow-x"),s=e.isWindow||e.isDocument?"":e.element.css("overflow-y"),n="scroll"===i||"auto"===i&&e.width<e.element[0].scrollWidth,o="scroll"===s||"auto"===s&&e.height<e.element[0].scrollHeight;return{width:o?t.position.scrollbarWidth():0,height:n?t.position.scrollbarWidth():0}},getWithinInfo:function(e){var i=t(e||window),s=t.isWindow(i[0]),n=!!i[0]&&9===i[0].nodeType,o=!s&&!n;return{element:i,isWindow:s,isDocument:n,offset:o?t(e).offset():{left:0,top:0},scrollLeft:i.scrollLeft(),scrollTop:i.scrollTop(),width:i.outerWidth(),height:i.outerHeight()}}},t.fn.position=function(n){if(!n||!n.of)return d.apply(this,arguments);n=t.extend({},n);var u,p,f,g,m,_,v=t(n.of),b=t.position.getWithinInfo(n.within),y=t.position.getScrollInfo(b),w=(n.collision||"flip").split(" "),k={};return _=s(v),v[0].preventDefault&&(n.at="left top"),p=_.width,f=_.height,g=_.offset,m=t.extend({},g),t.each(["my","at"],function(){var t,e,i=(n[this]||"").split(" ");1===i.length&&(i=r.test(i[0])?i.concat(["center"]):h.test(i[0])?["center"].concat(i):["center","center"]),i[0]=r.test(i[0])?i[0]:"center",i[1]=h.test(i[1])?i[1]:"center",t=l.exec(i[0]),e=l.exec(i[1]),k[this]=[t?t[0]:0,e?e[0]:0],n[this]=[c.exec(i[0])[0],c.exec(i[1])[0]]}),1===w.length&&(w[1]=w[0]),"right"===n.at[0]?m.left+=p:"center"===n.at[0]&&(m.left+=p/2),"bottom"===n.at[1]?m.top+=f:"center"===n.at[1]&&(m.top+=f/2),u=e(k.at,p,f),m.left+=u[0],m.top+=u[1],this.each(function(){var s,r,h=t(this),l=h.outerWidth(),c=h.outerHeight(),d=i(this,"marginLeft"),_=i(this,"marginTop"),x=l+d+i(this,"marginRight")+y.width,C=c+_+i(this,"marginBottom")+y.height,D=t.extend({},m),I=e(k.my,h.outerWidth(),h.outerHeight());"right"===n.my[0]?D.left-=l:"center"===n.my[0]&&(D.left-=l/2),"bottom"===n.my[1]?D.top-=c:"center"===n.my[1]&&(D.top-=c/2),D.left+=I[0],D.top+=I[1],s={marginLeft:d,marginTop:_},t.each(["left","top"],function(e,i){t.ui.position[w[e]]&&t.ui.position[w[e]][i](D,{targetWidth:p,targetHeight:f,elemWidth:l,elemHeight:c,collisionPosition:s,collisionWidth:x,collisionHeight:C,offset:[u[0]+I[0],u[1]+I[1]],my:n.my,at:n.at,within:b,elem:h})}),n.using&&(r=function(t){var e=g.left-D.left,i=e+p-l,s=g.top-D.top,r=s+f-c,u={target:{element:v,left:g.left,top:g.top,width:p,height:f},element:{element:h,left:D.left,top:D.top,width:l,height:c},horizontal:0>i?"left":e>0?"right":"center",vertical:0>r?"top":s>0?"bottom":"middle"};l>p&&p>a(e+i)&&(u.horizontal="center"),c>f&&f>a(s+r)&&(u.vertical="middle"),u.important=o(a(e),a(i))>o(a(s),a(r))?"horizontal":"vertical",n.using.call(this,t,u)}),h.offset(t.extend(D,{using:r}))})},t.ui.position={fit:{left:function(t,e){var i,s=e.within,n=s.isWindow?s.scrollLeft:s.offset.left,a=s.width,r=t.left-e.collisionPosition.marginLeft,h=n-r,l=r+e.collisionWidth-a-n;e.collisionWidth>a?h>0&&0>=l?(i=t.left+h+e.collisionWidth-a-n,t.left+=h-i):t.left=l>0&&0>=h?n:h>l?n+a-e.collisionWidth:n:h>0?t.left+=h:l>0?t.left-=l:t.left=o(t.left-r,t.left)},top:function(t,e){var i,s=e.within,n=s.isWindow?s.scrollTop:s.offset.top,a=e.within.height,r=t.top-e.collisionPosition.marginTop,h=n-r,l=r+e.collisionHeight-a-n;e.collisionHeight>a?h>0&&0>=l?(i=t.top+h+e.collisionHeight-a-n,t.top+=h-i):t.top=l>0&&0>=h?n:h>l?n+a-e.collisionHeight:n:h>0?t.top+=h:l>0?t.top-=l:t.top=o(t.top-r,t.top)}},flip:{left:function(t,e){var i,s,n=e.within,o=n.offset.left+n.scrollLeft,r=n.width,h=n.isWindow?n.scrollLeft:n.offset.left,l=t.left-e.collisionPosition.marginLeft,c=l-h,u=l+e.collisionWidth-r-h,d="left"===e.my[0]?-e.elemWidth:"right"===e.my[0]?e.elemWidth:0,p="left"===e.at[0]?e.targetWidth:"right"===e.at[0]?-e.targetWidth:0,f=-2*e.offset[0];0>c?(i=t.left+d+p+f+e.collisionWidth-r-o,(0>i||a(c)>i)&&(t.left+=d+p+f)):u>0&&(s=t.left-e.collisionPosition.marginLeft+d+p+f-h,(s>0||u>a(s))&&(t.left+=d+p+f))},top:function(t,e){var i,s,n=e.within,o=n.offset.top+n.scrollTop,r=n.height,h=n.isWindow?n.scrollTop:n.offset.top,l=t.top-e.collisionPosition.marginTop,c=l-h,u=l+e.collisionHeight-r-h,d="top"===e.my[1],p=d?-e.elemHeight:"bottom"===e.my[1]?e.elemHeight:0,f="top"===e.at[1]?e.targetHeight:"bottom"===e.at[1]?-e.targetHeight:0,g=-2*e.offset[1];0>c?(s=t.top+p+f+g+e.collisionHeight-r-o,(0>s||a(c)>s)&&(t.top+=p+f+g)):u>0&&(i=t.top-e.collisionPosition.marginTop+p+f+g-h,(i>0||u>a(i))&&(t.top+=p+f+g))}},flipfit:{left:function(){t.ui.position.flip.left.apply(this,arguments),t.ui.position.fit.left.apply(this,arguments)},top:function(){t.ui.position.flip.top.apply(this,arguments),t.ui.position.fit.top.apply(this,arguments)}}}}(),t.ui.position,t.extend(t.expr[":"],{data:t.expr.createPseudo?t.expr.createPseudo(function(e){return function(i){return!!t.data(i,e)}}):function(e,i,s){return!!t.data(e,s[3])}}),t.fn.extend({disableSelection:function(){var t="onselectstart"in document.createElement("div")?"selectstart":"mousedown";return function(){return this.on(t+".ui-disableSelection",function(t){t.preventDefault()})}}(),enableSelection:function(){return this.off(".ui-disableSelection")}});var c="ui-effects-",u="ui-effects-style",d="ui-effects-animated",p=t;t.effects={effect:{}},function(t,e){function i(t,e,i){var s=u[e.type]||{};return null==t?i||!e.def?null:e.def:(t=s.floor?~~t:parseFloat(t),isNaN(t)?e.def:s.mod?(t+s.mod)%s.mod:0>t?0:t>s.max?s.max:t)}function s(i){var s=l(),n=s._rgba=[];return i=i.toLowerCase(),f(h,function(t,o){var a,r=o.re.exec(i),h=r&&o.parse(r),l=o.space||"rgba";return h?(a=s[l](h),s[c[l].cache]=a[c[l].cache],n=s._rgba=a._rgba,!1):e}),n.length?("0,0,0,0"===n.join()&&t.extend(n,o.transparent),s):o[i]}function n(t,e,i){return i=(i+1)%1,1>6*i?t+6*(e-t)*i:1>2*i?e:2>3*i?t+6*(e-t)*(2/3-i):t}var o,a="backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor",r=/^([\-+])=\s*(\d+\.?\d*)/,h=[{re:/rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,parse:function(t){return[t[1],t[2],t[3],t[4]]}},{re:/rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,parse:function(t){return[2.55*t[1],2.55*t[2],2.55*t[3],t[4]]}},{re:/#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/,parse:function(t){return[parseInt(t[1],16),parseInt(t[2],16),parseInt(t[3],16)]}},{re:/#([a-f0-9])([a-f0-9])([a-f0-9])/,parse:function(t){return[parseInt(t[1]+t[1],16),parseInt(t[2]+t[2],16),parseInt(t[3]+t[3],16)]}},{re:/hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,space:"hsla",parse:function(t){return[t[1],t[2]/100,t[3]/100,t[4]]}}],l=t.Color=function(e,i,s,n){return new t.Color.fn.parse(e,i,s,n)},c={rgba:{props:{red:{idx:0,type:"byte"},green:{idx:1,type:"byte"},blue:{idx:2,type:"byte"}}},hsla:{props:{hue:{idx:0,type:"degrees"},saturation:{idx:1,type:"percent"},lightness:{idx:2,type:"percent"}}}},u={"byte":{floor:!0,max:255},percent:{max:1},degrees:{mod:360,floor:!0}},d=l.support={},p=t("<p>")[0],f=t.each;p.style.cssText="background-color:rgba(1,1,1,.5)",d.rgba=p.style.backgroundColor.indexOf("rgba")>-1,f(c,function(t,e){e.cache="_"+t,e.props.alpha={idx:3,type:"percent",def:1}}),l.fn=t.extend(l.prototype,{parse:function(n,a,r,h){if(n===e)return this._rgba=[null,null,null,null],this;(n.jquery||n.nodeType)&&(n=t(n).css(a),a=e);var u=this,d=t.type(n),p=this._rgba=[];return a!==e&&(n=[n,a,r,h],d="array"),"string"===d?this.parse(s(n)||o._default):"array"===d?(f(c.rgba.props,function(t,e){p[e.idx]=i(n[e.idx],e)}),this):"object"===d?(n instanceof l?f(c,function(t,e){n[e.cache]&&(u[e.cache]=n[e.cache].slice())}):f(c,function(e,s){var o=s.cache;f(s.props,function(t,e){if(!u[o]&&s.to){if("alpha"===t||null==n[t])return;u[o]=s.to(u._rgba)}u[o][e.idx]=i(n[t],e,!0)}),u[o]&&0>t.inArray(null,u[o].slice(0,3))&&(u[o][3]=1,s.from&&(u._rgba=s.from(u[o])))}),this):e},is:function(t){var i=l(t),s=!0,n=this;return f(c,function(t,o){var a,r=i[o.cache];return r&&(a=n[o.cache]||o.to&&o.to(n._rgba)||[],f(o.props,function(t,i){return null!=r[i.idx]?s=r[i.idx]===a[i.idx]:e})),s}),s},_space:function(){var t=[],e=this;return f(c,function(i,s){e[s.cache]&&t.push(i)}),t.pop()},transition:function(t,e){var s=l(t),n=s._space(),o=c[n],a=0===this.alpha()?l("transparent"):this,r=a[o.cache]||o.to(a._rgba),h=r.slice();return s=s[o.cache],f(o.props,function(t,n){var o=n.idx,a=r[o],l=s[o],c=u[n.type]||{};null!==l&&(null===a?h[o]=l:(c.mod&&(l-a>c.mod/2?a+=c.mod:a-l>c.mod/2&&(a-=c.mod)),h[o]=i((l-a)*e+a,n)))}),this[n](h)},blend:function(e){if(1===this._rgba[3])return this;var i=this._rgba.slice(),s=i.pop(),n=l(e)._rgba;return l(t.map(i,function(t,e){return(1-s)*n[e]+s*t}))},toRgbaString:function(){var e="rgba(",i=t.map(this._rgba,function(t,e){return null==t?e>2?1:0:t});return 1===i[3]&&(i.pop(),e="rgb("),e+i.join()+")"},toHslaString:function(){var e="hsla(",i=t.map(this.hsla(),function(t,e){return null==t&&(t=e>2?1:0),e&&3>e&&(t=Math.round(100*t)+"%"),t});return 1===i[3]&&(i.pop(),e="hsl("),e+i.join()+")"},toHexString:function(e){var i=this._rgba.slice(),s=i.pop();return e&&i.push(~~(255*s)),"#"+t.map(i,function(t){return t=(t||0).toString(16),1===t.length?"0"+t:t}).join("")},toString:function(){return 0===this._rgba[3]?"transparent":this.toRgbaString()}}),l.fn.parse.prototype=l.fn,c.hsla.to=function(t){if(null==t[0]||null==t[1]||null==t[2])return[null,null,null,t[3]];var e,i,s=t[0]/255,n=t[1]/255,o=t[2]/255,a=t[3],r=Math.max(s,n,o),h=Math.min(s,n,o),l=r-h,c=r+h,u=.5*c;return e=h===r?0:s===r?60*(n-o)/l+360:n===r?60*(o-s)/l+120:60*(s-n)/l+240,i=0===l?0:.5>=u?l/c:l/(2-c),[Math.round(e)%360,i,u,null==a?1:a]},c.hsla.from=function(t){if(null==t[0]||null==t[1]||null==t[2])return[null,null,null,t[3]];var e=t[0]/360,i=t[1],s=t[2],o=t[3],a=.5>=s?s*(1+i):s+i-s*i,r=2*s-a;return[Math.round(255*n(r,a,e+1/3)),Math.round(255*n(r,a,e)),Math.round(255*n(r,a,e-1/3)),o]},f(c,function(s,n){var o=n.props,a=n.cache,h=n.to,c=n.from;l.fn[s]=function(s){if(h&&!this[a]&&(this[a]=h(this._rgba)),s===e)return this[a].slice();var n,r=t.type(s),u="array"===r||"object"===r?s:arguments,d=this[a].slice();return f(o,function(t,e){var s=u["object"===r?t:e.idx];null==s&&(s=d[e.idx]),d[e.idx]=i(s,e)}),c?(n=l(c(d)),n[a]=d,n):l(d)},f(o,function(e,i){l.fn[e]||(l.fn[e]=function(n){var o,a=t.type(n),h="alpha"===e?this._hsla?"hsla":"rgba":s,l=this[h](),c=l[i.idx];return"undefined"===a?c:("function"===a&&(n=n.call(this,c),a=t.type(n)),null==n&&i.empty?this:("string"===a&&(o=r.exec(n),o&&(n=c+parseFloat(o[2])*("+"===o[1]?1:-1))),l[i.idx]=n,this[h](l)))})})}),l.hook=function(e){var i=e.split(" ");f(i,function(e,i){t.cssHooks[i]={set:function(e,n){var o,a,r="";if("transparent"!==n&&("string"!==t.type(n)||(o=s(n)))){if(n=l(o||n),!d.rgba&&1!==n._rgba[3]){for(a="backgroundColor"===i?e.parentNode:e;(""===r||"transparent"===r)&&a&&a.style;)try{r=t.css(a,"backgroundColor"),a=a.parentNode}catch(h){}n=n.blend(r&&"transparent"!==r?r:"_default")}n=n.toRgbaString()}try{e.style[i]=n}catch(h){}}},t.fx.step[i]=function(e){e.colorInit||(e.start=l(e.elem,i),e.end=l(e.end),e.colorInit=!0),t.cssHooks[i].set(e.elem,e.start.transition(e.end,e.pos))}})},l.hook(a),t.cssHooks.borderColor={expand:function(t){var e={};return f(["Top","Right","Bottom","Left"],function(i,s){e["border"+s+"Color"]=t}),e}},o=t.Color.names={aqua:"#00ffff",black:"#000000",blue:"#0000ff",fuchsia:"#ff00ff",gray:"#808080",green:"#008000",lime:"#00ff00",maroon:"#800000",navy:"#000080",olive:"#808000",purple:"#800080",red:"#ff0000",silver:"#c0c0c0",teal:"#008080",white:"#ffffff",yellow:"#ffff00",transparent:[null,null,null,0],_default:"#ffffff"}}(p),function(){function e(e){var i,s,n=e.ownerDocument.defaultView?e.ownerDocument.defaultView.getComputedStyle(e,null):e.currentStyle,o={};if(n&&n.length&&n[0]&&n[n[0]])for(s=n.length;s--;)i=n[s],"string"==typeof n[i]&&(o[t.camelCase(i)]=n[i]);else for(i in n)"string"==typeof n[i]&&(o[i]=n[i]);return o}function i(e,i){var s,o,a={};for(s in i)o=i[s],e[s]!==o&&(n[s]||(t.fx.step[s]||!isNaN(parseFloat(o)))&&(a[s]=o));return a}var s=["add","remove","toggle"],n={border:1,borderBottom:1,borderColor:1,borderLeft:1,borderRight:1,borderTop:1,borderWidth:1,margin:1,padding:1};t.each(["borderLeftStyle","borderRightStyle","borderBottomStyle","borderTopStyle"],function(e,i){t.fx.step[i]=function(t){("none"!==t.end&&!t.setAttr||1===t.pos&&!t.setAttr)&&(p.style(t.elem,i,t.end),t.setAttr=!0)}}),t.fn.addBack||(t.fn.addBack=function(t){return this.add(null==t?this.prevObject:this.prevObject.filter(t))}),t.effects.animateClass=function(n,o,a,r){var h=t.speed(o,a,r);return this.queue(function(){var o,a=t(this),r=a.attr("class")||"",l=h.children?a.find("*").addBack():a;l=l.map(function(){var i=t(this);return{el:i,start:e(this)}}),o=function(){t.each(s,function(t,e){n[e]&&a[e+"Class"](n[e])})},o(),l=l.map(function(){return this.end=e(this.el[0]),this.diff=i(this.start,this.end),this}),a.attr("class",r),l=l.map(function(){var e=this,i=t.Deferred(),s=t.extend({},h,{queue:!1,complete:function(){i.resolve(e)}});return this.el.animate(this.diff,s),i.promise()}),t.when.apply(t,l.get()).done(function(){o(),t.each(arguments,function(){var e=this.el;t.each(this.diff,function(t){e.css(t,"")})}),h.complete.call(a[0])})})},t.fn.extend({addClass:function(e){return function(i,s,n,o){return s?t.effects.animateClass.call(this,{add:i},s,n,o):e.apply(this,arguments)}}(t.fn.addClass),removeClass:function(e){return function(i,s,n,o){return arguments.length>1?t.effects.animateClass.call(this,{remove:i},s,n,o):e.apply(this,arguments)}}(t.fn.removeClass),toggleClass:function(e){return function(i,s,n,o,a){return"boolean"==typeof s||void 0===s?n?t.effects.animateClass.call(this,s?{add:i}:{remove:i},n,o,a):e.apply(this,arguments):t.effects.animateClass.call(this,{toggle:i},s,n,o)}}(t.fn.toggleClass),switchClass:function(e,i,s,n,o){return t.effects.animateClass.call(this,{add:i,remove:e},s,n,o)}})}(),function(){function e(e,i,s,n){return t.isPlainObject(e)&&(i=e,e=e.effect),e={effect:e},null==i&&(i={}),t.isFunction(i)&&(n=i,s=null,i={}),("number"==typeof i||t.fx.speeds[i])&&(n=s,s=i,i={}),t.isFunction(s)&&(n=s,s=null),i&&t.extend(e,i),s=s||i.duration,e.duration=t.fx.off?0:"number"==typeof s?s:s in t.fx.speeds?t.fx.speeds[s]:t.fx.speeds._default,e.complete=n||i.complete,e}function i(e){return!e||"number"==typeof e||t.fx.speeds[e]?!0:"string"!=typeof e||t.effects.effect[e]?t.isFunction(e)?!0:"object"!=typeof e||e.effect?!1:!0:!0}function s(t,e){var i=e.outerWidth(),s=e.outerHeight(),n=/^rect\((-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto)\)$/,o=n.exec(t)||["",0,i,s,0];return{top:parseFloat(o[1])||0,right:"auto"===o[2]?i:parseFloat(o[2]),bottom:"auto"===o[3]?s:parseFloat(o[3]),left:parseFloat(o[4])||0}}t.expr&&t.expr.filters&&t.expr.filters.animated&&(t.expr.filters.animated=function(e){return function(i){return!!t(i).data(d)||e(i)}}(t.expr.filters.animated)),t.uiBackCompat!==!1&&t.extend(t.effects,{save:function(t,e){for(var i=0,s=e.length;s>i;i++)null!==e[i]&&t.data(c+e[i],t[0].style[e[i]])},restore:function(t,e){for(var i,s=0,n=e.length;n>s;s++)null!==e[s]&&(i=t.data(c+e[s]),t.css(e[s],i))},setMode:function(t,e){return"toggle"===e&&(e=t.is(":hidden")?"show":"hide"),e},createWrapper:function(e){if(e.parent().is(".ui-effects-wrapper"))return e.parent();var i={width:e.outerWidth(!0),height:e.outerHeight(!0),"float":e.css("float")},s=t("<div></div>").addClass("ui-effects-wrapper").css({fontSize:"100%",background:"transparent",border:"none",margin:0,padding:0}),n={width:e.width(),height:e.height()},o=document.activeElement;try{o.id}catch(a){o=document.body}return e.wrap(s),(e[0]===o||t.contains(e[0],o))&&t(o).trigger("focus"),s=e.parent(),"static"===e.css("position")?(s.css({position:"relative"}),e.css({position:"relative"})):(t.extend(i,{position:e.css("position"),zIndex:e.css("z-index")}),t.each(["top","left","bottom","right"],function(t,s){i[s]=e.css(s),isNaN(parseInt(i[s],10))&&(i[s]="auto")}),e.css({position:"relative",top:0,left:0,right:"auto",bottom:"auto"})),e.css(n),s.css(i).show()},removeWrapper:function(e){var i=document.activeElement;return e.parent().is(".ui-effects-wrapper")&&(e.parent().replaceWith(e),(e[0]===i||t.contains(e[0],i))&&t(i).trigger("focus")),e}}),t.extend(t.effects,{version:"1.12.1",define:function(e,i,s){return s||(s=i,i="effect"),t.effects.effect[e]=s,t.effects.effect[e].mode=i,s},scaledDimensions:function(t,e,i){if(0===e)return{height:0,width:0,outerHeight:0,outerWidth:0};var s="horizontal"!==i?(e||100)/100:1,n="vertical"!==i?(e||100)/100:1;return{height:t.height()*n,width:t.width()*s,outerHeight:t.outerHeight()*n,outerWidth:t.outerWidth()*s}},clipToBox:function(t){return{width:t.clip.right-t.clip.left,height:t.clip.bottom-t.clip.top,left:t.clip.left,top:t.clip.top}},unshift:function(t,e,i){var s=t.queue();e>1&&s.splice.apply(s,[1,0].concat(s.splice(e,i))),t.dequeue()},saveStyle:function(t){t.data(u,t[0].style.cssText)},restoreStyle:function(t){t[0].style.cssText=t.data(u)||"",t.removeData(u)},mode:function(t,e){var i=t.is(":hidden");return"toggle"===e&&(e=i?"show":"hide"),(i?"hide"===e:"show"===e)&&(e="none"),e},getBaseline:function(t,e){var i,s;switch(t[0]){case"top":i=0;break;case"middle":i=.5;break;case"bottom":i=1;break;default:i=t[0]/e.height}switch(t[1]){case"left":s=0;break;case"center":s=.5;break;case"right":s=1;break;default:s=t[1]/e.width}return{x:s,y:i}},createPlaceholder:function(e){var i,s=e.css("position"),n=e.position();return e.css({marginTop:e.css("marginTop"),marginBottom:e.css("marginBottom"),marginLeft:e.css("marginLeft"),marginRight:e.css("marginRight")}).outerWidth(e.outerWidth()).outerHeight(e.outerHeight()),/^(static|relative)/.test(s)&&(s="absolute",i=t("<"+e[0].nodeName+">").insertAfter(e).css({display:/^(inline|ruby)/.test(e.css("display"))?"inline-block":"block",visibility:"hidden",marginTop:e.css("marginTop"),marginBottom:e.css("marginBottom"),marginLeft:e.css("marginLeft"),marginRight:e.css("marginRight"),"float":e.css("float")}).outerWidth(e.outerWidth()).outerHeight(e.outerHeight()).addClass("ui-effects-placeholder"),e.data(c+"placeholder",i)),e.css({position:s,left:n.left,top:n.top}),i},removePlaceholder:function(t){var e=c+"placeholder",i=t.data(e);i&&(i.remove(),t.removeData(e))},cleanUp:function(e){t.effects.restoreStyle(e),t.effects.removePlaceholder(e)},setTransition:function(e,i,s,n){return n=n||{},t.each(i,function(t,i){var o=e.cssUnit(i);o[0]>0&&(n[i]=o[0]*s+o[1])}),n}}),t.fn.extend({effect:function(){function i(e){function i(){r.removeData(d),t.effects.cleanUp(r),"hide"===s.mode&&r.hide(),a()}function a(){t.isFunction(h)&&h.call(r[0]),t.isFunction(e)&&e()}var r=t(this);s.mode=c.shift(),t.uiBackCompat===!1||o?"none"===s.mode?(r[l](),a()):n.call(r[0],s,i):(r.is(":hidden")?"hide"===l:"show"===l)?(r[l](),a()):n.call(r[0],s,a)}var s=e.apply(this,arguments),n=t.effects.effect[s.effect],o=n.mode,a=s.queue,r=a||"fx",h=s.complete,l=s.mode,c=[],u=function(e){var i=t(this),s=t.effects.mode(i,l)||o;i.data(d,!0),c.push(s),o&&("show"===s||s===o&&"hide"===s)&&i.show(),o&&"none"===s||t.effects.saveStyle(i),t.isFunction(e)&&e()};return t.fx.off||!n?l?this[l](s.duration,h):this.each(function(){h&&h.call(this)}):a===!1?this.each(u).each(i):this.queue(r,u).queue(r,i)},show:function(t){return function(s){if(i(s))return t.apply(this,arguments);var n=e.apply(this,arguments);return n.mode="show",this.effect.call(this,n)
    }}(t.fn.show),hide:function(t){return function(s){if(i(s))return t.apply(this,arguments);var n=e.apply(this,arguments);return n.mode="hide",this.effect.call(this,n)}}(t.fn.hide),toggle:function(t){return function(s){if(i(s)||"boolean"==typeof s)return t.apply(this,arguments);var n=e.apply(this,arguments);return n.mode="toggle",this.effect.call(this,n)}}(t.fn.toggle),cssUnit:function(e){var i=this.css(e),s=[];return t.each(["em","px","%","pt"],function(t,e){i.indexOf(e)>0&&(s=[parseFloat(i),e])}),s},cssClip:function(t){return t?this.css("clip","rect("+t.top+"px "+t.right+"px "+t.bottom+"px "+t.left+"px)"):s(this.css("clip"),this)},transfer:function(e,i){var s=t(this),n=t(e.to),o="fixed"===n.css("position"),a=t("body"),r=o?a.scrollTop():0,h=o?a.scrollLeft():0,l=n.offset(),c={top:l.top-r,left:l.left-h,height:n.innerHeight(),width:n.innerWidth()},u=s.offset(),d=t("<div class='ui-effects-transfer'></div>").appendTo("body").addClass(e.className).css({top:u.top-r,left:u.left-h,height:s.innerHeight(),width:s.innerWidth(),position:o?"fixed":"absolute"}).animate(c,e.duration,e.easing,function(){d.remove(),t.isFunction(i)&&i()})}}),t.fx.step.clip=function(e){e.clipInit||(e.start=t(e.elem).cssClip(),"string"==typeof e.end&&(e.end=s(e.end,e.elem)),e.clipInit=!0),t(e.elem).cssClip({top:e.pos*(e.end.top-e.start.top)+e.start.top,right:e.pos*(e.end.right-e.start.right)+e.start.right,bottom:e.pos*(e.end.bottom-e.start.bottom)+e.start.bottom,left:e.pos*(e.end.left-e.start.left)+e.start.left})}}(),function(){var e={};t.each(["Quad","Cubic","Quart","Quint","Expo"],function(t,i){e[i]=function(e){return Math.pow(e,t+2)}}),t.extend(e,{Sine:function(t){return 1-Math.cos(t*Math.PI/2)},Circ:function(t){return 1-Math.sqrt(1-t*t)},Elastic:function(t){return 0===t||1===t?t:-Math.pow(2,8*(t-1))*Math.sin((80*(t-1)-7.5)*Math.PI/15)},Back:function(t){return t*t*(3*t-2)},Bounce:function(t){for(var e,i=4;((e=Math.pow(2,--i))-1)/11>t;);return 1/Math.pow(4,3-i)-7.5625*Math.pow((3*e-2)/22-t,2)}}),t.each(e,function(e,i){t.easing["easeIn"+e]=i,t.easing["easeOut"+e]=function(t){return 1-i(1-t)},t.easing["easeInOut"+e]=function(t){return.5>t?i(2*t)/2:1-i(-2*t+2)/2}})}();var f=t.effects;t.effects.define("blind","hide",function(e,i){var s={up:["bottom","top"],vertical:["bottom","top"],down:["top","bottom"],left:["right","left"],horizontal:["right","left"],right:["left","right"]},n=t(this),o=e.direction||"up",a=n.cssClip(),r={clip:t.extend({},a)},h=t.effects.createPlaceholder(n);r.clip[s[o][0]]=r.clip[s[o][1]],"show"===e.mode&&(n.cssClip(r.clip),h&&h.css(t.effects.clipToBox(r)),r.clip=a),h&&h.animate(t.effects.clipToBox(r),e.duration,e.easing),n.animate(r,{queue:!1,duration:e.duration,easing:e.easing,complete:i})}),t.effects.define("bounce",function(e,i){var s,n,o,a=t(this),r=e.mode,h="hide"===r,l="show"===r,c=e.direction||"up",u=e.distance,d=e.times||5,p=2*d+(l||h?1:0),f=e.duration/p,g=e.easing,m="up"===c||"down"===c?"top":"left",_="up"===c||"left"===c,v=0,b=a.queue().length;for(t.effects.createPlaceholder(a),o=a.css(m),u||(u=a["top"===m?"outerHeight":"outerWidth"]()/3),l&&(n={opacity:1},n[m]=o,a.css("opacity",0).css(m,_?2*-u:2*u).animate(n,f,g)),h&&(u/=Math.pow(2,d-1)),n={},n[m]=o;d>v;v++)s={},s[m]=(_?"-=":"+=")+u,a.animate(s,f,g).animate(n,f,g),u=h?2*u:u/2;h&&(s={opacity:0},s[m]=(_?"-=":"+=")+u,a.animate(s,f,g)),a.queue(i),t.effects.unshift(a,b,p+1)}),t.effects.define("clip","hide",function(e,i){var s,n={},o=t(this),a=e.direction||"vertical",r="both"===a,h=r||"horizontal"===a,l=r||"vertical"===a;s=o.cssClip(),n.clip={top:l?(s.bottom-s.top)/2:s.top,right:h?(s.right-s.left)/2:s.right,bottom:l?(s.bottom-s.top)/2:s.bottom,left:h?(s.right-s.left)/2:s.left},t.effects.createPlaceholder(o),"show"===e.mode&&(o.cssClip(n.clip),n.clip=s),o.animate(n,{queue:!1,duration:e.duration,easing:e.easing,complete:i})}),t.effects.define("drop","hide",function(e,i){var s,n=t(this),o=e.mode,a="show"===o,r=e.direction||"left",h="up"===r||"down"===r?"top":"left",l="up"===r||"left"===r?"-=":"+=",c="+="===l?"-=":"+=",u={opacity:0};t.effects.createPlaceholder(n),s=e.distance||n["top"===h?"outerHeight":"outerWidth"](!0)/2,u[h]=l+s,a&&(n.css(u),u[h]=c+s,u.opacity=1),n.animate(u,{queue:!1,duration:e.duration,easing:e.easing,complete:i})}),t.effects.define("explode","hide",function(e,i){function s(){b.push(this),b.length===u*d&&n()}function n(){p.css({visibility:"visible"}),t(b).remove(),i()}var o,a,r,h,l,c,u=e.pieces?Math.round(Math.sqrt(e.pieces)):3,d=u,p=t(this),f=e.mode,g="show"===f,m=p.show().css("visibility","hidden").offset(),_=Math.ceil(p.outerWidth()/d),v=Math.ceil(p.outerHeight()/u),b=[];for(o=0;u>o;o++)for(h=m.top+o*v,c=o-(u-1)/2,a=0;d>a;a++)r=m.left+a*_,l=a-(d-1)/2,p.clone().appendTo("body").wrap("<div></div>").css({position:"absolute",visibility:"visible",left:-a*_,top:-o*v}).parent().addClass("ui-effects-explode").css({position:"absolute",overflow:"hidden",width:_,height:v,left:r+(g?l*_:0),top:h+(g?c*v:0),opacity:g?0:1}).animate({left:r+(g?0:l*_),top:h+(g?0:c*v),opacity:g?1:0},e.duration||500,e.easing,s)}),t.effects.define("fade","toggle",function(e,i){var s="show"===e.mode;t(this).css("opacity",s?0:1).animate({opacity:s?1:0},{queue:!1,duration:e.duration,easing:e.easing,complete:i})}),t.effects.define("fold","hide",function(e,i){var s=t(this),n=e.mode,o="show"===n,a="hide"===n,r=e.size||15,h=/([0-9]+)%/.exec(r),l=!!e.horizFirst,c=l?["right","bottom"]:["bottom","right"],u=e.duration/2,d=t.effects.createPlaceholder(s),p=s.cssClip(),f={clip:t.extend({},p)},g={clip:t.extend({},p)},m=[p[c[0]],p[c[1]]],_=s.queue().length;h&&(r=parseInt(h[1],10)/100*m[a?0:1]),f.clip[c[0]]=r,g.clip[c[0]]=r,g.clip[c[1]]=0,o&&(s.cssClip(g.clip),d&&d.css(t.effects.clipToBox(g)),g.clip=p),s.queue(function(i){d&&d.animate(t.effects.clipToBox(f),u,e.easing).animate(t.effects.clipToBox(g),u,e.easing),i()}).animate(f,u,e.easing).animate(g,u,e.easing).queue(i),t.effects.unshift(s,_,4)}),t.effects.define("highlight","show",function(e,i){var s=t(this),n={backgroundColor:s.css("backgroundColor")};"hide"===e.mode&&(n.opacity=0),t.effects.saveStyle(s),s.css({backgroundImage:"none",backgroundColor:e.color||"#ffff99"}).animate(n,{queue:!1,duration:e.duration,easing:e.easing,complete:i})}),t.effects.define("size",function(e,i){var s,n,o,a=t(this),r=["fontSize"],h=["borderTopWidth","borderBottomWidth","paddingTop","paddingBottom"],l=["borderLeftWidth","borderRightWidth","paddingLeft","paddingRight"],c=e.mode,u="effect"!==c,d=e.scale||"both",p=e.origin||["middle","center"],f=a.css("position"),g=a.position(),m=t.effects.scaledDimensions(a),_=e.from||m,v=e.to||t.effects.scaledDimensions(a,0);t.effects.createPlaceholder(a),"show"===c&&(o=_,_=v,v=o),n={from:{y:_.height/m.height,x:_.width/m.width},to:{y:v.height/m.height,x:v.width/m.width}},("box"===d||"both"===d)&&(n.from.y!==n.to.y&&(_=t.effects.setTransition(a,h,n.from.y,_),v=t.effects.setTransition(a,h,n.to.y,v)),n.from.x!==n.to.x&&(_=t.effects.setTransition(a,l,n.from.x,_),v=t.effects.setTransition(a,l,n.to.x,v))),("content"===d||"both"===d)&&n.from.y!==n.to.y&&(_=t.effects.setTransition(a,r,n.from.y,_),v=t.effects.setTransition(a,r,n.to.y,v)),p&&(s=t.effects.getBaseline(p,m),_.top=(m.outerHeight-_.outerHeight)*s.y+g.top,_.left=(m.outerWidth-_.outerWidth)*s.x+g.left,v.top=(m.outerHeight-v.outerHeight)*s.y+g.top,v.left=(m.outerWidth-v.outerWidth)*s.x+g.left),a.css(_),("content"===d||"both"===d)&&(h=h.concat(["marginTop","marginBottom"]).concat(r),l=l.concat(["marginLeft","marginRight"]),a.find("*[width]").each(function(){var i=t(this),s=t.effects.scaledDimensions(i),o={height:s.height*n.from.y,width:s.width*n.from.x,outerHeight:s.outerHeight*n.from.y,outerWidth:s.outerWidth*n.from.x},a={height:s.height*n.to.y,width:s.width*n.to.x,outerHeight:s.height*n.to.y,outerWidth:s.width*n.to.x};n.from.y!==n.to.y&&(o=t.effects.setTransition(i,h,n.from.y,o),a=t.effects.setTransition(i,h,n.to.y,a)),n.from.x!==n.to.x&&(o=t.effects.setTransition(i,l,n.from.x,o),a=t.effects.setTransition(i,l,n.to.x,a)),u&&t.effects.saveStyle(i),i.css(o),i.animate(a,e.duration,e.easing,function(){u&&t.effects.restoreStyle(i)})})),a.animate(v,{queue:!1,duration:e.duration,easing:e.easing,complete:function(){var e=a.offset();0===v.opacity&&a.css("opacity",_.opacity),u||(a.css("position","static"===f?"relative":f).offset(e),t.effects.saveStyle(a)),i()}})}),t.effects.define("scale",function(e,i){var s=t(this),n=e.mode,o=parseInt(e.percent,10)||(0===parseInt(e.percent,10)?0:"effect"!==n?0:100),a=t.extend(!0,{from:t.effects.scaledDimensions(s),to:t.effects.scaledDimensions(s,o,e.direction||"both"),origin:e.origin||["middle","center"]},e);e.fade&&(a.from.opacity=1,a.to.opacity=0),t.effects.effect.size.call(this,a,i)}),t.effects.define("puff","hide",function(e,i){var s=t.extend(!0,{},e,{fade:!0,percent:parseInt(e.percent,10)||150});t.effects.effect.scale.call(this,s,i)}),t.effects.define("pulsate","show",function(e,i){var s=t(this),n=e.mode,o="show"===n,a="hide"===n,r=o||a,h=2*(e.times||5)+(r?1:0),l=e.duration/h,c=0,u=1,d=s.queue().length;for((o||!s.is(":visible"))&&(s.css("opacity",0).show(),c=1);h>u;u++)s.animate({opacity:c},l,e.easing),c=1-c;s.animate({opacity:c},l,e.easing),s.queue(i),t.effects.unshift(s,d,h+1)}),t.effects.define("shake",function(e,i){var s=1,n=t(this),o=e.direction||"left",a=e.distance||20,r=e.times||3,h=2*r+1,l=Math.round(e.duration/h),c="up"===o||"down"===o?"top":"left",u="up"===o||"left"===o,d={},p={},f={},g=n.queue().length;for(t.effects.createPlaceholder(n),d[c]=(u?"-=":"+=")+a,p[c]=(u?"+=":"-=")+2*a,f[c]=(u?"-=":"+=")+2*a,n.animate(d,l,e.easing);r>s;s++)n.animate(p,l,e.easing).animate(f,l,e.easing);n.animate(p,l,e.easing).animate(d,l/2,e.easing).queue(i),t.effects.unshift(n,g,h+1)}),t.effects.define("slide","show",function(e,i){var s,n,o=t(this),a={up:["bottom","top"],down:["top","bottom"],left:["right","left"],right:["left","right"]},r=e.mode,h=e.direction||"left",l="up"===h||"down"===h?"top":"left",c="up"===h||"left"===h,u=e.distance||o["top"===l?"outerHeight":"outerWidth"](!0),d={};t.effects.createPlaceholder(o),s=o.cssClip(),n=o.position()[l],d[l]=(c?-1:1)*u+n,d.clip=o.cssClip(),d.clip[a[h][1]]=d.clip[a[h][0]],"show"===r&&(o.cssClip(d.clip),o.css(l,d[l]),d.clip=s,d[l]=n),o.animate(d,{queue:!1,duration:e.duration,easing:e.easing,complete:i})});var f;t.uiBackCompat!==!1&&(f=t.effects.define("transfer",function(e,i){t(this).transfer(e,i)})),t.ui.focusable=function(i,s){var n,o,a,r,h,l=i.nodeName.toLowerCase();return"area"===l?(n=i.parentNode,o=n.name,i.href&&o&&"map"===n.nodeName.toLowerCase()?(a=t("img[usemap='#"+o+"']"),a.length>0&&a.is(":visible")):!1):(/^(input|select|textarea|button|object)$/.test(l)?(r=!i.disabled,r&&(h=t(i).closest("fieldset")[0],h&&(r=!h.disabled))):r="a"===l?i.href||s:s,r&&t(i).is(":visible")&&e(t(i)))},t.extend(t.expr[":"],{focusable:function(e){return t.ui.focusable(e,null!=t.attr(e,"tabindex"))}}),t.ui.focusable,t.fn.form=function(){return"string"==typeof this[0].form?this.closest("form"):t(this[0].form)},t.ui.formResetMixin={_formResetHandler:function(){var e=t(this);setTimeout(function(){var i=e.data("ui-form-reset-instances");t.each(i,function(){this.refresh()})})},_bindFormResetHandler:function(){if(this.form=this.element.form(),this.form.length){var t=this.form.data("ui-form-reset-instances")||[];t.length||this.form.on("reset.ui-form-reset",this._formResetHandler),t.push(this),this.form.data("ui-form-reset-instances",t)}},_unbindFormResetHandler:function(){if(this.form.length){var e=this.form.data("ui-form-reset-instances");e.splice(t.inArray(this,e),1),e.length?this.form.data("ui-form-reset-instances",e):this.form.removeData("ui-form-reset-instances").off("reset.ui-form-reset")}}},"1.7"===t.fn.jquery.substring(0,3)&&(t.each(["Width","Height"],function(e,i){function s(e,i,s,o){return t.each(n,function(){i-=parseFloat(t.css(e,"padding"+this))||0,s&&(i-=parseFloat(t.css(e,"border"+this+"Width"))||0),o&&(i-=parseFloat(t.css(e,"margin"+this))||0)}),i}var n="Width"===i?["Left","Right"]:["Top","Bottom"],o=i.toLowerCase(),a={innerWidth:t.fn.innerWidth,innerHeight:t.fn.innerHeight,outerWidth:t.fn.outerWidth,outerHeight:t.fn.outerHeight};t.fn["inner"+i]=function(e){return void 0===e?a["inner"+i].call(this):this.each(function(){t(this).css(o,s(this,e)+"px")})},t.fn["outer"+i]=function(e,n){return"number"!=typeof e?a["outer"+i].call(this,e):this.each(function(){t(this).css(o,s(this,e,!0,n)+"px")})}}),t.fn.addBack=function(t){return this.add(null==t?this.prevObject:this.prevObject.filter(t))}),t.ui.keyCode={BACKSPACE:8,COMMA:188,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,LEFT:37,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SPACE:32,TAB:9,UP:38},t.ui.escapeSelector=function(){var t=/([!"#$%&'()*+,.\/:;<=>?@[\]^`{|}~])/g;return function(e){return e.replace(t,"\\$1")}}(),t.fn.labels=function(){var e,i,s,n,o;return this[0].labels&&this[0].labels.length?this.pushStack(this[0].labels):(n=this.eq(0).parents("label"),s=this.attr("id"),s&&(e=this.eq(0).parents().last(),o=e.add(e.length?e.siblings():this.siblings()),i="label[for='"+t.ui.escapeSelector(s)+"']",n=n.add(o.find(i).addBack(i))),this.pushStack(n))},t.fn.scrollParent=function(e){var i=this.css("position"),s="absolute"===i,n=e?/(auto|scroll|hidden)/:/(auto|scroll)/,o=this.parents().filter(function(){var e=t(this);return s&&"static"===e.css("position")?!1:n.test(e.css("overflow")+e.css("overflow-y")+e.css("overflow-x"))}).eq(0);return"fixed"!==i&&o.length?o:t(this[0].ownerDocument||document)},t.extend(t.expr[":"],{tabbable:function(e){var i=t.attr(e,"tabindex"),s=null!=i;return(!s||i>=0)&&t.ui.focusable(e,s)}}),t.fn.extend({uniqueId:function(){var t=0;return function(){return this.each(function(){this.id||(this.id="ui-id-"+ ++t)})}}(),removeUniqueId:function(){return this.each(function(){/^ui-id-\d+$/.test(this.id)&&t(this).removeAttr("id")})}}),t.widget("ui.accordion",{version:"1.12.1",options:{active:0,animate:{},classes:{"ui-accordion-header":"ui-corner-top","ui-accordion-header-collapsed":"ui-corner-all","ui-accordion-content":"ui-corner-bottom"},collapsible:!1,event:"click",header:"> li > :first-child, > :not(li):even",heightStyle:"auto",icons:{activeHeader:"ui-icon-triangle-1-s",header:"ui-icon-triangle-1-e"},activate:null,beforeActivate:null},hideProps:{borderTopWidth:"hide",borderBottomWidth:"hide",paddingTop:"hide",paddingBottom:"hide",height:"hide"},showProps:{borderTopWidth:"show",borderBottomWidth:"show",paddingTop:"show",paddingBottom:"show",height:"show"},_create:function(){var e=this.options;this.prevShow=this.prevHide=t(),this._addClass("ui-accordion","ui-widget ui-helper-reset"),this.element.attr("role","tablist"),e.collapsible||e.active!==!1&&null!=e.active||(e.active=0),this._processPanels(),0>e.active&&(e.active+=this.headers.length),this._refresh()},_getCreateEventData:function(){return{header:this.active,panel:this.active.length?this.active.next():t()}},_createIcons:function(){var e,i,s=this.options.icons;s&&(e=t("<span>"),this._addClass(e,"ui-accordion-header-icon","ui-icon "+s.header),e.prependTo(this.headers),i=this.active.children(".ui-accordion-header-icon"),this._removeClass(i,s.header)._addClass(i,null,s.activeHeader)._addClass(this.headers,"ui-accordion-icons"))},_destroyIcons:function(){this._removeClass(this.headers,"ui-accordion-icons"),this.headers.children(".ui-accordion-header-icon").remove()},_destroy:function(){var t;this.element.removeAttr("role"),this.headers.removeAttr("role aria-expanded aria-selected aria-controls tabIndex").removeUniqueId(),this._destroyIcons(),t=this.headers.next().css("display","").removeAttr("role aria-hidden aria-labelledby").removeUniqueId(),"content"!==this.options.heightStyle&&t.css("height","")},_setOption:function(t,e){return"active"===t?(this._activate(e),void 0):("event"===t&&(this.options.event&&this._off(this.headers,this.options.event),this._setupEvents(e)),this._super(t,e),"collapsible"!==t||e||this.options.active!==!1||this._activate(0),"icons"===t&&(this._destroyIcons(),e&&this._createIcons()),void 0)},_setOptionDisabled:function(t){this._super(t),this.element.attr("aria-disabled",t),this._toggleClass(null,"ui-state-disabled",!!t),this._toggleClass(this.headers.add(this.headers.next()),null,"ui-state-disabled",!!t)},_keydown:function(e){if(!e.altKey&&!e.ctrlKey){var i=t.ui.keyCode,s=this.headers.length,n=this.headers.index(e.target),o=!1;switch(e.keyCode){case i.RIGHT:case i.DOWN:o=this.headers[(n+1)%s];break;case i.LEFT:case i.UP:o=this.headers[(n-1+s)%s];break;case i.SPACE:case i.ENTER:this._eventHandler(e);break;case i.HOME:o=this.headers[0];break;case i.END:o=this.headers[s-1]}o&&(t(e.target).attr("tabIndex",-1),t(o).attr("tabIndex",0),t(o).trigger("focus"),e.preventDefault())}},_panelKeyDown:function(e){e.keyCode===t.ui.keyCode.UP&&e.ctrlKey&&t(e.currentTarget).prev().trigger("focus")},refresh:function(){var e=this.options;this._processPanels(),e.active===!1&&e.collapsible===!0||!this.headers.length?(e.active=!1,this.active=t()):e.active===!1?this._activate(0):this.active.length&&!t.contains(this.element[0],this.active[0])?this.headers.length===this.headers.find(".ui-state-disabled").length?(e.active=!1,this.active=t()):this._activate(Math.max(0,e.active-1)):e.active=this.headers.index(this.active),this._destroyIcons(),this._refresh()},_processPanels:function(){var t=this.headers,e=this.panels;this.headers=this.element.find(this.options.header),this._addClass(this.headers,"ui-accordion-header ui-accordion-header-collapsed","ui-state-default"),this.panels=this.headers.next().filter(":not(.ui-accordion-content-active)").hide(),this._addClass(this.panels,"ui-accordion-content","ui-helper-reset ui-widget-content"),e&&(this._off(t.not(this.headers)),this._off(e.not(this.panels)))},_refresh:function(){var e,i=this.options,s=i.heightStyle,n=this.element.parent();this.active=this._findActive(i.active),this._addClass(this.active,"ui-accordion-header-active","ui-state-active")._removeClass(this.active,"ui-accordion-header-collapsed"),this._addClass(this.active.next(),"ui-accordion-content-active"),this.active.next().show(),this.headers.attr("role","tab").each(function(){var e=t(this),i=e.uniqueId().attr("id"),s=e.next(),n=s.uniqueId().attr("id");e.attr("aria-controls",n),s.attr("aria-labelledby",i)}).next().attr("role","tabpanel"),this.headers.not(this.active).attr({"aria-selected":"false","aria-expanded":"false",tabIndex:-1}).next().attr({"aria-hidden":"true"}).hide(),this.active.length?this.active.attr({"aria-selected":"true","aria-expanded":"true",tabIndex:0}).next().attr({"aria-hidden":"false"}):this.headers.eq(0).attr("tabIndex",0),this._createIcons(),this._setupEvents(i.event),"fill"===s?(e=n.height(),this.element.siblings(":visible").each(function(){var i=t(this),s=i.css("position");"absolute"!==s&&"fixed"!==s&&(e-=i.outerHeight(!0))}),this.headers.each(function(){e-=t(this).outerHeight(!0)}),this.headers.next().each(function(){t(this).height(Math.max(0,e-t(this).innerHeight()+t(this).height()))}).css("overflow","auto")):"auto"===s&&(e=0,this.headers.next().each(function(){var i=t(this).is(":visible");i||t(this).show(),e=Math.max(e,t(this).css("height","").height()),i||t(this).hide()}).height(e))},_activate:function(e){var i=this._findActive(e)[0];i!==this.active[0]&&(i=i||this.active[0],this._eventHandler({target:i,currentTarget:i,preventDefault:t.noop}))},_findActive:function(e){return"number"==typeof e?this.headers.eq(e):t()},_setupEvents:function(e){var i={keydown:"_keydown"};e&&t.each(e.split(" "),function(t,e){i[e]="_eventHandler"}),this._off(this.headers.add(this.headers.next())),this._on(this.headers,i),this._on(this.headers.next(),{keydown:"_panelKeyDown"}),this._hoverable(this.headers),this._focusable(this.headers)},_eventHandler:function(e){var i,s,n=this.options,o=this.active,a=t(e.currentTarget),r=a[0]===o[0],h=r&&n.collapsible,l=h?t():a.next(),c=o.next(),u={oldHeader:o,oldPanel:c,newHeader:h?t():a,newPanel:l};e.preventDefault(),r&&!n.collapsible||this._trigger("beforeActivate",e,u)===!1||(n.active=h?!1:this.headers.index(a),this.active=r?t():a,this._toggle(u),this._removeClass(o,"ui-accordion-header-active","ui-state-active"),n.icons&&(i=o.children(".ui-accordion-header-icon"),this._removeClass(i,null,n.icons.activeHeader)._addClass(i,null,n.icons.header)),r||(this._removeClass(a,"ui-accordion-header-collapsed")._addClass(a,"ui-accordion-header-active","ui-state-active"),n.icons&&(s=a.children(".ui-accordion-header-icon"),this._removeClass(s,null,n.icons.header)._addClass(s,null,n.icons.activeHeader)),this._addClass(a.next(),"ui-accordion-content-active")))},_toggle:function(e){var i=e.newPanel,s=this.prevShow.length?this.prevShow:e.oldPanel;this.prevShow.add(this.prevHide).stop(!0,!0),this.prevShow=i,this.prevHide=s,this.options.animate?this._animate(i,s,e):(s.hide(),i.show(),this._toggleComplete(e)),s.attr({"aria-hidden":"true"}),s.prev().attr({"aria-selected":"false","aria-expanded":"false"}),i.length&&s.length?s.prev().attr({tabIndex:-1,"aria-expanded":"false"}):i.length&&this.headers.filter(function(){return 0===parseInt(t(this).attr("tabIndex"),10)}).attr("tabIndex",-1),i.attr("aria-hidden","false").prev().attr({"aria-selected":"true","aria-expanded":"true",tabIndex:0})},_animate:function(t,e,i){var s,n,o,a=this,r=0,h=t.css("box-sizing"),l=t.length&&(!e.length||t.index()<e.index()),c=this.options.animate||{},u=l&&c.down||c,d=function(){a._toggleComplete(i)};return"number"==typeof u&&(o=u),"string"==typeof u&&(n=u),n=n||u.easing||c.easing,o=o||u.duration||c.duration,e.length?t.length?(s=t.show().outerHeight(),e.animate(this.hideProps,{duration:o,easing:n,step:function(t,e){e.now=Math.round(t)}}),t.hide().animate(this.showProps,{duration:o,easing:n,complete:d,step:function(t,i){i.now=Math.round(t),"height"!==i.prop?"content-box"===h&&(r+=i.now):"content"!==a.options.heightStyle&&(i.now=Math.round(s-e.outerHeight()-r),r=0)}}),void 0):e.animate(this.hideProps,o,n,d):t.animate(this.showProps,o,n,d)},_toggleComplete:function(t){var e=t.oldPanel,i=e.prev();this._removeClass(e,"ui-accordion-content-active"),this._removeClass(i,"ui-accordion-header-active")._addClass(i,"ui-accordion-header-collapsed"),e.length&&(e.parent()[0].className=e.parent()[0].className),this._trigger("activate",null,t)}}),t.ui.safeActiveElement=function(t){var e;try{e=t.activeElement}catch(i){e=t.body}return e||(e=t.body),e.nodeName||(e=t.body),e},t.widget("ui.menu",{version:"1.12.1",defaultElement:"<ul>",delay:300,options:{icons:{submenu:"ui-icon-caret-1-e"},items:"> *",menus:"ul",position:{my:"left top",at:"right top"},role:"menu",blur:null,focus:null,select:null},_create:function(){this.activeMenu=this.element,this.mouseHandled=!1,this.element.uniqueId().attr({role:this.options.role,tabIndex:0}),this._addClass("ui-menu","ui-widget ui-widget-content"),this._on({"mousedown .ui-menu-item":function(t){t.preventDefault()},"click .ui-menu-item":function(e){var i=t(e.target),s=t(t.ui.safeActiveElement(this.document[0]));!this.mouseHandled&&i.not(".ui-state-disabled").length&&(this.select(e),e.isPropagationStopped()||(this.mouseHandled=!0),i.has(".ui-menu").length?this.expand(e):!this.element.is(":focus")&&s.closest(".ui-menu").length&&(this.element.trigger("focus",[!0]),this.active&&1===this.active.parents(".ui-menu").length&&clearTimeout(this.timer)))},"mouseenter .ui-menu-item":function(e){if(!this.previousFilter){var i=t(e.target).closest(".ui-menu-item"),s=t(e.currentTarget);i[0]===s[0]&&(this._removeClass(s.siblings().children(".ui-state-active"),null,"ui-state-active"),this.focus(e,s))}},mouseleave:"collapseAll","mouseleave .ui-menu":"collapseAll",focus:function(t,e){var i=this.active||this.element.find(this.options.items).eq(0);e||this.focus(t,i)},blur:function(e){this._delay(function(){var i=!t.contains(this.element[0],t.ui.safeActiveElement(this.document[0]));i&&this.collapseAll(e)})},keydown:"_keydown"}),this.refresh(),this._on(this.document,{click:function(t){this._closeOnDocumentClick(t)&&this.collapseAll(t),this.mouseHandled=!1}})},_destroy:function(){var e=this.element.find(".ui-menu-item").removeAttr("role aria-disabled"),i=e.children(".ui-menu-item-wrapper").removeUniqueId().removeAttr("tabIndex role aria-haspopup");this.element.removeAttr("aria-activedescendant").find(".ui-menu").addBack().removeAttr("role aria-labelledby aria-expanded aria-hidden aria-disabled tabIndex").removeUniqueId().show(),i.children().each(function(){var e=t(this);e.data("ui-menu-submenu-caret")&&e.remove()})},_keydown:function(e){var i,s,n,o,a=!0;switch(e.keyCode){case t.ui.keyCode.PAGE_UP:this.previousPage(e);break;case t.ui.keyCode.PAGE_DOWN:this.nextPage(e);break;case t.ui.keyCode.HOME:this._move("first","first",e);break;case t.ui.keyCode.END:this._move("last","last",e);break;case t.ui.keyCode.UP:this.previous(e);break;case t.ui.keyCode.DOWN:this.next(e);break;case t.ui.keyCode.LEFT:this.collapse(e);break;case t.ui.keyCode.RIGHT:this.active&&!this.active.is(".ui-state-disabled")&&this.expand(e);break;case t.ui.keyCode.ENTER:case t.ui.keyCode.SPACE:this._activate(e);break;case t.ui.keyCode.ESCAPE:this.collapse(e);break;default:a=!1,s=this.previousFilter||"",o=!1,n=e.keyCode>=96&&105>=e.keyCode?""+(e.keyCode-96):String.fromCharCode(e.keyCode),clearTimeout(this.filterTimer),n===s?o=!0:n=s+n,i=this._filterMenuItems(n),i=o&&-1!==i.index(this.active.next())?this.active.nextAll(".ui-menu-item"):i,i.length||(n=String.fromCharCode(e.keyCode),i=this._filterMenuItems(n)),i.length?(this.focus(e,i),this.previousFilter=n,this.filterTimer=this._delay(function(){delete this.previousFilter},1e3)):delete this.previousFilter}a&&e.preventDefault()},_activate:function(t){this.active&&!this.active.is(".ui-state-disabled")&&(this.active.children("[aria-haspopup='true']").length?this.expand(t):this.select(t))},refresh:function(){var e,i,s,n,o,a=this,r=this.options.icons.submenu,h=this.element.find(this.options.menus);this._toggleClass("ui-menu-icons",null,!!this.element.find(".ui-icon").length),s=h.filter(":not(.ui-menu)").hide().attr({role:this.options.role,"aria-hidden":"true","aria-expanded":"false"}).each(function(){var e=t(this),i=e.prev(),s=t("<span>").data("ui-menu-submenu-caret",!0);a._addClass(s,"ui-menu-icon","ui-icon "+r),i.attr("aria-haspopup","true").prepend(s),e.attr("aria-labelledby",i.attr("id"))}),this._addClass(s,"ui-menu","ui-widget ui-widget-content ui-front"),e=h.add(this.element),i=e.find(this.options.items),i.not(".ui-menu-item").each(function(){var e=t(this);a._isDivider(e)&&a._addClass(e,"ui-menu-divider","ui-widget-content")}),n=i.not(".ui-menu-item, .ui-menu-divider"),o=n.children().not(".ui-menu").uniqueId().attr({tabIndex:-1,role:this._itemRole()}),this._addClass(n,"ui-menu-item")._addClass(o,"ui-menu-item-wrapper"),i.filter(".ui-state-disabled").attr("aria-disabled","true"),this.active&&!t.contains(this.element[0],this.active[0])&&this.blur()},_itemRole:function(){return{menu:"menuitem",listbox:"option"}[this.options.role]},_setOption:function(t,e){if("icons"===t){var i=this.element.find(".ui-menu-icon");this._removeClass(i,null,this.options.icons.submenu)._addClass(i,null,e.submenu)}this._super(t,e)},_setOptionDisabled:function(t){this._super(t),this.element.attr("aria-disabled",t+""),this._toggleClass(null,"ui-state-disabled",!!t)},focus:function(t,e){var i,s,n;this.blur(t,t&&"focus"===t.type),this._scrollIntoView(e),this.active=e.first(),s=this.active.children(".ui-menu-item-wrapper"),this._addClass(s,null,"ui-state-active"),this.options.role&&this.element.attr("aria-activedescendant",s.attr("id")),n=this.active.parent().closest(".ui-menu-item").children(".ui-menu-item-wrapper"),this._addClass(n,null,"ui-state-active"),t&&"keydown"===t.type?this._close():this.timer=this._delay(function(){this._close()},this.delay),i=e.children(".ui-menu"),i.length&&t&&/^mouse/.test(t.type)&&this._startOpening(i),this.activeMenu=e.parent(),this._trigger("focus",t,{item:e})},_scrollIntoView:function(e){var i,s,n,o,a,r;this._hasScroll()&&(i=parseFloat(t.css(this.activeMenu[0],"borderTopWidth"))||0,s=parseFloat(t.css(this.activeMenu[0],"paddingTop"))||0,n=e.offset().top-this.activeMenu.offset().top-i-s,o=this.activeMenu.scrollTop(),a=this.activeMenu.height(),r=e.outerHeight(),0>n?this.activeMenu.scrollTop(o+n):n+r>a&&this.activeMenu.scrollTop(o+n-a+r))},blur:function(t,e){e||clearTimeout(this.timer),this.active&&(this._removeClass(this.active.children(".ui-menu-item-wrapper"),null,"ui-state-active"),this._trigger("blur",t,{item:this.active}),this.active=null)},_startOpening:function(t){clearTimeout(this.timer),"true"===t.attr("aria-hidden")&&(this.timer=this._delay(function(){this._close(),this._open(t)},this.delay))},_open:function(e){var i=t.extend({of:this.active},this.options.position);clearTimeout(this.timer),this.element.find(".ui-menu").not(e.parents(".ui-menu")).hide().attr("aria-hidden","true"),e.show().removeAttr("aria-hidden").attr("aria-expanded","true").position(i)},collapseAll:function(e,i){clearTimeout(this.timer),this.timer=this._delay(function(){var s=i?this.element:t(e&&e.target).closest(this.element.find(".ui-menu"));s.length||(s=this.element),this._close(s),this.blur(e),this._removeClass(s.find(".ui-state-active"),null,"ui-state-active"),this.activeMenu=s},this.delay)},_close:function(t){t||(t=this.active?this.active.parent():this.element),t.find(".ui-menu").hide().attr("aria-hidden","true").attr("aria-expanded","false")},_closeOnDocumentClick:function(e){return!t(e.target).closest(".ui-menu").length},_isDivider:function(t){return!/[^\-\u2014\u2013\s]/.test(t.text())},collapse:function(t){var e=this.active&&this.active.parent().closest(".ui-menu-item",this.element);e&&e.length&&(this._close(),this.focus(t,e))},expand:function(t){var e=this.active&&this.active.children(".ui-menu ").find(this.options.items).first();e&&e.length&&(this._open(e.parent()),this._delay(function(){this.focus(t,e)}))},next:function(t){this._move("next","first",t)},previous:function(t){this._move("prev","last",t)},isFirstItem:function(){return this.active&&!this.active.prevAll(".ui-menu-item").length},isLastItem:function(){return this.active&&!this.active.nextAll(".ui-menu-item").length},_move:function(t,e,i){var s;this.active&&(s="first"===t||"last"===t?this.active["first"===t?"prevAll":"nextAll"](".ui-menu-item").eq(-1):this.active[t+"All"](".ui-menu-item").eq(0)),s&&s.length&&this.active||(s=this.activeMenu.find(this.options.items)[e]()),this.focus(i,s)},nextPage:function(e){var i,s,n;return this.active?(this.isLastItem()||(this._hasScroll()?(s=this.active.offset().top,n=this.element.height(),this.active.nextAll(".ui-menu-item").each(function(){return i=t(this),0>i.offset().top-s-n}),this.focus(e,i)):this.focus(e,this.activeMenu.find(this.options.items)[this.active?"last":"first"]())),void 0):(this.next(e),void 0)},previousPage:function(e){var i,s,n;return this.active?(this.isFirstItem()||(this._hasScroll()?(s=this.active.offset().top,n=this.element.height(),this.active.prevAll(".ui-menu-item").each(function(){return i=t(this),i.offset().top-s+n>0}),this.focus(e,i)):this.focus(e,this.activeMenu.find(this.options.items).first())),void 0):(this.next(e),void 0)},_hasScroll:function(){return this.element.outerHeight()<this.element.prop("scrollHeight")},select:function(e){this.active=this.active||t(e.target).closest(".ui-menu-item");var i={item:this.active};this.active.has(".ui-menu").length||this.collapseAll(e,!0),this._trigger("select",e,i)},_filterMenuItems:function(e){var i=e.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&"),s=RegExp("^"+i,"i");return this.activeMenu.find(this.options.items).filter(".ui-menu-item").filter(function(){return s.test(t.trim(t(this).children(".ui-menu-item-wrapper").text()))})}}),t.widget("ui.autocomplete",{version:"1.12.1",defaultElement:"<input>",options:{appendTo:null,autoFocus:!1,delay:300,minLength:1,position:{my:"left top",at:"left bottom",collision:"none"},source:null,change:null,close:null,focus:null,open:null,response:null,search:null,select:null},requestIndex:0,pending:0,_create:function(){var e,i,s,n=this.element[0].nodeName.toLowerCase(),o="textarea"===n,a="input"===n;
        this.isMultiLine=o||!a&&this._isContentEditable(this.element),this.valueMethod=this.element[o||a?"val":"text"],this.isNewMenu=!0,this._addClass("ui-autocomplete-input"),this.element.attr("autocomplete","off"),this._on(this.element,{keydown:function(n){if(this.element.prop("readOnly"))return e=!0,s=!0,i=!0,void 0;e=!1,s=!1,i=!1;var o=t.ui.keyCode;switch(n.keyCode){case o.PAGE_UP:e=!0,this._move("previousPage",n);break;case o.PAGE_DOWN:e=!0,this._move("nextPage",n);break;case o.UP:e=!0,this._keyEvent("previous",n);break;case o.DOWN:e=!0,this._keyEvent("next",n);break;case o.ENTER:this.menu.active&&(e=!0,n.preventDefault(),this.menu.select(n));break;case o.TAB:this.menu.active&&this.menu.select(n);break;case o.ESCAPE:this.menu.element.is(":visible")&&(this.isMultiLine||this._value(this.term),this.close(n),n.preventDefault());break;default:i=!0,this._searchTimeout(n)}},keypress:function(s){if(e)return e=!1,(!this.isMultiLine||this.menu.element.is(":visible"))&&s.preventDefault(),void 0;if(!i){var n=t.ui.keyCode;switch(s.keyCode){case n.PAGE_UP:this._move("previousPage",s);break;case n.PAGE_DOWN:this._move("nextPage",s);break;case n.UP:this._keyEvent("previous",s);break;case n.DOWN:this._keyEvent("next",s)}}},input:function(t){return s?(s=!1,t.preventDefault(),void 0):(this._searchTimeout(t),void 0)},focus:function(){this.selectedItem=null,this.previous=this._value()},blur:function(t){return this.cancelBlur?(delete this.cancelBlur,void 0):(clearTimeout(this.searching),this.close(t),this._change(t),void 0)}}),this._initSource(),this.menu=t("<ul>").appendTo(this._appendTo()).menu({role:null}).hide().menu("instance"),this._addClass(this.menu.element,"ui-autocomplete","ui-front"),this._on(this.menu.element,{mousedown:function(e){e.preventDefault(),this.cancelBlur=!0,this._delay(function(){delete this.cancelBlur,this.element[0]!==t.ui.safeActiveElement(this.document[0])&&this.element.trigger("focus")})},menufocus:function(e,i){var s,n;return this.isNewMenu&&(this.isNewMenu=!1,e.originalEvent&&/^mouse/.test(e.originalEvent.type))?(this.menu.blur(),this.document.one("mousemove",function(){t(e.target).trigger(e.originalEvent)}),void 0):(n=i.item.data("ui-autocomplete-item"),!1!==this._trigger("focus",e,{item:n})&&e.originalEvent&&/^key/.test(e.originalEvent.type)&&this._value(n.value),s=i.item.attr("aria-label")||n.value,s&&t.trim(s).length&&(this.liveRegion.children().hide(),t("<div>").text(s).appendTo(this.liveRegion)),void 0)},menuselect:function(e,i){var s=i.item.data("ui-autocomplete-item"),n=this.previous;this.element[0]!==t.ui.safeActiveElement(this.document[0])&&(this.element.trigger("focus"),this.previous=n,this._delay(function(){this.previous=n,this.selectedItem=s})),!1!==this._trigger("select",e,{item:s})&&this._value(s.value),this.term=this._value(),this.close(e),this.selectedItem=s}}),this.liveRegion=t("<div>",{role:"status","aria-live":"assertive","aria-relevant":"additions"}).appendTo(this.document[0].body),this._addClass(this.liveRegion,null,"ui-helper-hidden-accessible"),this._on(this.window,{beforeunload:function(){this.element.removeAttr("autocomplete")}})},_destroy:function(){clearTimeout(this.searching),this.element.removeAttr("autocomplete"),this.menu.element.remove(),this.liveRegion.remove()},_setOption:function(t,e){this._super(t,e),"source"===t&&this._initSource(),"appendTo"===t&&this.menu.element.appendTo(this._appendTo()),"disabled"===t&&e&&this.xhr&&this.xhr.abort()},_isEventTargetInWidget:function(e){var i=this.menu.element[0];return e.target===this.element[0]||e.target===i||t.contains(i,e.target)},_closeOnClickOutside:function(t){this._isEventTargetInWidget(t)||this.close()},_appendTo:function(){var e=this.options.appendTo;return e&&(e=e.jquery||e.nodeType?t(e):this.document.find(e).eq(0)),e&&e[0]||(e=this.element.closest(".ui-front, dialog")),e.length||(e=this.document[0].body),e},_initSource:function(){var e,i,s=this;t.isArray(this.options.source)?(e=this.options.source,this.source=function(i,s){s(t.ui.autocomplete.filter(e,i.term))}):"string"==typeof this.options.source?(i=this.options.source,this.source=function(e,n){s.xhr&&s.xhr.abort(),s.xhr=t.ajax({url:i,data:e,dataType:"json",success:function(t){n(t)},error:function(){n([])}})}):this.source=this.options.source},_searchTimeout:function(t){clearTimeout(this.searching),this.searching=this._delay(function(){var e=this.term===this._value(),i=this.menu.element.is(":visible"),s=t.altKey||t.ctrlKey||t.metaKey||t.shiftKey;(!e||e&&!i&&!s)&&(this.selectedItem=null,this.search(null,t))},this.options.delay)},search:function(t,e){return t=null!=t?t:this._value(),this.term=this._value(),t.length<this.options.minLength?this.close(e):this._trigger("search",e)!==!1?this._search(t):void 0},_search:function(t){this.pending++,this._addClass("ui-autocomplete-loading"),this.cancelSearch=!1,this.source({term:t},this._response())},_response:function(){var e=++this.requestIndex;return t.proxy(function(t){e===this.requestIndex&&this.__response(t),this.pending--,this.pending||this._removeClass("ui-autocomplete-loading")},this)},__response:function(t){t&&(t=this._normalize(t)),this._trigger("response",null,{content:t}),!this.options.disabled&&t&&t.length&&!this.cancelSearch?(this._suggest(t),this._trigger("open")):this._close()},close:function(t){this.cancelSearch=!0,this._close(t)},_close:function(t){this._off(this.document,"mousedown"),this.menu.element.is(":visible")&&(this.menu.element.hide(),this.menu.blur(),this.isNewMenu=!0,this._trigger("close",t))},_change:function(t){this.previous!==this._value()&&this._trigger("change",t,{item:this.selectedItem})},_normalize:function(e){return e.length&&e[0].label&&e[0].value?e:t.map(e,function(e){return"string"==typeof e?{label:e,value:e}:t.extend({},e,{label:e.label||e.value,value:e.value||e.label})})},_suggest:function(e){var i=this.menu.element.empty();this._renderMenu(i,e),this.isNewMenu=!0,this.menu.refresh(),i.show(),this._resizeMenu(),i.position(t.extend({of:this.element},this.options.position)),this.options.autoFocus&&this.menu.next(),this._on(this.document,{mousedown:"_closeOnClickOutside"})},_resizeMenu:function(){var t=this.menu.element;t.outerWidth(Math.max(t.width("").outerWidth()+1,this.element.outerWidth()))},_renderMenu:function(e,i){var s=this;t.each(i,function(t,i){s._renderItemData(e,i)})},_renderItemData:function(t,e){return this._renderItem(t,e).data("ui-autocomplete-item",e)},_renderItem:function(e,i){return t("<li>").append(t("<div>").text(i.label)).appendTo(e)},_move:function(t,e){return this.menu.element.is(":visible")?this.menu.isFirstItem()&&/^previous/.test(t)||this.menu.isLastItem()&&/^next/.test(t)?(this.isMultiLine||this._value(this.term),this.menu.blur(),void 0):(this.menu[t](e),void 0):(this.search(null,e),void 0)},widget:function(){return this.menu.element},_value:function(){return this.valueMethod.apply(this.element,arguments)},_keyEvent:function(t,e){(!this.isMultiLine||this.menu.element.is(":visible"))&&(this._move(t,e),e.preventDefault())},_isContentEditable:function(t){if(!t.length)return!1;var e=t.prop("contentEditable");return"inherit"===e?this._isContentEditable(t.parent()):"true"===e}}),t.extend(t.ui.autocomplete,{escapeRegex:function(t){return t.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&")},filter:function(e,i){var s=RegExp(t.ui.autocomplete.escapeRegex(i),"i");return t.grep(e,function(t){return s.test(t.label||t.value||t)})}}),t.widget("ui.autocomplete",t.ui.autocomplete,{options:{messages:{noResults:"No search results.",results:function(t){return t+(t>1?" results are":" result is")+" available, use up and down arrow keys to navigate."}}},__response:function(e){var i;this._superApply(arguments),this.options.disabled||this.cancelSearch||(i=e&&e.length?this.options.messages.results(e.length):this.options.messages.noResults,this.liveRegion.children().hide(),t("<div>").text(i).appendTo(this.liveRegion))}}),t.ui.autocomplete;var g=/ui-corner-([a-z]){2,6}/g;t.widget("ui.controlgroup",{version:"1.12.1",defaultElement:"<div>",options:{direction:"horizontal",disabled:null,onlyVisible:!0,items:{button:"input[type=button], input[type=submit], input[type=reset], button, a",controlgroupLabel:".ui-controlgroup-label",checkboxradio:"input[type='checkbox'], input[type='radio']",selectmenu:"select",spinner:".ui-spinner-input"}},_create:function(){this._enhance()},_enhance:function(){this.element.attr("role","toolbar"),this.refresh()},_destroy:function(){this._callChildMethod("destroy"),this.childWidgets.removeData("ui-controlgroup-data"),this.element.removeAttr("role"),this.options.items.controlgroupLabel&&this.element.find(this.options.items.controlgroupLabel).find(".ui-controlgroup-label-contents").contents().unwrap()},_initWidgets:function(){var e=this,i=[];t.each(this.options.items,function(s,n){var o,a={};return n?"controlgroupLabel"===s?(o=e.element.find(n),o.each(function(){var e=t(this);e.children(".ui-controlgroup-label-contents").length||e.contents().wrapAll("<span class='ui-controlgroup-label-contents'></span>")}),e._addClass(o,null,"ui-widget ui-widget-content ui-state-default"),i=i.concat(o.get()),void 0):(t.fn[s]&&(a=e["_"+s+"Options"]?e["_"+s+"Options"]("middle"):{classes:{}},e.element.find(n).each(function(){var n=t(this),o=n[s]("instance"),r=t.widget.extend({},a);if("button"!==s||!n.parent(".ui-spinner").length){o||(o=n[s]()[s]("instance")),o&&(r.classes=e._resolveClassesValues(r.classes,o)),n[s](r);var h=n[s]("widget");t.data(h[0],"ui-controlgroup-data",o?o:n[s]("instance")),i.push(h[0])}})),void 0):void 0}),this.childWidgets=t(t.unique(i)),this._addClass(this.childWidgets,"ui-controlgroup-item")},_callChildMethod:function(e){this.childWidgets.each(function(){var i=t(this),s=i.data("ui-controlgroup-data");s&&s[e]&&s[e]()})},_updateCornerClass:function(t,e){var i="ui-corner-top ui-corner-bottom ui-corner-left ui-corner-right ui-corner-all",s=this._buildSimpleOptions(e,"label").classes.label;this._removeClass(t,null,i),this._addClass(t,null,s)},_buildSimpleOptions:function(t,e){var i="vertical"===this.options.direction,s={classes:{}};return s.classes[e]={middle:"",first:"ui-corner-"+(i?"top":"left"),last:"ui-corner-"+(i?"bottom":"right"),only:"ui-corner-all"}[t],s},_spinnerOptions:function(t){var e=this._buildSimpleOptions(t,"ui-spinner");return e.classes["ui-spinner-up"]="",e.classes["ui-spinner-down"]="",e},_buttonOptions:function(t){return this._buildSimpleOptions(t,"ui-button")},_checkboxradioOptions:function(t){return this._buildSimpleOptions(t,"ui-checkboxradio-label")},_selectmenuOptions:function(t){var e="vertical"===this.options.direction;return{width:e?"auto":!1,classes:{middle:{"ui-selectmenu-button-open":"","ui-selectmenu-button-closed":""},first:{"ui-selectmenu-button-open":"ui-corner-"+(e?"top":"tl"),"ui-selectmenu-button-closed":"ui-corner-"+(e?"top":"left")},last:{"ui-selectmenu-button-open":e?"":"ui-corner-tr","ui-selectmenu-button-closed":"ui-corner-"+(e?"bottom":"right")},only:{"ui-selectmenu-button-open":"ui-corner-top","ui-selectmenu-button-closed":"ui-corner-all"}}[t]}},_resolveClassesValues:function(e,i){var s={};return t.each(e,function(n){var o=i.options.classes[n]||"";o=t.trim(o.replace(g,"")),s[n]=(o+" "+e[n]).replace(/\s+/g," ")}),s},_setOption:function(t,e){return"direction"===t&&this._removeClass("ui-controlgroup-"+this.options.direction),this._super(t,e),"disabled"===t?(this._callChildMethod(e?"disable":"enable"),void 0):(this.refresh(),void 0)},refresh:function(){var e,i=this;this._addClass("ui-controlgroup ui-controlgroup-"+this.options.direction),"horizontal"===this.options.direction&&this._addClass(null,"ui-helper-clearfix"),this._initWidgets(),e=this.childWidgets,this.options.onlyVisible&&(e=e.filter(":visible")),e.length&&(t.each(["first","last"],function(t,s){var n=e[s]().data("ui-controlgroup-data");if(n&&i["_"+n.widgetName+"Options"]){var o=i["_"+n.widgetName+"Options"](1===e.length?"only":s);o.classes=i._resolveClassesValues(o.classes,n),n.element[n.widgetName](o)}else i._updateCornerClass(e[s](),s)}),this._callChildMethod("refresh"))}}),t.widget("ui.checkboxradio",[t.ui.formResetMixin,{version:"1.12.1",options:{disabled:null,label:null,icon:!0,classes:{"ui-checkboxradio-label":"ui-corner-all","ui-checkboxradio-icon":"ui-corner-all"}},_getCreateOptions:function(){var e,i,s=this,n=this._super()||{};return this._readType(),i=this.element.labels(),this.label=t(i[i.length-1]),this.label.length||t.error("No label found for checkboxradio widget"),this.originalLabel="",this.label.contents().not(this.element[0]).each(function(){s.originalLabel+=3===this.nodeType?t(this).text():this.outerHTML}),this.originalLabel&&(n.label=this.originalLabel),e=this.element[0].disabled,null!=e&&(n.disabled=e),n},_create:function(){var t=this.element[0].checked;this._bindFormResetHandler(),null==this.options.disabled&&(this.options.disabled=this.element[0].disabled),this._setOption("disabled",this.options.disabled),this._addClass("ui-checkboxradio","ui-helper-hidden-accessible"),this._addClass(this.label,"ui-checkboxradio-label","ui-button ui-widget"),"radio"===this.type&&this._addClass(this.label,"ui-checkboxradio-radio-label"),this.options.label&&this.options.label!==this.originalLabel?this._updateLabel():this.originalLabel&&(this.options.label=this.originalLabel),this._enhance(),t&&(this._addClass(this.label,"ui-checkboxradio-checked","ui-state-active"),this.icon&&this._addClass(this.icon,null,"ui-state-hover")),this._on({change:"_toggleClasses",focus:function(){this._addClass(this.label,null,"ui-state-focus ui-visual-focus")},blur:function(){this._removeClass(this.label,null,"ui-state-focus ui-visual-focus")}})},_readType:function(){var e=this.element[0].nodeName.toLowerCase();this.type=this.element[0].type,"input"===e&&/radio|checkbox/.test(this.type)||t.error("Can't create checkboxradio on element.nodeName="+e+" and element.type="+this.type)},_enhance:function(){this._updateIcon(this.element[0].checked)},widget:function(){return this.label},_getRadioGroup:function(){var e,i=this.element[0].name,s="input[name='"+t.ui.escapeSelector(i)+"']";return i?(e=this.form.length?t(this.form[0].elements).filter(s):t(s).filter(function(){return 0===t(this).form().length}),e.not(this.element)):t([])},_toggleClasses:function(){var e=this.element[0].checked;this._toggleClass(this.label,"ui-checkboxradio-checked","ui-state-active",e),this.options.icon&&"checkbox"===this.type&&this._toggleClass(this.icon,null,"ui-icon-check ui-state-checked",e)._toggleClass(this.icon,null,"ui-icon-blank",!e),"radio"===this.type&&this._getRadioGroup().each(function(){var e=t(this).checkboxradio("instance");e&&e._removeClass(e.label,"ui-checkboxradio-checked","ui-state-active")})},_destroy:function(){this._unbindFormResetHandler(),this.icon&&(this.icon.remove(),this.iconSpace.remove())},_setOption:function(t,e){return"label"!==t||e?(this._super(t,e),"disabled"===t?(this._toggleClass(this.label,null,"ui-state-disabled",e),this.element[0].disabled=e,void 0):(this.refresh(),void 0)):void 0},_updateIcon:function(e){var i="ui-icon ui-icon-background ";this.options.icon?(this.icon||(this.icon=t("<span>"),this.iconSpace=t("<span> </span>"),this._addClass(this.iconSpace,"ui-checkboxradio-icon-space")),"checkbox"===this.type?(i+=e?"ui-icon-check ui-state-checked":"ui-icon-blank",this._removeClass(this.icon,null,e?"ui-icon-blank":"ui-icon-check")):i+="ui-icon-blank",this._addClass(this.icon,"ui-checkboxradio-icon",i),e||this._removeClass(this.icon,null,"ui-icon-check ui-state-checked"),this.icon.prependTo(this.label).after(this.iconSpace)):void 0!==this.icon&&(this.icon.remove(),this.iconSpace.remove(),delete this.icon)},_updateLabel:function(){var t=this.label.contents().not(this.element[0]);this.icon&&(t=t.not(this.icon[0])),this.iconSpace&&(t=t.not(this.iconSpace[0])),t.remove(),this.label.append(this.options.label)},refresh:function(){var t=this.element[0].checked,e=this.element[0].disabled;this._updateIcon(t),this._toggleClass(this.label,"ui-checkboxradio-checked","ui-state-active",t),null!==this.options.label&&this._updateLabel(),e!==this.options.disabled&&this._setOptions({disabled:e})}}]),t.ui.checkboxradio,t.widget("ui.button",{version:"1.12.1",defaultElement:"<button>",options:{classes:{"ui-button":"ui-corner-all"},disabled:null,icon:null,iconPosition:"beginning",label:null,showLabel:!0},_getCreateOptions:function(){var t,e=this._super()||{};return this.isInput=this.element.is("input"),t=this.element[0].disabled,null!=t&&(e.disabled=t),this.originalLabel=this.isInput?this.element.val():this.element.html(),this.originalLabel&&(e.label=this.originalLabel),e},_create:function(){!this.option.showLabel&!this.options.icon&&(this.options.showLabel=!0),null==this.options.disabled&&(this.options.disabled=this.element[0].disabled||!1),this.hasTitle=!!this.element.attr("title"),this.options.label&&this.options.label!==this.originalLabel&&(this.isInput?this.element.val(this.options.label):this.element.html(this.options.label)),this._addClass("ui-button","ui-widget"),this._setOption("disabled",this.options.disabled),this._enhance(),this.element.is("a")&&this._on({keyup:function(e){e.keyCode===t.ui.keyCode.SPACE&&(e.preventDefault(),this.element[0].click?this.element[0].click():this.element.trigger("click"))}})},_enhance:function(){this.element.is("button")||this.element.attr("role","button"),this.options.icon&&(this._updateIcon("icon",this.options.icon),this._updateTooltip())},_updateTooltip:function(){this.title=this.element.attr("title"),this.options.showLabel||this.title||this.element.attr("title",this.options.label)},_updateIcon:function(e,i){var s="iconPosition"!==e,n=s?this.options.iconPosition:i,o="top"===n||"bottom"===n;this.icon?s&&this._removeClass(this.icon,null,this.options.icon):(this.icon=t("<span>"),this._addClass(this.icon,"ui-button-icon","ui-icon"),this.options.showLabel||this._addClass("ui-button-icon-only")),s&&this._addClass(this.icon,null,i),this._attachIcon(n),o?(this._addClass(this.icon,null,"ui-widget-icon-block"),this.iconSpace&&this.iconSpace.remove()):(this.iconSpace||(this.iconSpace=t("<span> </span>"),this._addClass(this.iconSpace,"ui-button-icon-space")),this._removeClass(this.icon,null,"ui-wiget-icon-block"),this._attachIconSpace(n))},_destroy:function(){this.element.removeAttr("role"),this.icon&&this.icon.remove(),this.iconSpace&&this.iconSpace.remove(),this.hasTitle||this.element.removeAttr("title")},_attachIconSpace:function(t){this.icon[/^(?:end|bottom)/.test(t)?"before":"after"](this.iconSpace)},_attachIcon:function(t){this.element[/^(?:end|bottom)/.test(t)?"append":"prepend"](this.icon)},_setOptions:function(t){var e=void 0===t.showLabel?this.options.showLabel:t.showLabel,i=void 0===t.icon?this.options.icon:t.icon;e||i||(t.showLabel=!0),this._super(t)},_setOption:function(t,e){"icon"===t&&(e?this._updateIcon(t,e):this.icon&&(this.icon.remove(),this.iconSpace&&this.iconSpace.remove())),"iconPosition"===t&&this._updateIcon(t,e),"showLabel"===t&&(this._toggleClass("ui-button-icon-only",null,!e),this._updateTooltip()),"label"===t&&(this.isInput?this.element.val(e):(this.element.html(e),this.icon&&(this._attachIcon(this.options.iconPosition),this._attachIconSpace(this.options.iconPosition)))),this._super(t,e),"disabled"===t&&(this._toggleClass(null,"ui-state-disabled",e),this.element[0].disabled=e,e&&this.element.blur())},refresh:function(){var t=this.element.is("input, button")?this.element[0].disabled:this.element.hasClass("ui-button-disabled");t!==this.options.disabled&&this._setOptions({disabled:t}),this._updateTooltip()}}),t.uiBackCompat!==!1&&(t.widget("ui.button",t.ui.button,{options:{text:!0,icons:{primary:null,secondary:null}},_create:function(){this.options.showLabel&&!this.options.text&&(this.options.showLabel=this.options.text),!this.options.showLabel&&this.options.text&&(this.options.text=this.options.showLabel),this.options.icon||!this.options.icons.primary&&!this.options.icons.secondary?this.options.icon&&(this.options.icons.primary=this.options.icon):this.options.icons.primary?this.options.icon=this.options.icons.primary:(this.options.icon=this.options.icons.secondary,this.options.iconPosition="end"),this._super()},_setOption:function(t,e){return"text"===t?(this._super("showLabel",e),void 0):("showLabel"===t&&(this.options.text=e),"icon"===t&&(this.options.icons.primary=e),"icons"===t&&(e.primary?(this._super("icon",e.primary),this._super("iconPosition","beginning")):e.secondary&&(this._super("icon",e.secondary),this._super("iconPosition","end"))),this._superApply(arguments),void 0)}}),t.fn.button=function(e){return function(){return!this.length||this.length&&"INPUT"!==this[0].tagName||this.length&&"INPUT"===this[0].tagName&&"checkbox"!==this.attr("type")&&"radio"!==this.attr("type")?e.apply(this,arguments):(t.ui.checkboxradio||t.error("Checkboxradio widget missing"),0===arguments.length?this.checkboxradio({icon:!1}):this.checkboxradio.apply(this,arguments))}}(t.fn.button),t.fn.buttonset=function(){return t.ui.controlgroup||t.error("Controlgroup widget missing"),"option"===arguments[0]&&"items"===arguments[1]&&arguments[2]?this.controlgroup.apply(this,[arguments[0],"items.button",arguments[2]]):"option"===arguments[0]&&"items"===arguments[1]?this.controlgroup.apply(this,[arguments[0],"items.button"]):("object"==typeof arguments[0]&&arguments[0].items&&(arguments[0].items={button:arguments[0].items}),this.controlgroup.apply(this,arguments))}),t.ui.button,t.extend(t.ui,{datepicker:{version:"1.12.1"}});var m;t.extend(s.prototype,{markerClassName:"hasDatepicker",maxRows:4,_widgetDatepicker:function(){return this.dpDiv},setDefaults:function(t){return a(this._defaults,t||{}),this},_attachDatepicker:function(e,i){var s,n,o;s=e.nodeName.toLowerCase(),n="div"===s||"span"===s,e.id||(this.uuid+=1,e.id="dp"+this.uuid),o=this._newInst(t(e),n),o.settings=t.extend({},i||{}),"input"===s?this._connectDatepicker(e,o):n&&this._inlineDatepicker(e,o)},_newInst:function(e,i){var s=e[0].id.replace(/([^A-Za-z0-9_\-])/g,"\\\\$1");return{id:s,input:e,selectedDay:0,selectedMonth:0,selectedYear:0,drawMonth:0,drawYear:0,inline:i,dpDiv:i?n(t("<div class='"+this._inlineClass+" ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>")):this.dpDiv}},_connectDatepicker:function(e,i){var s=t(e);i.append=t([]),i.trigger=t([]),s.hasClass(this.markerClassName)||(this._attachments(s,i),s.addClass(this.markerClassName).on("keydown",this._doKeyDown).on("keypress",this._doKeyPress).on("keyup",this._doKeyUp),this._autoSize(i),t.data(e,"datepicker",i),i.settings.disabled&&this._disableDatepicker(e))},_attachments:function(e,i){var s,n,o,a=this._get(i,"appendText"),r=this._get(i,"isRTL");i.append&&i.append.remove(),a&&(i.append=t("<span class='"+this._appendClass+"'>"+a+"</span>"),e[r?"before":"after"](i.append)),e.off("focus",this._showDatepicker),i.trigger&&i.trigger.remove(),s=this._get(i,"showOn"),("focus"===s||"both"===s)&&e.on("focus",this._showDatepicker),("button"===s||"both"===s)&&(n=this._get(i,"buttonText"),o=this._get(i,"buttonImage"),i.trigger=t(this._get(i,"buttonImageOnly")?t("<img/>").addClass(this._triggerClass).attr({src:o,alt:n,title:n}):t("<button type='button'></button>").addClass(this._triggerClass).html(o?t("<img/>").attr({src:o,alt:n,title:n}):n)),e[r?"before":"after"](i.trigger),i.trigger.on("click",function(){return t.datepicker._datepickerShowing&&t.datepicker._lastInput===e[0]?t.datepicker._hideDatepicker():t.datepicker._datepickerShowing&&t.datepicker._lastInput!==e[0]?(t.datepicker._hideDatepicker(),t.datepicker._showDatepicker(e[0])):t.datepicker._showDatepicker(e[0]),!1}))},_autoSize:function(t){if(this._get(t,"autoSize")&&!t.inline){var e,i,s,n,o=new Date(2009,11,20),a=this._get(t,"dateFormat");a.match(/[DM]/)&&(e=function(t){for(i=0,s=0,n=0;t.length>n;n++)t[n].length>i&&(i=t[n].length,s=n);return s},o.setMonth(e(this._get(t,a.match(/MM/)?"monthNames":"monthNamesShort"))),o.setDate(e(this._get(t,a.match(/DD/)?"dayNames":"dayNamesShort"))+20-o.getDay())),t.input.attr("size",this._formatDate(t,o).length)}},_inlineDatepicker:function(e,i){var s=t(e);s.hasClass(this.markerClassName)||(s.addClass(this.markerClassName).append(i.dpDiv),t.data(e,"datepicker",i),this._setDate(i,this._getDefaultDate(i),!0),this._updateDatepicker(i),this._updateAlternate(i),i.settings.disabled&&this._disableDatepicker(e),i.dpDiv.css("display","block"))},_dialogDatepicker:function(e,i,s,n,o){var r,h,l,c,u,d=this._dialogInst;return d||(this.uuid+=1,r="dp"+this.uuid,this._dialogInput=t("<input type='text' id='"+r+"' style='position: absolute; top: -100px; width: 0px;'/>"),this._dialogInput.on("keydown",this._doKeyDown),t("body").append(this._dialogInput),d=this._dialogInst=this._newInst(this._dialogInput,!1),d.settings={},t.data(this._dialogInput[0],"datepicker",d)),a(d.settings,n||{}),i=i&&i.constructor===Date?this._formatDate(d,i):i,this._dialogInput.val(i),this._pos=o?o.length?o:[o.pageX,o.pageY]:null,this._pos||(h=document.documentElement.clientWidth,l=document.documentElement.clientHeight,c=document.documentElement.scrollLeft||document.body.scrollLeft,u=document.documentElement.scrollTop||document.body.scrollTop,this._pos=[h/2-100+c,l/2-150+u]),this._dialogInput.css("left",this._pos[0]+20+"px").css("top",this._pos[1]+"px"),d.settings.onSelect=s,this._inDialog=!0,this.dpDiv.addClass(this._dialogClass),this._showDatepicker(this._dialogInput[0]),t.blockUI&&t.blockUI(this.dpDiv),t.data(this._dialogInput[0],"datepicker",d),this},_destroyDatepicker:function(e){var i,s=t(e),n=t.data(e,"datepicker");s.hasClass(this.markerClassName)&&(i=e.nodeName.toLowerCase(),t.removeData(e,"datepicker"),"input"===i?(n.append.remove(),n.trigger.remove(),s.removeClass(this.markerClassName).off("focus",this._showDatepicker).off("keydown",this._doKeyDown).off("keypress",this._doKeyPress).off("keyup",this._doKeyUp)):("div"===i||"span"===i)&&s.removeClass(this.markerClassName).empty(),m===n&&(m=null))},_enableDatepicker:function(e){var i,s,n=t(e),o=t.data(e,"datepicker");n.hasClass(this.markerClassName)&&(i=e.nodeName.toLowerCase(),"input"===i?(e.disabled=!1,o.trigger.filter("button").each(function(){this.disabled=!1}).end().filter("img").css({opacity:"1.0",cursor:""})):("div"===i||"span"===i)&&(s=n.children("."+this._inlineClass),s.children().removeClass("ui-state-disabled"),s.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled",!1)),this._disabledInputs=t.map(this._disabledInputs,function(t){return t===e?null:t}))},_disableDatepicker:function(e){var i,s,n=t(e),o=t.data(e,"datepicker");n.hasClass(this.markerClassName)&&(i=e.nodeName.toLowerCase(),"input"===i?(e.disabled=!0,o.trigger.filter("button").each(function(){this.disabled=!0}).end().filter("img").css({opacity:"0.5",cursor:"default"})):("div"===i||"span"===i)&&(s=n.children("."+this._inlineClass),s.children().addClass("ui-state-disabled"),s.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled",!0)),this._disabledInputs=t.map(this._disabledInputs,function(t){return t===e?null:t}),this._disabledInputs[this._disabledInputs.length]=e)},_isDisabledDatepicker:function(t){if(!t)return!1;for(var e=0;this._disabledInputs.length>e;e++)if(this._disabledInputs[e]===t)return!0;return!1},_getInst:function(e){try{return t.data(e,"datepicker")}catch(i){throw"Missing instance data for this datepicker"}},_optionDatepicker:function(e,i,s){var n,o,r,h,l=this._getInst(e);return 2===arguments.length&&"string"==typeof i?"defaults"===i?t.extend({},t.datepicker._defaults):l?"all"===i?t.extend({},l.settings):this._get(l,i):null:(n=i||{},"string"==typeof i&&(n={},n[i]=s),l&&(this._curInst===l&&this._hideDatepicker(),o=this._getDateDatepicker(e,!0),r=this._getMinMaxDate(l,"min"),h=this._getMinMaxDate(l,"max"),a(l.settings,n),null!==r&&void 0!==n.dateFormat&&void 0===n.minDate&&(l.settings.minDate=this._formatDate(l,r)),null!==h&&void 0!==n.dateFormat&&void 0===n.maxDate&&(l.settings.maxDate=this._formatDate(l,h)),"disabled"in n&&(n.disabled?this._disableDatepicker(e):this._enableDatepicker(e)),this._attachments(t(e),l),this._autoSize(l),this._setDate(l,o),this._updateAlternate(l),this._updateDatepicker(l)),void 0)},_changeDatepicker:function(t,e,i){this._optionDatepicker(t,e,i)},_refreshDatepicker:function(t){var e=this._getInst(t);e&&this._updateDatepicker(e)},_setDateDatepicker:function(t,e){var i=this._getInst(t);i&&(this._setDate(i,e),this._updateDatepicker(i),this._updateAlternate(i))},_getDateDatepicker:function(t,e){var i=this._getInst(t);return i&&!i.inline&&this._setDateFromField(i,e),i?this._getDate(i):null},_doKeyDown:function(e){var i,s,n,o=t.datepicker._getInst(e.target),a=!0,r=o.dpDiv.is(".ui-datepicker-rtl");if(o._keyEvent=!0,t.datepicker._datepickerShowing)switch(e.keyCode){case 9:t.datepicker._hideDatepicker(),a=!1;break;case 13:return n=t("td."+t.datepicker._dayOverClass+":not(."+t.datepicker._currentClass+")",o.dpDiv),n[0]&&t.datepicker._selectDay(e.target,o.selectedMonth,o.selectedYear,n[0]),i=t.datepicker._get(o,"onSelect"),i?(s=t.datepicker._formatDate(o),i.apply(o.input?o.input[0]:null,[s,o])):t.datepicker._hideDatepicker(),!1;case 27:t.datepicker._hideDatepicker();break;case 33:t.datepicker._adjustDate(e.target,e.ctrlKey?-t.datepicker._get(o,"stepBigMonths"):-t.datepicker._get(o,"stepMonths"),"M");break;case 34:t.datepicker._adjustDate(e.target,e.ctrlKey?+t.datepicker._get(o,"stepBigMonths"):+t.datepicker._get(o,"stepMonths"),"M");break;case 35:(e.ctrlKey||e.metaKey)&&t.datepicker._clearDate(e.target),a=e.ctrlKey||e.metaKey;break;case 36:(e.ctrlKey||e.metaKey)&&t.datepicker._gotoToday(e.target),a=e.ctrlKey||e.metaKey;break;case 37:(e.ctrlKey||e.metaKey)&&t.datepicker._adjustDate(e.target,r?1:-1,"D"),a=e.ctrlKey||e.metaKey,e.originalEvent.altKey&&t.datepicker._adjustDate(e.target,e.ctrlKey?-t.datepicker._get(o,"stepBigMonths"):-t.datepicker._get(o,"stepMonths"),"M");break;case 38:(e.ctrlKey||e.metaKey)&&t.datepicker._adjustDate(e.target,-7,"D"),a=e.ctrlKey||e.metaKey;break;case 39:(e.ctrlKey||e.metaKey)&&t.datepicker._adjustDate(e.target,r?-1:1,"D"),a=e.ctrlKey||e.metaKey,e.originalEvent.altKey&&t.datepicker._adjustDate(e.target,e.ctrlKey?+t.datepicker._get(o,"stepBigMonths"):+t.datepicker._get(o,"stepMonths"),"M");break;case 40:(e.ctrlKey||e.metaKey)&&t.datepicker._adjustDate(e.target,7,"D"),a=e.ctrlKey||e.metaKey;break;default:a=!1}else 36===e.keyCode&&e.ctrlKey?t.datepicker._showDatepicker(this):a=!1;a&&(e.preventDefault(),e.stopPropagation())},_doKeyPress:function(e){var i,s,n=t.datepicker._getInst(e.target);return t.datepicker._get(n,"constrainInput")?(i=t.datepicker._possibleChars(t.datepicker._get(n,"dateFormat")),s=String.fromCharCode(null==e.charCode?e.keyCode:e.charCode),e.ctrlKey||e.metaKey||" ">s||!i||i.indexOf(s)>-1):void 0},_doKeyUp:function(e){var i,s=t.datepicker._getInst(e.target);if(s.input.val()!==s.lastVal)try{i=t.datepicker.parseDate(t.datepicker._get(s,"dateFormat"),s.input?s.input.val():null,t.datepicker._getFormatConfig(s)),i&&(t.datepicker._setDateFromField(s),t.datepicker._updateAlternate(s),t.datepicker._updateDatepicker(s))}catch(n){}return!0},_showDatepicker:function(e){if(e=e.target||e,"input"!==e.nodeName.toLowerCase()&&(e=t("input",e.parentNode)[0]),!t.datepicker._isDisabledDatepicker(e)&&t.datepicker._lastInput!==e){var s,n,o,r,h,l,c;s=t.datepicker._getInst(e),t.datepicker._curInst&&t.datepicker._curInst!==s&&(t.datepicker._curInst.dpDiv.stop(!0,!0),s&&t.datepicker._datepickerShowing&&t.datepicker._hideDatepicker(t.datepicker._curInst.input[0])),n=t.datepicker._get(s,"beforeShow"),o=n?n.apply(e,[e,s]):{},o!==!1&&(a(s.settings,o),s.lastVal=null,t.datepicker._lastInput=e,t.datepicker._setDateFromField(s),t.datepicker._inDialog&&(e.value=""),t.datepicker._pos||(t.datepicker._pos=t.datepicker._findPos(e),t.datepicker._pos[1]+=e.offsetHeight),r=!1,t(e).parents().each(function(){return r|="fixed"===t(this).css("position"),!r}),h={left:t.datepicker._pos[0],top:t.datepicker._pos[1]},t.datepicker._pos=null,s.dpDiv.empty(),s.dpDiv.css({position:"absolute",display:"block",top:"-1000px"}),t.datepicker._updateDatepicker(s),h=t.datepicker._checkOffset(s,h,r),s.dpDiv.css({position:t.datepicker._inDialog&&t.blockUI?"static":r?"fixed":"absolute",display:"none",left:h.left+"px",top:h.top+"px"}),s.inline||(l=t.datepicker._get(s,"showAnim"),c=t.datepicker._get(s,"duration"),s.dpDiv.css("z-index",i(t(e))+1),t.datepicker._datepickerShowing=!0,t.effects&&t.effects.effect[l]?s.dpDiv.show(l,t.datepicker._get(s,"showOptions"),c):s.dpDiv[l||"show"](l?c:null),t.datepicker._shouldFocusInput(s)&&s.input.trigger("focus"),t.datepicker._curInst=s))
    }},_updateDatepicker:function(e){this.maxRows=4,m=e,e.dpDiv.empty().append(this._generateHTML(e)),this._attachHandlers(e);var i,s=this._getNumberOfMonths(e),n=s[1],a=17,r=e.dpDiv.find("."+this._dayOverClass+" a");r.length>0&&o.apply(r.get(0)),e.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width(""),n>1&&e.dpDiv.addClass("ui-datepicker-multi-"+n).css("width",a*n+"em"),e.dpDiv[(1!==s[0]||1!==s[1]?"add":"remove")+"Class"]("ui-datepicker-multi"),e.dpDiv[(this._get(e,"isRTL")?"add":"remove")+"Class"]("ui-datepicker-rtl"),e===t.datepicker._curInst&&t.datepicker._datepickerShowing&&t.datepicker._shouldFocusInput(e)&&e.input.trigger("focus"),e.yearshtml&&(i=e.yearshtml,setTimeout(function(){i===e.yearshtml&&e.yearshtml&&e.dpDiv.find("select.ui-datepicker-year:first").replaceWith(e.yearshtml),i=e.yearshtml=null},0))},_shouldFocusInput:function(t){return t.input&&t.input.is(":visible")&&!t.input.is(":disabled")&&!t.input.is(":focus")},_checkOffset:function(e,i,s){var n=e.dpDiv.outerWidth(),o=e.dpDiv.outerHeight(),a=e.input?e.input.outerWidth():0,r=e.input?e.input.outerHeight():0,h=document.documentElement.clientWidth+(s?0:t(document).scrollLeft()),l=document.documentElement.clientHeight+(s?0:t(document).scrollTop());return i.left-=this._get(e,"isRTL")?n-a:0,i.left-=s&&i.left===e.input.offset().left?t(document).scrollLeft():0,i.top-=s&&i.top===e.input.offset().top+r?t(document).scrollTop():0,i.left-=Math.min(i.left,i.left+n>h&&h>n?Math.abs(i.left+n-h):0),i.top-=Math.min(i.top,i.top+o>l&&l>o?Math.abs(o+r):0),i},_findPos:function(e){for(var i,s=this._getInst(e),n=this._get(s,"isRTL");e&&("hidden"===e.type||1!==e.nodeType||t.expr.filters.hidden(e));)e=e[n?"previousSibling":"nextSibling"];return i=t(e).offset(),[i.left,i.top]},_hideDatepicker:function(e){var i,s,n,o,a=this._curInst;!a||e&&a!==t.data(e,"datepicker")||this._datepickerShowing&&(i=this._get(a,"showAnim"),s=this._get(a,"duration"),n=function(){t.datepicker._tidyDialog(a)},t.effects&&(t.effects.effect[i]||t.effects[i])?a.dpDiv.hide(i,t.datepicker._get(a,"showOptions"),s,n):a.dpDiv["slideDown"===i?"slideUp":"fadeIn"===i?"fadeOut":"hide"](i?s:null,n),i||n(),this._datepickerShowing=!1,o=this._get(a,"onClose"),o&&o.apply(a.input?a.input[0]:null,[a.input?a.input.val():"",a]),this._lastInput=null,this._inDialog&&(this._dialogInput.css({position:"absolute",left:"0",top:"-100px"}),t.blockUI&&(t.unblockUI(),t("body").append(this.dpDiv))),this._inDialog=!1)},_tidyDialog:function(t){t.dpDiv.removeClass(this._dialogClass).off(".ui-datepicker-calendar")},_checkExternalClick:function(e){if(t.datepicker._curInst){var i=t(e.target),s=t.datepicker._getInst(i[0]);(i[0].id!==t.datepicker._mainDivId&&0===i.parents("#"+t.datepicker._mainDivId).length&&!i.hasClass(t.datepicker.markerClassName)&&!i.closest("."+t.datepicker._triggerClass).length&&t.datepicker._datepickerShowing&&(!t.datepicker._inDialog||!t.blockUI)||i.hasClass(t.datepicker.markerClassName)&&t.datepicker._curInst!==s)&&t.datepicker._hideDatepicker()}},_adjustDate:function(e,i,s){var n=t(e),o=this._getInst(n[0]);this._isDisabledDatepicker(n[0])||(this._adjustInstDate(o,i+("M"===s?this._get(o,"showCurrentAtPos"):0),s),this._updateDatepicker(o))},_gotoToday:function(e){var i,s=t(e),n=this._getInst(s[0]);this._get(n,"gotoCurrent")&&n.currentDay?(n.selectedDay=n.currentDay,n.drawMonth=n.selectedMonth=n.currentMonth,n.drawYear=n.selectedYear=n.currentYear):(i=new Date,n.selectedDay=i.getDate(),n.drawMonth=n.selectedMonth=i.getMonth(),n.drawYear=n.selectedYear=i.getFullYear()),this._notifyChange(n),this._adjustDate(s)},_selectMonthYear:function(e,i,s){var n=t(e),o=this._getInst(n[0]);o["selected"+("M"===s?"Month":"Year")]=o["draw"+("M"===s?"Month":"Year")]=parseInt(i.options[i.selectedIndex].value,10),this._notifyChange(o),this._adjustDate(n)},_selectDay:function(e,i,s,n){var o,a=t(e);t(n).hasClass(this._unselectableClass)||this._isDisabledDatepicker(a[0])||(o=this._getInst(a[0]),o.selectedDay=o.currentDay=t("a",n).html(),o.selectedMonth=o.currentMonth=i,o.selectedYear=o.currentYear=s,this._selectDate(e,this._formatDate(o,o.currentDay,o.currentMonth,o.currentYear)))},_clearDate:function(e){var i=t(e);this._selectDate(i,"")},_selectDate:function(e,i){var s,n=t(e),o=this._getInst(n[0]);i=null!=i?i:this._formatDate(o),o.input&&o.input.val(i),this._updateAlternate(o),s=this._get(o,"onSelect"),s?s.apply(o.input?o.input[0]:null,[i,o]):o.input&&o.input.trigger("change"),o.inline?this._updateDatepicker(o):(this._hideDatepicker(),this._lastInput=o.input[0],"object"!=typeof o.input[0]&&o.input.trigger("focus"),this._lastInput=null)},_updateAlternate:function(e){var i,s,n,o=this._get(e,"altField");o&&(i=this._get(e,"altFormat")||this._get(e,"dateFormat"),s=this._getDate(e),n=this.formatDate(i,s,this._getFormatConfig(e)),t(o).val(n))},noWeekends:function(t){var e=t.getDay();return[e>0&&6>e,""]},iso8601Week:function(t){var e,i=new Date(t.getTime());return i.setDate(i.getDate()+4-(i.getDay()||7)),e=i.getTime(),i.setMonth(0),i.setDate(1),Math.floor(Math.round((e-i)/864e5)/7)+1},parseDate:function(e,i,s){if(null==e||null==i)throw"Invalid arguments";if(i="object"==typeof i?""+i:i+"",""===i)return null;var n,o,a,r,h=0,l=(s?s.shortYearCutoff:null)||this._defaults.shortYearCutoff,c="string"!=typeof l?l:(new Date).getFullYear()%100+parseInt(l,10),u=(s?s.dayNamesShort:null)||this._defaults.dayNamesShort,d=(s?s.dayNames:null)||this._defaults.dayNames,p=(s?s.monthNamesShort:null)||this._defaults.monthNamesShort,f=(s?s.monthNames:null)||this._defaults.monthNames,g=-1,m=-1,_=-1,v=-1,b=!1,y=function(t){var i=e.length>n+1&&e.charAt(n+1)===t;return i&&n++,i},w=function(t){var e=y(t),s="@"===t?14:"!"===t?20:"y"===t&&e?4:"o"===t?3:2,n="y"===t?s:1,o=RegExp("^\\d{"+n+","+s+"}"),a=i.substring(h).match(o);if(!a)throw"Missing number at position "+h;return h+=a[0].length,parseInt(a[0],10)},k=function(e,s,n){var o=-1,a=t.map(y(e)?n:s,function(t,e){return[[e,t]]}).sort(function(t,e){return-(t[1].length-e[1].length)});if(t.each(a,function(t,e){var s=e[1];return i.substr(h,s.length).toLowerCase()===s.toLowerCase()?(o=e[0],h+=s.length,!1):void 0}),-1!==o)return o+1;throw"Unknown name at position "+h},x=function(){if(i.charAt(h)!==e.charAt(n))throw"Unexpected literal at position "+h;h++};for(n=0;e.length>n;n++)if(b)"'"!==e.charAt(n)||y("'")?x():b=!1;else switch(e.charAt(n)){case"d":_=w("d");break;case"D":k("D",u,d);break;case"o":v=w("o");break;case"m":m=w("m");break;case"M":m=k("M",p,f);break;case"y":g=w("y");break;case"@":r=new Date(w("@")),g=r.getFullYear(),m=r.getMonth()+1,_=r.getDate();break;case"!":r=new Date((w("!")-this._ticksTo1970)/1e4),g=r.getFullYear(),m=r.getMonth()+1,_=r.getDate();break;case"'":y("'")?x():b=!0;break;default:x()}if(i.length>h&&(a=i.substr(h),!/^\s+/.test(a)))throw"Extra/unparsed characters found in date: "+a;if(-1===g?g=(new Date).getFullYear():100>g&&(g+=(new Date).getFullYear()-(new Date).getFullYear()%100+(c>=g?0:-100)),v>-1)for(m=1,_=v;;){if(o=this._getDaysInMonth(g,m-1),o>=_)break;m++,_-=o}if(r=this._daylightSavingAdjust(new Date(g,m-1,_)),r.getFullYear()!==g||r.getMonth()+1!==m||r.getDate()!==_)throw"Invalid date";return r},ATOM:"yy-mm-dd",COOKIE:"D, dd M yy",ISO_8601:"yy-mm-dd",RFC_822:"D, d M y",RFC_850:"DD, dd-M-y",RFC_1036:"D, d M y",RFC_1123:"D, d M yy",RFC_2822:"D, d M yy",RSS:"D, d M y",TICKS:"!",TIMESTAMP:"@",W3C:"yy-mm-dd",_ticksTo1970:1e7*60*60*24*(718685+Math.floor(492.5)-Math.floor(19.7)+Math.floor(4.925)),formatDate:function(t,e,i){if(!e)return"";var s,n=(i?i.dayNamesShort:null)||this._defaults.dayNamesShort,o=(i?i.dayNames:null)||this._defaults.dayNames,a=(i?i.monthNamesShort:null)||this._defaults.monthNamesShort,r=(i?i.monthNames:null)||this._defaults.monthNames,h=function(e){var i=t.length>s+1&&t.charAt(s+1)===e;return i&&s++,i},l=function(t,e,i){var s=""+e;if(h(t))for(;i>s.length;)s="0"+s;return s},c=function(t,e,i,s){return h(t)?s[e]:i[e]},u="",d=!1;if(e)for(s=0;t.length>s;s++)if(d)"'"!==t.charAt(s)||h("'")?u+=t.charAt(s):d=!1;else switch(t.charAt(s)){case"d":u+=l("d",e.getDate(),2);break;case"D":u+=c("D",e.getDay(),n,o);break;case"o":u+=l("o",Math.round((new Date(e.getFullYear(),e.getMonth(),e.getDate()).getTime()-new Date(e.getFullYear(),0,0).getTime())/864e5),3);break;case"m":u+=l("m",e.getMonth()+1,2);break;case"M":u+=c("M",e.getMonth(),a,r);break;case"y":u+=h("y")?e.getFullYear():(10>e.getFullYear()%100?"0":"")+e.getFullYear()%100;break;case"@":u+=e.getTime();break;case"!":u+=1e4*e.getTime()+this._ticksTo1970;break;case"'":h("'")?u+="'":d=!0;break;default:u+=t.charAt(s)}return u},_possibleChars:function(t){var e,i="",s=!1,n=function(i){var s=t.length>e+1&&t.charAt(e+1)===i;return s&&e++,s};for(e=0;t.length>e;e++)if(s)"'"!==t.charAt(e)||n("'")?i+=t.charAt(e):s=!1;else switch(t.charAt(e)){case"d":case"m":case"y":case"@":i+="0123456789";break;case"D":case"M":return null;case"'":n("'")?i+="'":s=!0;break;default:i+=t.charAt(e)}return i},_get:function(t,e){return void 0!==t.settings[e]?t.settings[e]:this._defaults[e]},_setDateFromField:function(t,e){if(t.input.val()!==t.lastVal){var i=this._get(t,"dateFormat"),s=t.lastVal=t.input?t.input.val():null,n=this._getDefaultDate(t),o=n,a=this._getFormatConfig(t);try{o=this.parseDate(i,s,a)||n}catch(r){s=e?"":s}t.selectedDay=o.getDate(),t.drawMonth=t.selectedMonth=o.getMonth(),t.drawYear=t.selectedYear=o.getFullYear(),t.currentDay=s?o.getDate():0,t.currentMonth=s?o.getMonth():0,t.currentYear=s?o.getFullYear():0,this._adjustInstDate(t)}},_getDefaultDate:function(t){return this._restrictMinMax(t,this._determineDate(t,this._get(t,"defaultDate"),new Date))},_determineDate:function(e,i,s){var n=function(t){var e=new Date;return e.setDate(e.getDate()+t),e},o=function(i){try{return t.datepicker.parseDate(t.datepicker._get(e,"dateFormat"),i,t.datepicker._getFormatConfig(e))}catch(s){}for(var n=(i.toLowerCase().match(/^c/)?t.datepicker._getDate(e):null)||new Date,o=n.getFullYear(),a=n.getMonth(),r=n.getDate(),h=/([+\-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g,l=h.exec(i);l;){switch(l[2]||"d"){case"d":case"D":r+=parseInt(l[1],10);break;case"w":case"W":r+=7*parseInt(l[1],10);break;case"m":case"M":a+=parseInt(l[1],10),r=Math.min(r,t.datepicker._getDaysInMonth(o,a));break;case"y":case"Y":o+=parseInt(l[1],10),r=Math.min(r,t.datepicker._getDaysInMonth(o,a))}l=h.exec(i)}return new Date(o,a,r)},a=null==i||""===i?s:"string"==typeof i?o(i):"number"==typeof i?isNaN(i)?s:n(i):new Date(i.getTime());return a=a&&"Invalid Date"==""+a?s:a,a&&(a.setHours(0),a.setMinutes(0),a.setSeconds(0),a.setMilliseconds(0)),this._daylightSavingAdjust(a)},_daylightSavingAdjust:function(t){return t?(t.setHours(t.getHours()>12?t.getHours()+2:0),t):null},_setDate:function(t,e,i){var s=!e,n=t.selectedMonth,o=t.selectedYear,a=this._restrictMinMax(t,this._determineDate(t,e,new Date));t.selectedDay=t.currentDay=a.getDate(),t.drawMonth=t.selectedMonth=t.currentMonth=a.getMonth(),t.drawYear=t.selectedYear=t.currentYear=a.getFullYear(),n===t.selectedMonth&&o===t.selectedYear||i||this._notifyChange(t),this._adjustInstDate(t),t.input&&t.input.val(s?"":this._formatDate(t))},_getDate:function(t){var e=!t.currentYear||t.input&&""===t.input.val()?null:this._daylightSavingAdjust(new Date(t.currentYear,t.currentMonth,t.currentDay));return e},_attachHandlers:function(e){var i=this._get(e,"stepMonths"),s="#"+e.id.replace(/\\\\/g,"\\");e.dpDiv.find("[data-handler]").map(function(){var e={prev:function(){t.datepicker._adjustDate(s,-i,"M")},next:function(){t.datepicker._adjustDate(s,+i,"M")},hide:function(){t.datepicker._hideDatepicker()},today:function(){t.datepicker._gotoToday(s)},selectDay:function(){return t.datepicker._selectDay(s,+this.getAttribute("data-month"),+this.getAttribute("data-year"),this),!1},selectMonth:function(){return t.datepicker._selectMonthYear(s,this,"M"),!1},selectYear:function(){return t.datepicker._selectMonthYear(s,this,"Y"),!1}};t(this).on(this.getAttribute("data-event"),e[this.getAttribute("data-handler")])})},_generateHTML:function(t){var e,i,s,n,o,a,r,h,l,c,u,d,p,f,g,m,_,v,b,y,w,k,x,C,D,I,T,P,M,S,H,z,O,A,N,W,E,F,L,R=new Date,B=this._daylightSavingAdjust(new Date(R.getFullYear(),R.getMonth(),R.getDate())),Y=this._get(t,"isRTL"),j=this._get(t,"showButtonPanel"),q=this._get(t,"hideIfNoPrevNext"),K=this._get(t,"navigationAsDateFormat"),U=this._getNumberOfMonths(t),V=this._get(t,"showCurrentAtPos"),$=this._get(t,"stepMonths"),X=1!==U[0]||1!==U[1],G=this._daylightSavingAdjust(t.currentDay?new Date(t.currentYear,t.currentMonth,t.currentDay):new Date(9999,9,9)),Q=this._getMinMaxDate(t,"min"),J=this._getMinMaxDate(t,"max"),Z=t.drawMonth-V,te=t.drawYear;if(0>Z&&(Z+=12,te--),J)for(e=this._daylightSavingAdjust(new Date(J.getFullYear(),J.getMonth()-U[0]*U[1]+1,J.getDate())),e=Q&&Q>e?Q:e;this._daylightSavingAdjust(new Date(te,Z,1))>e;)Z--,0>Z&&(Z=11,te--);for(t.drawMonth=Z,t.drawYear=te,i=this._get(t,"prevText"),i=K?this.formatDate(i,this._daylightSavingAdjust(new Date(te,Z-$,1)),this._getFormatConfig(t)):i,s=this._canAdjustMonth(t,-1,te,Z)?"<a class='ui-datepicker-prev ui-corner-all' data-handler='prev' data-event='click' title='"+i+"'><span class='ui-icon ui-icon-circle-triangle-"+(Y?"e":"w")+"'>"+i+"</span></a>":q?"":"<a class='ui-datepicker-prev ui-corner-all ui-state-disabled' title='"+i+"'><span class='ui-icon ui-icon-circle-triangle-"+(Y?"e":"w")+"'>"+i+"</span></a>",n=this._get(t,"nextText"),n=K?this.formatDate(n,this._daylightSavingAdjust(new Date(te,Z+$,1)),this._getFormatConfig(t)):n,o=this._canAdjustMonth(t,1,te,Z)?"<a class='ui-datepicker-next ui-corner-all' data-handler='next' data-event='click' title='"+n+"'><span class='ui-icon ui-icon-circle-triangle-"+(Y?"w":"e")+"'>"+n+"</span></a>":q?"":"<a class='ui-datepicker-next ui-corner-all ui-state-disabled' title='"+n+"'><span class='ui-icon ui-icon-circle-triangle-"+(Y?"w":"e")+"'>"+n+"</span></a>",a=this._get(t,"currentText"),r=this._get(t,"gotoCurrent")&&t.currentDay?G:B,a=K?this.formatDate(a,r,this._getFormatConfig(t)):a,h=t.inline?"":"<button type='button' class='ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all' data-handler='hide' data-event='click'>"+this._get(t,"closeText")+"</button>",l=j?"<div class='ui-datepicker-buttonpane ui-widget-content'>"+(Y?h:"")+(this._isInRange(t,r)?"<button type='button' class='ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all' data-handler='today' data-event='click'>"+a+"</button>":"")+(Y?"":h)+"</div>":"",c=parseInt(this._get(t,"firstDay"),10),c=isNaN(c)?0:c,u=this._get(t,"showWeek"),d=this._get(t,"dayNames"),p=this._get(t,"dayNamesMin"),f=this._get(t,"monthNames"),g=this._get(t,"monthNamesShort"),m=this._get(t,"beforeShowDay"),_=this._get(t,"showOtherMonths"),v=this._get(t,"selectOtherMonths"),b=this._getDefaultDate(t),y="",k=0;U[0]>k;k++){for(x="",this.maxRows=4,C=0;U[1]>C;C++){if(D=this._daylightSavingAdjust(new Date(te,Z,t.selectedDay)),I=" ui-corner-all",T="",X){if(T+="<div class='ui-datepicker-group",U[1]>1)switch(C){case 0:T+=" ui-datepicker-group-first",I=" ui-corner-"+(Y?"right":"left");break;case U[1]-1:T+=" ui-datepicker-group-last",I=" ui-corner-"+(Y?"left":"right");break;default:T+=" ui-datepicker-group-middle",I=""}T+="'>"}for(T+="<div class='ui-datepicker-header ui-widget-header ui-helper-clearfix"+I+"'>"+(/all|left/.test(I)&&0===k?Y?o:s:"")+(/all|right/.test(I)&&0===k?Y?s:o:"")+this._generateMonthYearHeader(t,Z,te,Q,J,k>0||C>0,f,g)+"</div><table class='ui-datepicker-calendar'><thead>"+"<tr>",P=u?"<th class='ui-datepicker-week-col'>"+this._get(t,"weekHeader")+"</th>":"",w=0;7>w;w++)M=(w+c)%7,P+="<th scope='col'"+((w+c+6)%7>=5?" class='ui-datepicker-week-end'":"")+">"+"<span title='"+d[M]+"'>"+p[M]+"</span></th>";for(T+=P+"</tr></thead><tbody>",S=this._getDaysInMonth(te,Z),te===t.selectedYear&&Z===t.selectedMonth&&(t.selectedDay=Math.min(t.selectedDay,S)),H=(this._getFirstDayOfMonth(te,Z)-c+7)%7,z=Math.ceil((H+S)/7),O=X?this.maxRows>z?this.maxRows:z:z,this.maxRows=O,A=this._daylightSavingAdjust(new Date(te,Z,1-H)),N=0;O>N;N++){for(T+="<tr>",W=u?"<td class='ui-datepicker-week-col'>"+this._get(t,"calculateWeek")(A)+"</td>":"",w=0;7>w;w++)E=m?m.apply(t.input?t.input[0]:null,[A]):[!0,""],F=A.getMonth()!==Z,L=F&&!v||!E[0]||Q&&Q>A||J&&A>J,W+="<td class='"+((w+c+6)%7>=5?" ui-datepicker-week-end":"")+(F?" ui-datepicker-other-month":"")+(A.getTime()===D.getTime()&&Z===t.selectedMonth&&t._keyEvent||b.getTime()===A.getTime()&&b.getTime()===D.getTime()?" "+this._dayOverClass:"")+(L?" "+this._unselectableClass+" ui-state-disabled":"")+(F&&!_?"":" "+E[1]+(A.getTime()===G.getTime()?" "+this._currentClass:"")+(A.getTime()===B.getTime()?" ui-datepicker-today":""))+"'"+(F&&!_||!E[2]?"":" title='"+E[2].replace(/'/g,"&#39;")+"'")+(L?"":" data-handler='selectDay' data-event='click' data-month='"+A.getMonth()+"' data-year='"+A.getFullYear()+"'")+">"+(F&&!_?"&#xa0;":L?"<span class='ui-state-default'>"+A.getDate()+"</span>":"<a class='ui-state-default"+(A.getTime()===B.getTime()?" ui-state-highlight":"")+(A.getTime()===G.getTime()?" ui-state-active":"")+(F?" ui-priority-secondary":"")+"' href='#'>"+A.getDate()+"</a>")+"</td>",A.setDate(A.getDate()+1),A=this._daylightSavingAdjust(A);T+=W+"</tr>"}Z++,Z>11&&(Z=0,te++),T+="</tbody></table>"+(X?"</div>"+(U[0]>0&&C===U[1]-1?"<div class='ui-datepicker-row-break'></div>":""):""),x+=T}y+=x}return y+=l,t._keyEvent=!1,y},_generateMonthYearHeader:function(t,e,i,s,n,o,a,r){var h,l,c,u,d,p,f,g,m=this._get(t,"changeMonth"),_=this._get(t,"changeYear"),v=this._get(t,"showMonthAfterYear"),b="<div class='ui-datepicker-title'>",y="";if(o||!m)y+="<span class='ui-datepicker-month'>"+a[e]+"</span>";else{for(h=s&&s.getFullYear()===i,l=n&&n.getFullYear()===i,y+="<select class='ui-datepicker-month' data-handler='selectMonth' data-event='change'>",c=0;12>c;c++)(!h||c>=s.getMonth())&&(!l||n.getMonth()>=c)&&(y+="<option value='"+c+"'"+(c===e?" selected='selected'":"")+">"+r[c]+"</option>");y+="</select>"}if(v||(b+=y+(!o&&m&&_?"":"&#xa0;")),!t.yearshtml)if(t.yearshtml="",o||!_)b+="<span class='ui-datepicker-year'>"+i+"</span>";else{for(u=this._get(t,"yearRange").split(":"),d=(new Date).getFullYear(),p=function(t){var e=t.match(/c[+\-].*/)?i+parseInt(t.substring(1),10):t.match(/[+\-].*/)?d+parseInt(t,10):parseInt(t,10);return isNaN(e)?d:e},f=p(u[0]),g=Math.max(f,p(u[1]||"")),f=s?Math.max(f,s.getFullYear()):f,g=n?Math.min(g,n.getFullYear()):g,t.yearshtml+="<select class='ui-datepicker-year' data-handler='selectYear' data-event='change'>";g>=f;f++)t.yearshtml+="<option value='"+f+"'"+(f===i?" selected='selected'":"")+">"+f+"</option>";t.yearshtml+="</select>",b+=t.yearshtml,t.yearshtml=null}return b+=this._get(t,"yearSuffix"),v&&(b+=(!o&&m&&_?"":"&#xa0;")+y),b+="</div>"},_adjustInstDate:function(t,e,i){var s=t.selectedYear+("Y"===i?e:0),n=t.selectedMonth+("M"===i?e:0),o=Math.min(t.selectedDay,this._getDaysInMonth(s,n))+("D"===i?e:0),a=this._restrictMinMax(t,this._daylightSavingAdjust(new Date(s,n,o)));t.selectedDay=a.getDate(),t.drawMonth=t.selectedMonth=a.getMonth(),t.drawYear=t.selectedYear=a.getFullYear(),("M"===i||"Y"===i)&&this._notifyChange(t)},_restrictMinMax:function(t,e){var i=this._getMinMaxDate(t,"min"),s=this._getMinMaxDate(t,"max"),n=i&&i>e?i:e;return s&&n>s?s:n},_notifyChange:function(t){var e=this._get(t,"onChangeMonthYear");e&&e.apply(t.input?t.input[0]:null,[t.selectedYear,t.selectedMonth+1,t])},_getNumberOfMonths:function(t){var e=this._get(t,"numberOfMonths");return null==e?[1,1]:"number"==typeof e?[1,e]:e},_getMinMaxDate:function(t,e){return this._determineDate(t,this._get(t,e+"Date"),null)},_getDaysInMonth:function(t,e){return 32-this._daylightSavingAdjust(new Date(t,e,32)).getDate()},_getFirstDayOfMonth:function(t,e){return new Date(t,e,1).getDay()},_canAdjustMonth:function(t,e,i,s){var n=this._getNumberOfMonths(t),o=this._daylightSavingAdjust(new Date(i,s+(0>e?e:n[0]*n[1]),1));return 0>e&&o.setDate(this._getDaysInMonth(o.getFullYear(),o.getMonth())),this._isInRange(t,o)},_isInRange:function(t,e){var i,s,n=this._getMinMaxDate(t,"min"),o=this._getMinMaxDate(t,"max"),a=null,r=null,h=this._get(t,"yearRange");return h&&(i=h.split(":"),s=(new Date).getFullYear(),a=parseInt(i[0],10),r=parseInt(i[1],10),i[0].match(/[+\-].*/)&&(a+=s),i[1].match(/[+\-].*/)&&(r+=s)),(!n||e.getTime()>=n.getTime())&&(!o||e.getTime()<=o.getTime())&&(!a||e.getFullYear()>=a)&&(!r||r>=e.getFullYear())},_getFormatConfig:function(t){var e=this._get(t,"shortYearCutoff");return e="string"!=typeof e?e:(new Date).getFullYear()%100+parseInt(e,10),{shortYearCutoff:e,dayNamesShort:this._get(t,"dayNamesShort"),dayNames:this._get(t,"dayNames"),monthNamesShort:this._get(t,"monthNamesShort"),monthNames:this._get(t,"monthNames")}},_formatDate:function(t,e,i,s){e||(t.currentDay=t.selectedDay,t.currentMonth=t.selectedMonth,t.currentYear=t.selectedYear);var n=e?"object"==typeof e?e:this._daylightSavingAdjust(new Date(s,i,e)):this._daylightSavingAdjust(new Date(t.currentYear,t.currentMonth,t.currentDay));return this.formatDate(this._get(t,"dateFormat"),n,this._getFormatConfig(t))}}),t.fn.datepicker=function(e){if(!this.length)return this;t.datepicker.initialized||(t(document).on("mousedown",t.datepicker._checkExternalClick),t.datepicker.initialized=!0),0===t("#"+t.datepicker._mainDivId).length&&t("body").append(t.datepicker.dpDiv);var i=Array.prototype.slice.call(arguments,1);return"string"!=typeof e||"isDisabled"!==e&&"getDate"!==e&&"widget"!==e?"option"===e&&2===arguments.length&&"string"==typeof arguments[1]?t.datepicker["_"+e+"Datepicker"].apply(t.datepicker,[this[0]].concat(i)):this.each(function(){"string"==typeof e?t.datepicker["_"+e+"Datepicker"].apply(t.datepicker,[this].concat(i)):t.datepicker._attachDatepicker(this,e)}):t.datepicker["_"+e+"Datepicker"].apply(t.datepicker,[this[0]].concat(i))},t.datepicker=new s,t.datepicker.initialized=!1,t.datepicker.uuid=(new Date).getTime(),t.datepicker.version="1.12.1",t.datepicker,t.ui.ie=!!/msie [\w.]+/.exec(navigator.userAgent.toLowerCase());var _=!1;t(document).on("mouseup",function(){_=!1}),t.widget("ui.mouse",{version:"1.12.1",options:{cancel:"input, textarea, button, select, option",distance:1,delay:0},_mouseInit:function(){var e=this;this.element.on("mousedown."+this.widgetName,function(t){return e._mouseDown(t)}).on("click."+this.widgetName,function(i){return!0===t.data(i.target,e.widgetName+".preventClickEvent")?(t.removeData(i.target,e.widgetName+".preventClickEvent"),i.stopImmediatePropagation(),!1):void 0}),this.started=!1},_mouseDestroy:function(){this.element.off("."+this.widgetName),this._mouseMoveDelegate&&this.document.off("mousemove."+this.widgetName,this._mouseMoveDelegate).off("mouseup."+this.widgetName,this._mouseUpDelegate)},_mouseDown:function(e){if(!_){this._mouseMoved=!1,this._mouseStarted&&this._mouseUp(e),this._mouseDownEvent=e;var i=this,s=1===e.which,n="string"==typeof this.options.cancel&&e.target.nodeName?t(e.target).closest(this.options.cancel).length:!1;return s&&!n&&this._mouseCapture(e)?(this.mouseDelayMet=!this.options.delay,this.mouseDelayMet||(this._mouseDelayTimer=setTimeout(function(){i.mouseDelayMet=!0},this.options.delay)),this._mouseDistanceMet(e)&&this._mouseDelayMet(e)&&(this._mouseStarted=this._mouseStart(e)!==!1,!this._mouseStarted)?(e.preventDefault(),!0):(!0===t.data(e.target,this.widgetName+".preventClickEvent")&&t.removeData(e.target,this.widgetName+".preventClickEvent"),this._mouseMoveDelegate=function(t){return i._mouseMove(t)},this._mouseUpDelegate=function(t){return i._mouseUp(t)},this.document.on("mousemove."+this.widgetName,this._mouseMoveDelegate).on("mouseup."+this.widgetName,this._mouseUpDelegate),e.preventDefault(),_=!0,!0)):!0}},_mouseMove:function(e){if(this._mouseMoved){if(t.ui.ie&&(!document.documentMode||9>document.documentMode)&&!e.button)return this._mouseUp(e);if(!e.which)if(e.originalEvent.altKey||e.originalEvent.ctrlKey||e.originalEvent.metaKey||e.originalEvent.shiftKey)this.ignoreMissingWhich=!0;else if(!this.ignoreMissingWhich)return this._mouseUp(e)}return(e.which||e.button)&&(this._mouseMoved=!0),this._mouseStarted?(this._mouseDrag(e),e.preventDefault()):(this._mouseDistanceMet(e)&&this._mouseDelayMet(e)&&(this._mouseStarted=this._mouseStart(this._mouseDownEvent,e)!==!1,this._mouseStarted?this._mouseDrag(e):this._mouseUp(e)),!this._mouseStarted)},_mouseUp:function(e){this.document.off("mousemove."+this.widgetName,this._mouseMoveDelegate).off("mouseup."+this.widgetName,this._mouseUpDelegate),this._mouseStarted&&(this._mouseStarted=!1,e.target===this._mouseDownEvent.target&&t.data(e.target,this.widgetName+".preventClickEvent",!0),this._mouseStop(e)),this._mouseDelayTimer&&(clearTimeout(this._mouseDelayTimer),delete this._mouseDelayTimer),this.ignoreMissingWhich=!1,_=!1,e.preventDefault()},_mouseDistanceMet:function(t){return Math.max(Math.abs(this._mouseDownEvent.pageX-t.pageX),Math.abs(this._mouseDownEvent.pageY-t.pageY))>=this.options.distance},_mouseDelayMet:function(){return this.mouseDelayMet},_mouseStart:function(){},_mouseDrag:function(){},_mouseStop:function(){},_mouseCapture:function(){return!0}}),t.ui.plugin={add:function(e,i,s){var n,o=t.ui[e].prototype;for(n in s)o.plugins[n]=o.plugins[n]||[],o.plugins[n].push([i,s[n]])},call:function(t,e,i,s){var n,o=t.plugins[e];if(o&&(s||t.element[0].parentNode&&11!==t.element[0].parentNode.nodeType))for(n=0;o.length>n;n++)t.options[o[n][0]]&&o[n][1].apply(t.element,i)}},t.ui.safeBlur=function(e){e&&"body"!==e.nodeName.toLowerCase()&&t(e).trigger("blur")},t.widget("ui.draggable",t.ui.mouse,{version:"1.12.1",widgetEventPrefix:"drag",options:{addClasses:!0,appendTo:"parent",axis:!1,connectToSortable:!1,containment:!1,cursor:"auto",cursorAt:!1,grid:!1,handle:!1,helper:"original",iframeFix:!1,opacity:!1,refreshPositions:!1,revert:!1,revertDuration:500,scope:"default",scroll:!0,scrollSensitivity:20,scrollSpeed:20,snap:!1,snapMode:"both",snapTolerance:20,stack:!1,zIndex:!1,drag:null,start:null,stop:null},_create:function(){"original"===this.options.helper&&this._setPositionRelative(),this.options.addClasses&&this._addClass("ui-draggable"),this._setHandleClassName(),this._mouseInit()},_setOption:function(t,e){this._super(t,e),"handle"===t&&(this._removeHandleClassName(),this._setHandleClassName())},_destroy:function(){return(this.helper||this.element).is(".ui-draggable-dragging")?(this.destroyOnClear=!0,void 0):(this._removeHandleClassName(),this._mouseDestroy(),void 0)},_mouseCapture:function(e){var i=this.options;return this.helper||i.disabled||t(e.target).closest(".ui-resizable-handle").length>0?!1:(this.handle=this._getHandle(e),this.handle?(this._blurActiveElement(e),this._blockFrames(i.iframeFix===!0?"iframe":i.iframeFix),!0):!1)},_blockFrames:function(e){this.iframeBlocks=this.document.find(e).map(function(){var e=t(this);return t("<div>").css("position","absolute").appendTo(e.parent()).outerWidth(e.outerWidth()).outerHeight(e.outerHeight()).offset(e.offset())[0]})},_unblockFrames:function(){this.iframeBlocks&&(this.iframeBlocks.remove(),delete this.iframeBlocks)},_blurActiveElement:function(e){var i=t.ui.safeActiveElement(this.document[0]),s=t(e.target);s.closest(i).length||t.ui.safeBlur(i)},_mouseStart:function(e){var i=this.options;return this.helper=this._createHelper(e),this._addClass(this.helper,"ui-draggable-dragging"),this._cacheHelperProportions(),t.ui.ddmanager&&(t.ui.ddmanager.current=this),this._cacheMargins(),this.cssPosition=this.helper.css("position"),this.scrollParent=this.helper.scrollParent(!0),this.offsetParent=this.helper.offsetParent(),this.hasFixedAncestor=this.helper.parents().filter(function(){return"fixed"===t(this).css("position")}).length>0,this.positionAbs=this.element.offset(),this._refreshOffsets(e),this.originalPosition=this.position=this._generatePosition(e,!1),this.originalPageX=e.pageX,this.originalPageY=e.pageY,i.cursorAt&&this._adjustOffsetFromHelper(i.cursorAt),this._setContainment(),this._trigger("start",e)===!1?(this._clear(),!1):(this._cacheHelperProportions(),t.ui.ddmanager&&!i.dropBehaviour&&t.ui.ddmanager.prepareOffsets(this,e),this._mouseDrag(e,!0),t.ui.ddmanager&&t.ui.ddmanager.dragStart(this,e),!0)},_refreshOffsets:function(t){this.offset={top:this.positionAbs.top-this.margins.top,left:this.positionAbs.left-this.margins.left,scroll:!1,parent:this._getParentOffset(),relative:this._getRelativeOffset()},this.offset.click={left:t.pageX-this.offset.left,top:t.pageY-this.offset.top}},_mouseDrag:function(e,i){if(this.hasFixedAncestor&&(this.offset.parent=this._getParentOffset()),this.position=this._generatePosition(e,!0),this.positionAbs=this._convertPositionTo("absolute"),!i){var s=this._uiHash();if(this._trigger("drag",e,s)===!1)return this._mouseUp(new t.Event("mouseup",e)),!1;this.position=s.position}return this.helper[0].style.left=this.position.left+"px",this.helper[0].style.top=this.position.top+"px",t.ui.ddmanager&&t.ui.ddmanager.drag(this,e),!1},_mouseStop:function(e){var i=this,s=!1;return t.ui.ddmanager&&!this.options.dropBehaviour&&(s=t.ui.ddmanager.drop(this,e)),this.dropped&&(s=this.dropped,this.dropped=!1),"invalid"===this.options.revert&&!s||"valid"===this.options.revert&&s||this.options.revert===!0||t.isFunction(this.options.revert)&&this.options.revert.call(this.element,s)?t(this.helper).animate(this.originalPosition,parseInt(this.options.revertDuration,10),function(){i._trigger("stop",e)!==!1&&i._clear()}):this._trigger("stop",e)!==!1&&this._clear(),!1},_mouseUp:function(e){return this._unblockFrames(),t.ui.ddmanager&&t.ui.ddmanager.dragStop(this,e),this.handleElement.is(e.target)&&this.element.trigger("focus"),t.ui.mouse.prototype._mouseUp.call(this,e)},cancel:function(){return this.helper.is(".ui-draggable-dragging")?this._mouseUp(new t.Event("mouseup",{target:this.element[0]})):this._clear(),this},_getHandle:function(e){return this.options.handle?!!t(e.target).closest(this.element.find(this.options.handle)).length:!0},_setHandleClassName:function(){this.handleElement=this.options.handle?this.element.find(this.options.handle):this.element,this._addClass(this.handleElement,"ui-draggable-handle")},_removeHandleClassName:function(){this._removeClass(this.handleElement,"ui-draggable-handle")},_createHelper:function(e){var i=this.options,s=t.isFunction(i.helper),n=s?t(i.helper.apply(this.element[0],[e])):"clone"===i.helper?this.element.clone().removeAttr("id"):this.element;return n.parents("body").length||n.appendTo("parent"===i.appendTo?this.element[0].parentNode:i.appendTo),s&&n[0]===this.element[0]&&this._setPositionRelative(),n[0]===this.element[0]||/(fixed|absolute)/.test(n.css("position"))||n.css("position","absolute"),n},_setPositionRelative:function(){/^(?:r|a|f)/.test(this.element.css("position"))||(this.element[0].style.position="relative")},_adjustOffsetFromHelper:function(e){"string"==typeof e&&(e=e.split(" ")),t.isArray(e)&&(e={left:+e[0],top:+e[1]||0}),"left"in e&&(this.offset.click.left=e.left+this.margins.left),"right"in e&&(this.offset.click.left=this.helperProportions.width-e.right+this.margins.left),"top"in e&&(this.offset.click.top=e.top+this.margins.top),"bottom"in e&&(this.offset.click.top=this.helperProportions.height-e.bottom+this.margins.top)},_isRootNode:function(t){return/(html|body)/i.test(t.tagName)||t===this.document[0]},_getParentOffset:function(){var e=this.offsetParent.offset(),i=this.document[0];return"absolute"===this.cssPosition&&this.scrollParent[0]!==i&&t.contains(this.scrollParent[0],this.offsetParent[0])&&(e.left+=this.scrollParent.scrollLeft(),e.top+=this.scrollParent.scrollTop()),this._isRootNode(this.offsetParent[0])&&(e={top:0,left:0}),{top:e.top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:e.left+(parseInt(this.offsetParent.css("borderLeftWidth"),10)||0)}},_getRelativeOffset:function(){if("relative"!==this.cssPosition)return{top:0,left:0};var t=this.element.position(),e=this._isRootNode(this.scrollParent[0]);return{top:t.top-(parseInt(this.helper.css("top"),10)||0)+(e?0:this.scrollParent.scrollTop()),left:t.left-(parseInt(this.helper.css("left"),10)||0)+(e?0:this.scrollParent.scrollLeft())}
    },_cacheMargins:function(){this.margins={left:parseInt(this.element.css("marginLeft"),10)||0,top:parseInt(this.element.css("marginTop"),10)||0,right:parseInt(this.element.css("marginRight"),10)||0,bottom:parseInt(this.element.css("marginBottom"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var e,i,s,n=this.options,o=this.document[0];return this.relativeContainer=null,n.containment?"window"===n.containment?(this.containment=[t(window).scrollLeft()-this.offset.relative.left-this.offset.parent.left,t(window).scrollTop()-this.offset.relative.top-this.offset.parent.top,t(window).scrollLeft()+t(window).width()-this.helperProportions.width-this.margins.left,t(window).scrollTop()+(t(window).height()||o.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top],void 0):"document"===n.containment?(this.containment=[0,0,t(o).width()-this.helperProportions.width-this.margins.left,(t(o).height()||o.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top],void 0):n.containment.constructor===Array?(this.containment=n.containment,void 0):("parent"===n.containment&&(n.containment=this.helper[0].parentNode),i=t(n.containment),s=i[0],s&&(e=/(scroll|auto)/.test(i.css("overflow")),this.containment=[(parseInt(i.css("borderLeftWidth"),10)||0)+(parseInt(i.css("paddingLeft"),10)||0),(parseInt(i.css("borderTopWidth"),10)||0)+(parseInt(i.css("paddingTop"),10)||0),(e?Math.max(s.scrollWidth,s.offsetWidth):s.offsetWidth)-(parseInt(i.css("borderRightWidth"),10)||0)-(parseInt(i.css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left-this.margins.right,(e?Math.max(s.scrollHeight,s.offsetHeight):s.offsetHeight)-(parseInt(i.css("borderBottomWidth"),10)||0)-(parseInt(i.css("paddingBottom"),10)||0)-this.helperProportions.height-this.margins.top-this.margins.bottom],this.relativeContainer=i),void 0):(this.containment=null,void 0)},_convertPositionTo:function(t,e){e||(e=this.position);var i="absolute"===t?1:-1,s=this._isRootNode(this.scrollParent[0]);return{top:e.top+this.offset.relative.top*i+this.offset.parent.top*i-("fixed"===this.cssPosition?-this.offset.scroll.top:s?0:this.offset.scroll.top)*i,left:e.left+this.offset.relative.left*i+this.offset.parent.left*i-("fixed"===this.cssPosition?-this.offset.scroll.left:s?0:this.offset.scroll.left)*i}},_generatePosition:function(t,e){var i,s,n,o,a=this.options,r=this._isRootNode(this.scrollParent[0]),h=t.pageX,l=t.pageY;return r&&this.offset.scroll||(this.offset.scroll={top:this.scrollParent.scrollTop(),left:this.scrollParent.scrollLeft()}),e&&(this.containment&&(this.relativeContainer?(s=this.relativeContainer.offset(),i=[this.containment[0]+s.left,this.containment[1]+s.top,this.containment[2]+s.left,this.containment[3]+s.top]):i=this.containment,t.pageX-this.offset.click.left<i[0]&&(h=i[0]+this.offset.click.left),t.pageY-this.offset.click.top<i[1]&&(l=i[1]+this.offset.click.top),t.pageX-this.offset.click.left>i[2]&&(h=i[2]+this.offset.click.left),t.pageY-this.offset.click.top>i[3]&&(l=i[3]+this.offset.click.top)),a.grid&&(n=a.grid[1]?this.originalPageY+Math.round((l-this.originalPageY)/a.grid[1])*a.grid[1]:this.originalPageY,l=i?n-this.offset.click.top>=i[1]||n-this.offset.click.top>i[3]?n:n-this.offset.click.top>=i[1]?n-a.grid[1]:n+a.grid[1]:n,o=a.grid[0]?this.originalPageX+Math.round((h-this.originalPageX)/a.grid[0])*a.grid[0]:this.originalPageX,h=i?o-this.offset.click.left>=i[0]||o-this.offset.click.left>i[2]?o:o-this.offset.click.left>=i[0]?o-a.grid[0]:o+a.grid[0]:o),"y"===a.axis&&(h=this.originalPageX),"x"===a.axis&&(l=this.originalPageY)),{top:l-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+("fixed"===this.cssPosition?-this.offset.scroll.top:r?0:this.offset.scroll.top),left:h-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+("fixed"===this.cssPosition?-this.offset.scroll.left:r?0:this.offset.scroll.left)}},_clear:function(){this._removeClass(this.helper,"ui-draggable-dragging"),this.helper[0]===this.element[0]||this.cancelHelperRemoval||this.helper.remove(),this.helper=null,this.cancelHelperRemoval=!1,this.destroyOnClear&&this.destroy()},_trigger:function(e,i,s){return s=s||this._uiHash(),t.ui.plugin.call(this,e,[i,s,this],!0),/^(drag|start|stop)/.test(e)&&(this.positionAbs=this._convertPositionTo("absolute"),s.offset=this.positionAbs),t.Widget.prototype._trigger.call(this,e,i,s)},plugins:{},_uiHash:function(){return{helper:this.helper,position:this.position,originalPosition:this.originalPosition,offset:this.positionAbs}}}),t.ui.plugin.add("draggable","connectToSortable",{start:function(e,i,s){var n=t.extend({},i,{item:s.element});s.sortables=[],t(s.options.connectToSortable).each(function(){var i=t(this).sortable("instance");i&&!i.options.disabled&&(s.sortables.push(i),i.refreshPositions(),i._trigger("activate",e,n))})},stop:function(e,i,s){var n=t.extend({},i,{item:s.element});s.cancelHelperRemoval=!1,t.each(s.sortables,function(){var t=this;t.isOver?(t.isOver=0,s.cancelHelperRemoval=!0,t.cancelHelperRemoval=!1,t._storedCSS={position:t.placeholder.css("position"),top:t.placeholder.css("top"),left:t.placeholder.css("left")},t._mouseStop(e),t.options.helper=t.options._helper):(t.cancelHelperRemoval=!0,t._trigger("deactivate",e,n))})},drag:function(e,i,s){t.each(s.sortables,function(){var n=!1,o=this;o.positionAbs=s.positionAbs,o.helperProportions=s.helperProportions,o.offset.click=s.offset.click,o._intersectsWith(o.containerCache)&&(n=!0,t.each(s.sortables,function(){return this.positionAbs=s.positionAbs,this.helperProportions=s.helperProportions,this.offset.click=s.offset.click,this!==o&&this._intersectsWith(this.containerCache)&&t.contains(o.element[0],this.element[0])&&(n=!1),n})),n?(o.isOver||(o.isOver=1,s._parent=i.helper.parent(),o.currentItem=i.helper.appendTo(o.element).data("ui-sortable-item",!0),o.options._helper=o.options.helper,o.options.helper=function(){return i.helper[0]},e.target=o.currentItem[0],o._mouseCapture(e,!0),o._mouseStart(e,!0,!0),o.offset.click.top=s.offset.click.top,o.offset.click.left=s.offset.click.left,o.offset.parent.left-=s.offset.parent.left-o.offset.parent.left,o.offset.parent.top-=s.offset.parent.top-o.offset.parent.top,s._trigger("toSortable",e),s.dropped=o.element,t.each(s.sortables,function(){this.refreshPositions()}),s.currentItem=s.element,o.fromOutside=s),o.currentItem&&(o._mouseDrag(e),i.position=o.position)):o.isOver&&(o.isOver=0,o.cancelHelperRemoval=!0,o.options._revert=o.options.revert,o.options.revert=!1,o._trigger("out",e,o._uiHash(o)),o._mouseStop(e,!0),o.options.revert=o.options._revert,o.options.helper=o.options._helper,o.placeholder&&o.placeholder.remove(),i.helper.appendTo(s._parent),s._refreshOffsets(e),i.position=s._generatePosition(e,!0),s._trigger("fromSortable",e),s.dropped=!1,t.each(s.sortables,function(){this.refreshPositions()}))})}}),t.ui.plugin.add("draggable","cursor",{start:function(e,i,s){var n=t("body"),o=s.options;n.css("cursor")&&(o._cursor=n.css("cursor")),n.css("cursor",o.cursor)},stop:function(e,i,s){var n=s.options;n._cursor&&t("body").css("cursor",n._cursor)}}),t.ui.plugin.add("draggable","opacity",{start:function(e,i,s){var n=t(i.helper),o=s.options;n.css("opacity")&&(o._opacity=n.css("opacity")),n.css("opacity",o.opacity)},stop:function(e,i,s){var n=s.options;n._opacity&&t(i.helper).css("opacity",n._opacity)}}),t.ui.plugin.add("draggable","scroll",{start:function(t,e,i){i.scrollParentNotHidden||(i.scrollParentNotHidden=i.helper.scrollParent(!1)),i.scrollParentNotHidden[0]!==i.document[0]&&"HTML"!==i.scrollParentNotHidden[0].tagName&&(i.overflowOffset=i.scrollParentNotHidden.offset())},drag:function(e,i,s){var n=s.options,o=!1,a=s.scrollParentNotHidden[0],r=s.document[0];a!==r&&"HTML"!==a.tagName?(n.axis&&"x"===n.axis||(s.overflowOffset.top+a.offsetHeight-e.pageY<n.scrollSensitivity?a.scrollTop=o=a.scrollTop+n.scrollSpeed:e.pageY-s.overflowOffset.top<n.scrollSensitivity&&(a.scrollTop=o=a.scrollTop-n.scrollSpeed)),n.axis&&"y"===n.axis||(s.overflowOffset.left+a.offsetWidth-e.pageX<n.scrollSensitivity?a.scrollLeft=o=a.scrollLeft+n.scrollSpeed:e.pageX-s.overflowOffset.left<n.scrollSensitivity&&(a.scrollLeft=o=a.scrollLeft-n.scrollSpeed))):(n.axis&&"x"===n.axis||(e.pageY-t(r).scrollTop()<n.scrollSensitivity?o=t(r).scrollTop(t(r).scrollTop()-n.scrollSpeed):t(window).height()-(e.pageY-t(r).scrollTop())<n.scrollSensitivity&&(o=t(r).scrollTop(t(r).scrollTop()+n.scrollSpeed))),n.axis&&"y"===n.axis||(e.pageX-t(r).scrollLeft()<n.scrollSensitivity?o=t(r).scrollLeft(t(r).scrollLeft()-n.scrollSpeed):t(window).width()-(e.pageX-t(r).scrollLeft())<n.scrollSensitivity&&(o=t(r).scrollLeft(t(r).scrollLeft()+n.scrollSpeed)))),o!==!1&&t.ui.ddmanager&&!n.dropBehaviour&&t.ui.ddmanager.prepareOffsets(s,e)}}),t.ui.plugin.add("draggable","snap",{start:function(e,i,s){var n=s.options;s.snapElements=[],t(n.snap.constructor!==String?n.snap.items||":data(ui-draggable)":n.snap).each(function(){var e=t(this),i=e.offset();this!==s.element[0]&&s.snapElements.push({item:this,width:e.outerWidth(),height:e.outerHeight(),top:i.top,left:i.left})})},drag:function(e,i,s){var n,o,a,r,h,l,c,u,d,p,f=s.options,g=f.snapTolerance,m=i.offset.left,_=m+s.helperProportions.width,v=i.offset.top,b=v+s.helperProportions.height;for(d=s.snapElements.length-1;d>=0;d--)h=s.snapElements[d].left-s.margins.left,l=h+s.snapElements[d].width,c=s.snapElements[d].top-s.margins.top,u=c+s.snapElements[d].height,h-g>_||m>l+g||c-g>b||v>u+g||!t.contains(s.snapElements[d].item.ownerDocument,s.snapElements[d].item)?(s.snapElements[d].snapping&&s.options.snap.release&&s.options.snap.release.call(s.element,e,t.extend(s._uiHash(),{snapItem:s.snapElements[d].item})),s.snapElements[d].snapping=!1):("inner"!==f.snapMode&&(n=g>=Math.abs(c-b),o=g>=Math.abs(u-v),a=g>=Math.abs(h-_),r=g>=Math.abs(l-m),n&&(i.position.top=s._convertPositionTo("relative",{top:c-s.helperProportions.height,left:0}).top),o&&(i.position.top=s._convertPositionTo("relative",{top:u,left:0}).top),a&&(i.position.left=s._convertPositionTo("relative",{top:0,left:h-s.helperProportions.width}).left),r&&(i.position.left=s._convertPositionTo("relative",{top:0,left:l}).left)),p=n||o||a||r,"outer"!==f.snapMode&&(n=g>=Math.abs(c-v),o=g>=Math.abs(u-b),a=g>=Math.abs(h-m),r=g>=Math.abs(l-_),n&&(i.position.top=s._convertPositionTo("relative",{top:c,left:0}).top),o&&(i.position.top=s._convertPositionTo("relative",{top:u-s.helperProportions.height,left:0}).top),a&&(i.position.left=s._convertPositionTo("relative",{top:0,left:h}).left),r&&(i.position.left=s._convertPositionTo("relative",{top:0,left:l-s.helperProportions.width}).left)),!s.snapElements[d].snapping&&(n||o||a||r||p)&&s.options.snap.snap&&s.options.snap.snap.call(s.element,e,t.extend(s._uiHash(),{snapItem:s.snapElements[d].item})),s.snapElements[d].snapping=n||o||a||r||p)}}),t.ui.plugin.add("draggable","stack",{start:function(e,i,s){var n,o=s.options,a=t.makeArray(t(o.stack)).sort(function(e,i){return(parseInt(t(e).css("zIndex"),10)||0)-(parseInt(t(i).css("zIndex"),10)||0)});a.length&&(n=parseInt(t(a[0]).css("zIndex"),10)||0,t(a).each(function(e){t(this).css("zIndex",n+e)}),this.css("zIndex",n+a.length))}}),t.ui.plugin.add("draggable","zIndex",{start:function(e,i,s){var n=t(i.helper),o=s.options;n.css("zIndex")&&(o._zIndex=n.css("zIndex")),n.css("zIndex",o.zIndex)},stop:function(e,i,s){var n=s.options;n._zIndex&&t(i.helper).css("zIndex",n._zIndex)}}),t.ui.draggable,t.widget("ui.resizable",t.ui.mouse,{version:"1.12.1",widgetEventPrefix:"resize",options:{alsoResize:!1,animate:!1,animateDuration:"slow",animateEasing:"swing",aspectRatio:!1,autoHide:!1,classes:{"ui-resizable-se":"ui-icon ui-icon-gripsmall-diagonal-se"},containment:!1,ghost:!1,grid:!1,handles:"e,s,se",helper:!1,maxHeight:null,maxWidth:null,minHeight:10,minWidth:10,zIndex:90,resize:null,start:null,stop:null},_num:function(t){return parseFloat(t)||0},_isNumber:function(t){return!isNaN(parseFloat(t))},_hasScroll:function(e,i){if("hidden"===t(e).css("overflow"))return!1;var s=i&&"left"===i?"scrollLeft":"scrollTop",n=!1;return e[s]>0?!0:(e[s]=1,n=e[s]>0,e[s]=0,n)},_create:function(){var e,i=this.options,s=this;this._addClass("ui-resizable"),t.extend(this,{_aspectRatio:!!i.aspectRatio,aspectRatio:i.aspectRatio,originalElement:this.element,_proportionallyResizeElements:[],_helper:i.helper||i.ghost||i.animate?i.helper||"ui-resizable-helper":null}),this.element[0].nodeName.match(/^(canvas|textarea|input|select|button|img)$/i)&&(this.element.wrap(t("<div class='ui-wrapper' style='overflow: hidden;'></div>").css({position:this.element.css("position"),width:this.element.outerWidth(),height:this.element.outerHeight(),top:this.element.css("top"),left:this.element.css("left")})),this.element=this.element.parent().data("ui-resizable",this.element.resizable("instance")),this.elementIsWrapper=!0,e={marginTop:this.originalElement.css("marginTop"),marginRight:this.originalElement.css("marginRight"),marginBottom:this.originalElement.css("marginBottom"),marginLeft:this.originalElement.css("marginLeft")},this.element.css(e),this.originalElement.css("margin",0),this.originalResizeStyle=this.originalElement.css("resize"),this.originalElement.css("resize","none"),this._proportionallyResizeElements.push(this.originalElement.css({position:"static",zoom:1,display:"block"})),this.originalElement.css(e),this._proportionallyResize()),this._setupHandles(),i.autoHide&&t(this.element).on("mouseenter",function(){i.disabled||(s._removeClass("ui-resizable-autohide"),s._handles.show())}).on("mouseleave",function(){i.disabled||s.resizing||(s._addClass("ui-resizable-autohide"),s._handles.hide())}),this._mouseInit()},_destroy:function(){this._mouseDestroy();var e,i=function(e){t(e).removeData("resizable").removeData("ui-resizable").off(".resizable").find(".ui-resizable-handle").remove()};return this.elementIsWrapper&&(i(this.element),e=this.element,this.originalElement.css({position:e.css("position"),width:e.outerWidth(),height:e.outerHeight(),top:e.css("top"),left:e.css("left")}).insertAfter(e),e.remove()),this.originalElement.css("resize",this.originalResizeStyle),i(this.originalElement),this},_setOption:function(t,e){switch(this._super(t,e),t){case"handles":this._removeHandles(),this._setupHandles();break;default:}},_setupHandles:function(){var e,i,s,n,o,a=this.options,r=this;if(this.handles=a.handles||(t(".ui-resizable-handle",this.element).length?{n:".ui-resizable-n",e:".ui-resizable-e",s:".ui-resizable-s",w:".ui-resizable-w",se:".ui-resizable-se",sw:".ui-resizable-sw",ne:".ui-resizable-ne",nw:".ui-resizable-nw"}:"e,s,se"),this._handles=t(),this.handles.constructor===String)for("all"===this.handles&&(this.handles="n,e,s,w,se,sw,ne,nw"),s=this.handles.split(","),this.handles={},i=0;s.length>i;i++)e=t.trim(s[i]),n="ui-resizable-"+e,o=t("<div>"),this._addClass(o,"ui-resizable-handle "+n),o.css({zIndex:a.zIndex}),this.handles[e]=".ui-resizable-"+e,this.element.append(o);this._renderAxis=function(e){var i,s,n,o;e=e||this.element;for(i in this.handles)this.handles[i].constructor===String?this.handles[i]=this.element.children(this.handles[i]).first().show():(this.handles[i].jquery||this.handles[i].nodeType)&&(this.handles[i]=t(this.handles[i]),this._on(this.handles[i],{mousedown:r._mouseDown})),this.elementIsWrapper&&this.originalElement[0].nodeName.match(/^(textarea|input|select|button)$/i)&&(s=t(this.handles[i],this.element),o=/sw|ne|nw|se|n|s/.test(i)?s.outerHeight():s.outerWidth(),n=["padding",/ne|nw|n/.test(i)?"Top":/se|sw|s/.test(i)?"Bottom":/^e$/.test(i)?"Right":"Left"].join(""),e.css(n,o),this._proportionallyResize()),this._handles=this._handles.add(this.handles[i])},this._renderAxis(this.element),this._handles=this._handles.add(this.element.find(".ui-resizable-handle")),this._handles.disableSelection(),this._handles.on("mouseover",function(){r.resizing||(this.className&&(o=this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i)),r.axis=o&&o[1]?o[1]:"se")}),a.autoHide&&(this._handles.hide(),this._addClass("ui-resizable-autohide"))},_removeHandles:function(){this._handles.remove()},_mouseCapture:function(e){var i,s,n=!1;for(i in this.handles)s=t(this.handles[i])[0],(s===e.target||t.contains(s,e.target))&&(n=!0);return!this.options.disabled&&n},_mouseStart:function(e){var i,s,n,o=this.options,a=this.element;return this.resizing=!0,this._renderProxy(),i=this._num(this.helper.css("left")),s=this._num(this.helper.css("top")),o.containment&&(i+=t(o.containment).scrollLeft()||0,s+=t(o.containment).scrollTop()||0),this.offset=this.helper.offset(),this.position={left:i,top:s},this.size=this._helper?{width:this.helper.width(),height:this.helper.height()}:{width:a.width(),height:a.height()},this.originalSize=this._helper?{width:a.outerWidth(),height:a.outerHeight()}:{width:a.width(),height:a.height()},this.sizeDiff={width:a.outerWidth()-a.width(),height:a.outerHeight()-a.height()},this.originalPosition={left:i,top:s},this.originalMousePosition={left:e.pageX,top:e.pageY},this.aspectRatio="number"==typeof o.aspectRatio?o.aspectRatio:this.originalSize.width/this.originalSize.height||1,n=t(".ui-resizable-"+this.axis).css("cursor"),t("body").css("cursor","auto"===n?this.axis+"-resize":n),this._addClass("ui-resizable-resizing"),this._propagate("start",e),!0},_mouseDrag:function(e){var i,s,n=this.originalMousePosition,o=this.axis,a=e.pageX-n.left||0,r=e.pageY-n.top||0,h=this._change[o];return this._updatePrevProperties(),h?(i=h.apply(this,[e,a,r]),this._updateVirtualBoundaries(e.shiftKey),(this._aspectRatio||e.shiftKey)&&(i=this._updateRatio(i,e)),i=this._respectSize(i,e),this._updateCache(i),this._propagate("resize",e),s=this._applyChanges(),!this._helper&&this._proportionallyResizeElements.length&&this._proportionallyResize(),t.isEmptyObject(s)||(this._updatePrevProperties(),this._trigger("resize",e,this.ui()),this._applyChanges()),!1):!1},_mouseStop:function(e){this.resizing=!1;var i,s,n,o,a,r,h,l=this.options,c=this;return this._helper&&(i=this._proportionallyResizeElements,s=i.length&&/textarea/i.test(i[0].nodeName),n=s&&this._hasScroll(i[0],"left")?0:c.sizeDiff.height,o=s?0:c.sizeDiff.width,a={width:c.helper.width()-o,height:c.helper.height()-n},r=parseFloat(c.element.css("left"))+(c.position.left-c.originalPosition.left)||null,h=parseFloat(c.element.css("top"))+(c.position.top-c.originalPosition.top)||null,l.animate||this.element.css(t.extend(a,{top:h,left:r})),c.helper.height(c.size.height),c.helper.width(c.size.width),this._helper&&!l.animate&&this._proportionallyResize()),t("body").css("cursor","auto"),this._removeClass("ui-resizable-resizing"),this._propagate("stop",e),this._helper&&this.helper.remove(),!1},_updatePrevProperties:function(){this.prevPosition={top:this.position.top,left:this.position.left},this.prevSize={width:this.size.width,height:this.size.height}},_applyChanges:function(){var t={};return this.position.top!==this.prevPosition.top&&(t.top=this.position.top+"px"),this.position.left!==this.prevPosition.left&&(t.left=this.position.left+"px"),this.size.width!==this.prevSize.width&&(t.width=this.size.width+"px"),this.size.height!==this.prevSize.height&&(t.height=this.size.height+"px"),this.helper.css(t),t},_updateVirtualBoundaries:function(t){var e,i,s,n,o,a=this.options;o={minWidth:this._isNumber(a.minWidth)?a.minWidth:0,maxWidth:this._isNumber(a.maxWidth)?a.maxWidth:1/0,minHeight:this._isNumber(a.minHeight)?a.minHeight:0,maxHeight:this._isNumber(a.maxHeight)?a.maxHeight:1/0},(this._aspectRatio||t)&&(e=o.minHeight*this.aspectRatio,s=o.minWidth/this.aspectRatio,i=o.maxHeight*this.aspectRatio,n=o.maxWidth/this.aspectRatio,e>o.minWidth&&(o.minWidth=e),s>o.minHeight&&(o.minHeight=s),o.maxWidth>i&&(o.maxWidth=i),o.maxHeight>n&&(o.maxHeight=n)),this._vBoundaries=o},_updateCache:function(t){this.offset=this.helper.offset(),this._isNumber(t.left)&&(this.position.left=t.left),this._isNumber(t.top)&&(this.position.top=t.top),this._isNumber(t.height)&&(this.size.height=t.height),this._isNumber(t.width)&&(this.size.width=t.width)},_updateRatio:function(t){var e=this.position,i=this.size,s=this.axis;return this._isNumber(t.height)?t.width=t.height*this.aspectRatio:this._isNumber(t.width)&&(t.height=t.width/this.aspectRatio),"sw"===s&&(t.left=e.left+(i.width-t.width),t.top=null),"nw"===s&&(t.top=e.top+(i.height-t.height),t.left=e.left+(i.width-t.width)),t},_respectSize:function(t){var e=this._vBoundaries,i=this.axis,s=this._isNumber(t.width)&&e.maxWidth&&e.maxWidth<t.width,n=this._isNumber(t.height)&&e.maxHeight&&e.maxHeight<t.height,o=this._isNumber(t.width)&&e.minWidth&&e.minWidth>t.width,a=this._isNumber(t.height)&&e.minHeight&&e.minHeight>t.height,r=this.originalPosition.left+this.originalSize.width,h=this.originalPosition.top+this.originalSize.height,l=/sw|nw|w/.test(i),c=/nw|ne|n/.test(i);return o&&(t.width=e.minWidth),a&&(t.height=e.minHeight),s&&(t.width=e.maxWidth),n&&(t.height=e.maxHeight),o&&l&&(t.left=r-e.minWidth),s&&l&&(t.left=r-e.maxWidth),a&&c&&(t.top=h-e.minHeight),n&&c&&(t.top=h-e.maxHeight),t.width||t.height||t.left||!t.top?t.width||t.height||t.top||!t.left||(t.left=null):t.top=null,t},_getPaddingPlusBorderDimensions:function(t){for(var e=0,i=[],s=[t.css("borderTopWidth"),t.css("borderRightWidth"),t.css("borderBottomWidth"),t.css("borderLeftWidth")],n=[t.css("paddingTop"),t.css("paddingRight"),t.css("paddingBottom"),t.css("paddingLeft")];4>e;e++)i[e]=parseFloat(s[e])||0,i[e]+=parseFloat(n[e])||0;return{height:i[0]+i[2],width:i[1]+i[3]}},_proportionallyResize:function(){if(this._proportionallyResizeElements.length)for(var t,e=0,i=this.helper||this.element;this._proportionallyResizeElements.length>e;e++)t=this._proportionallyResizeElements[e],this.outerDimensions||(this.outerDimensions=this._getPaddingPlusBorderDimensions(t)),t.css({height:i.height()-this.outerDimensions.height||0,width:i.width()-this.outerDimensions.width||0})},_renderProxy:function(){var e=this.element,i=this.options;this.elementOffset=e.offset(),this._helper?(this.helper=this.helper||t("<div style='overflow:hidden;'></div>"),this._addClass(this.helper,this._helper),this.helper.css({width:this.element.outerWidth(),height:this.element.outerHeight(),position:"absolute",left:this.elementOffset.left+"px",top:this.elementOffset.top+"px",zIndex:++i.zIndex}),this.helper.appendTo("body").disableSelection()):this.helper=this.element},_change:{e:function(t,e){return{width:this.originalSize.width+e}},w:function(t,e){var i=this.originalSize,s=this.originalPosition;return{left:s.left+e,width:i.width-e}},n:function(t,e,i){var s=this.originalSize,n=this.originalPosition;return{top:n.top+i,height:s.height-i}},s:function(t,e,i){return{height:this.originalSize.height+i}},se:function(e,i,s){return t.extend(this._change.s.apply(this,arguments),this._change.e.apply(this,[e,i,s]))},sw:function(e,i,s){return t.extend(this._change.s.apply(this,arguments),this._change.w.apply(this,[e,i,s]))},ne:function(e,i,s){return t.extend(this._change.n.apply(this,arguments),this._change.e.apply(this,[e,i,s]))},nw:function(e,i,s){return t.extend(this._change.n.apply(this,arguments),this._change.w.apply(this,[e,i,s]))}},_propagate:function(e,i){t.ui.plugin.call(this,e,[i,this.ui()]),"resize"!==e&&this._trigger(e,i,this.ui())},plugins:{},ui:function(){return{originalElement:this.originalElement,element:this.element,helper:this.helper,position:this.position,size:this.size,originalSize:this.originalSize,originalPosition:this.originalPosition}}}),t.ui.plugin.add("resizable","animate",{stop:function(e){var i=t(this).resizable("instance"),s=i.options,n=i._proportionallyResizeElements,o=n.length&&/textarea/i.test(n[0].nodeName),a=o&&i._hasScroll(n[0],"left")?0:i.sizeDiff.height,r=o?0:i.sizeDiff.width,h={width:i.size.width-r,height:i.size.height-a},l=parseFloat(i.element.css("left"))+(i.position.left-i.originalPosition.left)||null,c=parseFloat(i.element.css("top"))+(i.position.top-i.originalPosition.top)||null;i.element.animate(t.extend(h,c&&l?{top:c,left:l}:{}),{duration:s.animateDuration,easing:s.animateEasing,step:function(){var s={width:parseFloat(i.element.css("width")),height:parseFloat(i.element.css("height")),top:parseFloat(i.element.css("top")),left:parseFloat(i.element.css("left"))};n&&n.length&&t(n[0]).css({width:s.width,height:s.height}),i._updateCache(s),i._propagate("resize",e)}})}}),t.ui.plugin.add("resizable","containment",{start:function(){var e,i,s,n,o,a,r,h=t(this).resizable("instance"),l=h.options,c=h.element,u=l.containment,d=u instanceof t?u.get(0):/parent/.test(u)?c.parent().get(0):u;d&&(h.containerElement=t(d),/document/.test(u)||u===document?(h.containerOffset={left:0,top:0},h.containerPosition={left:0,top:0},h.parentData={element:t(document),left:0,top:0,width:t(document).width(),height:t(document).height()||document.body.parentNode.scrollHeight}):(e=t(d),i=[],t(["Top","Right","Left","Bottom"]).each(function(t,s){i[t]=h._num(e.css("padding"+s))}),h.containerOffset=e.offset(),h.containerPosition=e.position(),h.containerSize={height:e.innerHeight()-i[3],width:e.innerWidth()-i[1]},s=h.containerOffset,n=h.containerSize.height,o=h.containerSize.width,a=h._hasScroll(d,"left")?d.scrollWidth:o,r=h._hasScroll(d)?d.scrollHeight:n,h.parentData={element:d,left:s.left,top:s.top,width:a,height:r}))},resize:function(e){var i,s,n,o,a=t(this).resizable("instance"),r=a.options,h=a.containerOffset,l=a.position,c=a._aspectRatio||e.shiftKey,u={top:0,left:0},d=a.containerElement,p=!0;d[0]!==document&&/static/.test(d.css("position"))&&(u=h),l.left<(a._helper?h.left:0)&&(a.size.width=a.size.width+(a._helper?a.position.left-h.left:a.position.left-u.left),c&&(a.size.height=a.size.width/a.aspectRatio,p=!1),a.position.left=r.helper?h.left:0),l.top<(a._helper?h.top:0)&&(a.size.height=a.size.height+(a._helper?a.position.top-h.top:a.position.top),c&&(a.size.width=a.size.height*a.aspectRatio,p=!1),a.position.top=a._helper?h.top:0),n=a.containerElement.get(0)===a.element.parent().get(0),o=/relative|absolute/.test(a.containerElement.css("position")),n&&o?(a.offset.left=a.parentData.left+a.position.left,a.offset.top=a.parentData.top+a.position.top):(a.offset.left=a.element.offset().left,a.offset.top=a.element.offset().top),i=Math.abs(a.sizeDiff.width+(a._helper?a.offset.left-u.left:a.offset.left-h.left)),s=Math.abs(a.sizeDiff.height+(a._helper?a.offset.top-u.top:a.offset.top-h.top)),i+a.size.width>=a.parentData.width&&(a.size.width=a.parentData.width-i,c&&(a.size.height=a.size.width/a.aspectRatio,p=!1)),s+a.size.height>=a.parentData.height&&(a.size.height=a.parentData.height-s,c&&(a.size.width=a.size.height*a.aspectRatio,p=!1)),p||(a.position.left=a.prevPosition.left,a.position.top=a.prevPosition.top,a.size.width=a.prevSize.width,a.size.height=a.prevSize.height)},stop:function(){var e=t(this).resizable("instance"),i=e.options,s=e.containerOffset,n=e.containerPosition,o=e.containerElement,a=t(e.helper),r=a.offset(),h=a.outerWidth()-e.sizeDiff.width,l=a.outerHeight()-e.sizeDiff.height;e._helper&&!i.animate&&/relative/.test(o.css("position"))&&t(this).css({left:r.left-n.left-s.left,width:h,height:l}),e._helper&&!i.animate&&/static/.test(o.css("position"))&&t(this).css({left:r.left-n.left-s.left,width:h,height:l})}}),t.ui.plugin.add("resizable","alsoResize",{start:function(){var e=t(this).resizable("instance"),i=e.options;t(i.alsoResize).each(function(){var e=t(this);e.data("ui-resizable-alsoresize",{width:parseFloat(e.width()),height:parseFloat(e.height()),left:parseFloat(e.css("left")),top:parseFloat(e.css("top"))})})},resize:function(e,i){var s=t(this).resizable("instance"),n=s.options,o=s.originalSize,a=s.originalPosition,r={height:s.size.height-o.height||0,width:s.size.width-o.width||0,top:s.position.top-a.top||0,left:s.position.left-a.left||0};t(n.alsoResize).each(function(){var e=t(this),s=t(this).data("ui-resizable-alsoresize"),n={},o=e.parents(i.originalElement[0]).length?["width","height"]:["width","height","top","left"];t.each(o,function(t,e){var i=(s[e]||0)+(r[e]||0);i&&i>=0&&(n[e]=i||null)}),e.css(n)})},stop:function(){t(this).removeData("ui-resizable-alsoresize")}}),t.ui.plugin.add("resizable","ghost",{start:function(){var e=t(this).resizable("instance"),i=e.size;e.ghost=e.originalElement.clone(),e.ghost.css({opacity:.25,display:"block",position:"relative",height:i.height,width:i.width,margin:0,left:0,top:0}),e._addClass(e.ghost,"ui-resizable-ghost"),t.uiBackCompat!==!1&&"string"==typeof e.options.ghost&&e.ghost.addClass(this.options.ghost),e.ghost.appendTo(e.helper)},resize:function(){var e=t(this).resizable("instance");e.ghost&&e.ghost.css({position:"relative",height:e.size.height,width:e.size.width})},stop:function(){var e=t(this).resizable("instance");e.ghost&&e.helper&&e.helper.get(0).removeChild(e.ghost.get(0))}}),t.ui.plugin.add("resizable","grid",{resize:function(){var e,i=t(this).resizable("instance"),s=i.options,n=i.size,o=i.originalSize,a=i.originalPosition,r=i.axis,h="number"==typeof s.grid?[s.grid,s.grid]:s.grid,l=h[0]||1,c=h[1]||1,u=Math.round((n.width-o.width)/l)*l,d=Math.round((n.height-o.height)/c)*c,p=o.width+u,f=o.height+d,g=s.maxWidth&&p>s.maxWidth,m=s.maxHeight&&f>s.maxHeight,_=s.minWidth&&s.minWidth>p,v=s.minHeight&&s.minHeight>f;s.grid=h,_&&(p+=l),v&&(f+=c),g&&(p-=l),m&&(f-=c),/^(se|s|e)$/.test(r)?(i.size.width=p,i.size.height=f):/^(ne)$/.test(r)?(i.size.width=p,i.size.height=f,i.position.top=a.top-d):/^(sw)$/.test(r)?(i.size.width=p,i.size.height=f,i.position.left=a.left-u):((0>=f-c||0>=p-l)&&(e=i._getPaddingPlusBorderDimensions(this)),f-c>0?(i.size.height=f,i.position.top=a.top-d):(f=c-e.height,i.size.height=f,i.position.top=a.top+o.height-f),p-l>0?(i.size.width=p,i.position.left=a.left-u):(p=l-e.width,i.size.width=p,i.position.left=a.left+o.width-p))}}),t.ui.resizable,t.widget("ui.dialog",{version:"1.12.1",options:{appendTo:"body",autoOpen:!0,buttons:[],classes:{"ui-dialog":"ui-corner-all","ui-dialog-titlebar":"ui-corner-all"},closeOnEscape:!0,closeText:"Close",draggable:!0,hide:null,height:"auto",maxHeight:null,maxWidth:null,minHeight:150,minWidth:150,modal:!1,position:{my:"center",at:"center",of:window,collision:"fit",using:function(e){var i=t(this).css(e).offset().top;0>i&&t(this).css("top",e.top-i)}},resizable:!0,show:null,title:null,width:300,beforeClose:null,close:null,drag:null,dragStart:null,dragStop:null,focus:null,open:null,resize:null,resizeStart:null,resizeStop:null},sizeRelatedOptions:{buttons:!0,height:!0,maxHeight:!0,maxWidth:!0,minHeight:!0,minWidth:!0,width:!0},resizableRelatedOptions:{maxHeight:!0,maxWidth:!0,minHeight:!0,minWidth:!0},_create:function(){this.originalCss={display:this.element[0].style.display,width:this.element[0].style.width,minHeight:this.element[0].style.minHeight,maxHeight:this.element[0].style.maxHeight,height:this.element[0].style.height},this.originalPosition={parent:this.element.parent(),index:this.element.parent().children().index(this.element)},this.originalTitle=this.element.attr("title"),null==this.options.title&&null!=this.originalTitle&&(this.options.title=this.originalTitle),this.options.disabled&&(this.options.disabled=!1),this._createWrapper(),this.element.show().removeAttr("title").appendTo(this.uiDialog),this._addClass("ui-dialog-content","ui-widget-content"),this._createTitlebar(),this._createButtonPane(),this.options.draggable&&t.fn.draggable&&this._makeDraggable(),this.options.resizable&&t.fn.resizable&&this._makeResizable(),this._isOpen=!1,this._trackFocus()},_init:function(){this.options.autoOpen&&this.open()},_appendTo:function(){var e=this.options.appendTo;return e&&(e.jquery||e.nodeType)?t(e):this.document.find(e||"body").eq(0)},_destroy:function(){var t,e=this.originalPosition;this._untrackInstance(),this._destroyOverlay(),this.element.removeUniqueId().css(this.originalCss).detach(),this.uiDialog.remove(),this.originalTitle&&this.element.attr("title",this.originalTitle),t=e.parent.children().eq(e.index),t.length&&t[0]!==this.element[0]?t.before(this.element):e.parent.append(this.element)},widget:function(){return this.uiDialog
    },disable:t.noop,enable:t.noop,close:function(e){var i=this;this._isOpen&&this._trigger("beforeClose",e)!==!1&&(this._isOpen=!1,this._focusedElement=null,this._destroyOverlay(),this._untrackInstance(),this.opener.filter(":focusable").trigger("focus").length||t.ui.safeBlur(t.ui.safeActiveElement(this.document[0])),this._hide(this.uiDialog,this.options.hide,function(){i._trigger("close",e)}))},isOpen:function(){return this._isOpen},moveToTop:function(){this._moveToTop()},_moveToTop:function(e,i){var s=!1,n=this.uiDialog.siblings(".ui-front:visible").map(function(){return+t(this).css("z-index")}).get(),o=Math.max.apply(null,n);return o>=+this.uiDialog.css("z-index")&&(this.uiDialog.css("z-index",o+1),s=!0),s&&!i&&this._trigger("focus",e),s},open:function(){var e=this;return this._isOpen?(this._moveToTop()&&this._focusTabbable(),void 0):(this._isOpen=!0,this.opener=t(t.ui.safeActiveElement(this.document[0])),this._size(),this._position(),this._createOverlay(),this._moveToTop(null,!0),this.overlay&&this.overlay.css("z-index",this.uiDialog.css("z-index")-1),this._show(this.uiDialog,this.options.show,function(){e._focusTabbable(),e._trigger("focus")}),this._makeFocusTarget(),this._trigger("open"),void 0)},_focusTabbable:function(){var t=this._focusedElement;t||(t=this.element.find("[autofocus]")),t.length||(t=this.element.find(":tabbable")),t.length||(t=this.uiDialogButtonPane.find(":tabbable")),t.length||(t=this.uiDialogTitlebarClose.filter(":tabbable")),t.length||(t=this.uiDialog),t.eq(0).trigger("focus")},_keepFocus:function(e){function i(){var e=t.ui.safeActiveElement(this.document[0]),i=this.uiDialog[0]===e||t.contains(this.uiDialog[0],e);i||this._focusTabbable()}e.preventDefault(),i.call(this),this._delay(i)},_createWrapper:function(){this.uiDialog=t("<div>").hide().attr({tabIndex:-1,role:"dialog"}).appendTo(this._appendTo()),this._addClass(this.uiDialog,"ui-dialog","ui-widget ui-widget-content ui-front"),this._on(this.uiDialog,{keydown:function(e){if(this.options.closeOnEscape&&!e.isDefaultPrevented()&&e.keyCode&&e.keyCode===t.ui.keyCode.ESCAPE)return e.preventDefault(),this.close(e),void 0;if(e.keyCode===t.ui.keyCode.TAB&&!e.isDefaultPrevented()){var i=this.uiDialog.find(":tabbable"),s=i.filter(":first"),n=i.filter(":last");e.target!==n[0]&&e.target!==this.uiDialog[0]||e.shiftKey?e.target!==s[0]&&e.target!==this.uiDialog[0]||!e.shiftKey||(this._delay(function(){n.trigger("focus")}),e.preventDefault()):(this._delay(function(){s.trigger("focus")}),e.preventDefault())}},mousedown:function(t){this._moveToTop(t)&&this._focusTabbable()}}),this.element.find("[aria-describedby]").length||this.uiDialog.attr({"aria-describedby":this.element.uniqueId().attr("id")})},_createTitlebar:function(){var e;this.uiDialogTitlebar=t("<div>"),this._addClass(this.uiDialogTitlebar,"ui-dialog-titlebar","ui-widget-header ui-helper-clearfix"),this._on(this.uiDialogTitlebar,{mousedown:function(e){t(e.target).closest(".ui-dialog-titlebar-close")||this.uiDialog.trigger("focus")}}),this.uiDialogTitlebarClose=t("<button type='button'></button>").button({label:t("<a>").text(this.options.closeText).html(),icon:"ui-icon-closethick",showLabel:!1}).appendTo(this.uiDialogTitlebar),this._addClass(this.uiDialogTitlebarClose,"ui-dialog-titlebar-close"),this._on(this.uiDialogTitlebarClose,{click:function(t){t.preventDefault(),this.close(t)}}),e=t("<span>").uniqueId().prependTo(this.uiDialogTitlebar),this._addClass(e,"ui-dialog-title"),this._title(e),this.uiDialogTitlebar.prependTo(this.uiDialog),this.uiDialog.attr({"aria-labelledby":e.attr("id")})},_title:function(t){this.options.title?t.text(this.options.title):t.html("&#160;")},_createButtonPane:function(){this.uiDialogButtonPane=t("<div>"),this._addClass(this.uiDialogButtonPane,"ui-dialog-buttonpane","ui-widget-content ui-helper-clearfix"),this.uiButtonSet=t("<div>").appendTo(this.uiDialogButtonPane),this._addClass(this.uiButtonSet,"ui-dialog-buttonset"),this._createButtons()},_createButtons:function(){var e=this,i=this.options.buttons;return this.uiDialogButtonPane.remove(),this.uiButtonSet.empty(),t.isEmptyObject(i)||t.isArray(i)&&!i.length?(this._removeClass(this.uiDialog,"ui-dialog-buttons"),void 0):(t.each(i,function(i,s){var n,o;s=t.isFunction(s)?{click:s,text:i}:s,s=t.extend({type:"button"},s),n=s.click,o={icon:s.icon,iconPosition:s.iconPosition,showLabel:s.showLabel,icons:s.icons,text:s.text},delete s.click,delete s.icon,delete s.iconPosition,delete s.showLabel,delete s.icons,"boolean"==typeof s.text&&delete s.text,t("<button></button>",s).button(o).appendTo(e.uiButtonSet).on("click",function(){n.apply(e.element[0],arguments)})}),this._addClass(this.uiDialog,"ui-dialog-buttons"),this.uiDialogButtonPane.appendTo(this.uiDialog),void 0)},_makeDraggable:function(){function e(t){return{position:t.position,offset:t.offset}}var i=this,s=this.options;this.uiDialog.draggable({cancel:".ui-dialog-content, .ui-dialog-titlebar-close",handle:".ui-dialog-titlebar",containment:"document",start:function(s,n){i._addClass(t(this),"ui-dialog-dragging"),i._blockFrames(),i._trigger("dragStart",s,e(n))},drag:function(t,s){i._trigger("drag",t,e(s))},stop:function(n,o){var a=o.offset.left-i.document.scrollLeft(),r=o.offset.top-i.document.scrollTop();s.position={my:"left top",at:"left"+(a>=0?"+":"")+a+" "+"top"+(r>=0?"+":"")+r,of:i.window},i._removeClass(t(this),"ui-dialog-dragging"),i._unblockFrames(),i._trigger("dragStop",n,e(o))}})},_makeResizable:function(){function e(t){return{originalPosition:t.originalPosition,originalSize:t.originalSize,position:t.position,size:t.size}}var i=this,s=this.options,n=s.resizable,o=this.uiDialog.css("position"),a="string"==typeof n?n:"n,e,s,w,se,sw,ne,nw";this.uiDialog.resizable({cancel:".ui-dialog-content",containment:"document",alsoResize:this.element,maxWidth:s.maxWidth,maxHeight:s.maxHeight,minWidth:s.minWidth,minHeight:this._minHeight(),handles:a,start:function(s,n){i._addClass(t(this),"ui-dialog-resizing"),i._blockFrames(),i._trigger("resizeStart",s,e(n))},resize:function(t,s){i._trigger("resize",t,e(s))},stop:function(n,o){var a=i.uiDialog.offset(),r=a.left-i.document.scrollLeft(),h=a.top-i.document.scrollTop();s.height=i.uiDialog.height(),s.width=i.uiDialog.width(),s.position={my:"left top",at:"left"+(r>=0?"+":"")+r+" "+"top"+(h>=0?"+":"")+h,of:i.window},i._removeClass(t(this),"ui-dialog-resizing"),i._unblockFrames(),i._trigger("resizeStop",n,e(o))}}).css("position",o)},_trackFocus:function(){this._on(this.widget(),{focusin:function(e){this._makeFocusTarget(),this._focusedElement=t(e.target)}})},_makeFocusTarget:function(){this._untrackInstance(),this._trackingInstances().unshift(this)},_untrackInstance:function(){var e=this._trackingInstances(),i=t.inArray(this,e);-1!==i&&e.splice(i,1)},_trackingInstances:function(){var t=this.document.data("ui-dialog-instances");return t||(t=[],this.document.data("ui-dialog-instances",t)),t},_minHeight:function(){var t=this.options;return"auto"===t.height?t.minHeight:Math.min(t.minHeight,t.height)},_position:function(){var t=this.uiDialog.is(":visible");t||this.uiDialog.show(),this.uiDialog.position(this.options.position),t||this.uiDialog.hide()},_setOptions:function(e){var i=this,s=!1,n={};t.each(e,function(t,e){i._setOption(t,e),t in i.sizeRelatedOptions&&(s=!0),t in i.resizableRelatedOptions&&(n[t]=e)}),s&&(this._size(),this._position()),this.uiDialog.is(":data(ui-resizable)")&&this.uiDialog.resizable("option",n)},_setOption:function(e,i){var s,n,o=this.uiDialog;"disabled"!==e&&(this._super(e,i),"appendTo"===e&&this.uiDialog.appendTo(this._appendTo()),"buttons"===e&&this._createButtons(),"closeText"===e&&this.uiDialogTitlebarClose.button({label:t("<a>").text(""+this.options.closeText).html()}),"draggable"===e&&(s=o.is(":data(ui-draggable)"),s&&!i&&o.draggable("destroy"),!s&&i&&this._makeDraggable()),"position"===e&&this._position(),"resizable"===e&&(n=o.is(":data(ui-resizable)"),n&&!i&&o.resizable("destroy"),n&&"string"==typeof i&&o.resizable("option","handles",i),n||i===!1||this._makeResizable()),"title"===e&&this._title(this.uiDialogTitlebar.find(".ui-dialog-title")))},_size:function(){var t,e,i,s=this.options;this.element.show().css({width:"auto",minHeight:0,maxHeight:"none",height:0}),s.minWidth>s.width&&(s.width=s.minWidth),t=this.uiDialog.css({height:"auto",width:s.width}).outerHeight(),e=Math.max(0,s.minHeight-t),i="number"==typeof s.maxHeight?Math.max(0,s.maxHeight-t):"none","auto"===s.height?this.element.css({minHeight:e,maxHeight:i,height:"auto"}):this.element.height(Math.max(0,s.height-t)),this.uiDialog.is(":data(ui-resizable)")&&this.uiDialog.resizable("option","minHeight",this._minHeight())},_blockFrames:function(){this.iframeBlocks=this.document.find("iframe").map(function(){var e=t(this);return t("<div>").css({position:"absolute",width:e.outerWidth(),height:e.outerHeight()}).appendTo(e.parent()).offset(e.offset())[0]})},_unblockFrames:function(){this.iframeBlocks&&(this.iframeBlocks.remove(),delete this.iframeBlocks)},_allowInteraction:function(e){return t(e.target).closest(".ui-dialog").length?!0:!!t(e.target).closest(".ui-datepicker").length},_createOverlay:function(){if(this.options.modal){var e=!0;this._delay(function(){e=!1}),this.document.data("ui-dialog-overlays")||this._on(this.document,{focusin:function(t){e||this._allowInteraction(t)||(t.preventDefault(),this._trackingInstances()[0]._focusTabbable())}}),this.overlay=t("<div>").appendTo(this._appendTo()),this._addClass(this.overlay,null,"ui-widget-overlay ui-front"),this._on(this.overlay,{mousedown:"_keepFocus"}),this.document.data("ui-dialog-overlays",(this.document.data("ui-dialog-overlays")||0)+1)}},_destroyOverlay:function(){if(this.options.modal&&this.overlay){var t=this.document.data("ui-dialog-overlays")-1;t?this.document.data("ui-dialog-overlays",t):(this._off(this.document,"focusin"),this.document.removeData("ui-dialog-overlays")),this.overlay.remove(),this.overlay=null}}}),t.uiBackCompat!==!1&&t.widget("ui.dialog",t.ui.dialog,{options:{dialogClass:""},_createWrapper:function(){this._super(),this.uiDialog.addClass(this.options.dialogClass)},_setOption:function(t,e){"dialogClass"===t&&this.uiDialog.removeClass(this.options.dialogClass).addClass(e),this._superApply(arguments)}}),t.ui.dialog,t.widget("ui.droppable",{version:"1.12.1",widgetEventPrefix:"drop",options:{accept:"*",addClasses:!0,greedy:!1,scope:"default",tolerance:"intersect",activate:null,deactivate:null,drop:null,out:null,over:null},_create:function(){var e,i=this.options,s=i.accept;this.isover=!1,this.isout=!0,this.accept=t.isFunction(s)?s:function(t){return t.is(s)},this.proportions=function(){return arguments.length?(e=arguments[0],void 0):e?e:e={width:this.element[0].offsetWidth,height:this.element[0].offsetHeight}},this._addToManager(i.scope),i.addClasses&&this._addClass("ui-droppable")},_addToManager:function(e){t.ui.ddmanager.droppables[e]=t.ui.ddmanager.droppables[e]||[],t.ui.ddmanager.droppables[e].push(this)},_splice:function(t){for(var e=0;t.length>e;e++)t[e]===this&&t.splice(e,1)},_destroy:function(){var e=t.ui.ddmanager.droppables[this.options.scope];this._splice(e)},_setOption:function(e,i){if("accept"===e)this.accept=t.isFunction(i)?i:function(t){return t.is(i)};else if("scope"===e){var s=t.ui.ddmanager.droppables[this.options.scope];this._splice(s),this._addToManager(i)}this._super(e,i)},_activate:function(e){var i=t.ui.ddmanager.current;this._addActiveClass(),i&&this._trigger("activate",e,this.ui(i))},_deactivate:function(e){var i=t.ui.ddmanager.current;this._removeActiveClass(),i&&this._trigger("deactivate",e,this.ui(i))},_over:function(e){var i=t.ui.ddmanager.current;i&&(i.currentItem||i.element)[0]!==this.element[0]&&this.accept.call(this.element[0],i.currentItem||i.element)&&(this._addHoverClass(),this._trigger("over",e,this.ui(i)))},_out:function(e){var i=t.ui.ddmanager.current;i&&(i.currentItem||i.element)[0]!==this.element[0]&&this.accept.call(this.element[0],i.currentItem||i.element)&&(this._removeHoverClass(),this._trigger("out",e,this.ui(i)))},_drop:function(e,i){var s=i||t.ui.ddmanager.current,n=!1;return s&&(s.currentItem||s.element)[0]!==this.element[0]?(this.element.find(":data(ui-droppable)").not(".ui-draggable-dragging").each(function(){var i=t(this).droppable("instance");return i.options.greedy&&!i.options.disabled&&i.options.scope===s.options.scope&&i.accept.call(i.element[0],s.currentItem||s.element)&&v(s,t.extend(i,{offset:i.element.offset()}),i.options.tolerance,e)?(n=!0,!1):void 0}),n?!1:this.accept.call(this.element[0],s.currentItem||s.element)?(this._removeActiveClass(),this._removeHoverClass(),this._trigger("drop",e,this.ui(s)),this.element):!1):!1},ui:function(t){return{draggable:t.currentItem||t.element,helper:t.helper,position:t.position,offset:t.positionAbs}},_addHoverClass:function(){this._addClass("ui-droppable-hover")},_removeHoverClass:function(){this._removeClass("ui-droppable-hover")},_addActiveClass:function(){this._addClass("ui-droppable-active")},_removeActiveClass:function(){this._removeClass("ui-droppable-active")}});var v=t.ui.intersect=function(){function t(t,e,i){return t>=e&&e+i>t}return function(e,i,s,n){if(!i.offset)return!1;var o=(e.positionAbs||e.position.absolute).left+e.margins.left,a=(e.positionAbs||e.position.absolute).top+e.margins.top,r=o+e.helperProportions.width,h=a+e.helperProportions.height,l=i.offset.left,c=i.offset.top,u=l+i.proportions().width,d=c+i.proportions().height;switch(s){case"fit":return o>=l&&u>=r&&a>=c&&d>=h;case"intersect":return o+e.helperProportions.width/2>l&&u>r-e.helperProportions.width/2&&a+e.helperProportions.height/2>c&&d>h-e.helperProportions.height/2;case"pointer":return t(n.pageY,c,i.proportions().height)&&t(n.pageX,l,i.proportions().width);case"touch":return(a>=c&&d>=a||h>=c&&d>=h||c>a&&h>d)&&(o>=l&&u>=o||r>=l&&u>=r||l>o&&r>u);default:return!1}}}();t.ui.ddmanager={current:null,droppables:{"default":[]},prepareOffsets:function(e,i){var s,n,o=t.ui.ddmanager.droppables[e.options.scope]||[],a=i?i.type:null,r=(e.currentItem||e.element).find(":data(ui-droppable)").addBack();t:for(s=0;o.length>s;s++)if(!(o[s].options.disabled||e&&!o[s].accept.call(o[s].element[0],e.currentItem||e.element))){for(n=0;r.length>n;n++)if(r[n]===o[s].element[0]){o[s].proportions().height=0;continue t}o[s].visible="none"!==o[s].element.css("display"),o[s].visible&&("mousedown"===a&&o[s]._activate.call(o[s],i),o[s].offset=o[s].element.offset(),o[s].proportions({width:o[s].element[0].offsetWidth,height:o[s].element[0].offsetHeight}))}},drop:function(e,i){var s=!1;return t.each((t.ui.ddmanager.droppables[e.options.scope]||[]).slice(),function(){this.options&&(!this.options.disabled&&this.visible&&v(e,this,this.options.tolerance,i)&&(s=this._drop.call(this,i)||s),!this.options.disabled&&this.visible&&this.accept.call(this.element[0],e.currentItem||e.element)&&(this.isout=!0,this.isover=!1,this._deactivate.call(this,i)))}),s},dragStart:function(e,i){e.element.parentsUntil("body").on("scroll.droppable",function(){e.options.refreshPositions||t.ui.ddmanager.prepareOffsets(e,i)})},drag:function(e,i){e.options.refreshPositions&&t.ui.ddmanager.prepareOffsets(e,i),t.each(t.ui.ddmanager.droppables[e.options.scope]||[],function(){if(!this.options.disabled&&!this.greedyChild&&this.visible){var s,n,o,a=v(e,this,this.options.tolerance,i),r=!a&&this.isover?"isout":a&&!this.isover?"isover":null;r&&(this.options.greedy&&(n=this.options.scope,o=this.element.parents(":data(ui-droppable)").filter(function(){return t(this).droppable("instance").options.scope===n}),o.length&&(s=t(o[0]).droppable("instance"),s.greedyChild="isover"===r)),s&&"isover"===r&&(s.isover=!1,s.isout=!0,s._out.call(s,i)),this[r]=!0,this["isout"===r?"isover":"isout"]=!1,this["isover"===r?"_over":"_out"].call(this,i),s&&"isout"===r&&(s.isout=!1,s.isover=!0,s._over.call(s,i)))}})},dragStop:function(e,i){e.element.parentsUntil("body").off("scroll.droppable"),e.options.refreshPositions||t.ui.ddmanager.prepareOffsets(e,i)}},t.uiBackCompat!==!1&&t.widget("ui.droppable",t.ui.droppable,{options:{hoverClass:!1,activeClass:!1},_addActiveClass:function(){this._super(),this.options.activeClass&&this.element.addClass(this.options.activeClass)},_removeActiveClass:function(){this._super(),this.options.activeClass&&this.element.removeClass(this.options.activeClass)},_addHoverClass:function(){this._super(),this.options.hoverClass&&this.element.addClass(this.options.hoverClass)},_removeHoverClass:function(){this._super(),this.options.hoverClass&&this.element.removeClass(this.options.hoverClass)}}),t.ui.droppable,t.widget("ui.progressbar",{version:"1.12.1",options:{classes:{"ui-progressbar":"ui-corner-all","ui-progressbar-value":"ui-corner-left","ui-progressbar-complete":"ui-corner-right"},max:100,value:0,change:null,complete:null},min:0,_create:function(){this.oldValue=this.options.value=this._constrainedValue(),this.element.attr({role:"progressbar","aria-valuemin":this.min}),this._addClass("ui-progressbar","ui-widget ui-widget-content"),this.valueDiv=t("<div>").appendTo(this.element),this._addClass(this.valueDiv,"ui-progressbar-value","ui-widget-header"),this._refreshValue()},_destroy:function(){this.element.removeAttr("role aria-valuemin aria-valuemax aria-valuenow"),this.valueDiv.remove()},value:function(t){return void 0===t?this.options.value:(this.options.value=this._constrainedValue(t),this._refreshValue(),void 0)},_constrainedValue:function(t){return void 0===t&&(t=this.options.value),this.indeterminate=t===!1,"number"!=typeof t&&(t=0),this.indeterminate?!1:Math.min(this.options.max,Math.max(this.min,t))},_setOptions:function(t){var e=t.value;delete t.value,this._super(t),this.options.value=this._constrainedValue(e),this._refreshValue()},_setOption:function(t,e){"max"===t&&(e=Math.max(this.min,e)),this._super(t,e)},_setOptionDisabled:function(t){this._super(t),this.element.attr("aria-disabled",t),this._toggleClass(null,"ui-state-disabled",!!t)},_percentage:function(){return this.indeterminate?100:100*(this.options.value-this.min)/(this.options.max-this.min)},_refreshValue:function(){var e=this.options.value,i=this._percentage();this.valueDiv.toggle(this.indeterminate||e>this.min).width(i.toFixed(0)+"%"),this._toggleClass(this.valueDiv,"ui-progressbar-complete",null,e===this.options.max)._toggleClass("ui-progressbar-indeterminate",null,this.indeterminate),this.indeterminate?(this.element.removeAttr("aria-valuenow"),this.overlayDiv||(this.overlayDiv=t("<div>").appendTo(this.valueDiv),this._addClass(this.overlayDiv,"ui-progressbar-overlay"))):(this.element.attr({"aria-valuemax":this.options.max,"aria-valuenow":e}),this.overlayDiv&&(this.overlayDiv.remove(),this.overlayDiv=null)),this.oldValue!==e&&(this.oldValue=e,this._trigger("change")),e===this.options.max&&this._trigger("complete")}}),t.widget("ui.selectable",t.ui.mouse,{version:"1.12.1",options:{appendTo:"body",autoRefresh:!0,distance:0,filter:"*",tolerance:"touch",selected:null,selecting:null,start:null,stop:null,unselected:null,unselecting:null},_create:function(){var e=this;this._addClass("ui-selectable"),this.dragged=!1,this.refresh=function(){e.elementPos=t(e.element[0]).offset(),e.selectees=t(e.options.filter,e.element[0]),e._addClass(e.selectees,"ui-selectee"),e.selectees.each(function(){var i=t(this),s=i.offset(),n={left:s.left-e.elementPos.left,top:s.top-e.elementPos.top};t.data(this,"selectable-item",{element:this,$element:i,left:n.left,top:n.top,right:n.left+i.outerWidth(),bottom:n.top+i.outerHeight(),startselected:!1,selected:i.hasClass("ui-selected"),selecting:i.hasClass("ui-selecting"),unselecting:i.hasClass("ui-unselecting")})})},this.refresh(),this._mouseInit(),this.helper=t("<div>"),this._addClass(this.helper,"ui-selectable-helper")},_destroy:function(){this.selectees.removeData("selectable-item"),this._mouseDestroy()},_mouseStart:function(e){var i=this,s=this.options;this.opos=[e.pageX,e.pageY],this.elementPos=t(this.element[0]).offset(),this.options.disabled||(this.selectees=t(s.filter,this.element[0]),this._trigger("start",e),t(s.appendTo).append(this.helper),this.helper.css({left:e.pageX,top:e.pageY,width:0,height:0}),s.autoRefresh&&this.refresh(),this.selectees.filter(".ui-selected").each(function(){var s=t.data(this,"selectable-item");s.startselected=!0,e.metaKey||e.ctrlKey||(i._removeClass(s.$element,"ui-selected"),s.selected=!1,i._addClass(s.$element,"ui-unselecting"),s.unselecting=!0,i._trigger("unselecting",e,{unselecting:s.element}))}),t(e.target).parents().addBack().each(function(){var s,n=t.data(this,"selectable-item");return n?(s=!e.metaKey&&!e.ctrlKey||!n.$element.hasClass("ui-selected"),i._removeClass(n.$element,s?"ui-unselecting":"ui-selected")._addClass(n.$element,s?"ui-selecting":"ui-unselecting"),n.unselecting=!s,n.selecting=s,n.selected=s,s?i._trigger("selecting",e,{selecting:n.element}):i._trigger("unselecting",e,{unselecting:n.element}),!1):void 0}))},_mouseDrag:function(e){if(this.dragged=!0,!this.options.disabled){var i,s=this,n=this.options,o=this.opos[0],a=this.opos[1],r=e.pageX,h=e.pageY;return o>r&&(i=r,r=o,o=i),a>h&&(i=h,h=a,a=i),this.helper.css({left:o,top:a,width:r-o,height:h-a}),this.selectees.each(function(){var i=t.data(this,"selectable-item"),l=!1,c={};i&&i.element!==s.element[0]&&(c.left=i.left+s.elementPos.left,c.right=i.right+s.elementPos.left,c.top=i.top+s.elementPos.top,c.bottom=i.bottom+s.elementPos.top,"touch"===n.tolerance?l=!(c.left>r||o>c.right||c.top>h||a>c.bottom):"fit"===n.tolerance&&(l=c.left>o&&r>c.right&&c.top>a&&h>c.bottom),l?(i.selected&&(s._removeClass(i.$element,"ui-selected"),i.selected=!1),i.unselecting&&(s._removeClass(i.$element,"ui-unselecting"),i.unselecting=!1),i.selecting||(s._addClass(i.$element,"ui-selecting"),i.selecting=!0,s._trigger("selecting",e,{selecting:i.element}))):(i.selecting&&((e.metaKey||e.ctrlKey)&&i.startselected?(s._removeClass(i.$element,"ui-selecting"),i.selecting=!1,s._addClass(i.$element,"ui-selected"),i.selected=!0):(s._removeClass(i.$element,"ui-selecting"),i.selecting=!1,i.startselected&&(s._addClass(i.$element,"ui-unselecting"),i.unselecting=!0),s._trigger("unselecting",e,{unselecting:i.element}))),i.selected&&(e.metaKey||e.ctrlKey||i.startselected||(s._removeClass(i.$element,"ui-selected"),i.selected=!1,s._addClass(i.$element,"ui-unselecting"),i.unselecting=!0,s._trigger("unselecting",e,{unselecting:i.element})))))}),!1}},_mouseStop:function(e){var i=this;return this.dragged=!1,t(".ui-unselecting",this.element[0]).each(function(){var s=t.data(this,"selectable-item");i._removeClass(s.$element,"ui-unselecting"),s.unselecting=!1,s.startselected=!1,i._trigger("unselected",e,{unselected:s.element})}),t(".ui-selecting",this.element[0]).each(function(){var s=t.data(this,"selectable-item");i._removeClass(s.$element,"ui-selecting")._addClass(s.$element,"ui-selected"),s.selecting=!1,s.selected=!0,s.startselected=!0,i._trigger("selected",e,{selected:s.element})}),this._trigger("stop",e),this.helper.remove(),!1}}),t.widget("ui.selectmenu",[t.ui.formResetMixin,{version:"1.12.1",defaultElement:"<select>",options:{appendTo:null,classes:{"ui-selectmenu-button-open":"ui-corner-top","ui-selectmenu-button-closed":"ui-corner-all"},disabled:null,icons:{button:"ui-icon-triangle-1-s"},position:{my:"left top",at:"left bottom",collision:"none"},width:!1,change:null,close:null,focus:null,open:null,select:null},_create:function(){var e=this.element.uniqueId().attr("id");this.ids={element:e,button:e+"-button",menu:e+"-menu"},this._drawButton(),this._drawMenu(),this._bindFormResetHandler(),this._rendered=!1,this.menuItems=t()},_drawButton:function(){var e,i=this,s=this._parseOption(this.element.find("option:selected"),this.element[0].selectedIndex);this.labels=this.element.labels().attr("for",this.ids.button),this._on(this.labels,{click:function(t){this.button.focus(),t.preventDefault()}}),this.element.hide(),this.button=t("<span>",{tabindex:this.options.disabled?-1:0,id:this.ids.button,role:"combobox","aria-expanded":"false","aria-autocomplete":"list","aria-owns":this.ids.menu,"aria-haspopup":"true",title:this.element.attr("title")}).insertAfter(this.element),this._addClass(this.button,"ui-selectmenu-button ui-selectmenu-button-closed","ui-button ui-widget"),e=t("<span>").appendTo(this.button),this._addClass(e,"ui-selectmenu-icon","ui-icon "+this.options.icons.button),this.buttonItem=this._renderButtonItem(s).appendTo(this.button),this.options.width!==!1&&this._resizeButton(),this._on(this.button,this._buttonEvents),this.button.one("focusin",function(){i._rendered||i._refreshMenu()})},_drawMenu:function(){var e=this;this.menu=t("<ul>",{"aria-hidden":"true","aria-labelledby":this.ids.button,id:this.ids.menu}),this.menuWrap=t("<div>").append(this.menu),this._addClass(this.menuWrap,"ui-selectmenu-menu","ui-front"),this.menuWrap.appendTo(this._appendTo()),this.menuInstance=this.menu.menu({classes:{"ui-menu":"ui-corner-bottom"},role:"listbox",select:function(t,i){t.preventDefault(),e._setSelection(),e._select(i.item.data("ui-selectmenu-item"),t)},focus:function(t,i){var s=i.item.data("ui-selectmenu-item");null!=e.focusIndex&&s.index!==e.focusIndex&&(e._trigger("focus",t,{item:s}),e.isOpen||e._select(s,t)),e.focusIndex=s.index,e.button.attr("aria-activedescendant",e.menuItems.eq(s.index).attr("id"))}}).menu("instance"),this.menuInstance._off(this.menu,"mouseleave"),this.menuInstance._closeOnDocumentClick=function(){return!1},this.menuInstance._isDivider=function(){return!1}},refresh:function(){this._refreshMenu(),this.buttonItem.replaceWith(this.buttonItem=this._renderButtonItem(this._getSelectedItem().data("ui-selectmenu-item")||{})),null===this.options.width&&this._resizeButton()},_refreshMenu:function(){var t,e=this.element.find("option");this.menu.empty(),this._parseOptions(e),this._renderMenu(this.menu,this.items),this.menuInstance.refresh(),this.menuItems=this.menu.find("li").not(".ui-selectmenu-optgroup").find(".ui-menu-item-wrapper"),this._rendered=!0,e.length&&(t=this._getSelectedItem(),this.menuInstance.focus(null,t),this._setAria(t.data("ui-selectmenu-item")),this._setOption("disabled",this.element.prop("disabled")))},open:function(t){this.options.disabled||(this._rendered?(this._removeClass(this.menu.find(".ui-state-active"),null,"ui-state-active"),this.menuInstance.focus(null,this._getSelectedItem())):this._refreshMenu(),this.menuItems.length&&(this.isOpen=!0,this._toggleAttr(),this._resizeMenu(),this._position(),this._on(this.document,this._documentClick),this._trigger("open",t)))},_position:function(){this.menuWrap.position(t.extend({of:this.button},this.options.position))},close:function(t){this.isOpen&&(this.isOpen=!1,this._toggleAttr(),this.range=null,this._off(this.document),this._trigger("close",t))},widget:function(){return this.button},menuWidget:function(){return this.menu},_renderButtonItem:function(e){var i=t("<span>");return this._setText(i,e.label),this._addClass(i,"ui-selectmenu-text"),i},_renderMenu:function(e,i){var s=this,n="";t.each(i,function(i,o){var a;o.optgroup!==n&&(a=t("<li>",{text:o.optgroup}),s._addClass(a,"ui-selectmenu-optgroup","ui-menu-divider"+(o.element.parent("optgroup").prop("disabled")?" ui-state-disabled":"")),a.appendTo(e),n=o.optgroup),s._renderItemData(e,o)})},_renderItemData:function(t,e){return this._renderItem(t,e).data("ui-selectmenu-item",e)},_renderItem:function(e,i){var s=t("<li>"),n=t("<div>",{title:i.element.attr("title")});return i.disabled&&this._addClass(s,null,"ui-state-disabled"),this._setText(n,i.label),s.append(n).appendTo(e)},_setText:function(t,e){e?t.text(e):t.html("&#160;")},_move:function(t,e){var i,s,n=".ui-menu-item";this.isOpen?i=this.menuItems.eq(this.focusIndex).parent("li"):(i=this.menuItems.eq(this.element[0].selectedIndex).parent("li"),n+=":not(.ui-state-disabled)"),s="first"===t||"last"===t?i["first"===t?"prevAll":"nextAll"](n).eq(-1):i[t+"All"](n).eq(0),s.length&&this.menuInstance.focus(e,s)},_getSelectedItem:function(){return this.menuItems.eq(this.element[0].selectedIndex).parent("li")},_toggle:function(t){this[this.isOpen?"close":"open"](t)},_setSelection:function(){var t;this.range&&(window.getSelection?(t=window.getSelection(),t.removeAllRanges(),t.addRange(this.range)):this.range.select(),this.button.focus())},_documentClick:{mousedown:function(e){this.isOpen&&(t(e.target).closest(".ui-selectmenu-menu, #"+t.ui.escapeSelector(this.ids.button)).length||this.close(e))}},_buttonEvents:{mousedown:function(){var t;window.getSelection?(t=window.getSelection(),t.rangeCount&&(this.range=t.getRangeAt(0))):this.range=document.selection.createRange()},click:function(t){this._setSelection(),this._toggle(t)},keydown:function(e){var i=!0;switch(e.keyCode){case t.ui.keyCode.TAB:case t.ui.keyCode.ESCAPE:this.close(e),i=!1;break;case t.ui.keyCode.ENTER:this.isOpen&&this._selectFocusedItem(e);break;case t.ui.keyCode.UP:e.altKey?this._toggle(e):this._move("prev",e);break;case t.ui.keyCode.DOWN:e.altKey?this._toggle(e):this._move("next",e);break;case t.ui.keyCode.SPACE:this.isOpen?this._selectFocusedItem(e):this._toggle(e);break;case t.ui.keyCode.LEFT:this._move("prev",e);break;case t.ui.keyCode.RIGHT:this._move("next",e);break;case t.ui.keyCode.HOME:case t.ui.keyCode.PAGE_UP:this._move("first",e);break;case t.ui.keyCode.END:case t.ui.keyCode.PAGE_DOWN:this._move("last",e);break;default:this.menu.trigger(e),i=!1}i&&e.preventDefault()}},_selectFocusedItem:function(t){var e=this.menuItems.eq(this.focusIndex).parent("li");e.hasClass("ui-state-disabled")||this._select(e.data("ui-selectmenu-item"),t)},_select:function(t,e){var i=this.element[0].selectedIndex;this.element[0].selectedIndex=t.index,this.buttonItem.replaceWith(this.buttonItem=this._renderButtonItem(t)),this._setAria(t),this._trigger("select",e,{item:t}),t.index!==i&&this._trigger("change",e,{item:t}),this.close(e)},_setAria:function(t){var e=this.menuItems.eq(t.index).attr("id");this.button.attr({"aria-labelledby":e,"aria-activedescendant":e}),this.menu.attr("aria-activedescendant",e)},_setOption:function(t,e){if("icons"===t){var i=this.button.find("span.ui-icon");this._removeClass(i,null,this.options.icons.button)._addClass(i,null,e.button)}this._super(t,e),"appendTo"===t&&this.menuWrap.appendTo(this._appendTo()),"width"===t&&this._resizeButton()},_setOptionDisabled:function(t){this._super(t),this.menuInstance.option("disabled",t),this.button.attr("aria-disabled",t),this._toggleClass(this.button,null,"ui-state-disabled",t),this.element.prop("disabled",t),t?(this.button.attr("tabindex",-1),this.close()):this.button.attr("tabindex",0)},_appendTo:function(){var e=this.options.appendTo;return e&&(e=e.jquery||e.nodeType?t(e):this.document.find(e).eq(0)),e&&e[0]||(e=this.element.closest(".ui-front, dialog")),e.length||(e=this.document[0].body),e},_toggleAttr:function(){this.button.attr("aria-expanded",this.isOpen),this._removeClass(this.button,"ui-selectmenu-button-"+(this.isOpen?"closed":"open"))._addClass(this.button,"ui-selectmenu-button-"+(this.isOpen?"open":"closed"))._toggleClass(this.menuWrap,"ui-selectmenu-open",null,this.isOpen),this.menu.attr("aria-hidden",!this.isOpen)},_resizeButton:function(){var t=this.options.width;return t===!1?(this.button.css("width",""),void 0):(null===t&&(t=this.element.show().outerWidth(),this.element.hide()),this.button.outerWidth(t),void 0)},_resizeMenu:function(){this.menu.outerWidth(Math.max(this.button.outerWidth(),this.menu.width("").outerWidth()+1))},_getCreateOptions:function(){var t=this._super();return t.disabled=this.element.prop("disabled"),t},_parseOptions:function(e){var i=this,s=[];e.each(function(e,n){s.push(i._parseOption(t(n),e))}),this.items=s},_parseOption:function(t,e){var i=t.parent("optgroup");return{element:t,index:e,value:t.val(),label:t.text(),optgroup:i.attr("label")||"",disabled:i.prop("disabled")||t.prop("disabled")}},_destroy:function(){this._unbindFormResetHandler(),this.menuWrap.remove(),this.button.remove(),this.element.show(),this.element.removeUniqueId(),this.labels.attr("for",this.ids.element)}}]),t.widget("ui.slider",t.ui.mouse,{version:"1.12.1",widgetEventPrefix:"slide",options:{animate:!1,classes:{"ui-slider":"ui-corner-all","ui-slider-handle":"ui-corner-all","ui-slider-range":"ui-corner-all ui-widget-header"},distance:0,max:100,min:0,orientation:"horizontal",range:!1,step:1,value:0,values:null,change:null,slide:null,start:null,stop:null},numPages:5,_create:function(){this._keySliding=!1,this._mouseSliding=!1,this._animateOff=!0,this._handleIndex=null,this._detectOrientation(),this._mouseInit(),this._calculateNewMax(),this._addClass("ui-slider ui-slider-"+this.orientation,"ui-widget ui-widget-content"),this._refresh(),this._animateOff=!1
    },_refresh:function(){this._createRange(),this._createHandles(),this._setupEvents(),this._refreshValue()},_createHandles:function(){var e,i,s=this.options,n=this.element.find(".ui-slider-handle"),o="<span tabindex='0'></span>",a=[];for(i=s.values&&s.values.length||1,n.length>i&&(n.slice(i).remove(),n=n.slice(0,i)),e=n.length;i>e;e++)a.push(o);this.handles=n.add(t(a.join("")).appendTo(this.element)),this._addClass(this.handles,"ui-slider-handle","ui-state-default"),this.handle=this.handles.eq(0),this.handles.each(function(e){t(this).data("ui-slider-handle-index",e).attr("tabIndex",0)})},_createRange:function(){var e=this.options;e.range?(e.range===!0&&(e.values?e.values.length&&2!==e.values.length?e.values=[e.values[0],e.values[0]]:t.isArray(e.values)&&(e.values=e.values.slice(0)):e.values=[this._valueMin(),this._valueMin()]),this.range&&this.range.length?(this._removeClass(this.range,"ui-slider-range-min ui-slider-range-max"),this.range.css({left:"",bottom:""})):(this.range=t("<div>").appendTo(this.element),this._addClass(this.range,"ui-slider-range")),("min"===e.range||"max"===e.range)&&this._addClass(this.range,"ui-slider-range-"+e.range)):(this.range&&this.range.remove(),this.range=null)},_setupEvents:function(){this._off(this.handles),this._on(this.handles,this._handleEvents),this._hoverable(this.handles),this._focusable(this.handles)},_destroy:function(){this.handles.remove(),this.range&&this.range.remove(),this._mouseDestroy()},_mouseCapture:function(e){var i,s,n,o,a,r,h,l,c=this,u=this.options;return u.disabled?!1:(this.elementSize={width:this.element.outerWidth(),height:this.element.outerHeight()},this.elementOffset=this.element.offset(),i={x:e.pageX,y:e.pageY},s=this._normValueFromMouse(i),n=this._valueMax()-this._valueMin()+1,this.handles.each(function(e){var i=Math.abs(s-c.values(e));(n>i||n===i&&(e===c._lastChangedValue||c.values(e)===u.min))&&(n=i,o=t(this),a=e)}),r=this._start(e,a),r===!1?!1:(this._mouseSliding=!0,this._handleIndex=a,this._addClass(o,null,"ui-state-active"),o.trigger("focus"),h=o.offset(),l=!t(e.target).parents().addBack().is(".ui-slider-handle"),this._clickOffset=l?{left:0,top:0}:{left:e.pageX-h.left-o.width()/2,top:e.pageY-h.top-o.height()/2-(parseInt(o.css("borderTopWidth"),10)||0)-(parseInt(o.css("borderBottomWidth"),10)||0)+(parseInt(o.css("marginTop"),10)||0)},this.handles.hasClass("ui-state-hover")||this._slide(e,a,s),this._animateOff=!0,!0))},_mouseStart:function(){return!0},_mouseDrag:function(t){var e={x:t.pageX,y:t.pageY},i=this._normValueFromMouse(e);return this._slide(t,this._handleIndex,i),!1},_mouseStop:function(t){return this._removeClass(this.handles,null,"ui-state-active"),this._mouseSliding=!1,this._stop(t,this._handleIndex),this._change(t,this._handleIndex),this._handleIndex=null,this._clickOffset=null,this._animateOff=!1,!1},_detectOrientation:function(){this.orientation="vertical"===this.options.orientation?"vertical":"horizontal"},_normValueFromMouse:function(t){var e,i,s,n,o;return"horizontal"===this.orientation?(e=this.elementSize.width,i=t.x-this.elementOffset.left-(this._clickOffset?this._clickOffset.left:0)):(e=this.elementSize.height,i=t.y-this.elementOffset.top-(this._clickOffset?this._clickOffset.top:0)),s=i/e,s>1&&(s=1),0>s&&(s=0),"vertical"===this.orientation&&(s=1-s),n=this._valueMax()-this._valueMin(),o=this._valueMin()+s*n,this._trimAlignValue(o)},_uiHash:function(t,e,i){var s={handle:this.handles[t],handleIndex:t,value:void 0!==e?e:this.value()};return this._hasMultipleValues()&&(s.value=void 0!==e?e:this.values(t),s.values=i||this.values()),s},_hasMultipleValues:function(){return this.options.values&&this.options.values.length},_start:function(t,e){return this._trigger("start",t,this._uiHash(e))},_slide:function(t,e,i){var s,n,o=this.value(),a=this.values();this._hasMultipleValues()&&(n=this.values(e?0:1),o=this.values(e),2===this.options.values.length&&this.options.range===!0&&(i=0===e?Math.min(n,i):Math.max(n,i)),a[e]=i),i!==o&&(s=this._trigger("slide",t,this._uiHash(e,i,a)),s!==!1&&(this._hasMultipleValues()?this.values(e,i):this.value(i)))},_stop:function(t,e){this._trigger("stop",t,this._uiHash(e))},_change:function(t,e){this._keySliding||this._mouseSliding||(this._lastChangedValue=e,this._trigger("change",t,this._uiHash(e)))},value:function(t){return arguments.length?(this.options.value=this._trimAlignValue(t),this._refreshValue(),this._change(null,0),void 0):this._value()},values:function(e,i){var s,n,o;if(arguments.length>1)return this.options.values[e]=this._trimAlignValue(i),this._refreshValue(),this._change(null,e),void 0;if(!arguments.length)return this._values();if(!t.isArray(arguments[0]))return this._hasMultipleValues()?this._values(e):this.value();for(s=this.options.values,n=arguments[0],o=0;s.length>o;o+=1)s[o]=this._trimAlignValue(n[o]),this._change(null,o);this._refreshValue()},_setOption:function(e,i){var s,n=0;switch("range"===e&&this.options.range===!0&&("min"===i?(this.options.value=this._values(0),this.options.values=null):"max"===i&&(this.options.value=this._values(this.options.values.length-1),this.options.values=null)),t.isArray(this.options.values)&&(n=this.options.values.length),this._super(e,i),e){case"orientation":this._detectOrientation(),this._removeClass("ui-slider-horizontal ui-slider-vertical")._addClass("ui-slider-"+this.orientation),this._refreshValue(),this.options.range&&this._refreshRange(i),this.handles.css("horizontal"===i?"bottom":"left","");break;case"value":this._animateOff=!0,this._refreshValue(),this._change(null,0),this._animateOff=!1;break;case"values":for(this._animateOff=!0,this._refreshValue(),s=n-1;s>=0;s--)this._change(null,s);this._animateOff=!1;break;case"step":case"min":case"max":this._animateOff=!0,this._calculateNewMax(),this._refreshValue(),this._animateOff=!1;break;case"range":this._animateOff=!0,this._refresh(),this._animateOff=!1}},_setOptionDisabled:function(t){this._super(t),this._toggleClass(null,"ui-state-disabled",!!t)},_value:function(){var t=this.options.value;return t=this._trimAlignValue(t)},_values:function(t){var e,i,s;if(arguments.length)return e=this.options.values[t],e=this._trimAlignValue(e);if(this._hasMultipleValues()){for(i=this.options.values.slice(),s=0;i.length>s;s+=1)i[s]=this._trimAlignValue(i[s]);return i}return[]},_trimAlignValue:function(t){if(this._valueMin()>=t)return this._valueMin();if(t>=this._valueMax())return this._valueMax();var e=this.options.step>0?this.options.step:1,i=(t-this._valueMin())%e,s=t-i;return 2*Math.abs(i)>=e&&(s+=i>0?e:-e),parseFloat(s.toFixed(5))},_calculateNewMax:function(){var t=this.options.max,e=this._valueMin(),i=this.options.step,s=Math.round((t-e)/i)*i;t=s+e,t>this.options.max&&(t-=i),this.max=parseFloat(t.toFixed(this._precision()))},_precision:function(){var t=this._precisionOf(this.options.step);return null!==this.options.min&&(t=Math.max(t,this._precisionOf(this.options.min))),t},_precisionOf:function(t){var e=""+t,i=e.indexOf(".");return-1===i?0:e.length-i-1},_valueMin:function(){return this.options.min},_valueMax:function(){return this.max},_refreshRange:function(t){"vertical"===t&&this.range.css({width:"",left:""}),"horizontal"===t&&this.range.css({height:"",bottom:""})},_refreshValue:function(){var e,i,s,n,o,a=this.options.range,r=this.options,h=this,l=this._animateOff?!1:r.animate,c={};this._hasMultipleValues()?this.handles.each(function(s){i=100*((h.values(s)-h._valueMin())/(h._valueMax()-h._valueMin())),c["horizontal"===h.orientation?"left":"bottom"]=i+"%",t(this).stop(1,1)[l?"animate":"css"](c,r.animate),h.options.range===!0&&("horizontal"===h.orientation?(0===s&&h.range.stop(1,1)[l?"animate":"css"]({left:i+"%"},r.animate),1===s&&h.range[l?"animate":"css"]({width:i-e+"%"},{queue:!1,duration:r.animate})):(0===s&&h.range.stop(1,1)[l?"animate":"css"]({bottom:i+"%"},r.animate),1===s&&h.range[l?"animate":"css"]({height:i-e+"%"},{queue:!1,duration:r.animate}))),e=i}):(s=this.value(),n=this._valueMin(),o=this._valueMax(),i=o!==n?100*((s-n)/(o-n)):0,c["horizontal"===this.orientation?"left":"bottom"]=i+"%",this.handle.stop(1,1)[l?"animate":"css"](c,r.animate),"min"===a&&"horizontal"===this.orientation&&this.range.stop(1,1)[l?"animate":"css"]({width:i+"%"},r.animate),"max"===a&&"horizontal"===this.orientation&&this.range.stop(1,1)[l?"animate":"css"]({width:100-i+"%"},r.animate),"min"===a&&"vertical"===this.orientation&&this.range.stop(1,1)[l?"animate":"css"]({height:i+"%"},r.animate),"max"===a&&"vertical"===this.orientation&&this.range.stop(1,1)[l?"animate":"css"]({height:100-i+"%"},r.animate))},_handleEvents:{keydown:function(e){var i,s,n,o,a=t(e.target).data("ui-slider-handle-index");switch(e.keyCode){case t.ui.keyCode.HOME:case t.ui.keyCode.END:case t.ui.keyCode.PAGE_UP:case t.ui.keyCode.PAGE_DOWN:case t.ui.keyCode.UP:case t.ui.keyCode.RIGHT:case t.ui.keyCode.DOWN:case t.ui.keyCode.LEFT:if(e.preventDefault(),!this._keySliding&&(this._keySliding=!0,this._addClass(t(e.target),null,"ui-state-active"),i=this._start(e,a),i===!1))return}switch(o=this.options.step,s=n=this._hasMultipleValues()?this.values(a):this.value(),e.keyCode){case t.ui.keyCode.HOME:n=this._valueMin();break;case t.ui.keyCode.END:n=this._valueMax();break;case t.ui.keyCode.PAGE_UP:n=this._trimAlignValue(s+(this._valueMax()-this._valueMin())/this.numPages);break;case t.ui.keyCode.PAGE_DOWN:n=this._trimAlignValue(s-(this._valueMax()-this._valueMin())/this.numPages);break;case t.ui.keyCode.UP:case t.ui.keyCode.RIGHT:if(s===this._valueMax())return;n=this._trimAlignValue(s+o);break;case t.ui.keyCode.DOWN:case t.ui.keyCode.LEFT:if(s===this._valueMin())return;n=this._trimAlignValue(s-o)}this._slide(e,a,n)},keyup:function(e){var i=t(e.target).data("ui-slider-handle-index");this._keySliding&&(this._keySliding=!1,this._stop(e,i),this._change(e,i),this._removeClass(t(e.target),null,"ui-state-active"))}}}),t.widget("ui.sortable",t.ui.mouse,{version:"1.12.1",widgetEventPrefix:"sort",ready:!1,options:{appendTo:"parent",axis:!1,connectWith:!1,containment:!1,cursor:"auto",cursorAt:!1,dropOnEmpty:!0,forcePlaceholderSize:!1,forceHelperSize:!1,grid:!1,handle:!1,helper:"original",items:"> *",opacity:!1,placeholder:!1,revert:!1,scroll:!0,scrollSensitivity:20,scrollSpeed:20,scope:"default",tolerance:"intersect",zIndex:1e3,activate:null,beforeStop:null,change:null,deactivate:null,out:null,over:null,receive:null,remove:null,sort:null,start:null,stop:null,update:null},_isOverAxis:function(t,e,i){return t>=e&&e+i>t},_isFloating:function(t){return/left|right/.test(t.css("float"))||/inline|table-cell/.test(t.css("display"))},_create:function(){this.containerCache={},this._addClass("ui-sortable"),this.refresh(),this.offset=this.element.offset(),this._mouseInit(),this._setHandleClassName(),this.ready=!0},_setOption:function(t,e){this._super(t,e),"handle"===t&&this._setHandleClassName()},_setHandleClassName:function(){var e=this;this._removeClass(this.element.find(".ui-sortable-handle"),"ui-sortable-handle"),t.each(this.items,function(){e._addClass(this.instance.options.handle?this.item.find(this.instance.options.handle):this.item,"ui-sortable-handle")})},_destroy:function(){this._mouseDestroy();for(var t=this.items.length-1;t>=0;t--)this.items[t].item.removeData(this.widgetName+"-item");return this},_mouseCapture:function(e,i){var s=null,n=!1,o=this;return this.reverting?!1:this.options.disabled||"static"===this.options.type?!1:(this._refreshItems(e),t(e.target).parents().each(function(){return t.data(this,o.widgetName+"-item")===o?(s=t(this),!1):void 0}),t.data(e.target,o.widgetName+"-item")===o&&(s=t(e.target)),s?!this.options.handle||i||(t(this.options.handle,s).find("*").addBack().each(function(){this===e.target&&(n=!0)}),n)?(this.currentItem=s,this._removeCurrentsFromItems(),!0):!1:!1)},_mouseStart:function(e,i,s){var n,o,a=this.options;if(this.currentContainer=this,this.refreshPositions(),this.helper=this._createHelper(e),this._cacheHelperProportions(),this._cacheMargins(),this.scrollParent=this.helper.scrollParent(),this.offset=this.currentItem.offset(),this.offset={top:this.offset.top-this.margins.top,left:this.offset.left-this.margins.left},t.extend(this.offset,{click:{left:e.pageX-this.offset.left,top:e.pageY-this.offset.top},parent:this._getParentOffset(),relative:this._getRelativeOffset()}),this.helper.css("position","absolute"),this.cssPosition=this.helper.css("position"),this.originalPosition=this._generatePosition(e),this.originalPageX=e.pageX,this.originalPageY=e.pageY,a.cursorAt&&this._adjustOffsetFromHelper(a.cursorAt),this.domPosition={prev:this.currentItem.prev()[0],parent:this.currentItem.parent()[0]},this.helper[0]!==this.currentItem[0]&&this.currentItem.hide(),this._createPlaceholder(),a.containment&&this._setContainment(),a.cursor&&"auto"!==a.cursor&&(o=this.document.find("body"),this.storedCursor=o.css("cursor"),o.css("cursor",a.cursor),this.storedStylesheet=t("<style>*{ cursor: "+a.cursor+" !important; }</style>").appendTo(o)),a.opacity&&(this.helper.css("opacity")&&(this._storedOpacity=this.helper.css("opacity")),this.helper.css("opacity",a.opacity)),a.zIndex&&(this.helper.css("zIndex")&&(this._storedZIndex=this.helper.css("zIndex")),this.helper.css("zIndex",a.zIndex)),this.scrollParent[0]!==this.document[0]&&"HTML"!==this.scrollParent[0].tagName&&(this.overflowOffset=this.scrollParent.offset()),this._trigger("start",e,this._uiHash()),this._preserveHelperProportions||this._cacheHelperProportions(),!s)for(n=this.containers.length-1;n>=0;n--)this.containers[n]._trigger("activate",e,this._uiHash(this));return t.ui.ddmanager&&(t.ui.ddmanager.current=this),t.ui.ddmanager&&!a.dropBehaviour&&t.ui.ddmanager.prepareOffsets(this,e),this.dragging=!0,this._addClass(this.helper,"ui-sortable-helper"),this._mouseDrag(e),!0},_mouseDrag:function(e){var i,s,n,o,a=this.options,r=!1;for(this.position=this._generatePosition(e),this.positionAbs=this._convertPositionTo("absolute"),this.lastPositionAbs||(this.lastPositionAbs=this.positionAbs),this.options.scroll&&(this.scrollParent[0]!==this.document[0]&&"HTML"!==this.scrollParent[0].tagName?(this.overflowOffset.top+this.scrollParent[0].offsetHeight-e.pageY<a.scrollSensitivity?this.scrollParent[0].scrollTop=r=this.scrollParent[0].scrollTop+a.scrollSpeed:e.pageY-this.overflowOffset.top<a.scrollSensitivity&&(this.scrollParent[0].scrollTop=r=this.scrollParent[0].scrollTop-a.scrollSpeed),this.overflowOffset.left+this.scrollParent[0].offsetWidth-e.pageX<a.scrollSensitivity?this.scrollParent[0].scrollLeft=r=this.scrollParent[0].scrollLeft+a.scrollSpeed:e.pageX-this.overflowOffset.left<a.scrollSensitivity&&(this.scrollParent[0].scrollLeft=r=this.scrollParent[0].scrollLeft-a.scrollSpeed)):(e.pageY-this.document.scrollTop()<a.scrollSensitivity?r=this.document.scrollTop(this.document.scrollTop()-a.scrollSpeed):this.window.height()-(e.pageY-this.document.scrollTop())<a.scrollSensitivity&&(r=this.document.scrollTop(this.document.scrollTop()+a.scrollSpeed)),e.pageX-this.document.scrollLeft()<a.scrollSensitivity?r=this.document.scrollLeft(this.document.scrollLeft()-a.scrollSpeed):this.window.width()-(e.pageX-this.document.scrollLeft())<a.scrollSensitivity&&(r=this.document.scrollLeft(this.document.scrollLeft()+a.scrollSpeed))),r!==!1&&t.ui.ddmanager&&!a.dropBehaviour&&t.ui.ddmanager.prepareOffsets(this,e)),this.positionAbs=this._convertPositionTo("absolute"),this.options.axis&&"y"===this.options.axis||(this.helper[0].style.left=this.position.left+"px"),this.options.axis&&"x"===this.options.axis||(this.helper[0].style.top=this.position.top+"px"),i=this.items.length-1;i>=0;i--)if(s=this.items[i],n=s.item[0],o=this._intersectsWithPointer(s),o&&s.instance===this.currentContainer&&n!==this.currentItem[0]&&this.placeholder[1===o?"next":"prev"]()[0]!==n&&!t.contains(this.placeholder[0],n)&&("semi-dynamic"===this.options.type?!t.contains(this.element[0],n):!0)){if(this.direction=1===o?"down":"up","pointer"!==this.options.tolerance&&!this._intersectsWithSides(s))break;this._rearrange(e,s),this._trigger("change",e,this._uiHash());break}return this._contactContainers(e),t.ui.ddmanager&&t.ui.ddmanager.drag(this,e),this._trigger("sort",e,this._uiHash()),this.lastPositionAbs=this.positionAbs,!1},_mouseStop:function(e,i){if(e){if(t.ui.ddmanager&&!this.options.dropBehaviour&&t.ui.ddmanager.drop(this,e),this.options.revert){var s=this,n=this.placeholder.offset(),o=this.options.axis,a={};o&&"x"!==o||(a.left=n.left-this.offset.parent.left-this.margins.left+(this.offsetParent[0]===this.document[0].body?0:this.offsetParent[0].scrollLeft)),o&&"y"!==o||(a.top=n.top-this.offset.parent.top-this.margins.top+(this.offsetParent[0]===this.document[0].body?0:this.offsetParent[0].scrollTop)),this.reverting=!0,t(this.helper).animate(a,parseInt(this.options.revert,10)||500,function(){s._clear(e)})}else this._clear(e,i);return!1}},cancel:function(){if(this.dragging){this._mouseUp(new t.Event("mouseup",{target:null})),"original"===this.options.helper?(this.currentItem.css(this._storedCSS),this._removeClass(this.currentItem,"ui-sortable-helper")):this.currentItem.show();for(var e=this.containers.length-1;e>=0;e--)this.containers[e]._trigger("deactivate",null,this._uiHash(this)),this.containers[e].containerCache.over&&(this.containers[e]._trigger("out",null,this._uiHash(this)),this.containers[e].containerCache.over=0)}return this.placeholder&&(this.placeholder[0].parentNode&&this.placeholder[0].parentNode.removeChild(this.placeholder[0]),"original"!==this.options.helper&&this.helper&&this.helper[0].parentNode&&this.helper.remove(),t.extend(this,{helper:null,dragging:!1,reverting:!1,_noFinalSort:null}),this.domPosition.prev?t(this.domPosition.prev).after(this.currentItem):t(this.domPosition.parent).prepend(this.currentItem)),this},serialize:function(e){var i=this._getItemsAsjQuery(e&&e.connected),s=[];return e=e||{},t(i).each(function(){var i=(t(e.item||this).attr(e.attribute||"id")||"").match(e.expression||/(.+)[\-=_](.+)/);i&&s.push((e.key||i[1]+"[]")+"="+(e.key&&e.expression?i[1]:i[2]))}),!s.length&&e.key&&s.push(e.key+"="),s.join("&")},toArray:function(e){var i=this._getItemsAsjQuery(e&&e.connected),s=[];return e=e||{},i.each(function(){s.push(t(e.item||this).attr(e.attribute||"id")||"")}),s},_intersectsWith:function(t){var e=this.positionAbs.left,i=e+this.helperProportions.width,s=this.positionAbs.top,n=s+this.helperProportions.height,o=t.left,a=o+t.width,r=t.top,h=r+t.height,l=this.offset.click.top,c=this.offset.click.left,u="x"===this.options.axis||s+l>r&&h>s+l,d="y"===this.options.axis||e+c>o&&a>e+c,p=u&&d;return"pointer"===this.options.tolerance||this.options.forcePointerForContainers||"pointer"!==this.options.tolerance&&this.helperProportions[this.floating?"width":"height"]>t[this.floating?"width":"height"]?p:e+this.helperProportions.width/2>o&&a>i-this.helperProportions.width/2&&s+this.helperProportions.height/2>r&&h>n-this.helperProportions.height/2},_intersectsWithPointer:function(t){var e,i,s="x"===this.options.axis||this._isOverAxis(this.positionAbs.top+this.offset.click.top,t.top,t.height),n="y"===this.options.axis||this._isOverAxis(this.positionAbs.left+this.offset.click.left,t.left,t.width),o=s&&n;return o?(e=this._getDragVerticalDirection(),i=this._getDragHorizontalDirection(),this.floating?"right"===i||"down"===e?2:1:e&&("down"===e?2:1)):!1},_intersectsWithSides:function(t){var e=this._isOverAxis(this.positionAbs.top+this.offset.click.top,t.top+t.height/2,t.height),i=this._isOverAxis(this.positionAbs.left+this.offset.click.left,t.left+t.width/2,t.width),s=this._getDragVerticalDirection(),n=this._getDragHorizontalDirection();return this.floating&&n?"right"===n&&i||"left"===n&&!i:s&&("down"===s&&e||"up"===s&&!e)},_getDragVerticalDirection:function(){var t=this.positionAbs.top-this.lastPositionAbs.top;return 0!==t&&(t>0?"down":"up")},_getDragHorizontalDirection:function(){var t=this.positionAbs.left-this.lastPositionAbs.left;return 0!==t&&(t>0?"right":"left")},refresh:function(t){return this._refreshItems(t),this._setHandleClassName(),this.refreshPositions(),this},_connectWith:function(){var t=this.options;return t.connectWith.constructor===String?[t.connectWith]:t.connectWith},_getItemsAsjQuery:function(e){function i(){r.push(this)}var s,n,o,a,r=[],h=[],l=this._connectWith();if(l&&e)for(s=l.length-1;s>=0;s--)for(o=t(l[s],this.document[0]),n=o.length-1;n>=0;n--)a=t.data(o[n],this.widgetFullName),a&&a!==this&&!a.options.disabled&&h.push([t.isFunction(a.options.items)?a.options.items.call(a.element):t(a.options.items,a.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"),a]);for(h.push([t.isFunction(this.options.items)?this.options.items.call(this.element,null,{options:this.options,item:this.currentItem}):t(this.options.items,this.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"),this]),s=h.length-1;s>=0;s--)h[s][0].each(i);return t(r)},_removeCurrentsFromItems:function(){var e=this.currentItem.find(":data("+this.widgetName+"-item)");this.items=t.grep(this.items,function(t){for(var i=0;e.length>i;i++)if(e[i]===t.item[0])return!1;return!0})},_refreshItems:function(e){this.items=[],this.containers=[this];var i,s,n,o,a,r,h,l,c=this.items,u=[[t.isFunction(this.options.items)?this.options.items.call(this.element[0],e,{item:this.currentItem}):t(this.options.items,this.element),this]],d=this._connectWith();if(d&&this.ready)for(i=d.length-1;i>=0;i--)for(n=t(d[i],this.document[0]),s=n.length-1;s>=0;s--)o=t.data(n[s],this.widgetFullName),o&&o!==this&&!o.options.disabled&&(u.push([t.isFunction(o.options.items)?o.options.items.call(o.element[0],e,{item:this.currentItem}):t(o.options.items,o.element),o]),this.containers.push(o));for(i=u.length-1;i>=0;i--)for(a=u[i][1],r=u[i][0],s=0,l=r.length;l>s;s++)h=t(r[s]),h.data(this.widgetName+"-item",a),c.push({item:h,instance:a,width:0,height:0,left:0,top:0})},refreshPositions:function(e){this.floating=this.items.length?"x"===this.options.axis||this._isFloating(this.items[0].item):!1,this.offsetParent&&this.helper&&(this.offset.parent=this._getParentOffset());var i,s,n,o;for(i=this.items.length-1;i>=0;i--)s=this.items[i],s.instance!==this.currentContainer&&this.currentContainer&&s.item[0]!==this.currentItem[0]||(n=this.options.toleranceElement?t(this.options.toleranceElement,s.item):s.item,e||(s.width=n.outerWidth(),s.height=n.outerHeight()),o=n.offset(),s.left=o.left,s.top=o.top);if(this.options.custom&&this.options.custom.refreshContainers)this.options.custom.refreshContainers.call(this);else for(i=this.containers.length-1;i>=0;i--)o=this.containers[i].element.offset(),this.containers[i].containerCache.left=o.left,this.containers[i].containerCache.top=o.top,this.containers[i].containerCache.width=this.containers[i].element.outerWidth(),this.containers[i].containerCache.height=this.containers[i].element.outerHeight();return this},_createPlaceholder:function(e){e=e||this;var i,s=e.options;s.placeholder&&s.placeholder.constructor!==String||(i=s.placeholder,s.placeholder={element:function(){var s=e.currentItem[0].nodeName.toLowerCase(),n=t("<"+s+">",e.document[0]);return e._addClass(n,"ui-sortable-placeholder",i||e.currentItem[0].className)._removeClass(n,"ui-sortable-helper"),"tbody"===s?e._createTrPlaceholder(e.currentItem.find("tr").eq(0),t("<tr>",e.document[0]).appendTo(n)):"tr"===s?e._createTrPlaceholder(e.currentItem,n):"img"===s&&n.attr("src",e.currentItem.attr("src")),i||n.css("visibility","hidden"),n},update:function(t,n){(!i||s.forcePlaceholderSize)&&(n.height()||n.height(e.currentItem.innerHeight()-parseInt(e.currentItem.css("paddingTop")||0,10)-parseInt(e.currentItem.css("paddingBottom")||0,10)),n.width()||n.width(e.currentItem.innerWidth()-parseInt(e.currentItem.css("paddingLeft")||0,10)-parseInt(e.currentItem.css("paddingRight")||0,10)))}}),e.placeholder=t(s.placeholder.element.call(e.element,e.currentItem)),e.currentItem.after(e.placeholder),s.placeholder.update(e,e.placeholder)},_createTrPlaceholder:function(e,i){var s=this;e.children().each(function(){t("<td>&#160;</td>",s.document[0]).attr("colspan",t(this).attr("colspan")||1).appendTo(i)})},_contactContainers:function(e){var i,s,n,o,a,r,h,l,c,u,d=null,p=null;for(i=this.containers.length-1;i>=0;i--)if(!t.contains(this.currentItem[0],this.containers[i].element[0]))if(this._intersectsWith(this.containers[i].containerCache)){if(d&&t.contains(this.containers[i].element[0],d.element[0]))continue;d=this.containers[i],p=i}else this.containers[i].containerCache.over&&(this.containers[i]._trigger("out",e,this._uiHash(this)),this.containers[i].containerCache.over=0);if(d)if(1===this.containers.length)this.containers[p].containerCache.over||(this.containers[p]._trigger("over",e,this._uiHash(this)),this.containers[p].containerCache.over=1);else{for(n=1e4,o=null,c=d.floating||this._isFloating(this.currentItem),a=c?"left":"top",r=c?"width":"height",u=c?"pageX":"pageY",s=this.items.length-1;s>=0;s--)t.contains(this.containers[p].element[0],this.items[s].item[0])&&this.items[s].item[0]!==this.currentItem[0]&&(h=this.items[s].item.offset()[a],l=!1,e[u]-h>this.items[s][r]/2&&(l=!0),n>Math.abs(e[u]-h)&&(n=Math.abs(e[u]-h),o=this.items[s],this.direction=l?"up":"down"));if(!o&&!this.options.dropOnEmpty)return;if(this.currentContainer===this.containers[p])return this.currentContainer.containerCache.over||(this.containers[p]._trigger("over",e,this._uiHash()),this.currentContainer.containerCache.over=1),void 0;o?this._rearrange(e,o,null,!0):this._rearrange(e,null,this.containers[p].element,!0),this._trigger("change",e,this._uiHash()),this.containers[p]._trigger("change",e,this._uiHash(this)),this.currentContainer=this.containers[p],this.options.placeholder.update(this.currentContainer,this.placeholder),this.containers[p]._trigger("over",e,this._uiHash(this)),this.containers[p].containerCache.over=1}},_createHelper:function(e){var i=this.options,s=t.isFunction(i.helper)?t(i.helper.apply(this.element[0],[e,this.currentItem])):"clone"===i.helper?this.currentItem.clone():this.currentItem;return s.parents("body").length||t("parent"!==i.appendTo?i.appendTo:this.currentItem[0].parentNode)[0].appendChild(s[0]),s[0]===this.currentItem[0]&&(this._storedCSS={width:this.currentItem[0].style.width,height:this.currentItem[0].style.height,position:this.currentItem.css("position"),top:this.currentItem.css("top"),left:this.currentItem.css("left")}),(!s[0].style.width||i.forceHelperSize)&&s.width(this.currentItem.width()),(!s[0].style.height||i.forceHelperSize)&&s.height(this.currentItem.height()),s},_adjustOffsetFromHelper:function(e){"string"==typeof e&&(e=e.split(" ")),t.isArray(e)&&(e={left:+e[0],top:+e[1]||0}),"left"in e&&(this.offset.click.left=e.left+this.margins.left),"right"in e&&(this.offset.click.left=this.helperProportions.width-e.right+this.margins.left),"top"in e&&(this.offset.click.top=e.top+this.margins.top),"bottom"in e&&(this.offset.click.top=this.helperProportions.height-e.bottom+this.margins.top)},_getParentOffset:function(){this.offsetParent=this.helper.offsetParent();var e=this.offsetParent.offset();return"absolute"===this.cssPosition&&this.scrollParent[0]!==this.document[0]&&t.contains(this.scrollParent[0],this.offsetParent[0])&&(e.left+=this.scrollParent.scrollLeft(),e.top+=this.scrollParent.scrollTop()),(this.offsetParent[0]===this.document[0].body||this.offsetParent[0].tagName&&"html"===this.offsetParent[0].tagName.toLowerCase()&&t.ui.ie)&&(e={top:0,left:0}),{top:e.top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:e.left+(parseInt(this.offsetParent.css("borderLeftWidth"),10)||0)}},_getRelativeOffset:function(){if("relative"===this.cssPosition){var t=this.currentItem.position();return{top:t.top-(parseInt(this.helper.css("top"),10)||0)+this.scrollParent.scrollTop(),left:t.left-(parseInt(this.helper.css("left"),10)||0)+this.scrollParent.scrollLeft()}}return{top:0,left:0}},_cacheMargins:function(){this.margins={left:parseInt(this.currentItem.css("marginLeft"),10)||0,top:parseInt(this.currentItem.css("marginTop"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var e,i,s,n=this.options;"parent"===n.containment&&(n.containment=this.helper[0].parentNode),("document"===n.containment||"window"===n.containment)&&(this.containment=[0-this.offset.relative.left-this.offset.parent.left,0-this.offset.relative.top-this.offset.parent.top,"document"===n.containment?this.document.width():this.window.width()-this.helperProportions.width-this.margins.left,("document"===n.containment?this.document.height()||document.body.parentNode.scrollHeight:this.window.height()||this.document[0].body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top]),/^(document|window|parent)$/.test(n.containment)||(e=t(n.containment)[0],i=t(n.containment).offset(),s="hidden"!==t(e).css("overflow"),this.containment=[i.left+(parseInt(t(e).css("borderLeftWidth"),10)||0)+(parseInt(t(e).css("paddingLeft"),10)||0)-this.margins.left,i.top+(parseInt(t(e).css("borderTopWidth"),10)||0)+(parseInt(t(e).css("paddingTop"),10)||0)-this.margins.top,i.left+(s?Math.max(e.scrollWidth,e.offsetWidth):e.offsetWidth)-(parseInt(t(e).css("borderLeftWidth"),10)||0)-(parseInt(t(e).css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left,i.top+(s?Math.max(e.scrollHeight,e.offsetHeight):e.offsetHeight)-(parseInt(t(e).css("borderTopWidth"),10)||0)-(parseInt(t(e).css("paddingBottom"),10)||0)-this.helperProportions.height-this.margins.top])},_convertPositionTo:function(e,i){i||(i=this.position);var s="absolute"===e?1:-1,n="absolute"!==this.cssPosition||this.scrollParent[0]!==this.document[0]&&t.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,o=/(html|body)/i.test(n[0].tagName);return{top:i.top+this.offset.relative.top*s+this.offset.parent.top*s-("fixed"===this.cssPosition?-this.scrollParent.scrollTop():o?0:n.scrollTop())*s,left:i.left+this.offset.relative.left*s+this.offset.parent.left*s-("fixed"===this.cssPosition?-this.scrollParent.scrollLeft():o?0:n.scrollLeft())*s}},_generatePosition:function(e){var i,s,n=this.options,o=e.pageX,a=e.pageY,r="absolute"!==this.cssPosition||this.scrollParent[0]!==this.document[0]&&t.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,h=/(html|body)/i.test(r[0].tagName);return"relative"!==this.cssPosition||this.scrollParent[0]!==this.document[0]&&this.scrollParent[0]!==this.offsetParent[0]||(this.offset.relative=this._getRelativeOffset()),this.originalPosition&&(this.containment&&(e.pageX-this.offset.click.left<this.containment[0]&&(o=this.containment[0]+this.offset.click.left),e.pageY-this.offset.click.top<this.containment[1]&&(a=this.containment[1]+this.offset.click.top),e.pageX-this.offset.click.left>this.containment[2]&&(o=this.containment[2]+this.offset.click.left),e.pageY-this.offset.click.top>this.containment[3]&&(a=this.containment[3]+this.offset.click.top)),n.grid&&(i=this.originalPageY+Math.round((a-this.originalPageY)/n.grid[1])*n.grid[1],a=this.containment?i-this.offset.click.top>=this.containment[1]&&i-this.offset.click.top<=this.containment[3]?i:i-this.offset.click.top>=this.containment[1]?i-n.grid[1]:i+n.grid[1]:i,s=this.originalPageX+Math.round((o-this.originalPageX)/n.grid[0])*n.grid[0],o=this.containment?s-this.offset.click.left>=this.containment[0]&&s-this.offset.click.left<=this.containment[2]?s:s-this.offset.click.left>=this.containment[0]?s-n.grid[0]:s+n.grid[0]:s)),{top:a-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+("fixed"===this.cssPosition?-this.scrollParent.scrollTop():h?0:r.scrollTop()),left:o-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+("fixed"===this.cssPosition?-this.scrollParent.scrollLeft():h?0:r.scrollLeft())}},_rearrange:function(t,e,i,s){i?i[0].appendChild(this.placeholder[0]):e.item[0].parentNode.insertBefore(this.placeholder[0],"down"===this.direction?e.item[0]:e.item[0].nextSibling),this.counter=this.counter?++this.counter:1;var n=this.counter;
        this._delay(function(){n===this.counter&&this.refreshPositions(!s)})},_clear:function(t,e){function i(t,e,i){return function(s){i._trigger(t,s,e._uiHash(e))}}this.reverting=!1;var s,n=[];if(!this._noFinalSort&&this.currentItem.parent().length&&this.placeholder.before(this.currentItem),this._noFinalSort=null,this.helper[0]===this.currentItem[0]){for(s in this._storedCSS)("auto"===this._storedCSS[s]||"static"===this._storedCSS[s])&&(this._storedCSS[s]="");this.currentItem.css(this._storedCSS),this._removeClass(this.currentItem,"ui-sortable-helper")}else this.currentItem.show();for(this.fromOutside&&!e&&n.push(function(t){this._trigger("receive",t,this._uiHash(this.fromOutside))}),!this.fromOutside&&this.domPosition.prev===this.currentItem.prev().not(".ui-sortable-helper")[0]&&this.domPosition.parent===this.currentItem.parent()[0]||e||n.push(function(t){this._trigger("update",t,this._uiHash())}),this!==this.currentContainer&&(e||(n.push(function(t){this._trigger("remove",t,this._uiHash())}),n.push(function(t){return function(e){t._trigger("receive",e,this._uiHash(this))}}.call(this,this.currentContainer)),n.push(function(t){return function(e){t._trigger("update",e,this._uiHash(this))}}.call(this,this.currentContainer)))),s=this.containers.length-1;s>=0;s--)e||n.push(i("deactivate",this,this.containers[s])),this.containers[s].containerCache.over&&(n.push(i("out",this,this.containers[s])),this.containers[s].containerCache.over=0);if(this.storedCursor&&(this.document.find("body").css("cursor",this.storedCursor),this.storedStylesheet.remove()),this._storedOpacity&&this.helper.css("opacity",this._storedOpacity),this._storedZIndex&&this.helper.css("zIndex","auto"===this._storedZIndex?"":this._storedZIndex),this.dragging=!1,e||this._trigger("beforeStop",t,this._uiHash()),this.placeholder[0].parentNode.removeChild(this.placeholder[0]),this.cancelHelperRemoval||(this.helper[0]!==this.currentItem[0]&&this.helper.remove(),this.helper=null),!e){for(s=0;n.length>s;s++)n[s].call(this,t);this._trigger("stop",t,this._uiHash())}return this.fromOutside=!1,!this.cancelHelperRemoval},_trigger:function(){t.Widget.prototype._trigger.apply(this,arguments)===!1&&this.cancel()},_uiHash:function(e){var i=e||this;return{helper:i.helper,placeholder:i.placeholder||t([]),position:i.position,originalPosition:i.originalPosition,offset:i.positionAbs,item:i.currentItem,sender:e?e.element:null}}}),t.widget("ui.spinner",{version:"1.12.1",defaultElement:"<input>",widgetEventPrefix:"spin",options:{classes:{"ui-spinner":"ui-corner-all","ui-spinner-down":"ui-corner-br","ui-spinner-up":"ui-corner-tr"},culture:null,icons:{down:"ui-icon-triangle-1-s",up:"ui-icon-triangle-1-n"},incremental:!0,max:null,min:null,numberFormat:null,page:10,step:1,change:null,spin:null,start:null,stop:null},_create:function(){this._setOption("max",this.options.max),this._setOption("min",this.options.min),this._setOption("step",this.options.step),""!==this.value()&&this._value(this.element.val(),!0),this._draw(),this._on(this._events),this._refresh(),this._on(this.window,{beforeunload:function(){this.element.removeAttr("autocomplete")}})},_getCreateOptions:function(){var e=this._super(),i=this.element;return t.each(["min","max","step"],function(t,s){var n=i.attr(s);null!=n&&n.length&&(e[s]=n)}),e},_events:{keydown:function(t){this._start(t)&&this._keydown(t)&&t.preventDefault()},keyup:"_stop",focus:function(){this.previous=this.element.val()},blur:function(t){return this.cancelBlur?(delete this.cancelBlur,void 0):(this._stop(),this._refresh(),this.previous!==this.element.val()&&this._trigger("change",t),void 0)},mousewheel:function(t,e){if(e){if(!this.spinning&&!this._start(t))return!1;this._spin((e>0?1:-1)*this.options.step,t),clearTimeout(this.mousewheelTimer),this.mousewheelTimer=this._delay(function(){this.spinning&&this._stop(t)},100),t.preventDefault()}},"mousedown .ui-spinner-button":function(e){function i(){var e=this.element[0]===t.ui.safeActiveElement(this.document[0]);e||(this.element.trigger("focus"),this.previous=s,this._delay(function(){this.previous=s}))}var s;s=this.element[0]===t.ui.safeActiveElement(this.document[0])?this.previous:this.element.val(),e.preventDefault(),i.call(this),this.cancelBlur=!0,this._delay(function(){delete this.cancelBlur,i.call(this)}),this._start(e)!==!1&&this._repeat(null,t(e.currentTarget).hasClass("ui-spinner-up")?1:-1,e)},"mouseup .ui-spinner-button":"_stop","mouseenter .ui-spinner-button":function(e){return t(e.currentTarget).hasClass("ui-state-active")?this._start(e)===!1?!1:(this._repeat(null,t(e.currentTarget).hasClass("ui-spinner-up")?1:-1,e),void 0):void 0},"mouseleave .ui-spinner-button":"_stop"},_enhance:function(){this.uiSpinner=this.element.attr("autocomplete","off").wrap("<span>").parent().append("<a></a><a></a>")},_draw:function(){this._enhance(),this._addClass(this.uiSpinner,"ui-spinner","ui-widget ui-widget-content"),this._addClass("ui-spinner-input"),this.element.attr("role","spinbutton"),this.buttons=this.uiSpinner.children("a").attr("tabIndex",-1).attr("aria-hidden",!0).button({classes:{"ui-button":""}}),this._removeClass(this.buttons,"ui-corner-all"),this._addClass(this.buttons.first(),"ui-spinner-button ui-spinner-up"),this._addClass(this.buttons.last(),"ui-spinner-button ui-spinner-down"),this.buttons.first().button({icon:this.options.icons.up,showLabel:!1}),this.buttons.last().button({icon:this.options.icons.down,showLabel:!1}),this.buttons.height()>Math.ceil(.5*this.uiSpinner.height())&&this.uiSpinner.height()>0&&this.uiSpinner.height(this.uiSpinner.height())},_keydown:function(e){var i=this.options,s=t.ui.keyCode;switch(e.keyCode){case s.UP:return this._repeat(null,1,e),!0;case s.DOWN:return this._repeat(null,-1,e),!0;case s.PAGE_UP:return this._repeat(null,i.page,e),!0;case s.PAGE_DOWN:return this._repeat(null,-i.page,e),!0}return!1},_start:function(t){return this.spinning||this._trigger("start",t)!==!1?(this.counter||(this.counter=1),this.spinning=!0,!0):!1},_repeat:function(t,e,i){t=t||500,clearTimeout(this.timer),this.timer=this._delay(function(){this._repeat(40,e,i)},t),this._spin(e*this.options.step,i)},_spin:function(t,e){var i=this.value()||0;this.counter||(this.counter=1),i=this._adjustValue(i+t*this._increment(this.counter)),this.spinning&&this._trigger("spin",e,{value:i})===!1||(this._value(i),this.counter++)},_increment:function(e){var i=this.options.incremental;return i?t.isFunction(i)?i(e):Math.floor(e*e*e/5e4-e*e/500+17*e/200+1):1},_precision:function(){var t=this._precisionOf(this.options.step);return null!==this.options.min&&(t=Math.max(t,this._precisionOf(this.options.min))),t},_precisionOf:function(t){var e=""+t,i=e.indexOf(".");return-1===i?0:e.length-i-1},_adjustValue:function(t){var e,i,s=this.options;return e=null!==s.min?s.min:0,i=t-e,i=Math.round(i/s.step)*s.step,t=e+i,t=parseFloat(t.toFixed(this._precision())),null!==s.max&&t>s.max?s.max:null!==s.min&&s.min>t?s.min:t},_stop:function(t){this.spinning&&(clearTimeout(this.timer),clearTimeout(this.mousewheelTimer),this.counter=0,this.spinning=!1,this._trigger("stop",t))},_setOption:function(t,e){var i,s,n;return"culture"===t||"numberFormat"===t?(i=this._parse(this.element.val()),this.options[t]=e,this.element.val(this._format(i)),void 0):(("max"===t||"min"===t||"step"===t)&&"string"==typeof e&&(e=this._parse(e)),"icons"===t&&(s=this.buttons.first().find(".ui-icon"),this._removeClass(s,null,this.options.icons.up),this._addClass(s,null,e.up),n=this.buttons.last().find(".ui-icon"),this._removeClass(n,null,this.options.icons.down),this._addClass(n,null,e.down)),this._super(t,e),void 0)},_setOptionDisabled:function(t){this._super(t),this._toggleClass(this.uiSpinner,null,"ui-state-disabled",!!t),this.element.prop("disabled",!!t),this.buttons.button(t?"disable":"enable")},_setOptions:r(function(t){this._super(t)}),_parse:function(t){return"string"==typeof t&&""!==t&&(t=window.Globalize&&this.options.numberFormat?Globalize.parseFloat(t,10,this.options.culture):+t),""===t||isNaN(t)?null:t},_format:function(t){return""===t?"":window.Globalize&&this.options.numberFormat?Globalize.format(t,this.options.numberFormat,this.options.culture):t},_refresh:function(){this.element.attr({"aria-valuemin":this.options.min,"aria-valuemax":this.options.max,"aria-valuenow":this._parse(this.element.val())})},isValid:function(){var t=this.value();return null===t?!1:t===this._adjustValue(t)},_value:function(t,e){var i;""!==t&&(i=this._parse(t),null!==i&&(e||(i=this._adjustValue(i)),t=this._format(i))),this.element.val(t),this._refresh()},_destroy:function(){this.element.prop("disabled",!1).removeAttr("autocomplete role aria-valuemin aria-valuemax aria-valuenow"),this.uiSpinner.replaceWith(this.element)},stepUp:r(function(t){this._stepUp(t)}),_stepUp:function(t){this._start()&&(this._spin((t||1)*this.options.step),this._stop())},stepDown:r(function(t){this._stepDown(t)}),_stepDown:function(t){this._start()&&(this._spin((t||1)*-this.options.step),this._stop())},pageUp:r(function(t){this._stepUp((t||1)*this.options.page)}),pageDown:r(function(t){this._stepDown((t||1)*this.options.page)}),value:function(t){return arguments.length?(r(this._value).call(this,t),void 0):this._parse(this.element.val())},widget:function(){return this.uiSpinner}}),t.uiBackCompat!==!1&&t.widget("ui.spinner",t.ui.spinner,{_enhance:function(){this.uiSpinner=this.element.attr("autocomplete","off").wrap(this._uiSpinnerHtml()).parent().append(this._buttonHtml())},_uiSpinnerHtml:function(){return"<span>"},_buttonHtml:function(){return"<a></a><a></a>"}}),t.ui.spinner,t.widget("ui.tabs",{version:"1.12.1",delay:300,options:{active:null,classes:{"ui-tabs":"ui-corner-all","ui-tabs-nav":"ui-corner-all","ui-tabs-panel":"ui-corner-bottom","ui-tabs-tab":"ui-corner-top"},collapsible:!1,event:"click",heightStyle:"content",hide:null,show:null,activate:null,beforeActivate:null,beforeLoad:null,load:null},_isLocal:function(){var t=/#.*$/;return function(e){var i,s;i=e.href.replace(t,""),s=location.href.replace(t,"");try{i=decodeURIComponent(i)}catch(n){}try{s=decodeURIComponent(s)}catch(n){}return e.hash.length>1&&i===s}}(),_create:function(){var e=this,i=this.options;this.running=!1,this._addClass("ui-tabs","ui-widget ui-widget-content"),this._toggleClass("ui-tabs-collapsible",null,i.collapsible),this._processTabs(),i.active=this._initialActive(),t.isArray(i.disabled)&&(i.disabled=t.unique(i.disabled.concat(t.map(this.tabs.filter(".ui-state-disabled"),function(t){return e.tabs.index(t)}))).sort()),this.active=this.options.active!==!1&&this.anchors.length?this._findActive(i.active):t(),this._refresh(),this.active.length&&this.load(i.active)},_initialActive:function(){var e=this.options.active,i=this.options.collapsible,s=location.hash.substring(1);return null===e&&(s&&this.tabs.each(function(i,n){return t(n).attr("aria-controls")===s?(e=i,!1):void 0}),null===e&&(e=this.tabs.index(this.tabs.filter(".ui-tabs-active"))),(null===e||-1===e)&&(e=this.tabs.length?0:!1)),e!==!1&&(e=this.tabs.index(this.tabs.eq(e)),-1===e&&(e=i?!1:0)),!i&&e===!1&&this.anchors.length&&(e=0),e},_getCreateEventData:function(){return{tab:this.active,panel:this.active.length?this._getPanelForTab(this.active):t()}},_tabKeydown:function(e){var i=t(t.ui.safeActiveElement(this.document[0])).closest("li"),s=this.tabs.index(i),n=!0;if(!this._handlePageNav(e)){switch(e.keyCode){case t.ui.keyCode.RIGHT:case t.ui.keyCode.DOWN:s++;break;case t.ui.keyCode.UP:case t.ui.keyCode.LEFT:n=!1,s--;break;case t.ui.keyCode.END:s=this.anchors.length-1;break;case t.ui.keyCode.HOME:s=0;break;case t.ui.keyCode.SPACE:return e.preventDefault(),clearTimeout(this.activating),this._activate(s),void 0;case t.ui.keyCode.ENTER:return e.preventDefault(),clearTimeout(this.activating),this._activate(s===this.options.active?!1:s),void 0;default:return}e.preventDefault(),clearTimeout(this.activating),s=this._focusNextTab(s,n),e.ctrlKey||e.metaKey||(i.attr("aria-selected","false"),this.tabs.eq(s).attr("aria-selected","true"),this.activating=this._delay(function(){this.option("active",s)},this.delay))}},_panelKeydown:function(e){this._handlePageNav(e)||e.ctrlKey&&e.keyCode===t.ui.keyCode.UP&&(e.preventDefault(),this.active.trigger("focus"))},_handlePageNav:function(e){return e.altKey&&e.keyCode===t.ui.keyCode.PAGE_UP?(this._activate(this._focusNextTab(this.options.active-1,!1)),!0):e.altKey&&e.keyCode===t.ui.keyCode.PAGE_DOWN?(this._activate(this._focusNextTab(this.options.active+1,!0)),!0):void 0},_findNextTab:function(e,i){function s(){return e>n&&(e=0),0>e&&(e=n),e}for(var n=this.tabs.length-1;-1!==t.inArray(s(),this.options.disabled);)e=i?e+1:e-1;return e},_focusNextTab:function(t,e){return t=this._findNextTab(t,e),this.tabs.eq(t).trigger("focus"),t},_setOption:function(t,e){return"active"===t?(this._activate(e),void 0):(this._super(t,e),"collapsible"===t&&(this._toggleClass("ui-tabs-collapsible",null,e),e||this.options.active!==!1||this._activate(0)),"event"===t&&this._setupEvents(e),"heightStyle"===t&&this._setupHeightStyle(e),void 0)},_sanitizeSelector:function(t){return t?t.replace(/[!"$%&'()*+,.\/:;<=>?@\[\]\^`{|}~]/g,"\\$&"):""},refresh:function(){var e=this.options,i=this.tablist.children(":has(a[href])");e.disabled=t.map(i.filter(".ui-state-disabled"),function(t){return i.index(t)}),this._processTabs(),e.active!==!1&&this.anchors.length?this.active.length&&!t.contains(this.tablist[0],this.active[0])?this.tabs.length===e.disabled.length?(e.active=!1,this.active=t()):this._activate(this._findNextTab(Math.max(0,e.active-1),!1)):e.active=this.tabs.index(this.active):(e.active=!1,this.active=t()),this._refresh()},_refresh:function(){this._setOptionDisabled(this.options.disabled),this._setupEvents(this.options.event),this._setupHeightStyle(this.options.heightStyle),this.tabs.not(this.active).attr({"aria-selected":"false","aria-expanded":"false",tabIndex:-1}),this.panels.not(this._getPanelForTab(this.active)).hide().attr({"aria-hidden":"true"}),this.active.length?(this.active.attr({"aria-selected":"true","aria-expanded":"true",tabIndex:0}),this._addClass(this.active,"ui-tabs-active","ui-state-active"),this._getPanelForTab(this.active).show().attr({"aria-hidden":"false"})):this.tabs.eq(0).attr("tabIndex",0)},_processTabs:function(){var e=this,i=this.tabs,s=this.anchors,n=this.panels;this.tablist=this._getList().attr("role","tablist"),this._addClass(this.tablist,"ui-tabs-nav","ui-helper-reset ui-helper-clearfix ui-widget-header"),this.tablist.on("mousedown"+this.eventNamespace,"> li",function(e){t(this).is(".ui-state-disabled")&&e.preventDefault()}).on("focus"+this.eventNamespace,".ui-tabs-anchor",function(){t(this).closest("li").is(".ui-state-disabled")&&this.blur()}),this.tabs=this.tablist.find("> li:has(a[href])").attr({role:"tab",tabIndex:-1}),this._addClass(this.tabs,"ui-tabs-tab","ui-state-default"),this.anchors=this.tabs.map(function(){return t("a",this)[0]}).attr({role:"presentation",tabIndex:-1}),this._addClass(this.anchors,"ui-tabs-anchor"),this.panels=t(),this.anchors.each(function(i,s){var n,o,a,r=t(s).uniqueId().attr("id"),h=t(s).closest("li"),l=h.attr("aria-controls");e._isLocal(s)?(n=s.hash,a=n.substring(1),o=e.element.find(e._sanitizeSelector(n))):(a=h.attr("aria-controls")||t({}).uniqueId()[0].id,n="#"+a,o=e.element.find(n),o.length||(o=e._createPanel(a),o.insertAfter(e.panels[i-1]||e.tablist)),o.attr("aria-live","polite")),o.length&&(e.panels=e.panels.add(o)),l&&h.data("ui-tabs-aria-controls",l),h.attr({"aria-controls":a,"aria-labelledby":r}),o.attr("aria-labelledby",r)}),this.panels.attr("role","tabpanel"),this._addClass(this.panels,"ui-tabs-panel","ui-widget-content"),i&&(this._off(i.not(this.tabs)),this._off(s.not(this.anchors)),this._off(n.not(this.panels)))},_getList:function(){return this.tablist||this.element.find("ol, ul").eq(0)},_createPanel:function(e){return t("<div>").attr("id",e).data("ui-tabs-destroy",!0)},_setOptionDisabled:function(e){var i,s,n;for(t.isArray(e)&&(e.length?e.length===this.anchors.length&&(e=!0):e=!1),n=0;s=this.tabs[n];n++)i=t(s),e===!0||-1!==t.inArray(n,e)?(i.attr("aria-disabled","true"),this._addClass(i,null,"ui-state-disabled")):(i.removeAttr("aria-disabled"),this._removeClass(i,null,"ui-state-disabled"));this.options.disabled=e,this._toggleClass(this.widget(),this.widgetFullName+"-disabled",null,e===!0)},_setupEvents:function(e){var i={};e&&t.each(e.split(" "),function(t,e){i[e]="_eventHandler"}),this._off(this.anchors.add(this.tabs).add(this.panels)),this._on(!0,this.anchors,{click:function(t){t.preventDefault()}}),this._on(this.anchors,i),this._on(this.tabs,{keydown:"_tabKeydown"}),this._on(this.panels,{keydown:"_panelKeydown"}),this._focusable(this.tabs),this._hoverable(this.tabs)},_setupHeightStyle:function(e){var i,s=this.element.parent();"fill"===e?(i=s.height(),i-=this.element.outerHeight()-this.element.height(),this.element.siblings(":visible").each(function(){var e=t(this),s=e.css("position");"absolute"!==s&&"fixed"!==s&&(i-=e.outerHeight(!0))}),this.element.children().not(this.panels).each(function(){i-=t(this).outerHeight(!0)}),this.panels.each(function(){t(this).height(Math.max(0,i-t(this).innerHeight()+t(this).height()))}).css("overflow","auto")):"auto"===e&&(i=0,this.panels.each(function(){i=Math.max(i,t(this).height("").height())}).height(i))},_eventHandler:function(e){var i=this.options,s=this.active,n=t(e.currentTarget),o=n.closest("li"),a=o[0]===s[0],r=a&&i.collapsible,h=r?t():this._getPanelForTab(o),l=s.length?this._getPanelForTab(s):t(),c={oldTab:s,oldPanel:l,newTab:r?t():o,newPanel:h};e.preventDefault(),o.hasClass("ui-state-disabled")||o.hasClass("ui-tabs-loading")||this.running||a&&!i.collapsible||this._trigger("beforeActivate",e,c)===!1||(i.active=r?!1:this.tabs.index(o),this.active=a?t():o,this.xhr&&this.xhr.abort(),l.length||h.length||t.error("jQuery UI Tabs: Mismatching fragment identifier."),h.length&&this.load(this.tabs.index(o),e),this._toggle(e,c))},_toggle:function(e,i){function s(){o.running=!1,o._trigger("activate",e,i)}function n(){o._addClass(i.newTab.closest("li"),"ui-tabs-active","ui-state-active"),a.length&&o.options.show?o._show(a,o.options.show,s):(a.show(),s())}var o=this,a=i.newPanel,r=i.oldPanel;this.running=!0,r.length&&this.options.hide?this._hide(r,this.options.hide,function(){o._removeClass(i.oldTab.closest("li"),"ui-tabs-active","ui-state-active"),n()}):(this._removeClass(i.oldTab.closest("li"),"ui-tabs-active","ui-state-active"),r.hide(),n()),r.attr("aria-hidden","true"),i.oldTab.attr({"aria-selected":"false","aria-expanded":"false"}),a.length&&r.length?i.oldTab.attr("tabIndex",-1):a.length&&this.tabs.filter(function(){return 0===t(this).attr("tabIndex")}).attr("tabIndex",-1),a.attr("aria-hidden","false"),i.newTab.attr({"aria-selected":"true","aria-expanded":"true",tabIndex:0})},_activate:function(e){var i,s=this._findActive(e);s[0]!==this.active[0]&&(s.length||(s=this.active),i=s.find(".ui-tabs-anchor")[0],this._eventHandler({target:i,currentTarget:i,preventDefault:t.noop}))},_findActive:function(e){return e===!1?t():this.tabs.eq(e)},_getIndex:function(e){return"string"==typeof e&&(e=this.anchors.index(this.anchors.filter("[href$='"+t.ui.escapeSelector(e)+"']"))),e},_destroy:function(){this.xhr&&this.xhr.abort(),this.tablist.removeAttr("role").off(this.eventNamespace),this.anchors.removeAttr("role tabIndex").removeUniqueId(),this.tabs.add(this.panels).each(function(){t.data(this,"ui-tabs-destroy")?t(this).remove():t(this).removeAttr("role tabIndex aria-live aria-busy aria-selected aria-labelledby aria-hidden aria-expanded")}),this.tabs.each(function(){var e=t(this),i=e.data("ui-tabs-aria-controls");i?e.attr("aria-controls",i).removeData("ui-tabs-aria-controls"):e.removeAttr("aria-controls")}),this.panels.show(),"content"!==this.options.heightStyle&&this.panels.css("height","")},enable:function(e){var i=this.options.disabled;i!==!1&&(void 0===e?i=!1:(e=this._getIndex(e),i=t.isArray(i)?t.map(i,function(t){return t!==e?t:null}):t.map(this.tabs,function(t,i){return i!==e?i:null})),this._setOptionDisabled(i))},disable:function(e){var i=this.options.disabled;if(i!==!0){if(void 0===e)i=!0;else{if(e=this._getIndex(e),-1!==t.inArray(e,i))return;i=t.isArray(i)?t.merge([e],i).sort():[e]}this._setOptionDisabled(i)}},load:function(e,i){e=this._getIndex(e);var s=this,n=this.tabs.eq(e),o=n.find(".ui-tabs-anchor"),a=this._getPanelForTab(n),r={tab:n,panel:a},h=function(t,e){"abort"===e&&s.panels.stop(!1,!0),s._removeClass(n,"ui-tabs-loading"),a.removeAttr("aria-busy"),t===s.xhr&&delete s.xhr};this._isLocal(o[0])||(this.xhr=t.ajax(this._ajaxSettings(o,i,r)),this.xhr&&"canceled"!==this.xhr.statusText&&(this._addClass(n,"ui-tabs-loading"),a.attr("aria-busy","true"),this.xhr.done(function(t,e,n){setTimeout(function(){a.html(t),s._trigger("load",i,r),h(n,e)},1)}).fail(function(t,e){setTimeout(function(){h(t,e)},1)})))},_ajaxSettings:function(e,i,s){var n=this;return{url:e.attr("href").replace(/#.*$/,""),beforeSend:function(e,o){return n._trigger("beforeLoad",i,t.extend({jqXHR:e,ajaxSettings:o},s))}}},_getPanelForTab:function(e){var i=t(e).attr("aria-controls");return this.element.find(this._sanitizeSelector("#"+i))}}),t.uiBackCompat!==!1&&t.widget("ui.tabs",t.ui.tabs,{_processTabs:function(){this._superApply(arguments),this._addClass(this.tabs,"ui-tab")}}),t.ui.tabs,t.widget("ui.tooltip",{version:"1.12.1",options:{classes:{"ui-tooltip":"ui-corner-all ui-widget-shadow"},content:function(){var e=t(this).attr("title")||"";return t("<a>").text(e).html()},hide:!0,items:"[title]:not([disabled])",position:{my:"left top+15",at:"left bottom",collision:"flipfit flip"},show:!0,track:!1,close:null,open:null},_addDescribedBy:function(e,i){var s=(e.attr("aria-describedby")||"").split(/\s+/);s.push(i),e.data("ui-tooltip-id",i).attr("aria-describedby",t.trim(s.join(" ")))},_removeDescribedBy:function(e){var i=e.data("ui-tooltip-id"),s=(e.attr("aria-describedby")||"").split(/\s+/),n=t.inArray(i,s);-1!==n&&s.splice(n,1),e.removeData("ui-tooltip-id"),s=t.trim(s.join(" ")),s?e.attr("aria-describedby",s):e.removeAttr("aria-describedby")},_create:function(){this._on({mouseover:"open",focusin:"open"}),this.tooltips={},this.parents={},this.liveRegion=t("<div>").attr({role:"log","aria-live":"assertive","aria-relevant":"additions"}).appendTo(this.document[0].body),this._addClass(this.liveRegion,null,"ui-helper-hidden-accessible"),this.disabledTitles=t([])},_setOption:function(e,i){var s=this;this._super(e,i),"content"===e&&t.each(this.tooltips,function(t,e){s._updateContent(e.element)})},_setOptionDisabled:function(t){this[t?"_disable":"_enable"]()},_disable:function(){var e=this;t.each(this.tooltips,function(i,s){var n=t.Event("blur");n.target=n.currentTarget=s.element[0],e.close(n,!0)}),this.disabledTitles=this.disabledTitles.add(this.element.find(this.options.items).addBack().filter(function(){var e=t(this);return e.is("[title]")?e.data("ui-tooltip-title",e.attr("title")).removeAttr("title"):void 0}))},_enable:function(){this.disabledTitles.each(function(){var e=t(this);e.data("ui-tooltip-title")&&e.attr("title",e.data("ui-tooltip-title"))}),this.disabledTitles=t([])},open:function(e){var i=this,s=t(e?e.target:this.element).closest(this.options.items);s.length&&!s.data("ui-tooltip-id")&&(s.attr("title")&&s.data("ui-tooltip-title",s.attr("title")),s.data("ui-tooltip-open",!0),e&&"mouseover"===e.type&&s.parents().each(function(){var e,s=t(this);s.data("ui-tooltip-open")&&(e=t.Event("blur"),e.target=e.currentTarget=this,i.close(e,!0)),s.attr("title")&&(s.uniqueId(),i.parents[this.id]={element:this,title:s.attr("title")},s.attr("title",""))}),this._registerCloseHandlers(e,s),this._updateContent(s,e))},_updateContent:function(t,e){var i,s=this.options.content,n=this,o=e?e.type:null;return"string"==typeof s||s.nodeType||s.jquery?this._open(e,t,s):(i=s.call(t[0],function(i){n._delay(function(){t.data("ui-tooltip-open")&&(e&&(e.type=o),this._open(e,t,i))})}),i&&this._open(e,t,i),void 0)},_open:function(e,i,s){function n(t){l.of=t,a.is(":hidden")||a.position(l)}var o,a,r,h,l=t.extend({},this.options.position);if(s){if(o=this._find(i))return o.tooltip.find(".ui-tooltip-content").html(s),void 0;i.is("[title]")&&(e&&"mouseover"===e.type?i.attr("title",""):i.removeAttr("title")),o=this._tooltip(i),a=o.tooltip,this._addDescribedBy(i,a.attr("id")),a.find(".ui-tooltip-content").html(s),this.liveRegion.children().hide(),h=t("<div>").html(a.find(".ui-tooltip-content").html()),h.removeAttr("name").find("[name]").removeAttr("name"),h.removeAttr("id").find("[id]").removeAttr("id"),h.appendTo(this.liveRegion),this.options.track&&e&&/^mouse/.test(e.type)?(this._on(this.document,{mousemove:n}),n(e)):a.position(t.extend({of:i},this.options.position)),a.hide(),this._show(a,this.options.show),this.options.track&&this.options.show&&this.options.show.delay&&(r=this.delayedShow=setInterval(function(){a.is(":visible")&&(n(l.of),clearInterval(r))},t.fx.interval)),this._trigger("open",e,{tooltip:a})}},_registerCloseHandlers:function(e,i){var s={keyup:function(e){if(e.keyCode===t.ui.keyCode.ESCAPE){var s=t.Event(e);s.currentTarget=i[0],this.close(s,!0)}}};i[0]!==this.element[0]&&(s.remove=function(){this._removeTooltip(this._find(i).tooltip)}),e&&"mouseover"!==e.type||(s.mouseleave="close"),e&&"focusin"!==e.type||(s.focusout="close"),this._on(!0,i,s)},close:function(e){var i,s=this,n=t(e?e.currentTarget:this.element),o=this._find(n);return o?(i=o.tooltip,o.closing||(clearInterval(this.delayedShow),n.data("ui-tooltip-title")&&!n.attr("title")&&n.attr("title",n.data("ui-tooltip-title")),this._removeDescribedBy(n),o.hiding=!0,i.stop(!0),this._hide(i,this.options.hide,function(){s._removeTooltip(t(this))}),n.removeData("ui-tooltip-open"),this._off(n,"mouseleave focusout keyup"),n[0]!==this.element[0]&&this._off(n,"remove"),this._off(this.document,"mousemove"),e&&"mouseleave"===e.type&&t.each(this.parents,function(e,i){t(i.element).attr("title",i.title),delete s.parents[e]}),o.closing=!0,this._trigger("close",e,{tooltip:i}),o.hiding||(o.closing=!1)),void 0):(n.removeData("ui-tooltip-open"),void 0)},_tooltip:function(e){var i=t("<div>").attr("role","tooltip"),s=t("<div>").appendTo(i),n=i.uniqueId().attr("id");return this._addClass(s,"ui-tooltip-content"),this._addClass(i,"ui-tooltip","ui-widget ui-widget-content"),i.appendTo(this._appendTo(e)),this.tooltips[n]={element:e,tooltip:i}},_find:function(t){var e=t.data("ui-tooltip-id");return e?this.tooltips[e]:null},_removeTooltip:function(t){t.remove(),delete this.tooltips[t.attr("id")]},_appendTo:function(t){var e=t.closest(".ui-front, dialog");return e.length||(e=this.document[0].body),e},_destroy:function(){var e=this;t.each(this.tooltips,function(i,s){var n=t.Event("blur"),o=s.element;n.target=n.currentTarget=o[0],e.close(n,!0),t("#"+i).remove(),o.data("ui-tooltip-title")&&(o.attr("title")||o.attr("title",o.data("ui-tooltip-title")),o.removeData("ui-tooltip-title"))}),this.liveRegion.remove()}}),t.uiBackCompat!==!1&&t.widget("ui.tooltip",t.ui.tooltip,{options:{tooltipClass:null},_tooltip:function(){var t=this._superApply(arguments);return this.options.tooltipClass&&t.tooltip.addClass(this.options.tooltipClass),t}}),t.ui.tooltip});

/*
 Popper.js
 Copyright (C) Federico Zivolo 2019
 Distributed under the MIT License (license terms are at http://opensource.org/licenses/MIT).
 */(function(e,t){'object'==typeof exports&&'undefined'!=typeof module?module.exports=t():'function'==typeof define&&define.amd?define(t):e.Popper=t()})(this,function(){'use strict';function e(e){return e&&'[object Function]'==={}.toString.call(e)}function t(e,t){if(1!==e.nodeType)return[];var o=e.ownerDocument.defaultView,n=o.getComputedStyle(e,null);return t?n[t]:n}function o(e){return'HTML'===e.nodeName?e:e.parentNode||e.host}function n(e){if(!e)return document.body;switch(e.nodeName){case'HTML':case'BODY':return e.ownerDocument.body;case'#document':return e.body;}var i=t(e),r=i.overflow,p=i.overflowX,s=i.overflowY;return /(auto|scroll|overlay)/.test(r+s+p)?e:n(o(e))}function r(e){return 11===e?pe:10===e?se:pe||se}function p(e){if(!e)return document.documentElement;for(var o=r(10)?document.body:null,n=e.offsetParent||null;n===o&&e.nextElementSibling;)n=(e=e.nextElementSibling).offsetParent;var i=n&&n.nodeName;return i&&'BODY'!==i&&'HTML'!==i?-1!==['TH','TD','TABLE'].indexOf(n.nodeName)&&'static'===t(n,'position')?p(n):n:e?e.ownerDocument.documentElement:document.documentElement}function s(e){var t=e.nodeName;return'BODY'!==t&&('HTML'===t||p(e.firstElementChild)===e)}function d(e){return null===e.parentNode?e:d(e.parentNode)}function a(e,t){if(!e||!e.nodeType||!t||!t.nodeType)return document.documentElement;var o=e.compareDocumentPosition(t)&Node.DOCUMENT_POSITION_FOLLOWING,n=o?e:t,i=o?t:e,r=document.createRange();r.setStart(n,0),r.setEnd(i,0);var l=r.commonAncestorContainer;if(e!==l&&t!==l||n.contains(i))return s(l)?l:p(l);var f=d(e);return f.host?a(f.host,t):a(e,d(t).host)}function l(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:'top',o='top'===t?'scrollTop':'scrollLeft',n=e.nodeName;if('BODY'===n||'HTML'===n){var i=e.ownerDocument.documentElement,r=e.ownerDocument.scrollingElement||i;return r[o]}return e[o]}function f(e,t){var o=2<arguments.length&&void 0!==arguments[2]&&arguments[2],n=l(t,'top'),i=l(t,'left'),r=o?-1:1;return e.top+=n*r,e.bottom+=n*r,e.left+=i*r,e.right+=i*r,e}function m(e,t){var o='x'===t?'Left':'Top',n='Left'==o?'Right':'Bottom';return parseFloat(e['border'+o+'Width'],10)+parseFloat(e['border'+n+'Width'],10)}function h(e,t,o,n){return ee(t['offset'+e],t['scroll'+e],o['client'+e],o['offset'+e],o['scroll'+e],r(10)?parseInt(o['offset'+e])+parseInt(n['margin'+('Height'===e?'Top':'Left')])+parseInt(n['margin'+('Height'===e?'Bottom':'Right')]):0)}function c(e){var t=e.body,o=e.documentElement,n=r(10)&&getComputedStyle(o);return{height:h('Height',t,o,n),width:h('Width',t,o,n)}}function g(e){return fe({},e,{right:e.left+e.width,bottom:e.top+e.height})}function u(e){var o={};try{if(r(10)){o=e.getBoundingClientRect();var n=l(e,'top'),i=l(e,'left');o.top+=n,o.left+=i,o.bottom+=n,o.right+=i}else o=e.getBoundingClientRect()}catch(t){}var p={left:o.left,top:o.top,width:o.right-o.left,height:o.bottom-o.top},s='HTML'===e.nodeName?c(e.ownerDocument):{},d=s.width||e.clientWidth||p.right-p.left,a=s.height||e.clientHeight||p.bottom-p.top,f=e.offsetWidth-d,h=e.offsetHeight-a;if(f||h){var u=t(e);f-=m(u,'x'),h-=m(u,'y'),p.width-=f,p.height-=h}return g(p)}function b(e,o){var i=2<arguments.length&&void 0!==arguments[2]&&arguments[2],p=r(10),s='HTML'===o.nodeName,d=u(e),a=u(o),l=n(e),m=t(o),h=parseFloat(m.borderTopWidth,10),c=parseFloat(m.borderLeftWidth,10);i&&s&&(a.top=ee(a.top,0),a.left=ee(a.left,0));var b=g({top:d.top-a.top-h,left:d.left-a.left-c,width:d.width,height:d.height});if(b.marginTop=0,b.marginLeft=0,!p&&s){var w=parseFloat(m.marginTop,10),y=parseFloat(m.marginLeft,10);b.top-=h-w,b.bottom-=h-w,b.left-=c-y,b.right-=c-y,b.marginTop=w,b.marginLeft=y}return(p&&!i?o.contains(l):o===l&&'BODY'!==l.nodeName)&&(b=f(b,o)),b}function w(e){var t=1<arguments.length&&void 0!==arguments[1]&&arguments[1],o=e.ownerDocument.documentElement,n=b(e,o),i=ee(o.clientWidth,window.innerWidth||0),r=ee(o.clientHeight,window.innerHeight||0),p=t?0:l(o),s=t?0:l(o,'left'),d={top:p-n.top+n.marginTop,left:s-n.left+n.marginLeft,width:i,height:r};return g(d)}function y(e){var n=e.nodeName;if('BODY'===n||'HTML'===n)return!1;if('fixed'===t(e,'position'))return!0;var i=o(e);return!!i&&y(i)}function E(e){if(!e||!e.parentElement||r())return document.documentElement;for(var o=e.parentElement;o&&'none'===t(o,'transform');)o=o.parentElement;return o||document.documentElement}function v(e,t,i,r){var p=4<arguments.length&&void 0!==arguments[4]&&arguments[4],s={top:0,left:0},d=p?E(e):a(e,t);if('viewport'===r)s=w(d,p);else{var l;'scrollParent'===r?(l=n(o(t)),'BODY'===l.nodeName&&(l=e.ownerDocument.documentElement)):'window'===r?l=e.ownerDocument.documentElement:l=r;var f=b(l,d,p);if('HTML'===l.nodeName&&!y(d)){var m=c(e.ownerDocument),h=m.height,g=m.width;s.top+=f.top-f.marginTop,s.bottom=h+f.top,s.left+=f.left-f.marginLeft,s.right=g+f.left}else s=f}i=i||0;var u='number'==typeof i;return s.left+=u?i:i.left||0,s.top+=u?i:i.top||0,s.right-=u?i:i.right||0,s.bottom-=u?i:i.bottom||0,s}function x(e){var t=e.width,o=e.height;return t*o}function O(e,t,o,n,i){var r=5<arguments.length&&void 0!==arguments[5]?arguments[5]:0;if(-1===e.indexOf('auto'))return e;var p=v(o,n,r,i),s={top:{width:p.width,height:t.top-p.top},right:{width:p.right-t.right,height:p.height},bottom:{width:p.width,height:p.bottom-t.bottom},left:{width:t.left-p.left,height:p.height}},d=Object.keys(s).map(function(e){return fe({key:e},s[e],{area:x(s[e])})}).sort(function(e,t){return t.area-e.area}),a=d.filter(function(e){var t=e.width,n=e.height;return t>=o.clientWidth&&n>=o.clientHeight}),l=0<a.length?a[0].key:d[0].key,f=e.split('-')[1];return l+(f?'-'+f:'')}function L(e,t,o){var n=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null,i=n?E(t):a(t,o);return b(o,i,n)}function S(e){var t=e.ownerDocument.defaultView,o=t.getComputedStyle(e),n=parseFloat(o.marginTop||0)+parseFloat(o.marginBottom||0),i=parseFloat(o.marginLeft||0)+parseFloat(o.marginRight||0),r={width:e.offsetWidth+i,height:e.offsetHeight+n};return r}function T(e){var t={left:'right',right:'left',bottom:'top',top:'bottom'};return e.replace(/left|right|bottom|top/g,function(e){return t[e]})}function D(e,t,o){o=o.split('-')[0];var n=S(e),i={width:n.width,height:n.height},r=-1!==['right','left'].indexOf(o),p=r?'top':'left',s=r?'left':'top',d=r?'height':'width',a=r?'width':'height';return i[p]=t[p]+t[d]/2-n[d]/2,i[s]=o===s?t[s]-n[a]:t[T(s)],i}function C(e,t){return Array.prototype.find?e.find(t):e.filter(t)[0]}function N(e,t,o){if(Array.prototype.findIndex)return e.findIndex(function(e){return e[t]===o});var n=C(e,function(e){return e[t]===o});return e.indexOf(n)}function P(t,o,n){var i=void 0===n?t:t.slice(0,N(t,'name',n));return i.forEach(function(t){t['function']&&console.warn('`modifier.function` is deprecated, use `modifier.fn`!');var n=t['function']||t.fn;t.enabled&&e(n)&&(o.offsets.popper=g(o.offsets.popper),o.offsets.reference=g(o.offsets.reference),o=n(o,t))}),o}function k(){if(!this.state.isDestroyed){var e={instance:this,styles:{},arrowStyles:{},attributes:{},flipped:!1,offsets:{}};e.offsets.reference=L(this.state,this.popper,this.reference,this.options.positionFixed),e.placement=O(this.options.placement,e.offsets.reference,this.popper,this.reference,this.options.modifiers.flip.boundariesElement,this.options.modifiers.flip.padding),e.originalPlacement=e.placement,e.positionFixed=this.options.positionFixed,e.offsets.popper=D(this.popper,e.offsets.reference,e.placement),e.offsets.popper.position=this.options.positionFixed?'fixed':'absolute',e=P(this.modifiers,e),this.state.isCreated?this.options.onUpdate(e):(this.state.isCreated=!0,this.options.onCreate(e))}}function W(e,t){return e.some(function(e){var o=e.name,n=e.enabled;return n&&o===t})}function H(e){for(var t=[!1,'ms','Webkit','Moz','O'],o=e.charAt(0).toUpperCase()+e.slice(1),n=0;n<t.length;n++){var i=t[n],r=i?''+i+o:e;if('undefined'!=typeof document.body.style[r])return r}return null}function B(){return this.state.isDestroyed=!0,W(this.modifiers,'applyStyle')&&(this.popper.removeAttribute('x-placement'),this.popper.style.position='',this.popper.style.top='',this.popper.style.left='',this.popper.style.right='',this.popper.style.bottom='',this.popper.style.willChange='',this.popper.style[H('transform')]=''),this.disableEventListeners(),this.options.removeOnDestroy&&this.popper.parentNode.removeChild(this.popper),this}function A(e){var t=e.ownerDocument;return t?t.defaultView:window}function M(e,t,o,i){var r='BODY'===e.nodeName,p=r?e.ownerDocument.defaultView:e;p.addEventListener(t,o,{passive:!0}),r||M(n(p.parentNode),t,o,i),i.push(p)}function F(e,t,o,i){o.updateBound=i,A(e).addEventListener('resize',o.updateBound,{passive:!0});var r=n(e);return M(r,'scroll',o.updateBound,o.scrollParents),o.scrollElement=r,o.eventsEnabled=!0,o}function I(){this.state.eventsEnabled||(this.state=F(this.reference,this.options,this.state,this.scheduleUpdate))}function R(e,t){return A(e).removeEventListener('resize',t.updateBound),t.scrollParents.forEach(function(e){e.removeEventListener('scroll',t.updateBound)}),t.updateBound=null,t.scrollParents=[],t.scrollElement=null,t.eventsEnabled=!1,t}function U(){this.state.eventsEnabled&&(cancelAnimationFrame(this.scheduleUpdate),this.state=R(this.reference,this.state))}function Y(e){return''!==e&&!isNaN(parseFloat(e))&&isFinite(e)}function j(e,t){Object.keys(t).forEach(function(o){var n='';-1!==['width','height','top','right','bottom','left'].indexOf(o)&&Y(t[o])&&(n='px'),e.style[o]=t[o]+n})}function V(e,t){Object.keys(t).forEach(function(o){var n=t[o];!1===n?e.removeAttribute(o):e.setAttribute(o,t[o])})}function q(e,t){var o=e.offsets,n=o.popper,i=o.reference,r=$,p=function(e){return e},s=r(i.width),d=r(n.width),a=-1!==['left','right'].indexOf(e.placement),l=-1!==e.placement.indexOf('-'),f=t?a||l||s%2==d%2?r:Z:p,m=t?r:p;return{left:f(1==s%2&&1==d%2&&!l&&t?n.left-1:n.left),top:m(n.top),bottom:m(n.bottom),right:f(n.right)}}function K(e,t,o){var n=C(e,function(e){var o=e.name;return o===t}),i=!!n&&e.some(function(e){return e.name===o&&e.enabled&&e.order<n.order});if(!i){var r='`'+t+'`';console.warn('`'+o+'`'+' modifier is required by '+r+' modifier in order to work, be sure to include it before '+r+'!')}return i}function z(e){return'end'===e?'start':'start'===e?'end':e}function G(e){var t=1<arguments.length&&void 0!==arguments[1]&&arguments[1],o=ce.indexOf(e),n=ce.slice(o+1).concat(ce.slice(0,o));return t?n.reverse():n}function _(e,t,o,n){var i=e.match(/((?:\-|\+)?\d*\.?\d*)(.*)/),r=+i[1],p=i[2];if(!r)return e;if(0===p.indexOf('%')){var s;switch(p){case'%p':s=o;break;case'%':case'%r':default:s=n;}var d=g(s);return d[t]/100*r}if('vh'===p||'vw'===p){var a;return a='vh'===p?ee(document.documentElement.clientHeight,window.innerHeight||0):ee(document.documentElement.clientWidth,window.innerWidth||0),a/100*r}return r}function X(e,t,o,n){var i=[0,0],r=-1!==['right','left'].indexOf(n),p=e.split(/(\+|\-)/).map(function(e){return e.trim()}),s=p.indexOf(C(p,function(e){return-1!==e.search(/,|\s/)}));p[s]&&-1===p[s].indexOf(',')&&console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');var d=/\s*,\s*|\s+/,a=-1===s?[p]:[p.slice(0,s).concat([p[s].split(d)[0]]),[p[s].split(d)[1]].concat(p.slice(s+1))];return a=a.map(function(e,n){var i=(1===n?!r:r)?'height':'width',p=!1;return e.reduce(function(e,t){return''===e[e.length-1]&&-1!==['+','-'].indexOf(t)?(e[e.length-1]=t,p=!0,e):p?(e[e.length-1]+=t,p=!1,e):e.concat(t)},[]).map(function(e){return _(e,i,t,o)})}),a.forEach(function(e,t){e.forEach(function(o,n){Y(o)&&(i[t]+=o*('-'===e[n-1]?-1:1))})}),i}function J(e,t){var o,n=t.offset,i=e.placement,r=e.offsets,p=r.popper,s=r.reference,d=i.split('-')[0];return o=Y(+n)?[+n,0]:X(n,p,s,d),'left'===d?(p.top+=o[0],p.left-=o[1]):'right'===d?(p.top+=o[0],p.left+=o[1]):'top'===d?(p.left+=o[0],p.top-=o[1]):'bottom'===d&&(p.left+=o[0],p.top+=o[1]),e.popper=p,e}for(var Q=Math.min,Z=Math.floor,$=Math.round,ee=Math.max,te='undefined'!=typeof window&&'undefined'!=typeof document,oe=['Edge','Trident','Firefox'],ne=0,ie=0;ie<oe.length;ie+=1)if(te&&0<=navigator.userAgent.indexOf(oe[ie])){ne=1;break}var i=te&&window.Promise,re=i?function(e){var t=!1;return function(){t||(t=!0,window.Promise.resolve().then(function(){t=!1,e()}))}}:function(e){var t=!1;return function(){t||(t=!0,setTimeout(function(){t=!1,e()},ne))}},pe=te&&!!(window.MSInputMethodContext&&document.documentMode),se=te&&/MSIE 10/.test(navigator.userAgent),de=function(e,t){if(!(e instanceof t))throw new TypeError('Cannot call a class as a function')},ae=function(){function e(e,t){for(var o,n=0;n<t.length;n++)o=t[n],o.enumerable=o.enumerable||!1,o.configurable=!0,'value'in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}return function(t,o,n){return o&&e(t.prototype,o),n&&e(t,n),t}}(),le=function(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e},fe=Object.assign||function(e){for(var t,o=1;o<arguments.length;o++)for(var n in t=arguments[o],t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e},me=te&&/Firefox/i.test(navigator.userAgent),he=['auto-start','auto','auto-end','top-start','top','top-end','right-start','right','right-end','bottom-end','bottom','bottom-start','left-end','left','left-start'],ce=he.slice(3),ge={FLIP:'flip',CLOCKWISE:'clockwise',COUNTERCLOCKWISE:'counterclockwise'},ue=function(){function t(o,n){var i=this,r=2<arguments.length&&void 0!==arguments[2]?arguments[2]:{};de(this,t),this.scheduleUpdate=function(){return requestAnimationFrame(i.update)},this.update=re(this.update.bind(this)),this.options=fe({},t.Defaults,r),this.state={isDestroyed:!1,isCreated:!1,scrollParents:[]},this.reference=o&&o.jquery?o[0]:o,this.popper=n&&n.jquery?n[0]:n,this.options.modifiers={},Object.keys(fe({},t.Defaults.modifiers,r.modifiers)).forEach(function(e){i.options.modifiers[e]=fe({},t.Defaults.modifiers[e]||{},r.modifiers?r.modifiers[e]:{})}),this.modifiers=Object.keys(this.options.modifiers).map(function(e){return fe({name:e},i.options.modifiers[e])}).sort(function(e,t){return e.order-t.order}),this.modifiers.forEach(function(t){t.enabled&&e(t.onLoad)&&t.onLoad(i.reference,i.popper,i.options,t,i.state)}),this.update();var p=this.options.eventsEnabled;p&&this.enableEventListeners(),this.state.eventsEnabled=p}return ae(t,[{key:'update',value:function(){return k.call(this)}},{key:'destroy',value:function(){return B.call(this)}},{key:'enableEventListeners',value:function(){return I.call(this)}},{key:'disableEventListeners',value:function(){return U.call(this)}}]),t}();return ue.Utils=('undefined'==typeof window?global:window).PopperUtils,ue.placements=he,ue.Defaults={placement:'bottom',positionFixed:!1,eventsEnabled:!0,removeOnDestroy:!1,onCreate:function(){},onUpdate:function(){},modifiers:{shift:{order:100,enabled:!0,fn:function(e){var t=e.placement,o=t.split('-')[0],n=t.split('-')[1];if(n){var i=e.offsets,r=i.reference,p=i.popper,s=-1!==['bottom','top'].indexOf(o),d=s?'left':'top',a=s?'width':'height',l={start:le({},d,r[d]),end:le({},d,r[d]+r[a]-p[a])};e.offsets.popper=fe({},p,l[n])}return e}},offset:{order:200,enabled:!0,fn:J,offset:0},preventOverflow:{order:300,enabled:!0,fn:function(e,t){var o=t.boundariesElement||p(e.instance.popper);e.instance.reference===o&&(o=p(o));var n=H('transform'),i=e.instance.popper.style,r=i.top,s=i.left,d=i[n];i.top='',i.left='',i[n]='';var a=v(e.instance.popper,e.instance.reference,t.padding,o,e.positionFixed);i.top=r,i.left=s,i[n]=d,t.boundaries=a;var l=t.priority,f=e.offsets.popper,m={primary:function(e){var o=f[e];return f[e]<a[e]&&!t.escapeWithReference&&(o=ee(f[e],a[e])),le({},e,o)},secondary:function(e){var o='right'===e?'left':'top',n=f[o];return f[e]>a[e]&&!t.escapeWithReference&&(n=Q(f[o],a[e]-('right'===e?f.width:f.height))),le({},o,n)}};return l.forEach(function(e){var t=-1===['left','top'].indexOf(e)?'secondary':'primary';f=fe({},f,m[t](e))}),e.offsets.popper=f,e},priority:['left','right','top','bottom'],padding:5,boundariesElement:'scrollParent'},keepTogether:{order:400,enabled:!0,fn:function(e){var t=e.offsets,o=t.popper,n=t.reference,i=e.placement.split('-')[0],r=Z,p=-1!==['top','bottom'].indexOf(i),s=p?'right':'bottom',d=p?'left':'top',a=p?'width':'height';return o[s]<r(n[d])&&(e.offsets.popper[d]=r(n[d])-o[a]),o[d]>r(n[s])&&(e.offsets.popper[d]=r(n[s])),e}},arrow:{order:500,enabled:!0,fn:function(e,o){var n;if(!K(e.instance.modifiers,'arrow','keepTogether'))return e;var i=o.element;if('string'==typeof i){if(i=e.instance.popper.querySelector(i),!i)return e;}else if(!e.instance.popper.contains(i))return console.warn('WARNING: `arrow.element` must be child of its popper element!'),e;var r=e.placement.split('-')[0],p=e.offsets,s=p.popper,d=p.reference,a=-1!==['left','right'].indexOf(r),l=a?'height':'width',f=a?'Top':'Left',m=f.toLowerCase(),h=a?'left':'top',c=a?'bottom':'right',u=S(i)[l];d[c]-u<s[m]&&(e.offsets.popper[m]-=s[m]-(d[c]-u)),d[m]+u>s[c]&&(e.offsets.popper[m]+=d[m]+u-s[c]),e.offsets.popper=g(e.offsets.popper);var b=d[m]+d[l]/2-u/2,w=t(e.instance.popper),y=parseFloat(w['margin'+f],10),E=parseFloat(w['border'+f+'Width'],10),v=b-e.offsets.popper[m]-y-E;return v=ee(Q(s[l]-u,v),0),e.arrowElement=i,e.offsets.arrow=(n={},le(n,m,$(v)),le(n,h,''),n),e},element:'[x-arrow]'},flip:{order:600,enabled:!0,fn:function(e,t){if(W(e.instance.modifiers,'inner'))return e;if(e.flipped&&e.placement===e.originalPlacement)return e;var o=v(e.instance.popper,e.instance.reference,t.padding,t.boundariesElement,e.positionFixed),n=e.placement.split('-')[0],i=T(n),r=e.placement.split('-')[1]||'',p=[];switch(t.behavior){case ge.FLIP:p=[n,i];break;case ge.CLOCKWISE:p=G(n);break;case ge.COUNTERCLOCKWISE:p=G(n,!0);break;default:p=t.behavior;}return p.forEach(function(s,d){if(n!==s||p.length===d+1)return e;n=e.placement.split('-')[0],i=T(n);var a=e.offsets.popper,l=e.offsets.reference,f=Z,m='left'===n&&f(a.right)>f(l.left)||'right'===n&&f(a.left)<f(l.right)||'top'===n&&f(a.bottom)>f(l.top)||'bottom'===n&&f(a.top)<f(l.bottom),h=f(a.left)<f(o.left),c=f(a.right)>f(o.right),g=f(a.top)<f(o.top),u=f(a.bottom)>f(o.bottom),b='left'===n&&h||'right'===n&&c||'top'===n&&g||'bottom'===n&&u,w=-1!==['top','bottom'].indexOf(n),y=!!t.flipVariations&&(w&&'start'===r&&h||w&&'end'===r&&c||!w&&'start'===r&&g||!w&&'end'===r&&u);(m||b||y)&&(e.flipped=!0,(m||b)&&(n=p[d+1]),y&&(r=z(r)),e.placement=n+(r?'-'+r:''),e.offsets.popper=fe({},e.offsets.popper,D(e.instance.popper,e.offsets.reference,e.placement)),e=P(e.instance.modifiers,e,'flip'))}),e},behavior:'flip',padding:5,boundariesElement:'viewport'},inner:{order:700,enabled:!1,fn:function(e){var t=e.placement,o=t.split('-')[0],n=e.offsets,i=n.popper,r=n.reference,p=-1!==['left','right'].indexOf(o),s=-1===['top','left'].indexOf(o);return i[p?'left':'top']=r[o]-(s?i[p?'width':'height']:0),e.placement=T(t),e.offsets.popper=g(i),e}},hide:{order:800,enabled:!0,fn:function(e){if(!K(e.instance.modifiers,'hide','preventOverflow'))return e;var t=e.offsets.reference,o=C(e.instance.modifiers,function(e){return'preventOverflow'===e.name}).boundaries;if(t.bottom<o.top||t.left>o.right||t.top>o.bottom||t.right<o.left){if(!0===e.hide)return e;e.hide=!0,e.attributes['x-out-of-boundaries']=''}else{if(!1===e.hide)return e;e.hide=!1,e.attributes['x-out-of-boundaries']=!1}return e}},computeStyle:{order:850,enabled:!0,fn:function(e,t){var o=t.x,n=t.y,i=e.offsets.popper,r=C(e.instance.modifiers,function(e){return'applyStyle'===e.name}).gpuAcceleration;void 0!==r&&console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');var s,d,a=void 0===r?t.gpuAcceleration:r,l=p(e.instance.popper),f=u(l),m={position:i.position},h=q(e,2>window.devicePixelRatio||!me),c='bottom'===o?'top':'bottom',g='right'===n?'left':'right',b=H('transform');if(d='bottom'==c?'HTML'===l.nodeName?-l.clientHeight+h.bottom:-f.height+h.bottom:h.top,s='right'==g?'HTML'===l.nodeName?-l.clientWidth+h.right:-f.width+h.right:h.left,a&&b)m[b]='translate3d('+s+'px, '+d+'px, 0)',m[c]=0,m[g]=0,m.willChange='transform';else{var w='bottom'==c?-1:1,y='right'==g?-1:1;m[c]=d*w,m[g]=s*y,m.willChange=c+', '+g}var E={"x-placement":e.placement};return e.attributes=fe({},E,e.attributes),e.styles=fe({},m,e.styles),e.arrowStyles=fe({},e.offsets.arrow,e.arrowStyles),e},gpuAcceleration:!0,x:'bottom',y:'right'},applyStyle:{order:900,enabled:!0,fn:function(e){return j(e.instance.popper,e.styles),V(e.instance.popper,e.attributes),e.arrowElement&&Object.keys(e.arrowStyles).length&&j(e.arrowElement,e.arrowStyles),e},onLoad:function(e,t,o,n,i){var r=L(i,t,e,o.positionFixed),p=O(o.placement,r,t,e,o.modifiers.flip.boundariesElement,o.modifiers.flip.padding);return t.setAttribute('x-placement',p),j(t,{position:o.positionFixed?'fixed':'absolute'}),o},gpuAcceleration:void 0}}},ue});
//# sourceMappingURL=popper.min.js.map

/*!
  * Bootstrap v4.3.1 (https://getbootstrap.com/)
  * Copyright 2011-2019 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)
  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
  */
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("jquery"),require("popper.js")):"function"==typeof define&&define.amd?define(["exports","jquery","popper.js"],e):e((t=t||self).bootstrap={},t.jQuery,t.Popper)}(this,function(t,g,u){"use strict";function i(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function s(t,e,n){return e&&i(t.prototype,e),n&&i(t,n),t}function l(o){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},e=Object.keys(r);"function"==typeof Object.getOwnPropertySymbols&&(e=e.concat(Object.getOwnPropertySymbols(r).filter(function(t){return Object.getOwnPropertyDescriptor(r,t).enumerable}))),e.forEach(function(t){var e,n,i;e=o,i=r[n=t],n in e?Object.defineProperty(e,n,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[n]=i})}return o}g=g&&g.hasOwnProperty("default")?g.default:g,u=u&&u.hasOwnProperty("default")?u.default:u;var e="transitionend";function n(t){var e=this,n=!1;return g(this).one(_.TRANSITION_END,function(){n=!0}),setTimeout(function(){n||_.triggerTransitionEnd(e)},t),this}var _={TRANSITION_END:"bsTransitionEnd",getUID:function(t){for(;t+=~~(1e6*Math.random()),document.getElementById(t););return t},getSelectorFromElement:function(t){var e=t.getAttribute("data-target");if(!e||"#"===e){var n=t.getAttribute("href");e=n&&"#"!==n?n.trim():""}try{return document.querySelector(e)?e:null}catch(t){return null}},getTransitionDurationFromElement:function(t){if(!t)return 0;var e=g(t).css("transition-duration"),n=g(t).css("transition-delay"),i=parseFloat(e),o=parseFloat(n);return i||o?(e=e.split(",")[0],n=n.split(",")[0],1e3*(parseFloat(e)+parseFloat(n))):0},reflow:function(t){return t.offsetHeight},triggerTransitionEnd:function(t){g(t).trigger(e)},supportsTransitionEnd:function(){return Boolean(e)},isElement:function(t){return(t[0]||t).nodeType},typeCheckConfig:function(t,e,n){for(var i in n)if(Object.prototype.hasOwnProperty.call(n,i)){var o=n[i],r=e[i],s=r&&_.isElement(r)?"element":(a=r,{}.toString.call(a).match(/\s([a-z]+)/i)[1].toLowerCase());if(!new RegExp(o).test(s))throw new Error(t.toUpperCase()+': Option "'+i+'" provided type "'+s+'" but expected type "'+o+'".')}var a},findShadowRoot:function(t){if(!document.documentElement.attachShadow)return null;if("function"!=typeof t.getRootNode)return t instanceof ShadowRoot?t:t.parentNode?_.findShadowRoot(t.parentNode):null;var e=t.getRootNode();return e instanceof ShadowRoot?e:null}};g.fn.emulateTransitionEnd=n,g.event.special[_.TRANSITION_END]={bindType:e,delegateType:e,handle:function(t){if(g(t.target).is(this))return t.handleObj.handler.apply(this,arguments)}};var o="alert",r="bs.alert",a="."+r,c=g.fn[o],h={CLOSE:"close"+a,CLOSED:"closed"+a,CLICK_DATA_API:"click"+a+".data-api"},f="alert",d="fade",m="show",p=function(){function i(t){this._element=t}var t=i.prototype;return t.close=function(t){var e=this._element;t&&(e=this._getRootElement(t)),this._triggerCloseEvent(e).isDefaultPrevented()||this._removeElement(e)},t.dispose=function(){g.removeData(this._element,r),this._element=null},t._getRootElement=function(t){var e=_.getSelectorFromElement(t),n=!1;return e&&(n=document.querySelector(e)),n||(n=g(t).closest("."+f)[0]),n},t._triggerCloseEvent=function(t){var e=g.Event(h.CLOSE);return g(t).trigger(e),e},t._removeElement=function(e){var n=this;if(g(e).removeClass(m),g(e).hasClass(d)){var t=_.getTransitionDurationFromElement(e);g(e).one(_.TRANSITION_END,function(t){return n._destroyElement(e,t)}).emulateTransitionEnd(t)}else this._destroyElement(e)},t._destroyElement=function(t){g(t).detach().trigger(h.CLOSED).remove()},i._jQueryInterface=function(n){return this.each(function(){var t=g(this),e=t.data(r);e||(e=new i(this),t.data(r,e)),"close"===n&&e[n](this)})},i._handleDismiss=function(e){return function(t){t&&t.preventDefault(),e.close(this)}},s(i,null,[{key:"VERSION",get:function(){return"4.3.1"}}]),i}();g(document).on(h.CLICK_DATA_API,'[data-dismiss="alert"]',p._handleDismiss(new p)),g.fn[o]=p._jQueryInterface,g.fn[o].Constructor=p,g.fn[o].noConflict=function(){return g.fn[o]=c,p._jQueryInterface};var v="button",y="bs.button",E="."+y,C=".data-api",T=g.fn[v],S="active",b="btn",I="focus",D='[data-toggle^="button"]',w='[data-toggle="buttons"]',A='input:not([type="hidden"])',N=".active",O=".btn",k={CLICK_DATA_API:"click"+E+C,FOCUS_BLUR_DATA_API:"focus"+E+C+" blur"+E+C},P=function(){function n(t){this._element=t}var t=n.prototype;return t.toggle=function(){var t=!0,e=!0,n=g(this._element).closest(w)[0];if(n){var i=this._element.querySelector(A);if(i){if("radio"===i.type)if(i.checked&&this._element.classList.contains(S))t=!1;else{var o=n.querySelector(N);o&&g(o).removeClass(S)}if(t){if(i.hasAttribute("disabled")||n.hasAttribute("disabled")||i.classList.contains("disabled")||n.classList.contains("disabled"))return;i.checked=!this._element.classList.contains(S),g(i).trigger("change")}i.focus(),e=!1}}e&&this._element.setAttribute("aria-pressed",!this._element.classList.contains(S)),t&&g(this._element).toggleClass(S)},t.dispose=function(){g.removeData(this._element,y),this._element=null},n._jQueryInterface=function(e){return this.each(function(){var t=g(this).data(y);t||(t=new n(this),g(this).data(y,t)),"toggle"===e&&t[e]()})},s(n,null,[{key:"VERSION",get:function(){return"4.3.1"}}]),n}();g(document).on(k.CLICK_DATA_API,D,function(t){t.preventDefault();var e=t.target;g(e).hasClass(b)||(e=g(e).closest(O)),P._jQueryInterface.call(g(e),"toggle")}).on(k.FOCUS_BLUR_DATA_API,D,function(t){var e=g(t.target).closest(O)[0];g(e).toggleClass(I,/^focus(in)?$/.test(t.type))}),g.fn[v]=P._jQueryInterface,g.fn[v].Constructor=P,g.fn[v].noConflict=function(){return g.fn[v]=T,P._jQueryInterface};var L="carousel",j="bs.carousel",H="."+j,R=".data-api",x=g.fn[L],F={interval:5e3,keyboard:!0,slide:!1,pause:"hover",wrap:!0,touch:!0},U={interval:"(number|boolean)",keyboard:"boolean",slide:"(boolean|string)",pause:"(string|boolean)",wrap:"boolean",touch:"boolean"},W="next",q="prev",M="left",K="right",Q={SLIDE:"slide"+H,SLID:"slid"+H,KEYDOWN:"keydown"+H,MOUSEENTER:"mouseenter"+H,MOUSELEAVE:"mouseleave"+H,TOUCHSTART:"touchstart"+H,TOUCHMOVE:"touchmove"+H,TOUCHEND:"touchend"+H,POINTERDOWN:"pointerdown"+H,POINTERUP:"pointerup"+H,DRAG_START:"dragstart"+H,LOAD_DATA_API:"load"+H+R,CLICK_DATA_API:"click"+H+R},B="carousel",V="active",Y="slide",z="carousel-item-right",X="carousel-item-left",$="carousel-item-next",G="carousel-item-prev",J="pointer-event",Z=".active",tt=".active.carousel-item",et=".carousel-item",nt=".carousel-item img",it=".carousel-item-next, .carousel-item-prev",ot=".carousel-indicators",rt="[data-slide], [data-slide-to]",st='[data-ride="carousel"]',at={TOUCH:"touch",PEN:"pen"},lt=function(){function r(t,e){this._items=null,this._interval=null,this._activeElement=null,this._isPaused=!1,this._isSliding=!1,this.touchTimeout=null,this.touchStartX=0,this.touchDeltaX=0,this._config=this._getConfig(e),this._element=t,this._indicatorsElement=this._element.querySelector(ot),this._touchSupported="ontouchstart"in document.documentElement||0<navigator.maxTouchPoints,this._pointerEvent=Boolean(window.PointerEvent||window.MSPointerEvent),this._addEventListeners()}var t=r.prototype;return t.next=function(){this._isSliding||this._slide(W)},t.nextWhenVisible=function(){!document.hidden&&g(this._element).is(":visible")&&"hidden"!==g(this._element).css("visibility")&&this.next()},t.prev=function(){this._isSliding||this._slide(q)},t.pause=function(t){t||(this._isPaused=!0),this._element.querySelector(it)&&(_.triggerTransitionEnd(this._element),this.cycle(!0)),clearInterval(this._interval),this._interval=null},t.cycle=function(t){t||(this._isPaused=!1),this._interval&&(clearInterval(this._interval),this._interval=null),this._config.interval&&!this._isPaused&&(this._interval=setInterval((document.visibilityState?this.nextWhenVisible:this.next).bind(this),this._config.interval))},t.to=function(t){var e=this;this._activeElement=this._element.querySelector(tt);var n=this._getItemIndex(this._activeElement);if(!(t>this._items.length-1||t<0))if(this._isSliding)g(this._element).one(Q.SLID,function(){return e.to(t)});else{if(n===t)return this.pause(),void this.cycle();var i=n<t?W:q;this._slide(i,this._items[t])}},t.dispose=function(){g(this._element).off(H),g.removeData(this._element,j),this._items=null,this._config=null,this._element=null,this._interval=null,this._isPaused=null,this._isSliding=null,this._activeElement=null,this._indicatorsElement=null},t._getConfig=function(t){return t=l({},F,t),_.typeCheckConfig(L,t,U),t},t._handleSwipe=function(){var t=Math.abs(this.touchDeltaX);if(!(t<=40)){var e=t/this.touchDeltaX;0<e&&this.prev(),e<0&&this.next()}},t._addEventListeners=function(){var e=this;this._config.keyboard&&g(this._element).on(Q.KEYDOWN,function(t){return e._keydown(t)}),"hover"===this._config.pause&&g(this._element).on(Q.MOUSEENTER,function(t){return e.pause(t)}).on(Q.MOUSELEAVE,function(t){return e.cycle(t)}),this._config.touch&&this._addTouchEventListeners()},t._addTouchEventListeners=function(){var n=this;if(this._touchSupported){var e=function(t){n._pointerEvent&&at[t.originalEvent.pointerType.toUpperCase()]?n.touchStartX=t.originalEvent.clientX:n._pointerEvent||(n.touchStartX=t.originalEvent.touches[0].clientX)},i=function(t){n._pointerEvent&&at[t.originalEvent.pointerType.toUpperCase()]&&(n.touchDeltaX=t.originalEvent.clientX-n.touchStartX),n._handleSwipe(),"hover"===n._config.pause&&(n.pause(),n.touchTimeout&&clearTimeout(n.touchTimeout),n.touchTimeout=setTimeout(function(t){return n.cycle(t)},500+n._config.interval))};g(this._element.querySelectorAll(nt)).on(Q.DRAG_START,function(t){return t.preventDefault()}),this._pointerEvent?(g(this._element).on(Q.POINTERDOWN,function(t){return e(t)}),g(this._element).on(Q.POINTERUP,function(t){return i(t)}),this._element.classList.add(J)):(g(this._element).on(Q.TOUCHSTART,function(t){return e(t)}),g(this._element).on(Q.TOUCHMOVE,function(t){var e;(e=t).originalEvent.touches&&1<e.originalEvent.touches.length?n.touchDeltaX=0:n.touchDeltaX=e.originalEvent.touches[0].clientX-n.touchStartX}),g(this._element).on(Q.TOUCHEND,function(t){return i(t)}))}},t._keydown=function(t){if(!/input|textarea/i.test(t.target.tagName))switch(t.which){case 37:t.preventDefault(),this.prev();break;case 39:t.preventDefault(),this.next()}},t._getItemIndex=function(t){return this._items=t&&t.parentNode?[].slice.call(t.parentNode.querySelectorAll(et)):[],this._items.indexOf(t)},t._getItemByDirection=function(t,e){var n=t===W,i=t===q,o=this._getItemIndex(e),r=this._items.length-1;if((i&&0===o||n&&o===r)&&!this._config.wrap)return e;var s=(o+(t===q?-1:1))%this._items.length;return-1===s?this._items[this._items.length-1]:this._items[s]},t._triggerSlideEvent=function(t,e){var n=this._getItemIndex(t),i=this._getItemIndex(this._element.querySelector(tt)),o=g.Event(Q.SLIDE,{relatedTarget:t,direction:e,from:i,to:n});return g(this._element).trigger(o),o},t._setActiveIndicatorElement=function(t){if(this._indicatorsElement){var e=[].slice.call(this._indicatorsElement.querySelectorAll(Z));g(e).removeClass(V);var n=this._indicatorsElement.children[this._getItemIndex(t)];n&&g(n).addClass(V)}},t._slide=function(t,e){var n,i,o,r=this,s=this._element.querySelector(tt),a=this._getItemIndex(s),l=e||s&&this._getItemByDirection(t,s),c=this._getItemIndex(l),h=Boolean(this._interval);if(o=t===W?(n=X,i=$,M):(n=z,i=G,K),l&&g(l).hasClass(V))this._isSliding=!1;else if(!this._triggerSlideEvent(l,o).isDefaultPrevented()&&s&&l){this._isSliding=!0,h&&this.pause(),this._setActiveIndicatorElement(l);var u=g.Event(Q.SLID,{relatedTarget:l,direction:o,from:a,to:c});if(g(this._element).hasClass(Y)){g(l).addClass(i),_.reflow(l),g(s).addClass(n),g(l).addClass(n);var f=parseInt(l.getAttribute("data-interval"),10);this._config.interval=f?(this._config.defaultInterval=this._config.defaultInterval||this._config.interval,f):this._config.defaultInterval||this._config.interval;var d=_.getTransitionDurationFromElement(s);g(s).one(_.TRANSITION_END,function(){g(l).removeClass(n+" "+i).addClass(V),g(s).removeClass(V+" "+i+" "+n),r._isSliding=!1,setTimeout(function(){return g(r._element).trigger(u)},0)}).emulateTransitionEnd(d)}else g(s).removeClass(V),g(l).addClass(V),this._isSliding=!1,g(this._element).trigger(u);h&&this.cycle()}},r._jQueryInterface=function(i){return this.each(function(){var t=g(this).data(j),e=l({},F,g(this).data());"object"==typeof i&&(e=l({},e,i));var n="string"==typeof i?i:e.slide;if(t||(t=new r(this,e),g(this).data(j,t)),"number"==typeof i)t.to(i);else if("string"==typeof n){if("undefined"==typeof t[n])throw new TypeError('No method named "'+n+'"');t[n]()}else e.interval&&e.ride&&(t.pause(),t.cycle())})},r._dataApiClickHandler=function(t){var e=_.getSelectorFromElement(this);if(e){var n=g(e)[0];if(n&&g(n).hasClass(B)){var i=l({},g(n).data(),g(this).data()),o=this.getAttribute("data-slide-to");o&&(i.interval=!1),r._jQueryInterface.call(g(n),i),o&&g(n).data(j).to(o),t.preventDefault()}}},s(r,null,[{key:"VERSION",get:function(){return"4.3.1"}},{key:"Default",get:function(){return F}}]),r}();g(document).on(Q.CLICK_DATA_API,rt,lt._dataApiClickHandler),g(window).on(Q.LOAD_DATA_API,function(){for(var t=[].slice.call(document.querySelectorAll(st)),e=0,n=t.length;e<n;e++){var i=g(t[e]);lt._jQueryInterface.call(i,i.data())}}),g.fn[L]=lt._jQueryInterface,g.fn[L].Constructor=lt,g.fn[L].noConflict=function(){return g.fn[L]=x,lt._jQueryInterface};var ct="collapse",ht="bs.collapse",ut="."+ht,ft=g.fn[ct],dt={toggle:!0,parent:""},gt={toggle:"boolean",parent:"(string|element)"},_t={SHOW:"show"+ut,SHOWN:"shown"+ut,HIDE:"hide"+ut,HIDDEN:"hidden"+ut,CLICK_DATA_API:"click"+ut+".data-api"},mt="show",pt="collapse",vt="collapsing",yt="collapsed",Et="width",Ct="height",Tt=".show, .collapsing",St='[data-toggle="collapse"]',bt=function(){function a(e,t){this._isTransitioning=!1,this._element=e,this._config=this._getConfig(t),this._triggerArray=[].slice.call(document.querySelectorAll('[data-toggle="collapse"][href="#'+e.id+'"],[data-toggle="collapse"][data-target="#'+e.id+'"]'));for(var n=[].slice.call(document.querySelectorAll(St)),i=0,o=n.length;i<o;i++){var r=n[i],s=_.getSelectorFromElement(r),a=[].slice.call(document.querySelectorAll(s)).filter(function(t){return t===e});null!==s&&0<a.length&&(this._selector=s,this._triggerArray.push(r))}this._parent=this._config.parent?this._getParent():null,this._config.parent||this._addAriaAndCollapsedClass(this._element,this._triggerArray),this._config.toggle&&this.toggle()}var t=a.prototype;return t.toggle=function(){g(this._element).hasClass(mt)?this.hide():this.show()},t.show=function(){var t,e,n=this;if(!this._isTransitioning&&!g(this._element).hasClass(mt)&&(this._parent&&0===(t=[].slice.call(this._parent.querySelectorAll(Tt)).filter(function(t){return"string"==typeof n._config.parent?t.getAttribute("data-parent")===n._config.parent:t.classList.contains(pt)})).length&&(t=null),!(t&&(e=g(t).not(this._selector).data(ht))&&e._isTransitioning))){var i=g.Event(_t.SHOW);if(g(this._element).trigger(i),!i.isDefaultPrevented()){t&&(a._jQueryInterface.call(g(t).not(this._selector),"hide"),e||g(t).data(ht,null));var o=this._getDimension();g(this._element).removeClass(pt).addClass(vt),this._element.style[o]=0,this._triggerArray.length&&g(this._triggerArray).removeClass(yt).attr("aria-expanded",!0),this.setTransitioning(!0);var r="scroll"+(o[0].toUpperCase()+o.slice(1)),s=_.getTransitionDurationFromElement(this._element);g(this._element).one(_.TRANSITION_END,function(){g(n._element).removeClass(vt).addClass(pt).addClass(mt),n._element.style[o]="",n.setTransitioning(!1),g(n._element).trigger(_t.SHOWN)}).emulateTransitionEnd(s),this._element.style[o]=this._element[r]+"px"}}},t.hide=function(){var t=this;if(!this._isTransitioning&&g(this._element).hasClass(mt)){var e=g.Event(_t.HIDE);if(g(this._element).trigger(e),!e.isDefaultPrevented()){var n=this._getDimension();this._element.style[n]=this._element.getBoundingClientRect()[n]+"px",_.reflow(this._element),g(this._element).addClass(vt).removeClass(pt).removeClass(mt);var i=this._triggerArray.length;if(0<i)for(var o=0;o<i;o++){var r=this._triggerArray[o],s=_.getSelectorFromElement(r);if(null!==s)g([].slice.call(document.querySelectorAll(s))).hasClass(mt)||g(r).addClass(yt).attr("aria-expanded",!1)}this.setTransitioning(!0);this._element.style[n]="";var a=_.getTransitionDurationFromElement(this._element);g(this._element).one(_.TRANSITION_END,function(){t.setTransitioning(!1),g(t._element).removeClass(vt).addClass(pt).trigger(_t.HIDDEN)}).emulateTransitionEnd(a)}}},t.setTransitioning=function(t){this._isTransitioning=t},t.dispose=function(){g.removeData(this._element,ht),this._config=null,this._parent=null,this._element=null,this._triggerArray=null,this._isTransitioning=null},t._getConfig=function(t){return(t=l({},dt,t)).toggle=Boolean(t.toggle),_.typeCheckConfig(ct,t,gt),t},t._getDimension=function(){return g(this._element).hasClass(Et)?Et:Ct},t._getParent=function(){var t,n=this;_.isElement(this._config.parent)?(t=this._config.parent,"undefined"!=typeof this._config.parent.jquery&&(t=this._config.parent[0])):t=document.querySelector(this._config.parent);var e='[data-toggle="collapse"][data-parent="'+this._config.parent+'"]',i=[].slice.call(t.querySelectorAll(e));return g(i).each(function(t,e){n._addAriaAndCollapsedClass(a._getTargetFromElement(e),[e])}),t},t._addAriaAndCollapsedClass=function(t,e){var n=g(t).hasClass(mt);e.length&&g(e).toggleClass(yt,!n).attr("aria-expanded",n)},a._getTargetFromElement=function(t){var e=_.getSelectorFromElement(t);return e?document.querySelector(e):null},a._jQueryInterface=function(i){return this.each(function(){var t=g(this),e=t.data(ht),n=l({},dt,t.data(),"object"==typeof i&&i?i:{});if(!e&&n.toggle&&/show|hide/.test(i)&&(n.toggle=!1),e||(e=new a(this,n),t.data(ht,e)),"string"==typeof i){if("undefined"==typeof e[i])throw new TypeError('No method named "'+i+'"');e[i]()}})},s(a,null,[{key:"VERSION",get:function(){return"4.3.1"}},{key:"Default",get:function(){return dt}}]),a}();g(document).on(_t.CLICK_DATA_API,St,function(t){"A"===t.currentTarget.tagName&&t.preventDefault();var n=g(this),e=_.getSelectorFromElement(this),i=[].slice.call(document.querySelectorAll(e));g(i).each(function(){var t=g(this),e=t.data(ht)?"toggle":n.data();bt._jQueryInterface.call(t,e)})}),g.fn[ct]=bt._jQueryInterface,g.fn[ct].Constructor=bt,g.fn[ct].noConflict=function(){return g.fn[ct]=ft,bt._jQueryInterface};var It="dropdown",Dt="bs.dropdown",wt="."+Dt,At=".data-api",Nt=g.fn[It],Ot=new RegExp("38|40|27"),kt={HIDE:"hide"+wt,HIDDEN:"hidden"+wt,SHOW:"show"+wt,SHOWN:"shown"+wt,CLICK:"click"+wt,CLICK_DATA_API:"click"+wt+At,KEYDOWN_DATA_API:"keydown"+wt+At,KEYUP_DATA_API:"keyup"+wt+At},Pt="disabled",Lt="show",jt="dropup",Ht="dropright",Rt="dropleft",xt="dropdown-menu-right",Ft="position-static",Ut='[data-toggle="dropdown"]',Wt=".dropdown form",qt=".dropdown-menu",Mt=".navbar-nav",Kt=".dropdown-menu .dropdown-item:not(.disabled):not(:disabled)",Qt="top-start",Bt="top-end",Vt="bottom-start",Yt="bottom-end",zt="right-start",Xt="left-start",$t={offset:0,flip:!0,boundary:"scrollParent",reference:"toggle",display:"dynamic"},Gt={offset:"(number|string|function)",flip:"boolean",boundary:"(string|element)",reference:"(string|element)",display:"string"},Jt=function(){function c(t,e){this._element=t,this._popper=null,this._config=this._getConfig(e),this._menu=this._getMenuElement(),this._inNavbar=this._detectNavbar(),this._addEventListeners()}var t=c.prototype;return t.toggle=function(){if(!this._element.disabled&&!g(this._element).hasClass(Pt)){var t=c._getParentFromElement(this._element),e=g(this._menu).hasClass(Lt);if(c._clearMenus(),!e){var n={relatedTarget:this._element},i=g.Event(kt.SHOW,n);if(g(t).trigger(i),!i.isDefaultPrevented()){if(!this._inNavbar){if("undefined"==typeof u)throw new TypeError("Bootstrap's dropdowns require Popper.js (https://popper.js.org/)");var o=this._element;"parent"===this._config.reference?o=t:_.isElement(this._config.reference)&&(o=this._config.reference,"undefined"!=typeof this._config.reference.jquery&&(o=this._config.reference[0])),"scrollParent"!==this._config.boundary&&g(t).addClass(Ft),this._popper=new u(o,this._menu,this._getPopperConfig())}"ontouchstart"in document.documentElement&&0===g(t).closest(Mt).length&&g(document.body).children().on("mouseover",null,g.noop),this._element.focus(),this._element.setAttribute("aria-expanded",!0),g(this._menu).toggleClass(Lt),g(t).toggleClass(Lt).trigger(g.Event(kt.SHOWN,n))}}}},t.show=function(){if(!(this._element.disabled||g(this._element).hasClass(Pt)||g(this._menu).hasClass(Lt))){var t={relatedTarget:this._element},e=g.Event(kt.SHOW,t),n=c._getParentFromElement(this._element);g(n).trigger(e),e.isDefaultPrevented()||(g(this._menu).toggleClass(Lt),g(n).toggleClass(Lt).trigger(g.Event(kt.SHOWN,t)))}},t.hide=function(){if(!this._element.disabled&&!g(this._element).hasClass(Pt)&&g(this._menu).hasClass(Lt)){var t={relatedTarget:this._element},e=g.Event(kt.HIDE,t),n=c._getParentFromElement(this._element);g(n).trigger(e),e.isDefaultPrevented()||(g(this._menu).toggleClass(Lt),g(n).toggleClass(Lt).trigger(g.Event(kt.HIDDEN,t)))}},t.dispose=function(){g.removeData(this._element,Dt),g(this._element).off(wt),this._element=null,(this._menu=null)!==this._popper&&(this._popper.destroy(),this._popper=null)},t.update=function(){this._inNavbar=this._detectNavbar(),null!==this._popper&&this._popper.scheduleUpdate()},t._addEventListeners=function(){var e=this;g(this._element).on(kt.CLICK,function(t){t.preventDefault(),t.stopPropagation(),e.toggle()})},t._getConfig=function(t){return t=l({},this.constructor.Default,g(this._element).data(),t),_.typeCheckConfig(It,t,this.constructor.DefaultType),t},t._getMenuElement=function(){if(!this._menu){var t=c._getParentFromElement(this._element);t&&(this._menu=t.querySelector(qt))}return this._menu},t._getPlacement=function(){var t=g(this._element.parentNode),e=Vt;return t.hasClass(jt)?(e=Qt,g(this._menu).hasClass(xt)&&(e=Bt)):t.hasClass(Ht)?e=zt:t.hasClass(Rt)?e=Xt:g(this._menu).hasClass(xt)&&(e=Yt),e},t._detectNavbar=function(){return 0<g(this._element).closest(".navbar").length},t._getOffset=function(){var e=this,t={};return"function"==typeof this._config.offset?t.fn=function(t){return t.offsets=l({},t.offsets,e._config.offset(t.offsets,e._element)||{}),t}:t.offset=this._config.offset,t},t._getPopperConfig=function(){var t={placement:this._getPlacement(),modifiers:{offset:this._getOffset(),flip:{enabled:this._config.flip},preventOverflow:{boundariesElement:this._config.boundary}}};return"static"===this._config.display&&(t.modifiers.applyStyle={enabled:!1}),t},c._jQueryInterface=function(e){return this.each(function(){var t=g(this).data(Dt);if(t||(t=new c(this,"object"==typeof e?e:null),g(this).data(Dt,t)),"string"==typeof e){if("undefined"==typeof t[e])throw new TypeError('No method named "'+e+'"');t[e]()}})},c._clearMenus=function(t){if(!t||3!==t.which&&("keyup"!==t.type||9===t.which))for(var e=[].slice.call(document.querySelectorAll(Ut)),n=0,i=e.length;n<i;n++){var o=c._getParentFromElement(e[n]),r=g(e[n]).data(Dt),s={relatedTarget:e[n]};if(t&&"click"===t.type&&(s.clickEvent=t),r){var a=r._menu;if(g(o).hasClass(Lt)&&!(t&&("click"===t.type&&/input|textarea/i.test(t.target.tagName)||"keyup"===t.type&&9===t.which)&&g.contains(o,t.target))){var l=g.Event(kt.HIDE,s);g(o).trigger(l),l.isDefaultPrevented()||("ontouchstart"in document.documentElement&&g(document.body).children().off("mouseover",null,g.noop),e[n].setAttribute("aria-expanded","false"),g(a).removeClass(Lt),g(o).removeClass(Lt).trigger(g.Event(kt.HIDDEN,s)))}}}},c._getParentFromElement=function(t){var e,n=_.getSelectorFromElement(t);return n&&(e=document.querySelector(n)),e||t.parentNode},c._dataApiKeydownHandler=function(t){if((/input|textarea/i.test(t.target.tagName)?!(32===t.which||27!==t.which&&(40!==t.which&&38!==t.which||g(t.target).closest(qt).length)):Ot.test(t.which))&&(t.preventDefault(),t.stopPropagation(),!this.disabled&&!g(this).hasClass(Pt))){var e=c._getParentFromElement(this),n=g(e).hasClass(Lt);if(n&&(!n||27!==t.which&&32!==t.which)){var i=[].slice.call(e.querySelectorAll(Kt));if(0!==i.length){var o=i.indexOf(t.target);38===t.which&&0<o&&o--,40===t.which&&o<i.length-1&&o++,o<0&&(o=0),i[o].focus()}}else{if(27===t.which){var r=e.querySelector(Ut);g(r).trigger("focus")}g(this).trigger("click")}}},s(c,null,[{key:"VERSION",get:function(){return"4.3.1"}},{key:"Default",get:function(){return $t}},{key:"DefaultType",get:function(){return Gt}}]),c}();g(document).on(kt.KEYDOWN_DATA_API,Ut,Jt._dataApiKeydownHandler).on(kt.KEYDOWN_DATA_API,qt,Jt._dataApiKeydownHandler).on(kt.CLICK_DATA_API+" "+kt.KEYUP_DATA_API,Jt._clearMenus).on(kt.CLICK_DATA_API,Ut,function(t){t.preventDefault(),t.stopPropagation(),Jt._jQueryInterface.call(g(this),"toggle")}).on(kt.CLICK_DATA_API,Wt,function(t){t.stopPropagation()}),g.fn[It]=Jt._jQueryInterface,g.fn[It].Constructor=Jt,g.fn[It].noConflict=function(){return g.fn[It]=Nt,Jt._jQueryInterface};var Zt="modal",te="bs.modal",ee="."+te,ne=g.fn[Zt],ie={backdrop:!0,keyboard:!0,focus:!0,show:!0},oe={backdrop:"(boolean|string)",keyboard:"boolean",focus:"boolean",show:"boolean"},re={HIDE:"hide"+ee,HIDDEN:"hidden"+ee,SHOW:"show"+ee,SHOWN:"shown"+ee,FOCUSIN:"focusin"+ee,RESIZE:"resize"+ee,CLICK_DISMISS:"click.dismiss"+ee,KEYDOWN_DISMISS:"keydown.dismiss"+ee,MOUSEUP_DISMISS:"mouseup.dismiss"+ee,MOUSEDOWN_DISMISS:"mousedown.dismiss"+ee,CLICK_DATA_API:"click"+ee+".data-api"},se="modal-dialog-scrollable",ae="modal-scrollbar-measure",le="modal-backdrop",ce="modal-open",he="fade",ue="show",fe=".modal-dialog",de=".modal-body",ge='[data-toggle="modal"]',_e='[data-dismiss="modal"]',me=".fixed-top, .fixed-bottom, .is-fixed, .sticky-top",pe=".sticky-top",ve=function(){function o(t,e){this._config=this._getConfig(e),this._element=t,this._dialog=t.querySelector(fe),this._backdrop=null,this._isShown=!1,this._isBodyOverflowing=!1,this._ignoreBackdropClick=!1,this._isTransitioning=!1,this._scrollbarWidth=0}var t=o.prototype;return t.toggle=function(t){return this._isShown?this.hide():this.show(t)},t.show=function(t){var e=this;if(!this._isShown&&!this._isTransitioning){g(this._element).hasClass(he)&&(this._isTransitioning=!0);var n=g.Event(re.SHOW,{relatedTarget:t});g(this._element).trigger(n),this._isShown||n.isDefaultPrevented()||(this._isShown=!0,this._checkScrollbar(),this._setScrollbar(),this._adjustDialog(),this._setEscapeEvent(),this._setResizeEvent(),g(this._element).on(re.CLICK_DISMISS,_e,function(t){return e.hide(t)}),g(this._dialog).on(re.MOUSEDOWN_DISMISS,function(){g(e._element).one(re.MOUSEUP_DISMISS,function(t){g(t.target).is(e._element)&&(e._ignoreBackdropClick=!0)})}),this._showBackdrop(function(){return e._showElement(t)}))}},t.hide=function(t){var e=this;if(t&&t.preventDefault(),this._isShown&&!this._isTransitioning){var n=g.Event(re.HIDE);if(g(this._element).trigger(n),this._isShown&&!n.isDefaultPrevented()){this._isShown=!1;var i=g(this._element).hasClass(he);if(i&&(this._isTransitioning=!0),this._setEscapeEvent(),this._setResizeEvent(),g(document).off(re.FOCUSIN),g(this._element).removeClass(ue),g(this._element).off(re.CLICK_DISMISS),g(this._dialog).off(re.MOUSEDOWN_DISMISS),i){var o=_.getTransitionDurationFromElement(this._element);g(this._element).one(_.TRANSITION_END,function(t){return e._hideModal(t)}).emulateTransitionEnd(o)}else this._hideModal()}}},t.dispose=function(){[window,this._element,this._dialog].forEach(function(t){return g(t).off(ee)}),g(document).off(re.FOCUSIN),g.removeData(this._element,te),this._config=null,this._element=null,this._dialog=null,this._backdrop=null,this._isShown=null,this._isBodyOverflowing=null,this._ignoreBackdropClick=null,this._isTransitioning=null,this._scrollbarWidth=null},t.handleUpdate=function(){this._adjustDialog()},t._getConfig=function(t){return t=l({},ie,t),_.typeCheckConfig(Zt,t,oe),t},t._showElement=function(t){var e=this,n=g(this._element).hasClass(he);this._element.parentNode&&this._element.parentNode.nodeType===Node.ELEMENT_NODE||document.body.appendChild(this._element),this._element.style.display="block",this._element.removeAttribute("aria-hidden"),this._element.setAttribute("aria-modal",!0),g(this._dialog).hasClass(se)?this._dialog.querySelector(de).scrollTop=0:this._element.scrollTop=0,n&&_.reflow(this._element),g(this._element).addClass(ue),this._config.focus&&this._enforceFocus();var i=g.Event(re.SHOWN,{relatedTarget:t}),o=function(){e._config.focus&&e._element.focus(),e._isTransitioning=!1,g(e._element).trigger(i)};if(n){var r=_.getTransitionDurationFromElement(this._dialog);g(this._dialog).one(_.TRANSITION_END,o).emulateTransitionEnd(r)}else o()},t._enforceFocus=function(){var e=this;g(document).off(re.FOCUSIN).on(re.FOCUSIN,function(t){document!==t.target&&e._element!==t.target&&0===g(e._element).has(t.target).length&&e._element.focus()})},t._setEscapeEvent=function(){var e=this;this._isShown&&this._config.keyboard?g(this._element).on(re.KEYDOWN_DISMISS,function(t){27===t.which&&(t.preventDefault(),e.hide())}):this._isShown||g(this._element).off(re.KEYDOWN_DISMISS)},t._setResizeEvent=function(){var e=this;this._isShown?g(window).on(re.RESIZE,function(t){return e.handleUpdate(t)}):g(window).off(re.RESIZE)},t._hideModal=function(){var t=this;this._element.style.display="none",this._element.setAttribute("aria-hidden",!0),this._element.removeAttribute("aria-modal"),this._isTransitioning=!1,this._showBackdrop(function(){g(document.body).removeClass(ce),t._resetAdjustments(),t._resetScrollbar(),g(t._element).trigger(re.HIDDEN)})},t._removeBackdrop=function(){this._backdrop&&(g(this._backdrop).remove(),this._backdrop=null)},t._showBackdrop=function(t){var e=this,n=g(this._element).hasClass(he)?he:"";if(this._isShown&&this._config.backdrop){if(this._backdrop=document.createElement("div"),this._backdrop.className=le,n&&this._backdrop.classList.add(n),g(this._backdrop).appendTo(document.body),g(this._element).on(re.CLICK_DISMISS,function(t){e._ignoreBackdropClick?e._ignoreBackdropClick=!1:t.target===t.currentTarget&&("static"===e._config.backdrop?e._element.focus():e.hide())}),n&&_.reflow(this._backdrop),g(this._backdrop).addClass(ue),!t)return;if(!n)return void t();var i=_.getTransitionDurationFromElement(this._backdrop);g(this._backdrop).one(_.TRANSITION_END,t).emulateTransitionEnd(i)}else if(!this._isShown&&this._backdrop){g(this._backdrop).removeClass(ue);var o=function(){e._removeBackdrop(),t&&t()};if(g(this._element).hasClass(he)){var r=_.getTransitionDurationFromElement(this._backdrop);g(this._backdrop).one(_.TRANSITION_END,o).emulateTransitionEnd(r)}else o()}else t&&t()},t._adjustDialog=function(){var t=this._element.scrollHeight>document.documentElement.clientHeight;!this._isBodyOverflowing&&t&&(this._element.style.paddingLeft=this._scrollbarWidth+"px"),this._isBodyOverflowing&&!t&&(this._element.style.paddingRight=this._scrollbarWidth+"px")},t._resetAdjustments=function(){this._element.style.paddingLeft="",this._element.style.paddingRight=""},t._checkScrollbar=function(){var t=document.body.getBoundingClientRect();this._isBodyOverflowing=t.left+t.right<window.innerWidth,this._scrollbarWidth=this._getScrollbarWidth()},t._setScrollbar=function(){var o=this;if(this._isBodyOverflowing){var t=[].slice.call(document.querySelectorAll(me)),e=[].slice.call(document.querySelectorAll(pe));g(t).each(function(t,e){var n=e.style.paddingRight,i=g(e).css("padding-right");g(e).data("padding-right",n).css("padding-right",parseFloat(i)+o._scrollbarWidth+"px")}),g(e).each(function(t,e){var n=e.style.marginRight,i=g(e).css("margin-right");g(e).data("margin-right",n).css("margin-right",parseFloat(i)-o._scrollbarWidth+"px")});var n=document.body.style.paddingRight,i=g(document.body).css("padding-right");g(document.body).data("padding-right",n).css("padding-right",parseFloat(i)+this._scrollbarWidth+"px")}g(document.body).addClass(ce)},t._resetScrollbar=function(){var t=[].slice.call(document.querySelectorAll(me));g(t).each(function(t,e){var n=g(e).data("padding-right");g(e).removeData("padding-right"),e.style.paddingRight=n||""});var e=[].slice.call(document.querySelectorAll(""+pe));g(e).each(function(t,e){var n=g(e).data("margin-right");"undefined"!=typeof n&&g(e).css("margin-right",n).removeData("margin-right")});var n=g(document.body).data("padding-right");g(document.body).removeData("padding-right"),document.body.style.paddingRight=n||""},t._getScrollbarWidth=function(){var t=document.createElement("div");t.className=ae,document.body.appendChild(t);var e=t.getBoundingClientRect().width-t.clientWidth;return document.body.removeChild(t),e},o._jQueryInterface=function(n,i){return this.each(function(){var t=g(this).data(te),e=l({},ie,g(this).data(),"object"==typeof n&&n?n:{});if(t||(t=new o(this,e),g(this).data(te,t)),"string"==typeof n){if("undefined"==typeof t[n])throw new TypeError('No method named "'+n+'"');t[n](i)}else e.show&&t.show(i)})},s(o,null,[{key:"VERSION",get:function(){return"4.3.1"}},{key:"Default",get:function(){return ie}}]),o}();g(document).on(re.CLICK_DATA_API,ge,function(t){var e,n=this,i=_.getSelectorFromElement(this);i&&(e=document.querySelector(i));var o=g(e).data(te)?"toggle":l({},g(e).data(),g(this).data());"A"!==this.tagName&&"AREA"!==this.tagName||t.preventDefault();var r=g(e).one(re.SHOW,function(t){t.isDefaultPrevented()||r.one(re.HIDDEN,function(){g(n).is(":visible")&&n.focus()})});ve._jQueryInterface.call(g(e),o,this)}),g.fn[Zt]=ve._jQueryInterface,g.fn[Zt].Constructor=ve,g.fn[Zt].noConflict=function(){return g.fn[Zt]=ne,ve._jQueryInterface};var ye=["background","cite","href","itemtype","longdesc","poster","src","xlink:href"],Ee={"*":["class","dir","id","lang","role",/^aria-[\w-]*$/i],a:["target","href","title","rel"],area:[],b:[],br:[],col:[],code:[],div:[],em:[],hr:[],h1:[],h2:[],h3:[],h4:[],h5:[],h6:[],i:[],img:["src","alt","title","width","height"],li:[],ol:[],p:[],pre:[],s:[],small:[],span:[],sub:[],sup:[],strong:[],u:[],ul:[]},Ce=/^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi,Te=/^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+/]+=*$/i;function Se(t,s,e){if(0===t.length)return t;if(e&&"function"==typeof e)return e(t);for(var n=(new window.DOMParser).parseFromString(t,"text/html"),a=Object.keys(s),l=[].slice.call(n.body.querySelectorAll("*")),i=function(t,e){var n=l[t],i=n.nodeName.toLowerCase();if(-1===a.indexOf(n.nodeName.toLowerCase()))return n.parentNode.removeChild(n),"continue";var o=[].slice.call(n.attributes),r=[].concat(s["*"]||[],s[i]||[]);o.forEach(function(t){(function(t,e){var n=t.nodeName.toLowerCase();if(-1!==e.indexOf(n))return-1===ye.indexOf(n)||Boolean(t.nodeValue.match(Ce)||t.nodeValue.match(Te));for(var i=e.filter(function(t){return t instanceof RegExp}),o=0,r=i.length;o<r;o++)if(n.match(i[o]))return!0;return!1})(t,r)||n.removeAttribute(t.nodeName)})},o=0,r=l.length;o<r;o++)i(o);return n.body.innerHTML}var be="tooltip",Ie="bs.tooltip",De="."+Ie,we=g.fn[be],Ae="bs-tooltip",Ne=new RegExp("(^|\\s)"+Ae+"\\S+","g"),Oe=["sanitize","whiteList","sanitizeFn"],ke={animation:"boolean",template:"string",title:"(string|element|function)",trigger:"string",delay:"(number|object)",html:"boolean",selector:"(string|boolean)",placement:"(string|function)",offset:"(number|string|function)",container:"(string|element|boolean)",fallbackPlacement:"(string|array)",boundary:"(string|element)",sanitize:"boolean",sanitizeFn:"(null|function)",whiteList:"object"},Pe={AUTO:"auto",TOP:"top",RIGHT:"right",BOTTOM:"bottom",LEFT:"left"},Le={animation:!0,template:'<div class="tooltip" role="tooltip"><div class="arrow"></div><div class="tooltip-inner"></div></div>',trigger:"hover focus",title:"",delay:0,html:!1,selector:!1,placement:"top",offset:0,container:!1,fallbackPlacement:"flip",boundary:"scrollParent",sanitize:!0,sanitizeFn:null,whiteList:Ee},je="show",He="out",Re={HIDE:"hide"+De,HIDDEN:"hidden"+De,SHOW:"show"+De,SHOWN:"shown"+De,INSERTED:"inserted"+De,CLICK:"click"+De,FOCUSIN:"focusin"+De,FOCUSOUT:"focusout"+De,MOUSEENTER:"mouseenter"+De,MOUSELEAVE:"mouseleave"+De},xe="fade",Fe="show",Ue=".tooltip-inner",We=".arrow",qe="hover",Me="focus",Ke="click",Qe="manual",Be=function(){function i(t,e){if("undefined"==typeof u)throw new TypeError("Bootstrap's tooltips require Popper.js (https://popper.js.org/)");this._isEnabled=!0,this._timeout=0,this._hoverState="",this._activeTrigger={},this._popper=null,this.element=t,this.config=this._getConfig(e),this.tip=null,this._setListeners()}var t=i.prototype;return t.enable=function(){this._isEnabled=!0},t.disable=function(){this._isEnabled=!1},t.toggleEnabled=function(){this._isEnabled=!this._isEnabled},t.toggle=function(t){if(this._isEnabled)if(t){var e=this.constructor.DATA_KEY,n=g(t.currentTarget).data(e);n||(n=new this.constructor(t.currentTarget,this._getDelegateConfig()),g(t.currentTarget).data(e,n)),n._activeTrigger.click=!n._activeTrigger.click,n._isWithActiveTrigger()?n._enter(null,n):n._leave(null,n)}else{if(g(this.getTipElement()).hasClass(Fe))return void this._leave(null,this);this._enter(null,this)}},t.dispose=function(){clearTimeout(this._timeout),g.removeData(this.element,this.constructor.DATA_KEY),g(this.element).off(this.constructor.EVENT_KEY),g(this.element).closest(".modal").off("hide.bs.modal"),this.tip&&g(this.tip).remove(),this._isEnabled=null,this._timeout=null,this._hoverState=null,(this._activeTrigger=null)!==this._popper&&this._popper.destroy(),this._popper=null,this.element=null,this.config=null,this.tip=null},t.show=function(){var e=this;if("none"===g(this.element).css("display"))throw new Error("Please use show on visible elements");var t=g.Event(this.constructor.Event.SHOW);if(this.isWithContent()&&this._isEnabled){g(this.element).trigger(t);var n=_.findShadowRoot(this.element),i=g.contains(null!==n?n:this.element.ownerDocument.documentElement,this.element);if(t.isDefaultPrevented()||!i)return;var o=this.getTipElement(),r=_.getUID(this.constructor.NAME);o.setAttribute("id",r),this.element.setAttribute("aria-describedby",r),this.setContent(),this.config.animation&&g(o).addClass(xe);var s="function"==typeof this.config.placement?this.config.placement.call(this,o,this.element):this.config.placement,a=this._getAttachment(s);this.addAttachmentClass(a);var l=this._getContainer();g(o).data(this.constructor.DATA_KEY,this),g.contains(this.element.ownerDocument.documentElement,this.tip)||g(o).appendTo(l),g(this.element).trigger(this.constructor.Event.INSERTED),this._popper=new u(this.element,o,{placement:a,modifiers:{offset:this._getOffset(),flip:{behavior:this.config.fallbackPlacement},arrow:{element:We},preventOverflow:{boundariesElement:this.config.boundary}},onCreate:function(t){t.originalPlacement!==t.placement&&e._handlePopperPlacementChange(t)},onUpdate:function(t){return e._handlePopperPlacementChange(t)}}),g(o).addClass(Fe),"ontouchstart"in document.documentElement&&g(document.body).children().on("mouseover",null,g.noop);var c=function(){e.config.animation&&e._fixTransition();var t=e._hoverState;e._hoverState=null,g(e.element).trigger(e.constructor.Event.SHOWN),t===He&&e._leave(null,e)};if(g(this.tip).hasClass(xe)){var h=_.getTransitionDurationFromElement(this.tip);g(this.tip).one(_.TRANSITION_END,c).emulateTransitionEnd(h)}else c()}},t.hide=function(t){var e=this,n=this.getTipElement(),i=g.Event(this.constructor.Event.HIDE),o=function(){e._hoverState!==je&&n.parentNode&&n.parentNode.removeChild(n),e._cleanTipClass(),e.element.removeAttribute("aria-describedby"),g(e.element).trigger(e.constructor.Event.HIDDEN),null!==e._popper&&e._popper.destroy(),t&&t()};if(g(this.element).trigger(i),!i.isDefaultPrevented()){if(g(n).removeClass(Fe),"ontouchstart"in document.documentElement&&g(document.body).children().off("mouseover",null,g.noop),this._activeTrigger[Ke]=!1,this._activeTrigger[Me]=!1,this._activeTrigger[qe]=!1,g(this.tip).hasClass(xe)){var r=_.getTransitionDurationFromElement(n);g(n).one(_.TRANSITION_END,o).emulateTransitionEnd(r)}else o();this._hoverState=""}},t.update=function(){null!==this._popper&&this._popper.scheduleUpdate()},t.isWithContent=function(){return Boolean(this.getTitle())},t.addAttachmentClass=function(t){g(this.getTipElement()).addClass(Ae+"-"+t)},t.getTipElement=function(){return this.tip=this.tip||g(this.config.template)[0],this.tip},t.setContent=function(){var t=this.getTipElement();this.setElementContent(g(t.querySelectorAll(Ue)),this.getTitle()),g(t).removeClass(xe+" "+Fe)},t.setElementContent=function(t,e){"object"!=typeof e||!e.nodeType&&!e.jquery?this.config.html?(this.config.sanitize&&(e=Se(e,this.config.whiteList,this.config.sanitizeFn)),t.html(e)):t.text(e):this.config.html?g(e).parent().is(t)||t.empty().append(e):t.text(g(e).text())},t.getTitle=function(){var t=this.element.getAttribute("data-original-title");return t||(t="function"==typeof this.config.title?this.config.title.call(this.element):this.config.title),t},t._getOffset=function(){var e=this,t={};return"function"==typeof this.config.offset?t.fn=function(t){return t.offsets=l({},t.offsets,e.config.offset(t.offsets,e.element)||{}),t}:t.offset=this.config.offset,t},t._getContainer=function(){return!1===this.config.container?document.body:_.isElement(this.config.container)?g(this.config.container):g(document).find(this.config.container)},t._getAttachment=function(t){return Pe[t.toUpperCase()]},t._setListeners=function(){var i=this;this.config.trigger.split(" ").forEach(function(t){if("click"===t)g(i.element).on(i.constructor.Event.CLICK,i.config.selector,function(t){return i.toggle(t)});else if(t!==Qe){var e=t===qe?i.constructor.Event.MOUSEENTER:i.constructor.Event.FOCUSIN,n=t===qe?i.constructor.Event.MOUSELEAVE:i.constructor.Event.FOCUSOUT;g(i.element).on(e,i.config.selector,function(t){return i._enter(t)}).on(n,i.config.selector,function(t){return i._leave(t)})}}),g(this.element).closest(".modal").on("hide.bs.modal",function(){i.element&&i.hide()}),this.config.selector?this.config=l({},this.config,{trigger:"manual",selector:""}):this._fixTitle()},t._fixTitle=function(){var t=typeof this.element.getAttribute("data-original-title");(this.element.getAttribute("title")||"string"!==t)&&(this.element.setAttribute("data-original-title",this.element.getAttribute("title")||""),this.element.setAttribute("title",""))},t._enter=function(t,e){var n=this.constructor.DATA_KEY;(e=e||g(t.currentTarget).data(n))||(e=new this.constructor(t.currentTarget,this._getDelegateConfig()),g(t.currentTarget).data(n,e)),t&&(e._activeTrigger["focusin"===t.type?Me:qe]=!0),g(e.getTipElement()).hasClass(Fe)||e._hoverState===je?e._hoverState=je:(clearTimeout(e._timeout),e._hoverState=je,e.config.delay&&e.config.delay.show?e._timeout=setTimeout(function(){e._hoverState===je&&e.show()},e.config.delay.show):e.show())},t._leave=function(t,e){var n=this.constructor.DATA_KEY;(e=e||g(t.currentTarget).data(n))||(e=new this.constructor(t.currentTarget,this._getDelegateConfig()),g(t.currentTarget).data(n,e)),t&&(e._activeTrigger["focusout"===t.type?Me:qe]=!1),e._isWithActiveTrigger()||(clearTimeout(e._timeout),e._hoverState=He,e.config.delay&&e.config.delay.hide?e._timeout=setTimeout(function(){e._hoverState===He&&e.hide()},e.config.delay.hide):e.hide())},t._isWithActiveTrigger=function(){for(var t in this._activeTrigger)if(this._activeTrigger[t])return!0;return!1},t._getConfig=function(t){var e=g(this.element).data();return Object.keys(e).forEach(function(t){-1!==Oe.indexOf(t)&&delete e[t]}),"number"==typeof(t=l({},this.constructor.Default,e,"object"==typeof t&&t?t:{})).delay&&(t.delay={show:t.delay,hide:t.delay}),"number"==typeof t.title&&(t.title=t.title.toString()),"number"==typeof t.content&&(t.content=t.content.toString()),_.typeCheckConfig(be,t,this.constructor.DefaultType),t.sanitize&&(t.template=Se(t.template,t.whiteList,t.sanitizeFn)),t},t._getDelegateConfig=function(){var t={};if(this.config)for(var e in this.config)this.constructor.Default[e]!==this.config[e]&&(t[e]=this.config[e]);return t},t._cleanTipClass=function(){var t=g(this.getTipElement()),e=t.attr("class").match(Ne);null!==e&&e.length&&t.removeClass(e.join(""))},t._handlePopperPlacementChange=function(t){var e=t.instance;this.tip=e.popper,this._cleanTipClass(),this.addAttachmentClass(this._getAttachment(t.placement))},t._fixTransition=function(){var t=this.getTipElement(),e=this.config.animation;null===t.getAttribute("x-placement")&&(g(t).removeClass(xe),this.config.animation=!1,this.hide(),this.show(),this.config.animation=e)},i._jQueryInterface=function(n){return this.each(function(){var t=g(this).data(Ie),e="object"==typeof n&&n;if((t||!/dispose|hide/.test(n))&&(t||(t=new i(this,e),g(this).data(Ie,t)),"string"==typeof n)){if("undefined"==typeof t[n])throw new TypeError('No method named "'+n+'"');t[n]()}})},s(i,null,[{key:"VERSION",get:function(){return"4.3.1"}},{key:"Default",get:function(){return Le}},{key:"NAME",get:function(){return be}},{key:"DATA_KEY",get:function(){return Ie}},{key:"Event",get:function(){return Re}},{key:"EVENT_KEY",get:function(){return De}},{key:"DefaultType",get:function(){return ke}}]),i}();g.fn[be]=Be._jQueryInterface,g.fn[be].Constructor=Be,g.fn[be].noConflict=function(){return g.fn[be]=we,Be._jQueryInterface};var Ve="popover",Ye="bs.popover",ze="."+Ye,Xe=g.fn[Ve],$e="bs-popover",Ge=new RegExp("(^|\\s)"+$e+"\\S+","g"),Je=l({},Be.Default,{placement:"right",trigger:"click",content:"",template:'<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-header"></h3><div class="popover-body"></div></div>'}),Ze=l({},Be.DefaultType,{content:"(string|element|function)"}),tn="fade",en="show",nn=".popover-header",on=".popover-body",rn={HIDE:"hide"+ze,HIDDEN:"hidden"+ze,SHOW:"show"+ze,SHOWN:"shown"+ze,INSERTED:"inserted"+ze,CLICK:"click"+ze,FOCUSIN:"focusin"+ze,FOCUSOUT:"focusout"+ze,MOUSEENTER:"mouseenter"+ze,MOUSELEAVE:"mouseleave"+ze},sn=function(t){var e,n;function i(){return t.apply(this,arguments)||this}n=t,(e=i).prototype=Object.create(n.prototype),(e.prototype.constructor=e).__proto__=n;var o=i.prototype;return o.isWithContent=function(){return this.getTitle()||this._getContent()},o.addAttachmentClass=function(t){g(this.getTipElement()).addClass($e+"-"+t)},o.getTipElement=function(){return this.tip=this.tip||g(this.config.template)[0],this.tip},o.setContent=function(){var t=g(this.getTipElement());this.setElementContent(t.find(nn),this.getTitle());var e=this._getContent();"function"==typeof e&&(e=e.call(this.element)),this.setElementContent(t.find(on),e),t.removeClass(tn+" "+en)},o._getContent=function(){return this.element.getAttribute("data-content")||this.config.content},o._cleanTipClass=function(){var t=g(this.getTipElement()),e=t.attr("class").match(Ge);null!==e&&0<e.length&&t.removeClass(e.join(""))},i._jQueryInterface=function(n){return this.each(function(){var t=g(this).data(Ye),e="object"==typeof n?n:null;if((t||!/dispose|hide/.test(n))&&(t||(t=new i(this,e),g(this).data(Ye,t)),"string"==typeof n)){if("undefined"==typeof t[n])throw new TypeError('No method named "'+n+'"');t[n]()}})},s(i,null,[{key:"VERSION",get:function(){return"4.3.1"}},{key:"Default",get:function(){return Je}},{key:"NAME",get:function(){return Ve}},{key:"DATA_KEY",get:function(){return Ye}},{key:"Event",get:function(){return rn}},{key:"EVENT_KEY",get:function(){return ze}},{key:"DefaultType",get:function(){return Ze}}]),i}(Be);g.fn[Ve]=sn._jQueryInterface,g.fn[Ve].Constructor=sn,g.fn[Ve].noConflict=function(){return g.fn[Ve]=Xe,sn._jQueryInterface};var an="scrollspy",ln="bs.scrollspy",cn="."+ln,hn=g.fn[an],un={offset:10,method:"auto",target:""},fn={offset:"number",method:"string",target:"(string|element)"},dn={ACTIVATE:"activate"+cn,SCROLL:"scroll"+cn,LOAD_DATA_API:"load"+cn+".data-api"},gn="dropdown-item",_n="active",mn='[data-spy="scroll"]',pn=".nav, .list-group",vn=".nav-link",yn=".nav-item",En=".list-group-item",Cn=".dropdown",Tn=".dropdown-item",Sn=".dropdown-toggle",bn="offset",In="position",Dn=function(){function n(t,e){var n=this;this._element=t,this._scrollElement="BODY"===t.tagName?window:t,this._config=this._getConfig(e),this._selector=this._config.target+" "+vn+","+this._config.target+" "+En+","+this._config.target+" "+Tn,this._offsets=[],this._targets=[],this._activeTarget=null,this._scrollHeight=0,g(this._scrollElement).on(dn.SCROLL,function(t){return n._process(t)}),this.refresh(),this._process()}var t=n.prototype;return t.refresh=function(){var e=this,t=this._scrollElement===this._scrollElement.window?bn:In,o="auto"===this._config.method?t:this._config.method,r=o===In?this._getScrollTop():0;this._offsets=[],this._targets=[],this._scrollHeight=this._getScrollHeight(),[].slice.call(document.querySelectorAll(this._selector)).map(function(t){var e,n=_.getSelectorFromElement(t);if(n&&(e=document.querySelector(n)),e){var i=e.getBoundingClientRect();if(i.width||i.height)return[g(e)[o]().top+r,n]}return null}).filter(function(t){return t}).sort(function(t,e){return t[0]-e[0]}).forEach(function(t){e._offsets.push(t[0]),e._targets.push(t[1])})},t.dispose=function(){g.removeData(this._element,ln),g(this._scrollElement).off(cn),this._element=null,this._scrollElement=null,this._config=null,this._selector=null,this._offsets=null,this._targets=null,this._activeTarget=null,this._scrollHeight=null},t._getConfig=function(t){if("string"!=typeof(t=l({},un,"object"==typeof t&&t?t:{})).target){var e=g(t.target).attr("id");e||(e=_.getUID(an),g(t.target).attr("id",e)),t.target="#"+e}return _.typeCheckConfig(an,t,fn),t},t._getScrollTop=function(){return this._scrollElement===window?this._scrollElement.pageYOffset:this._scrollElement.scrollTop},t._getScrollHeight=function(){return this._scrollElement.scrollHeight||Math.max(document.body.scrollHeight,document.documentElement.scrollHeight)},t._getOffsetHeight=function(){return this._scrollElement===window?window.innerHeight:this._scrollElement.getBoundingClientRect().height},t._process=function(){var t=this._getScrollTop()+this._config.offset,e=this._getScrollHeight(),n=this._config.offset+e-this._getOffsetHeight();if(this._scrollHeight!==e&&this.refresh(),n<=t){var i=this._targets[this._targets.length-1];this._activeTarget!==i&&this._activate(i)}else{if(this._activeTarget&&t<this._offsets[0]&&0<this._offsets[0])return this._activeTarget=null,void this._clear();for(var o=this._offsets.length;o--;){this._activeTarget!==this._targets[o]&&t>=this._offsets[o]&&("undefined"==typeof this._offsets[o+1]||t<this._offsets[o+1])&&this._activate(this._targets[o])}}},t._activate=function(e){this._activeTarget=e,this._clear();var t=this._selector.split(",").map(function(t){return t+'[data-target="'+e+'"],'+t+'[href="'+e+'"]'}),n=g([].slice.call(document.querySelectorAll(t.join(","))));n.hasClass(gn)?(n.closest(Cn).find(Sn).addClass(_n),n.addClass(_n)):(n.addClass(_n),n.parents(pn).prev(vn+", "+En).addClass(_n),n.parents(pn).prev(yn).children(vn).addClass(_n)),g(this._scrollElement).trigger(dn.ACTIVATE,{relatedTarget:e})},t._clear=function(){[].slice.call(document.querySelectorAll(this._selector)).filter(function(t){return t.classList.contains(_n)}).forEach(function(t){return t.classList.remove(_n)})},n._jQueryInterface=function(e){return this.each(function(){var t=g(this).data(ln);if(t||(t=new n(this,"object"==typeof e&&e),g(this).data(ln,t)),"string"==typeof e){if("undefined"==typeof t[e])throw new TypeError('No method named "'+e+'"');t[e]()}})},s(n,null,[{key:"VERSION",get:function(){return"4.3.1"}},{key:"Default",get:function(){return un}}]),n}();g(window).on(dn.LOAD_DATA_API,function(){for(var t=[].slice.call(document.querySelectorAll(mn)),e=t.length;e--;){var n=g(t[e]);Dn._jQueryInterface.call(n,n.data())}}),g.fn[an]=Dn._jQueryInterface,g.fn[an].Constructor=Dn,g.fn[an].noConflict=function(){return g.fn[an]=hn,Dn._jQueryInterface};var wn="bs.tab",An="."+wn,Nn=g.fn.tab,On={HIDE:"hide"+An,HIDDEN:"hidden"+An,SHOW:"show"+An,SHOWN:"shown"+An,CLICK_DATA_API:"click"+An+".data-api"},kn="dropdown-menu",Pn="active",Ln="disabled",jn="fade",Hn="show",Rn=".dropdown",xn=".nav, .list-group",Fn=".active",Un="> li > .active",Wn='[data-toggle="tab"], [data-toggle="pill"], [data-toggle="list"]',qn=".dropdown-toggle",Mn="> .dropdown-menu .active",Kn=function(){function i(t){this._element=t}var t=i.prototype;return t.show=function(){var n=this;if(!(this._element.parentNode&&this._element.parentNode.nodeType===Node.ELEMENT_NODE&&g(this._element).hasClass(Pn)||g(this._element).hasClass(Ln))){var t,i,e=g(this._element).closest(xn)[0],o=_.getSelectorFromElement(this._element);if(e){var r="UL"===e.nodeName||"OL"===e.nodeName?Un:Fn;i=(i=g.makeArray(g(e).find(r)))[i.length-1]}var s=g.Event(On.HIDE,{relatedTarget:this._element}),a=g.Event(On.SHOW,{relatedTarget:i});if(i&&g(i).trigger(s),g(this._element).trigger(a),!a.isDefaultPrevented()&&!s.isDefaultPrevented()){o&&(t=document.querySelector(o)),this._activate(this._element,e);var l=function(){var t=g.Event(On.HIDDEN,{relatedTarget:n._element}),e=g.Event(On.SHOWN,{relatedTarget:i});g(i).trigger(t),g(n._element).trigger(e)};t?this._activate(t,t.parentNode,l):l()}}},t.dispose=function(){g.removeData(this._element,wn),this._element=null},t._activate=function(t,e,n){var i=this,o=(!e||"UL"!==e.nodeName&&"OL"!==e.nodeName?g(e).children(Fn):g(e).find(Un))[0],r=n&&o&&g(o).hasClass(jn),s=function(){return i._transitionComplete(t,o,n)};if(o&&r){var a=_.getTransitionDurationFromElement(o);g(o).removeClass(Hn).one(_.TRANSITION_END,s).emulateTransitionEnd(a)}else s()},t._transitionComplete=function(t,e,n){if(e){g(e).removeClass(Pn);var i=g(e.parentNode).find(Mn)[0];i&&g(i).removeClass(Pn),"tab"===e.getAttribute("role")&&e.setAttribute("aria-selected",!1)}if(g(t).addClass(Pn),"tab"===t.getAttribute("role")&&t.setAttribute("aria-selected",!0),_.reflow(t),t.classList.contains(jn)&&t.classList.add(Hn),t.parentNode&&g(t.parentNode).hasClass(kn)){var o=g(t).closest(Rn)[0];if(o){var r=[].slice.call(o.querySelectorAll(qn));g(r).addClass(Pn)}t.setAttribute("aria-expanded",!0)}n&&n()},i._jQueryInterface=function(n){return this.each(function(){var t=g(this),e=t.data(wn);if(e||(e=new i(this),t.data(wn,e)),"string"==typeof n){if("undefined"==typeof e[n])throw new TypeError('No method named "'+n+'"');e[n]()}})},s(i,null,[{key:"VERSION",get:function(){return"4.3.1"}}]),i}();g(document).on(On.CLICK_DATA_API,Wn,function(t){t.preventDefault(),Kn._jQueryInterface.call(g(this),"show")}),g.fn.tab=Kn._jQueryInterface,g.fn.tab.Constructor=Kn,g.fn.tab.noConflict=function(){return g.fn.tab=Nn,Kn._jQueryInterface};var Qn="toast",Bn="bs.toast",Vn="."+Bn,Yn=g.fn[Qn],zn={CLICK_DISMISS:"click.dismiss"+Vn,HIDE:"hide"+Vn,HIDDEN:"hidden"+Vn,SHOW:"show"+Vn,SHOWN:"shown"+Vn},Xn="fade",$n="hide",Gn="show",Jn="showing",Zn={animation:"boolean",autohide:"boolean",delay:"number"},ti={animation:!0,autohide:!0,delay:500},ei='[data-dismiss="toast"]',ni=function(){function i(t,e){this._element=t,this._config=this._getConfig(e),this._timeout=null,this._setListeners()}var t=i.prototype;return t.show=function(){var t=this;g(this._element).trigger(zn.SHOW),this._config.animation&&this._element.classList.add(Xn);var e=function(){t._element.classList.remove(Jn),t._element.classList.add(Gn),g(t._element).trigger(zn.SHOWN),t._config.autohide&&t.hide()};if(this._element.classList.remove($n),this._element.classList.add(Jn),this._config.animation){var n=_.getTransitionDurationFromElement(this._element);g(this._element).one(_.TRANSITION_END,e).emulateTransitionEnd(n)}else e()},t.hide=function(t){var e=this;this._element.classList.contains(Gn)&&(g(this._element).trigger(zn.HIDE),t?this._close():this._timeout=setTimeout(function(){e._close()},this._config.delay))},t.dispose=function(){clearTimeout(this._timeout),this._timeout=null,this._element.classList.contains(Gn)&&this._element.classList.remove(Gn),g(this._element).off(zn.CLICK_DISMISS),g.removeData(this._element,Bn),this._element=null,this._config=null},t._getConfig=function(t){return t=l({},ti,g(this._element).data(),"object"==typeof t&&t?t:{}),_.typeCheckConfig(Qn,t,this.constructor.DefaultType),t},t._setListeners=function(){var t=this;g(this._element).on(zn.CLICK_DISMISS,ei,function(){return t.hide(!0)})},t._close=function(){var t=this,e=function(){t._element.classList.add($n),g(t._element).trigger(zn.HIDDEN)};if(this._element.classList.remove(Gn),this._config.animation){var n=_.getTransitionDurationFromElement(this._element);g(this._element).one(_.TRANSITION_END,e).emulateTransitionEnd(n)}else e()},i._jQueryInterface=function(n){return this.each(function(){var t=g(this),e=t.data(Bn);if(e||(e=new i(this,"object"==typeof n&&n),t.data(Bn,e)),"string"==typeof n){if("undefined"==typeof e[n])throw new TypeError('No method named "'+n+'"');e[n](this)}})},s(i,null,[{key:"VERSION",get:function(){return"4.3.1"}},{key:"DefaultType",get:function(){return Zn}},{key:"Default",get:function(){return ti}}]),i}();g.fn[Qn]=ni._jQueryInterface,g.fn[Qn].Constructor=ni,g.fn[Qn].noConflict=function(){return g.fn[Qn]=Yn,ni._jQueryInterface},function(){if("undefined"==typeof g)throw new TypeError("Bootstrap's JavaScript requires jQuery. jQuery must be included before Bootstrap's JavaScript.");var t=g.fn.jquery.split(" ")[0].split(".");if(t[0]<2&&t[1]<9||1===t[0]&&9===t[1]&&t[2]<1||4<=t[0])throw new Error("Bootstrap's JavaScript requires at least jQuery v1.9.1 but less than v4.0.0")}(),t.Util=_,t.Alert=p,t.Button=P,t.Carousel=lt,t.Collapse=bt,t.Dropdown=Jt,t.Modal=ve,t.Popover=sn,t.Scrollspy=Dn,t.Tab=Kn,t.Toast=ni,t.Tooltip=Be,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=bootstrap.min.js.map

/*
 * Toastr
 * Copyright 2012-2015
 * Authors: John Papa, Hans Fjällemark, and Tim Ferrell.
 * All Rights Reserved.
 * Use, reproduction, distribution, and modification of this code is subject to the terms and
 * conditions of the MIT license, available at http://www.opensource.org/licenses/mit-license.php
 *
 * ARIA Support: Greta Krafsig
 *
 * Project: https://github.com/CodeSeven/toastr
 */
("function"==typeof define&&define.amd?define:function(e,t){"undefined"!=typeof module&&module.exports?module.exports=t(require("jquery")):window.toastr=t(window.jQuery)})(["jquery"],function(D){return function(){var h,t,v,C=0,s="error",o="info",i="success",a="warning",e={clear:function(e,t){var n=O();h||w(n),r(e,n,t)||function(e){for(var t=h.children(),n=t.length-1;0<=n;n--)r(D(t[n]),e)}(n)},remove:function(e){var t=O();h||w(t),e&&0===D(":focus",e).length?b(e):h.children().length&&h.remove()},error:function(e,t,n){return l({type:s,iconClass:O().iconClasses.error,message:e,optionsOverride:n,title:t})},getContainer:w,info:function(e,t,n){return l({type:o,iconClass:O().iconClasses.info,message:e,optionsOverride:n,title:t})},options:{},subscribe:function(e){t=e},success:function(e,t,n){return l({type:i,iconClass:O().iconClasses.success,message:e,optionsOverride:n,title:t})},version:"2.1.4",warning:function(e,t,n){return l({type:a,iconClass:O().iconClasses.warning,message:e,optionsOverride:n,title:t})}};return e;function w(e,t){return e||(e=O()),(h=D("#"+e.containerId)).length||t&&(n=e,(h=D("<div/>").attr("id",n.containerId).addClass(n.positionClass)).appendTo(D(n.target)),h=h),h;var n}function r(e,t,n){var s=!(!n||!n.force)&&n.force;return!(!e||!s&&0!==D(":focus",e).length||(e[t.hideMethod]({duration:t.hideDuration,easing:t.hideEasing,complete:function(){b(e)}}),0))}function T(e){t&&t(e)}function l(t){var o=O(),e=t.iconClass||o.iconClass;if(void 0!==t.optionsOverride&&(o=D.extend(o,t.optionsOverride),e=t.optionsOverride.iconClass||e),!function(e,t){if(e.preventDuplicates){if(t.message===v)return!0;v=t.message}return!1}(o,t)){C++,h=w(o,!0);var i=null,a=D("<div/>"),n=D("<div/>"),s=D("<div/>"),r=D("<div/>"),l=D(o.closeHtml),c={intervalId:null,hideEta:null,maxHideTime:null},d={toastId:C,state:"visible",startTime:new Date,options:o,map:t};return t.iconClass&&a.addClass(o.toastClass).addClass(e),function(){if(t.title){var e=t.title;o.escapeHtml&&(e=u(t.title)),n.append(e).addClass(o.titleClass),a.append(n)}}(),function(){if(t.message){var e=t.message;o.escapeHtml&&(e=u(t.message)),s.append(e).addClass(o.messageClass),a.append(s)}}(),o.closeButton&&(l.addClass(o.closeClass).attr("role","button"),a.prepend(l)),o.progressBar&&(r.addClass(o.progressClass),a.prepend(r)),o.rtl&&a.addClass("rtl"),o.newestOnTop?h.prepend(a):h.append(a),function(){var e="";switch(t.iconClass){case"toast-success":case"toast-info":e="polite";break;default:e="assertive"}a.attr("aria-live",e)}(),a.hide(),a[o.showMethod]({duration:o.showDuration,easing:o.showEasing,complete:o.onShown}),0<o.timeOut&&(i=setTimeout(p,o.timeOut),c.maxHideTime=parseFloat(o.timeOut),c.hideEta=(new Date).getTime()+c.maxHideTime,o.progressBar&&(c.intervalId=setInterval(f,10))),o.closeOnHover&&a.hover(g,m),!o.onclick&&o.tapToDismiss&&a.click(p),o.closeButton&&l&&l.click(function(e){e.stopPropagation?e.stopPropagation():void 0!==e.cancelBubble&&!0!==e.cancelBubble&&(e.cancelBubble=!0),o.onCloseClick&&o.onCloseClick(e),p(!0)}),o.onclick&&a.click(function(e){o.onclick(e),p()}),T(d),o.debug&&console&&console.log(d),a}function u(e){return null==e&&(e=""),e.replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/'/g,"&#39;").replace(/</g,"&lt;").replace(/>/g,"&gt;")}function p(e){var t=e&&!1!==o.closeMethod?o.closeMethod:o.hideMethod,n=e&&!1!==o.closeDuration?o.closeDuration:o.hideDuration,s=e&&!1!==o.closeEasing?o.closeEasing:o.hideEasing;if(!D(":focus",a).length||e)return clearTimeout(c.intervalId),a[t]({duration:n,easing:s,complete:function(){b(a),clearTimeout(i),o.onHidden&&"hidden"!==d.state&&o.onHidden(),d.state="hidden",d.endTime=new Date,T(d)}})}function m(){(0<o.timeOut||0<o.extendedTimeOut)&&(i=setTimeout(p,o.extendedTimeOut),c.maxHideTime=parseFloat(o.extendedTimeOut),c.hideEta=(new Date).getTime()+c.maxHideTime)}function g(){clearTimeout(i),c.hideEta=0,a.stop(!0,!0)[o.showMethod]({duration:o.showDuration,easing:o.showEasing})}function f(){var e=(c.hideEta-(new Date).getTime())/c.maxHideTime*100;r.width(e+"%")}}function O(){return D.extend({},{tapToDismiss:!0,toastClass:"toast",containerId:"toast-container",debug:!1,showMethod:"fadeIn",showDuration:300,showEasing:"swing",onShown:void 0,hideMethod:"fadeOut",hideDuration:1e3,hideEasing:"swing",onHidden:void 0,closeMethod:!1,closeDuration:!1,closeEasing:!1,closeOnHover:!0,extendedTimeOut:1e3,iconClasses:{error:"toast-error",info:"toast-info",success:"toast-success",warning:"toast-warning"},iconClass:"toast-info",positionClass:"toast-top-right",timeOut:5e3,titleClass:"toast-title",messageClass:"toast-message",escapeHtml:!1,target:"body",closeHtml:'<button type="button">&times;</button>',closeClass:"toast-close-button",newestOnTop:!0,preventDuplicates:!1,progressBar:!1,progressClass:"toast-progress",rtl:!1},e.options)}function b(e){h||(h=w()),e.is(":visible")||(e.remove(),e=null,0===h.children().length&&(h.remove(),v=void 0))}}()});

/*
 * Sweet alert
 */

!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.swal=e():t.swal=e()}(this,function(){return function(t){function e(o){if(n[o])return n[o].exports;var r=n[o]={i:o,l:!1,exports:{}};return t[o].call(r.exports,r,r.exports,e),r.l=!0,r.exports}var n={};return e.m=t,e.c=n,e.d=function(t,n,o){e.o(t,n)||Object.defineProperty(t,n,{configurable:!1,enumerable:!0,get:o})},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p="",e(e.s=8)}([function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o="swal-button";e.CLASS_NAMES={MODAL:"swal-modal",OVERLAY:"swal-overlay",SHOW_MODAL:"swal-overlay--show-modal",MODAL_TITLE:"swal-title",MODAL_TEXT:"swal-text",ICON:"swal-icon",ICON_CUSTOM:"swal-icon--custom",CONTENT:"swal-content",FOOTER:"swal-footer",BUTTON_CONTAINER:"swal-button-container",BUTTON:o,CONFIRM_BUTTON:o+"--confirm",CANCEL_BUTTON:o+"--cancel",DANGER_BUTTON:o+"--danger",BUTTON_LOADING:o+"--loading",BUTTON_LOADER:o+"__loader"},e.default=e.CLASS_NAMES},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.getNode=function(t){var e="."+t;return document.querySelector(e)},e.stringToNode=function(t){var e=document.createElement("div");return e.innerHTML=t.trim(),e.firstChild},e.insertAfter=function(t,e){var n=e.nextSibling;e.parentNode.insertBefore(t,n)},e.removeNode=function(t){t.parentElement.removeChild(t)},e.throwErr=function(t){throw t=t.replace(/ +(?= )/g,""),"SweetAlert: "+(t=t.trim())},e.isPlainObject=function(t){if("[object Object]"!==Object.prototype.toString.call(t))return!1;var e=Object.getPrototypeOf(t);return null===e||e===Object.prototype},e.ordinalSuffixOf=function(t){var e=t%10,n=t%100;return 1===e&&11!==n?t+"st":2===e&&12!==n?t+"nd":3===e&&13!==n?t+"rd":t+"th"}},function(t,e,n){"use strict";function o(t){for(var n in t)e.hasOwnProperty(n)||(e[n]=t[n])}Object.defineProperty(e,"__esModule",{value:!0}),o(n(25));var r=n(26);e.overlayMarkup=r.default,o(n(27)),o(n(28)),o(n(29));var i=n(0),a=i.default.MODAL_TITLE,s=i.default.MODAL_TEXT,c=i.default.ICON,l=i.default.FOOTER;e.iconMarkup='\n  <div class="'+c+'"></div>',e.titleMarkup='\n  <div class="'+a+'"></div>\n',e.textMarkup='\n  <div class="'+s+'"></div>',e.footerMarkup='\n  <div class="'+l+'"></div>\n'},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(1);e.CONFIRM_KEY="confirm",e.CANCEL_KEY="cancel";var r={visible:!0,text:null,value:null,className:"",closeModal:!0},i=Object.assign({},r,{visible:!1,text:"Cancel",value:null}),a=Object.assign({},r,{text:"OK",value:!0});e.defaultButtonList={cancel:i,confirm:a};var s=function(t){switch(t){case e.CONFIRM_KEY:return a;case e.CANCEL_KEY:return i;default:var n=t.charAt(0).toUpperCase()+t.slice(1);return Object.assign({},r,{text:n,value:t})}},c=function(t,e){var n=s(t);return!0===e?Object.assign({},n,{visible:!0}):"string"==typeof e?Object.assign({},n,{visible:!0,text:e}):o.isPlainObject(e)?Object.assign({visible:!0},n,e):Object.assign({},n,{visible:!1})},l=function(t){for(var e={},n=0,o=Object.keys(t);n<o.length;n++){var r=o[n],a=t[r],s=c(r,a);e[r]=s}return e.cancel||(e.cancel=i),e},u=function(t){var n={};switch(t.length){case 1:n[e.CANCEL_KEY]=Object.assign({},i,{visible:!1});break;case 2:n[e.CANCEL_KEY]=c(e.CANCEL_KEY,t[0]),n[e.CONFIRM_KEY]=c(e.CONFIRM_KEY,t[1]);break;default:o.throwErr("Invalid number of 'buttons' in array ("+t.length+").\n      If you want more than 2 buttons, you need to use an object!")}return n};e.getButtonListOpts=function(t){var n=e.defaultButtonList;return"string"==typeof t?n[e.CONFIRM_KEY]=c(e.CONFIRM_KEY,t):Array.isArray(t)?n=u(t):o.isPlainObject(t)?n=l(t):!0===t?n=u([!0,!0]):!1===t?n=u([!1,!1]):void 0===t&&(n=e.defaultButtonList),n}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(1),r=n(2),i=n(0),a=i.default.MODAL,s=i.default.OVERLAY,c=n(30),l=n(31),u=n(32),f=n(33);e.injectElIntoModal=function(t){var e=o.getNode(a),n=o.stringToNode(t);return e.appendChild(n),n};var d=function(t){t.className=a,t.textContent=""},p=function(t,e){d(t);var n=e.className;n&&t.classList.add(n)};e.initModalContent=function(t){var e=o.getNode(a);p(e,t),c.default(t.icon),l.initTitle(t.title),l.initText(t.text),f.default(t.content),u.default(t.buttons,t.dangerMode)};var m=function(){var t=o.getNode(s),e=o.stringToNode(r.modalMarkup);t.appendChild(e)};e.default=m},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(3),r={isOpen:!1,promise:null,actions:{},timer:null},i=Object.assign({},r);e.resetState=function(){i=Object.assign({},r)},e.setActionValue=function(t){if("string"==typeof t)return a(o.CONFIRM_KEY,t);for(var e in t)a(e,t[e])};var a=function(t,e){i.actions[t]||(i.actions[t]={}),Object.assign(i.actions[t],{value:e})};e.setActionOptionsFor=function(t,e){var n=(void 0===e?{}:e).closeModal,o=void 0===n||n;Object.assign(i.actions[t],{closeModal:o})},e.default=i},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(1),r=n(3),i=n(0),a=i.default.OVERLAY,s=i.default.SHOW_MODAL,c=i.default.BUTTON,l=i.default.BUTTON_LOADING,u=n(5);e.openModal=function(){o.getNode(a).classList.add(s),u.default.isOpen=!0};var f=function(){o.getNode(a).classList.remove(s),u.default.isOpen=!1};e.onAction=function(t){void 0===t&&(t=r.CANCEL_KEY);var e=u.default.actions[t],n=e.value;if(!1===e.closeModal){var i=c+"--"+t;o.getNode(i).classList.add(l)}else f();u.default.promise.resolve(n)},e.getState=function(){var t=Object.assign({},u.default);return delete t.promise,delete t.timer,t},e.stopLoading=function(){for(var t=document.querySelectorAll("."+c),e=0;e<t.length;e++){t[e].classList.remove(l)}}},function(t,e){var n;n=function(){return this}();try{n=n||Function("return this")()||(0,eval)("this")}catch(t){"object"==typeof window&&(n=window)}t.exports=n},function(t,e,n){(function(e){t.exports=e.sweetAlert=n(9)}).call(e,n(7))},function(t,e,n){(function(e){t.exports=e.swal=n(10)}).call(e,n(7))},function(t,e,n){"undefined"!=typeof window&&n(11),n(16);var o=n(23).default;t.exports=o},function(t,e,n){var o=n(12);"string"==typeof o&&(o=[[t.i,o,""]]);var r={insertAt:"top"};r.transform=void 0;n(14)(o,r);o.locals&&(t.exports=o.locals)},function(t,e,n){e=t.exports=n(13)(void 0),e.push([t.i,'.swal-icon--error{border-color:#f27474;-webkit-animation:animateErrorIcon .5s;animation:animateErrorIcon .5s}.swal-icon--error__x-mark{position:relative;display:block;-webkit-animation:animateXMark .5s;animation:animateXMark .5s}.swal-icon--error__line{position:absolute;height:5px;width:47px;background-color:#f27474;display:block;top:37px;border-radius:2px}.swal-icon--error__line--left{-webkit-transform:rotate(45deg);transform:rotate(45deg);left:17px}.swal-icon--error__line--right{-webkit-transform:rotate(-45deg);transform:rotate(-45deg);right:16px}@-webkit-keyframes animateErrorIcon{0%{-webkit-transform:rotateX(100deg);transform:rotateX(100deg);opacity:0}to{-webkit-transform:rotateX(0deg);transform:rotateX(0deg);opacity:1}}@keyframes animateErrorIcon{0%{-webkit-transform:rotateX(100deg);transform:rotateX(100deg);opacity:0}to{-webkit-transform:rotateX(0deg);transform:rotateX(0deg);opacity:1}}@-webkit-keyframes animateXMark{0%{-webkit-transform:scale(.4);transform:scale(.4);margin-top:26px;opacity:0}50%{-webkit-transform:scale(.4);transform:scale(.4);margin-top:26px;opacity:0}80%{-webkit-transform:scale(1.15);transform:scale(1.15);margin-top:-6px}to{-webkit-transform:scale(1);transform:scale(1);margin-top:0;opacity:1}}@keyframes animateXMark{0%{-webkit-transform:scale(.4);transform:scale(.4);margin-top:26px;opacity:0}50%{-webkit-transform:scale(.4);transform:scale(.4);margin-top:26px;opacity:0}80%{-webkit-transform:scale(1.15);transform:scale(1.15);margin-top:-6px}to{-webkit-transform:scale(1);transform:scale(1);margin-top:0;opacity:1}}.swal-icon--warning{border-color:#f8bb86;-webkit-animation:pulseWarning .75s infinite alternate;animation:pulseWarning .75s infinite alternate}.swal-icon--warning__body{width:5px;height:47px;top:10px;border-radius:2px;margin-left:-2px}.swal-icon--warning__body,.swal-icon--warning__dot{position:absolute;left:50%;background-color:#f8bb86}.swal-icon--warning__dot{width:7px;height:7px;border-radius:50%;margin-left:-4px;bottom:-11px}@-webkit-keyframes pulseWarning{0%{border-color:#f8d486}to{border-color:#f8bb86}}@keyframes pulseWarning{0%{border-color:#f8d486}to{border-color:#f8bb86}}.swal-icon--success{border-color:#a5dc86}.swal-icon--success:after,.swal-icon--success:before{content:"";border-radius:50%;position:absolute;width:60px;height:120px;background:#fff;-webkit-transform:rotate(45deg);transform:rotate(45deg)}.swal-icon--success:before{border-radius:120px 0 0 120px;top:-7px;left:-33px;-webkit-transform:rotate(-45deg);transform:rotate(-45deg);-webkit-transform-origin:60px 60px;transform-origin:60px 60px}.swal-icon--success:after{border-radius:0 120px 120px 0;top:-11px;left:30px;-webkit-transform:rotate(-45deg);transform:rotate(-45deg);-webkit-transform-origin:0 60px;transform-origin:0 60px;-webkit-animation:rotatePlaceholder 4.25s ease-in;animation:rotatePlaceholder 4.25s ease-in}.swal-icon--success__ring{width:80px;height:80px;border:4px solid hsla(98,55%,69%,.2);border-radius:50%;box-sizing:content-box;position:absolute;left:-4px;top:-4px;z-index:2}.swal-icon--success__hide-corners{width:5px;height:90px;background-color:#fff;padding:1px;position:absolute;left:28px;top:8px;z-index:1;-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}.swal-icon--success__line{height:5px;background-color:#a5dc86;display:block;border-radius:2px;position:absolute;z-index:2}.swal-icon--success__line--tip{width:25px;left:14px;top:46px;-webkit-transform:rotate(45deg);transform:rotate(45deg);-webkit-animation:animateSuccessTip .75s;animation:animateSuccessTip .75s}.swal-icon--success__line--long{width:47px;right:8px;top:38px;-webkit-transform:rotate(-45deg);transform:rotate(-45deg);-webkit-animation:animateSuccessLong .75s;animation:animateSuccessLong .75s}@-webkit-keyframes rotatePlaceholder{0%{-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}5%{-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}12%{-webkit-transform:rotate(-405deg);transform:rotate(-405deg)}to{-webkit-transform:rotate(-405deg);transform:rotate(-405deg)}}@keyframes rotatePlaceholder{0%{-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}5%{-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}12%{-webkit-transform:rotate(-405deg);transform:rotate(-405deg)}to{-webkit-transform:rotate(-405deg);transform:rotate(-405deg)}}@-webkit-keyframes animateSuccessTip{0%{width:0;left:1px;top:19px}54%{width:0;left:1px;top:19px}70%{width:50px;left:-8px;top:37px}84%{width:17px;left:21px;top:48px}to{width:25px;left:14px;top:45px}}@keyframes animateSuccessTip{0%{width:0;left:1px;top:19px}54%{width:0;left:1px;top:19px}70%{width:50px;left:-8px;top:37px}84%{width:17px;left:21px;top:48px}to{width:25px;left:14px;top:45px}}@-webkit-keyframes animateSuccessLong{0%{width:0;right:46px;top:54px}65%{width:0;right:46px;top:54px}84%{width:55px;right:0;top:35px}to{width:47px;right:8px;top:38px}}@keyframes animateSuccessLong{0%{width:0;right:46px;top:54px}65%{width:0;right:46px;top:54px}84%{width:55px;right:0;top:35px}to{width:47px;right:8px;top:38px}}.swal-icon--info{border-color:#c9dae1}.swal-icon--info:before{width:5px;height:29px;bottom:17px;border-radius:2px;margin-left:-2px}.swal-icon--info:after,.swal-icon--info:before{content:"";position:absolute;left:50%;background-color:#c9dae1}.swal-icon--info:after{width:7px;height:7px;border-radius:50%;margin-left:-3px;top:19px}.swal-icon{width:80px;height:80px;border-width:4px;border-style:solid;border-radius:50%;padding:0;position:relative;box-sizing:content-box;margin:20px auto}.swal-icon:first-child{margin-top:32px}.swal-icon--custom{width:auto;height:auto;max-width:100%;border:none;border-radius:0}.swal-icon img{max-width:100%;max-height:100%}.swal-title{color:rgba(0,0,0,.65);font-weight:600;text-transform:none;position:relative;display:block;padding:13px 16px;font-size:27px;line-height:normal;text-align:center;margin-bottom:0}.swal-title:first-child{margin-top:26px}.swal-title:not(:first-child){padding-bottom:0}.swal-title:not(:last-child){margin-bottom:13px}.swal-text{font-size:16px;position:relative;float:none;line-height:normal;vertical-align:top;text-align:left;display:inline-block;margin:0;padding:0 10px;font-weight:400;color:rgba(0,0,0,.64);max-width:calc(100% - 20px);overflow-wrap:break-word;box-sizing:border-box}.swal-text:first-child{margin-top:45px}.swal-text:last-child{margin-bottom:45px}.swal-footer{text-align:right;padding-top:13px;margin-top:13px;padding:13px 16px;border-radius:inherit;border-top-left-radius:0;border-top-right-radius:0}.swal-button-container{margin:5px;display:inline-block;position:relative}.swal-button{background-color:#7cd1f9;color:#fff;border:none;box-shadow:none;border-radius:5px;font-weight:600;font-size:14px;padding:10px 24px;margin:0;cursor:pointer}.swal-button:not([disabled]):hover{background-color:#78cbf2}.swal-button:active{background-color:#70bce0}.swal-button:focus{outline:none;box-shadow:0 0 0 1px #fff,0 0 0 3px rgba(43,114,165,.29)}.swal-button[disabled]{opacity:.5;cursor:default}.swal-button::-moz-focus-inner{border:0}.swal-button--cancel{color:#555;background-color:#efefef}.swal-button--cancel:not([disabled]):hover{background-color:#e8e8e8}.swal-button--cancel:active{background-color:#d7d7d7}.swal-button--cancel:focus{box-shadow:0 0 0 1px #fff,0 0 0 3px rgba(116,136,150,.29)}.swal-button--danger{background-color:#e64942}.swal-button--danger:not([disabled]):hover{background-color:#df4740}.swal-button--danger:active{background-color:#cf423b}.swal-button--danger:focus{box-shadow:0 0 0 1px #fff,0 0 0 3px rgba(165,43,43,.29)}.swal-content{padding:0 20px;margin-top:20px;font-size:medium}.swal-content:last-child{margin-bottom:20px}.swal-content__input,.swal-content__textarea{-webkit-appearance:none;background-color:#fff;border:none;font-size:14px;display:block;box-sizing:border-box;width:100%;border:1px solid rgba(0,0,0,.14);padding:10px 13px;border-radius:2px;transition:border-color .2s}.swal-content__input:focus,.swal-content__textarea:focus{outline:none;border-color:#6db8ff}.swal-content__textarea{resize:vertical}.swal-button--loading{color:transparent}.swal-button--loading~.swal-button__loader{opacity:1}.swal-button__loader{position:absolute;height:auto;width:43px;z-index:2;left:50%;top:50%;-webkit-transform:translateX(-50%) translateY(-50%);transform:translateX(-50%) translateY(-50%);text-align:center;pointer-events:none;opacity:0}.swal-button__loader div{display:inline-block;float:none;vertical-align:baseline;width:9px;height:9px;padding:0;border:none;margin:2px;opacity:.4;border-radius:7px;background-color:hsla(0,0%,100%,.9);transition:background .2s;-webkit-animation:swal-loading-anim 1s infinite;animation:swal-loading-anim 1s infinite}.swal-button__loader div:nth-child(3n+2){-webkit-animation-delay:.15s;animation-delay:.15s}.swal-button__loader div:nth-child(3n+3){-webkit-animation-delay:.3s;animation-delay:.3s}@-webkit-keyframes swal-loading-anim{0%{opacity:.4}20%{opacity:.4}50%{opacity:1}to{opacity:.4}}@keyframes swal-loading-anim{0%{opacity:.4}20%{opacity:.4}50%{opacity:1}to{opacity:.4}}.swal-overlay{position:fixed;top:0;bottom:0;left:0;right:0;text-align:center;font-size:0;overflow-y:auto;background-color:rgba(0,0,0,.4);z-index:10000;pointer-events:none;opacity:0;transition:opacity .3s}.swal-overlay:before{content:" ";display:inline-block;vertical-align:middle;height:100%}.swal-overlay--show-modal{opacity:1;pointer-events:auto}.swal-overlay--show-modal .swal-modal{opacity:1;pointer-events:auto;box-sizing:border-box;-webkit-animation:showSweetAlert .3s;animation:showSweetAlert .3s;will-change:transform}.swal-modal{width:478px;opacity:0;pointer-events:none;background-color:#fff;text-align:center;border-radius:5px;position:static;margin:20px auto;display:inline-block;vertical-align:middle;-webkit-transform:scale(1);transform:scale(1);-webkit-transform-origin:50% 50%;transform-origin:50% 50%;z-index:10001;transition:opacity .2s,-webkit-transform .3s;transition:transform .3s,opacity .2s;transition:transform .3s,opacity .2s,-webkit-transform .3s}@media (max-width:500px){.swal-modal{width:calc(100% - 20px)}}@-webkit-keyframes showSweetAlert{0%{-webkit-transform:scale(1);transform:scale(1)}1%{-webkit-transform:scale(.5);transform:scale(.5)}45%{-webkit-transform:scale(1.05);transform:scale(1.05)}80%{-webkit-transform:scale(.95);transform:scale(.95)}to{-webkit-transform:scale(1);transform:scale(1)}}@keyframes showSweetAlert{0%{-webkit-transform:scale(1);transform:scale(1)}1%{-webkit-transform:scale(.5);transform:scale(.5)}45%{-webkit-transform:scale(1.05);transform:scale(1.05)}80%{-webkit-transform:scale(.95);transform:scale(.95)}to{-webkit-transform:scale(1);transform:scale(1)}}',""])},function(t,e){function n(t,e){var n=t[1]||"",r=t[3];if(!r)return n;if(e&&"function"==typeof btoa){var i=o(r);return[n].concat(r.sources.map(function(t){return"/*# sourceURL="+r.sourceRoot+t+" */"})).concat([i]).join("\n")}return[n].join("\n")}function o(t){return"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(t))))+" */"}t.exports=function(t){var e=[];return e.toString=function(){return this.map(function(e){var o=n(e,t);return e[2]?"@media "+e[2]+"{"+o+"}":o}).join("")},e.i=function(t,n){"string"==typeof t&&(t=[[null,t,""]]);for(var o={},r=0;r<this.length;r++){var i=this[r][0];"number"==typeof i&&(o[i]=!0)}for(r=0;r<t.length;r++){var a=t[r];"number"==typeof a[0]&&o[a[0]]||(n&&!a[2]?a[2]=n:n&&(a[2]="("+a[2]+") and ("+n+")"),e.push(a))}},e}},function(t,e,n){function o(t,e){for(var n=0;n<t.length;n++){var o=t[n],r=m[o.id];if(r){r.refs++;for(var i=0;i<r.parts.length;i++)r.parts[i](o.parts[i]);for(;i<o.parts.length;i++)r.parts.push(u(o.parts[i],e))}else{for(var a=[],i=0;i<o.parts.length;i++)a.push(u(o.parts[i],e));m[o.id]={id:o.id,refs:1,parts:a}}}}function r(t,e){for(var n=[],o={},r=0;r<t.length;r++){var i=t[r],a=e.base?i[0]+e.base:i[0],s=i[1],c=i[2],l=i[3],u={css:s,media:c,sourceMap:l};o[a]?o[a].parts.push(u):n.push(o[a]={id:a,parts:[u]})}return n}function i(t,e){var n=v(t.insertInto);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var o=w[w.length-1];if("top"===t.insertAt)o?o.nextSibling?n.insertBefore(e,o.nextSibling):n.appendChild(e):n.insertBefore(e,n.firstChild),w.push(e);else{if("bottom"!==t.insertAt)throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");n.appendChild(e)}}function a(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t);var e=w.indexOf(t);e>=0&&w.splice(e,1)}function s(t){var e=document.createElement("style");return t.attrs.type="text/css",l(e,t.attrs),i(t,e),e}function c(t){var e=document.createElement("link");return t.attrs.type="text/css",t.attrs.rel="stylesheet",l(e,t.attrs),i(t,e),e}function l(t,e){Object.keys(e).forEach(function(n){t.setAttribute(n,e[n])})}function u(t,e){var n,o,r,i;if(e.transform&&t.css){if(!(i=e.transform(t.css)))return function(){};t.css=i}if(e.singleton){var l=h++;n=g||(g=s(e)),o=f.bind(null,n,l,!1),r=f.bind(null,n,l,!0)}else t.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(n=c(e),o=p.bind(null,n,e),r=function(){a(n),n.href&&URL.revokeObjectURL(n.href)}):(n=s(e),o=d.bind(null,n),r=function(){a(n)});return o(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap)return;o(t=e)}else r()}}function f(t,e,n,o){var r=n?"":o.css;if(t.styleSheet)t.styleSheet.cssText=x(e,r);else{var i=document.createTextNode(r),a=t.childNodes;a[e]&&t.removeChild(a[e]),a.length?t.insertBefore(i,a[e]):t.appendChild(i)}}function d(t,e){var n=e.css,o=e.media;if(o&&t.setAttribute("media",o),t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}function p(t,e,n){var o=n.css,r=n.sourceMap,i=void 0===e.convertToAbsoluteUrls&&r;(e.convertToAbsoluteUrls||i)&&(o=y(o)),r&&(o+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(r))))+" */");var a=new Blob([o],{type:"text/css"}),s=t.href;t.href=URL.createObjectURL(a),s&&URL.revokeObjectURL(s)}var m={},b=function(t){var e;return function(){return void 0===e&&(e=t.apply(this,arguments)),e}}(function(){return window&&document&&document.all&&!window.atob}),v=function(t){var e={};return function(n){return void 0===e[n]&&(e[n]=t.call(this,n)),e[n]}}(function(t){return document.querySelector(t)}),g=null,h=0,w=[],y=n(15);t.exports=function(t,e){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");e=e||{},e.attrs="object"==typeof e.attrs?e.attrs:{},e.singleton||(e.singleton=b()),e.insertInto||(e.insertInto="head"),e.insertAt||(e.insertAt="bottom");var n=r(t,e);return o(n,e),function(t){for(var i=[],a=0;a<n.length;a++){var s=n[a],c=m[s.id];c.refs--,i.push(c)}if(t){o(r(t,e),e)}for(var a=0;a<i.length;a++){var c=i[a];if(0===c.refs){for(var l=0;l<c.parts.length;l++)c.parts[l]();delete m[c.id]}}}};var x=function(){var t=[];return function(e,n){return t[e]=n,t.filter(Boolean).join("\n")}}()},function(t,e){t.exports=function(t){var e="undefined"!=typeof window&&window.location;if(!e)throw new Error("fixUrls requires window.location");if(!t||"string"!=typeof t)return t;var n=e.protocol+"//"+e.host,o=n+e.pathname.replace(/\/[^\/]*$/,"/");return t.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(t,e){var r=e.trim().replace(/^"(.*)"$/,function(t,e){return e}).replace(/^'(.*)'$/,function(t,e){return e});if(/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/)/i.test(r))return t;var i;return i=0===r.indexOf("//")?r:0===r.indexOf("/")?n+r:o+r.replace(/^\.\//,""),"url("+JSON.stringify(i)+")"})}},function(t,e,n){var o=n(17);"undefined"==typeof window||window.Promise||(window.Promise=o),n(21),String.prototype.includes||(String.prototype.includes=function(t,e){"use strict";return"number"!=typeof e&&(e=0),!(e+t.length>this.length)&&-1!==this.indexOf(t,e)}),Array.prototype.includes||Object.defineProperty(Array.prototype,"includes",{value:function(t,e){if(null==this)throw new TypeError('"this" is null or not defined');var n=Object(this),o=n.length>>>0;if(0===o)return!1;for(var r=0|e,i=Math.max(r>=0?r:o-Math.abs(r),0);i<o;){if(function(t,e){return t===e||"number"==typeof t&&"number"==typeof e&&isNaN(t)&&isNaN(e)}(n[i],t))return!0;i++}return!1}}),"undefined"!=typeof window&&function(t){t.forEach(function(t){t.hasOwnProperty("remove")||Object.defineProperty(t,"remove",{configurable:!0,enumerable:!0,writable:!0,value:function(){this.parentNode.removeChild(this)}})})}([Element.prototype,CharacterData.prototype,DocumentType.prototype])},function(t,e,n){(function(e){!function(n){function o(){}function r(t,e){return function(){t.apply(e,arguments)}}function i(t){if("object"!=typeof this)throw new TypeError("Promises must be constructed via new");if("function"!=typeof t)throw new TypeError("not a function");this._state=0,this._handled=!1,this._value=void 0,this._deferreds=[],f(t,this)}function a(t,e){for(;3===t._state;)t=t._value;if(0===t._state)return void t._deferreds.push(e);t._handled=!0,i._immediateFn(function(){var n=1===t._state?e.onFulfilled:e.onRejected;if(null===n)return void(1===t._state?s:c)(e.promise,t._value);var o;try{o=n(t._value)}catch(t){return void c(e.promise,t)}s(e.promise,o)})}function s(t,e){try{if(e===t)throw new TypeError("A promise cannot be resolved with itself.");if(e&&("object"==typeof e||"function"==typeof e)){var n=e.then;if(e instanceof i)return t._state=3,t._value=e,void l(t);if("function"==typeof n)return void f(r(n,e),t)}t._state=1,t._value=e,l(t)}catch(e){c(t,e)}}function c(t,e){t._state=2,t._value=e,l(t)}function l(t){2===t._state&&0===t._deferreds.length&&i._immediateFn(function(){t._handled||i._unhandledRejectionFn(t._value)});for(var e=0,n=t._deferreds.length;e<n;e++)a(t,t._deferreds[e]);t._deferreds=null}function u(t,e,n){this.onFulfilled="function"==typeof t?t:null,this.onRejected="function"==typeof e?e:null,this.promise=n}function f(t,e){var n=!1;try{t(function(t){n||(n=!0,s(e,t))},function(t){n||(n=!0,c(e,t))})}catch(t){if(n)return;n=!0,c(e,t)}}var d=setTimeout;i.prototype.catch=function(t){return this.then(null,t)},i.prototype.then=function(t,e){var n=new this.constructor(o);return a(this,new u(t,e,n)),n},i.all=function(t){var e=Array.prototype.slice.call(t);return new i(function(t,n){function o(i,a){try{if(a&&("object"==typeof a||"function"==typeof a)){var s=a.then;if("function"==typeof s)return void s.call(a,function(t){o(i,t)},n)}e[i]=a,0==--r&&t(e)}catch(t){n(t)}}if(0===e.length)return t([]);for(var r=e.length,i=0;i<e.length;i++)o(i,e[i])})},i.resolve=function(t){return t&&"object"==typeof t&&t.constructor===i?t:new i(function(e){e(t)})},i.reject=function(t){return new i(function(e,n){n(t)})},i.race=function(t){return new i(function(e,n){for(var o=0,r=t.length;o<r;o++)t[o].then(e,n)})},i._immediateFn="function"==typeof e&&function(t){e(t)}||function(t){d(t,0)},i._unhandledRejectionFn=function(t){"undefined"!=typeof console&&console&&console.warn("Possible Unhandled Promise Rejection:",t)},i._setImmediateFn=function(t){i._immediateFn=t},i._setUnhandledRejectionFn=function(t){i._unhandledRejectionFn=t},void 0!==t&&t.exports?t.exports=i:n.Promise||(n.Promise=i)}(this)}).call(e,n(18).setImmediate)},function(t,e,n){function o(t,e){this._id=t,this._clearFn=e}var r=Function.prototype.apply;e.setTimeout=function(){return new o(r.call(setTimeout,window,arguments),clearTimeout)},e.setInterval=function(){return new o(r.call(setInterval,window,arguments),clearInterval)},e.clearTimeout=e.clearInterval=function(t){t&&t.close()},o.prototype.unref=o.prototype.ref=function(){},o.prototype.close=function(){this._clearFn.call(window,this._id)},e.enroll=function(t,e){clearTimeout(t._idleTimeoutId),t._idleTimeout=e},e.unenroll=function(t){clearTimeout(t._idleTimeoutId),t._idleTimeout=-1},e._unrefActive=e.active=function(t){clearTimeout(t._idleTimeoutId);var e=t._idleTimeout;e>=0&&(t._idleTimeoutId=setTimeout(function(){t._onTimeout&&t._onTimeout()},e))},n(19),e.setImmediate=setImmediate,e.clearImmediate=clearImmediate},function(t,e,n){(function(t,e){!function(t,n){"use strict";function o(t){"function"!=typeof t&&(t=new Function(""+t));for(var e=new Array(arguments.length-1),n=0;n<e.length;n++)e[n]=arguments[n+1];var o={callback:t,args:e};return l[c]=o,s(c),c++}function r(t){delete l[t]}function i(t){var e=t.callback,o=t.args;switch(o.length){case 0:e();break;case 1:e(o[0]);break;case 2:e(o[0],o[1]);break;case 3:e(o[0],o[1],o[2]);break;default:e.apply(n,o)}}function a(t){if(u)setTimeout(a,0,t);else{var e=l[t];if(e){u=!0;try{i(e)}finally{r(t),u=!1}}}}if(!t.setImmediate){var s,c=1,l={},u=!1,f=t.document,d=Object.getPrototypeOf&&Object.getPrototypeOf(t);d=d&&d.setTimeout?d:t,"[object process]"==={}.toString.call(t.process)?function(){s=function(t){e.nextTick(function(){a(t)})}}():function(){if(t.postMessage&&!t.importScripts){var e=!0,n=t.onmessage;return t.onmessage=function(){e=!1},t.postMessage("","*"),t.onmessage=n,e}}()?function(){var e="setImmediate$"+Math.random()+"$",n=function(n){n.source===t&&"string"==typeof n.data&&0===n.data.indexOf(e)&&a(+n.data.slice(e.length))};t.addEventListener?t.addEventListener("message",n,!1):t.attachEvent("onmessage",n),s=function(n){t.postMessage(e+n,"*")}}():t.MessageChannel?function(){var t=new MessageChannel;t.port1.onmessage=function(t){a(t.data)},s=function(e){t.port2.postMessage(e)}}():f&&"onreadystatechange"in f.createElement("script")?function(){var t=f.documentElement;s=function(e){var n=f.createElement("script");n.onreadystatechange=function(){a(e),n.onreadystatechange=null,t.removeChild(n),n=null},t.appendChild(n)}}():function(){s=function(t){setTimeout(a,0,t)}}(),d.setImmediate=o,d.clearImmediate=r}}("undefined"==typeof self?void 0===t?this:t:self)}).call(e,n(7),n(20))},function(t,e){function n(){throw new Error("setTimeout has not been defined")}function o(){throw new Error("clearTimeout has not been defined")}function r(t){if(u===setTimeout)return setTimeout(t,0);if((u===n||!u)&&setTimeout)return u=setTimeout,setTimeout(t,0);try{return u(t,0)}catch(e){try{return u.call(null,t,0)}catch(e){return u.call(this,t,0)}}}function i(t){if(f===clearTimeout)return clearTimeout(t);if((f===o||!f)&&clearTimeout)return f=clearTimeout,clearTimeout(t);try{return f(t)}catch(e){try{return f.call(null,t)}catch(e){return f.call(this,t)}}}function a(){b&&p&&(b=!1,p.length?m=p.concat(m):v=-1,m.length&&s())}function s(){if(!b){var t=r(a);b=!0;for(var e=m.length;e;){for(p=m,m=[];++v<e;)p&&p[v].run();v=-1,e=m.length}p=null,b=!1,i(t)}}function c(t,e){this.fun=t,this.array=e}function l(){}var u,f,d=t.exports={};!function(){try{u="function"==typeof setTimeout?setTimeout:n}catch(t){u=n}try{f="function"==typeof clearTimeout?clearTimeout:o}catch(t){f=o}}();var p,m=[],b=!1,v=-1;d.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)e[n-1]=arguments[n];m.push(new c(t,e)),1!==m.length||b||r(s)},c.prototype.run=function(){this.fun.apply(null,this.array)},d.title="browser",d.browser=!0,d.env={},d.argv=[],d.version="",d.versions={},d.on=l,d.addListener=l,d.once=l,d.off=l,d.removeListener=l,d.removeAllListeners=l,d.emit=l,d.prependListener=l,d.prependOnceListener=l,d.listeners=function(t){return[]},d.binding=function(t){throw new Error("process.binding is not supported")},d.cwd=function(){return"/"},d.chdir=function(t){throw new Error("process.chdir is not supported")},d.umask=function(){return 0}},function(t,e,n){"use strict";n(22).polyfill()},function(t,e,n){"use strict";function o(t,e){if(void 0===t||null===t)throw new TypeError("Cannot convert first argument to object");for(var n=Object(t),o=1;o<arguments.length;o++){var r=arguments[o];if(void 0!==r&&null!==r)for(var i=Object.keys(Object(r)),a=0,s=i.length;a<s;a++){var c=i[a],l=Object.getOwnPropertyDescriptor(r,c);void 0!==l&&l.enumerable&&(n[c]=r[c])}}return n}function r(){Object.assign||Object.defineProperty(Object,"assign",{enumerable:!1,configurable:!0,writable:!0,value:o})}t.exports={assign:o,polyfill:r}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(24),r=n(6),i=n(5),a=n(36),s=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];if("undefined"!=typeof window){var n=a.getOpts.apply(void 0,t);return new Promise(function(t,e){i.default.promise={resolve:t,reject:e},o.default(n),setTimeout(function(){r.openModal()})})}};s.close=r.onAction,s.getState=r.getState,s.setActionValue=i.setActionValue,s.stopLoading=r.stopLoading,s.setDefaults=a.setDefaults,e.default=s},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(1),r=n(0),i=r.default.MODAL,a=n(4),s=n(34),c=n(35),l=n(1);e.init=function(t){o.getNode(i)||(document.body||l.throwErr("You can only use SweetAlert AFTER the DOM has loaded!"),s.default(),a.default()),a.initModalContent(t),c.default(t)},e.default=e.init},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(0),r=o.default.MODAL;e.modalMarkup='\n  <div class="'+r+'" role="dialog" aria-modal="true"></div>',e.default=e.modalMarkup},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(0),r=o.default.OVERLAY,i='<div \n    class="'+r+'"\n    tabIndex="-1">\n  </div>';e.default=i},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(0),r=o.default.ICON;e.errorIconMarkup=function(){var t=r+"--error",e=t+"__line";return'\n    <div class="'+t+'__x-mark">\n      <span class="'+e+" "+e+'--left"></span>\n      <span class="'+e+" "+e+'--right"></span>\n    </div>\n  '},e.warningIconMarkup=function(){var t=r+"--warning";return'\n    <span class="'+t+'__body">\n      <span class="'+t+'__dot"></span>\n    </span>\n  '},e.successIconMarkup=function(){var t=r+"--success";return'\n    <span class="'+t+"__line "+t+'__line--long"></span>\n    <span class="'+t+"__line "+t+'__line--tip"></span>\n\n    <div class="'+t+'__ring"></div>\n    <div class="'+t+'__hide-corners"></div>\n  '}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(0),r=o.default.CONTENT;e.contentMarkup='\n  <div class="'+r+'">\n\n  </div>\n'},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(0),r=o.default.BUTTON_CONTAINER,i=o.default.BUTTON,a=o.default.BUTTON_LOADER;e.buttonMarkup='\n  <div class="'+r+'">\n\n    <button\n      class="'+i+'"\n    ></button>\n\n    <div class="'+a+'">\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n\n  </div>\n'},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(4),r=n(2),i=n(0),a=i.default.ICON,s=i.default.ICON_CUSTOM,c=["error","warning","success","info"],l={error:r.errorIconMarkup(),warning:r.warningIconMarkup(),success:r.successIconMarkup()},u=function(t,e){var n=a+"--"+t;e.classList.add(n);var o=l[t];o&&(e.innerHTML=o)},f=function(t,e){e.classList.add(s);var n=document.createElement("img");n.src=t,e.appendChild(n)},d=function(t){if(t){var e=o.injectElIntoModal(r.iconMarkup);c.includes(t)?u(t,e):f(t,e)}};e.default=d},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(2),r=n(4),i=function(t){navigator.userAgent.includes("AppleWebKit")&&(t.style.display="none",t.offsetHeight,t.style.display="")};e.initTitle=function(t){if(t){var e=r.injectElIntoModal(o.titleMarkup);e.textContent=t,i(e)}},e.initText=function(t){if(t){var e=document.createDocumentFragment();t.split("\n").forEach(function(t,n,o){e.appendChild(document.createTextNode(t)),n<o.length-1&&e.appendChild(document.createElement("br"))});var n=r.injectElIntoModal(o.textMarkup);n.appendChild(e),i(n)}}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(1),r=n(4),i=n(0),a=i.default.BUTTON,s=i.default.DANGER_BUTTON,c=n(3),l=n(2),u=n(6),f=n(5),d=function(t,e,n){var r=e.text,i=e.value,d=e.className,p=e.closeModal,m=o.stringToNode(l.buttonMarkup),b=m.querySelector("."+a),v=a+"--"+t;if(b.classList.add(v),d){(Array.isArray(d)?d:d.split(" ")).filter(function(t){return t.length>0}).forEach(function(t){b.classList.add(t)})}n&&t===c.CONFIRM_KEY&&b.classList.add(s),b.textContent=r;var g={};return g[t]=i,f.setActionValue(g),f.setActionOptionsFor(t,{closeModal:p}),b.addEventListener("click",function(){return u.onAction(t)}),m},p=function(t,e){var n=r.injectElIntoModal(l.footerMarkup);for(var o in t){var i=t[o],a=d(o,i,e);i.visible&&n.appendChild(a)}0===n.children.length&&n.remove()};e.default=p},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(3),r=n(4),i=n(2),a=n(5),s=n(6),c=n(0),l=c.default.CONTENT,u=function(t){t.addEventListener("input",function(t){var e=t.target,n=e.value;a.setActionValue(n)}),t.addEventListener("keyup",function(t){if("Enter"===t.key)return s.onAction(o.CONFIRM_KEY)}),setTimeout(function(){t.focus(),a.setActionValue("")},0)},f=function(t,e,n){var o=document.createElement(e),r=l+"__"+e;o.classList.add(r);for(var i in n){var a=n[i];o[i]=a}"input"===e&&u(o),t.appendChild(o)},d=function(t){if(t){var e=r.injectElIntoModal(i.contentMarkup),n=t.element,o=t.attributes;"string"==typeof n?f(e,n,o):e.appendChild(n)}};e.default=d},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(1),r=n(2),i=function(){var t=o.stringToNode(r.overlayMarkup);document.body.appendChild(t)};e.default=i},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(5),r=n(6),i=n(1),a=n(3),s=n(0),c=s.default.MODAL,l=s.default.BUTTON,u=s.default.OVERLAY,f=function(t){t.preventDefault(),v()},d=function(t){t.preventDefault(),g()},p=function(t){if(o.default.isOpen)switch(t.key){case"Escape":return r.onAction(a.CANCEL_KEY)}},m=function(t){if(o.default.isOpen)switch(t.key){case"Tab":return f(t)}},b=function(t){if(o.default.isOpen)return"Tab"===t.key&&t.shiftKey?d(t):void 0},v=function(){var t=i.getNode(l);t&&(t.tabIndex=0,t.focus())},g=function(){var t=i.getNode(c),e=t.querySelectorAll("."+l),n=e.length-1,o=e[n];o&&o.focus()},h=function(t){t[t.length-1].addEventListener("keydown",m)},w=function(t){t[0].addEventListener("keydown",b)},y=function(){var t=i.getNode(c),e=t.querySelectorAll("."+l);e.length&&(h(e),w(e))},x=function(t){if(i.getNode(u)===t.target)return r.onAction(a.CANCEL_KEY)},_=function(t){var e=i.getNode(u);e.removeEventListener("click",x),t&&e.addEventListener("click",x)},k=function(t){o.default.timer&&clearTimeout(o.default.timer),t&&(o.default.timer=window.setTimeout(function(){return r.onAction(a.CANCEL_KEY)},t))},O=function(t){t.closeOnEsc?document.addEventListener("keyup",p):document.removeEventListener("keyup",p),t.dangerMode?v():g(),y(),_(t.closeOnClickOutside),k(t.timer)};e.default=O},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(1),r=n(3),i=n(37),a=n(38),s={title:null,text:null,icon:null,buttons:r.defaultButtonList,content:null,className:null,closeOnClickOutside:!0,closeOnEsc:!0,dangerMode:!1,timer:null},c=Object.assign({},s);e.setDefaults=function(t){c=Object.assign({},s,t)};var l=function(t){var e=t&&t.button,n=t&&t.buttons;return void 0!==e&&void 0!==n&&o.throwErr("Cannot set both 'button' and 'buttons' options!"),void 0!==e?{confirm:e}:n},u=function(t){return o.ordinalSuffixOf(t+1)},f=function(t,e){o.throwErr(u(e)+" argument ('"+t+"') is invalid")},d=function(t,e){var n=t+1,r=e[n];o.isPlainObject(r)||void 0===r||o.throwErr("Expected "+u(n)+" argument ('"+r+"') to be a plain object")},p=function(t,e){var n=t+1,r=e[n];void 0!==r&&o.throwErr("Unexpected "+u(n)+" argument ("+r+")")},m=function(t,e,n,r){var i=typeof e,a="string"===i,s=e instanceof Element;if(a){if(0===n)return{text:e};if(1===n)return{text:e,title:r[0]};if(2===n)return d(n,r),{icon:e};f(e,n)}else{if(s&&0===n)return d(n,r),{content:e};if(o.isPlainObject(e))return p(n,r),e;f(e,n)}};e.getOpts=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];var n={};t.forEach(function(e,o){var r=m(0,e,o,t);Object.assign(n,r)});var o=l(n);n.buttons=r.getButtonListOpts(o),delete n.button,n.content=i.getContentOpts(n.content);var u=Object.assign({},s,c,n);return Object.keys(u).forEach(function(t){a.DEPRECATED_OPTS[t]&&a.logDeprecation(t)}),u}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(1),r={element:"input",attributes:{placeholder:""}};e.getContentOpts=function(t){var e={};return o.isPlainObject(t)?Object.assign(e,t):t instanceof Element?{element:t}:"input"===t?r:null}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.logDeprecation=function(t){var n=e.DEPRECATED_OPTS[t],o=n.onlyRename,r=n.replacement,i=n.subOption,a=n.link,s=o?"renamed":"deprecated",c='SweetAlert warning: "'+t+'" option has been '+s+".";if(r){c+=" Please use"+(i?' "'+i+'" in ':" ")+'"'+r+'" instead.'}var l="https://sweetalert.js.org";c+=a?" More details: "+l+a:" More details: "+l+"/guides/#upgrading-from-1x",console.warn(c)},e.DEPRECATED_OPTS={type:{replacement:"icon",link:"/docs/#icon"},imageUrl:{replacement:"icon",link:"/docs/#icon"},customClass:{replacement:"className",onlyRename:!0,link:"/docs/#classname"},imageSize:{},showCancelButton:{replacement:"buttons",link:"/docs/#buttons"},showConfirmButton:{replacement:"button",link:"/docs/#button"},confirmButtonText:{replacement:"button",link:"/docs/#button"},confirmButtonColor:{},cancelButtonText:{replacement:"buttons",link:"/docs/#buttons"},closeOnConfirm:{replacement:"button",subOption:"closeModal",link:"/docs/#button"},closeOnCancel:{replacement:"buttons",subOption:"closeModal",link:"/docs/#buttons"},showLoaderOnConfirm:{replacement:"buttons"},animation:{},inputType:{replacement:"content",link:"/docs/#content"},inputValue:{replacement:"content",link:"/docs/#content"},inputPlaceholder:{replacement:"content",link:"/docs/#content"},html:{replacement:"content",link:"/docs/#content"},allowEscapeKey:{replacement:"closeOnEsc",onlyRename:!0,link:"/docs/#closeonesc"},allowClickOutside:{replacement:"closeOnClickOutside",onlyRename:!0,link:"/docs/#closeonclickoutside"}}}])});

/* jquery.nicescroll v3.7.6 InuYaksa - MIT - https://nicescroll.areaaperta.com */
!function(e){"function"==typeof define&&define.amd?define(["jquery"],e):"object"==typeof exports?module.exports=e(require("jquery")):e(jQuery)}(function(e){"use strict";var o=!1,t=!1,r=0,i=2e3,s=0,n=e,l=document,a=window,c=n(a),d=[],u=a.requestAnimationFrame||a.webkitRequestAnimationFrame||a.mozRequestAnimationFrame||!1,h=a.cancelAnimationFrame||a.webkitCancelAnimationFrame||a.mozCancelAnimationFrame||!1;if(u)a.cancelAnimationFrame||(h=function(e){});else{var p=0;u=function(e,o){var t=(new Date).getTime(),r=Math.max(0,16-(t-p)),i=a.setTimeout(function(){e(t+r)},r);return p=t+r,i},h=function(e){a.clearTimeout(e)}}var m=a.MutationObserver||a.WebKitMutationObserver||!1,f=Date.now||function(){return(new Date).getTime()},g={zindex:"auto",cursoropacitymin:0,cursoropacitymax:1,cursorcolor:"#424242",cursorwidth:"6px",cursorborder:"1px solid #fff",cursorborderradius:"5px",scrollspeed:40,mousescrollstep:27,touchbehavior:!1,emulatetouch:!1,hwacceleration:!0,usetransition:!0,boxzoom:!1,dblclickzoom:!0,gesturezoom:!0,grabcursorenabled:!0,autohidemode:!0,background:"",iframeautoresize:!0,cursorminheight:32,preservenativescrolling:!0,railoffset:!1,railhoffset:!1,bouncescroll:!0,spacebarenabled:!0,railpadding:{top:0,right:0,left:0,bottom:0},disableoutline:!0,horizrailenabled:!0,railalign:"right",railvalign:"bottom",enabletranslate3d:!0,enablemousewheel:!0,enablekeyboard:!0,smoothscroll:!0,sensitiverail:!0,enablemouselockapi:!0,cursorfixedheight:!1,directionlockdeadzone:6,hidecursordelay:400,nativeparentscrolling:!0,enablescrollonselection:!0,overflowx:!0,overflowy:!0,cursordragspeed:.3,rtlmode:"auto",cursordragontouch:!1,oneaxismousemode:"auto",scriptpath:function(){var e=l.currentScript||function(){var e=l.getElementsByTagName("script");return!!e.length&&e[e.length-1]}(),o=e?e.src.split("?")[0]:"";return o.split("/").length>0?o.split("/").slice(0,-1).join("/")+"/":""}(),preventmultitouchscrolling:!0,disablemutationobserver:!1,enableobserver:!0,scrollbarid:!1},v=!1,w=function(){if(v)return v;var e=l.createElement("DIV"),o=e.style,t=navigator.userAgent,r=navigator.platform,i={};return i.haspointerlock="pointerLockElement"in l||"webkitPointerLockElement"in l||"mozPointerLockElement"in l,i.isopera="opera"in a,i.isopera12=i.isopera&&"getUserMedia"in navigator,i.isoperamini="[object OperaMini]"===Object.prototype.toString.call(a.operamini),i.isie="all"in l&&"attachEvent"in e&&!i.isopera,i.isieold=i.isie&&!("msInterpolationMode"in o),i.isie7=i.isie&&!i.isieold&&(!("documentMode"in l)||7===l.documentMode),i.isie8=i.isie&&"documentMode"in l&&8===l.documentMode,i.isie9=i.isie&&"performance"in a&&9===l.documentMode,i.isie10=i.isie&&"performance"in a&&10===l.documentMode,i.isie11="msRequestFullscreen"in e&&l.documentMode>=11,i.ismsedge="msCredentials"in a,i.ismozilla="MozAppearance"in o,i.iswebkit=!i.ismsedge&&"WebkitAppearance"in o,i.ischrome=i.iswebkit&&"chrome"in a,i.ischrome38=i.ischrome&&"touchAction"in o,i.ischrome22=!i.ischrome38&&i.ischrome&&i.haspointerlock,i.ischrome26=!i.ischrome38&&i.ischrome&&"transition"in o,i.cantouch="ontouchstart"in l.documentElement||"ontouchstart"in a,i.hasw3ctouch=(a.PointerEvent||!1)&&(navigator.maxTouchPoints>0||navigator.msMaxTouchPoints>0),i.hasmstouch=!i.hasw3ctouch&&(a.MSPointerEvent||!1),i.ismac=/^mac$/i.test(r),i.isios=i.cantouch&&/iphone|ipad|ipod/i.test(r),i.isios4=i.isios&&!("seal"in Object),i.isios7=i.isios&&"webkitHidden"in l,i.isios8=i.isios&&"hidden"in l,i.isios10=i.isios&&a.Proxy,i.isandroid=/android/i.test(t),i.haseventlistener="addEventListener"in e,i.trstyle=!1,i.hastransform=!1,i.hastranslate3d=!1,i.transitionstyle=!1,i.hastransition=!1,i.transitionend=!1,i.trstyle="transform",i.hastransform="transform"in o||function(){for(var e=["msTransform","webkitTransform","MozTransform","OTransform"],t=0,r=e.length;t<r;t++)if(void 0!==o[e[t]]){i.trstyle=e[t];break}i.hastransform=!!i.trstyle}(),i.hastransform&&(o[i.trstyle]="translate3d(1px,2px,3px)",i.hastranslate3d=/translate3d/.test(o[i.trstyle])),i.transitionstyle="transition",i.prefixstyle="",i.transitionend="transitionend",i.hastransition="transition"in o||function(){i.transitionend=!1;for(var e=["webkitTransition","msTransition","MozTransition","OTransition","OTransition","KhtmlTransition"],t=["-webkit-","-ms-","-moz-","-o-","-o","-khtml-"],r=["webkitTransitionEnd","msTransitionEnd","transitionend","otransitionend","oTransitionEnd","KhtmlTransitionEnd"],s=0,n=e.length;s<n;s++)if(e[s]in o){i.transitionstyle=e[s],i.prefixstyle=t[s],i.transitionend=r[s];break}i.ischrome26&&(i.prefixstyle=t[1]),i.hastransition=i.transitionstyle}(),i.cursorgrabvalue=function(){var e=["grab","-webkit-grab","-moz-grab"];(i.ischrome&&!i.ischrome38||i.isie)&&(e=[]);for(var t=0,r=e.length;t<r;t++){var s=e[t];if(o.cursor=s,o.cursor==s)return s}return"url(https://cdnjs.cloudflare.com/ajax/libs/slider-pro/1.3.0/css/images/openhand.cur),n-resize"}(),i.hasmousecapture="setCapture"in e,i.hasMutationObserver=!1!==m,e=null,v=i,i},b=function(e,p){function v(){var e=T.doc.css(P.trstyle);return!(!e||"matrix"!=e.substr(0,6))&&e.replace(/^.*\((.*)\)$/g,"$1").replace(/px/g,"").split(/, +/)}function b(){var e=T.win;if("zIndex"in e)return e.zIndex();for(;e.length>0;){if(9==e[0].nodeType)return!1;var o=e.css("zIndex");if(!isNaN(o)&&0!==o)return parseInt(o);e=e.parent()}return!1}function x(e,o,t){var r=e.css(o),i=parseFloat(r);if(isNaN(i)){var s=3==(i=I[r]||0)?t?T.win.outerHeight()-T.win.innerHeight():T.win.outerWidth()-T.win.innerWidth():1;return T.isie8&&i&&(i+=1),s?i:0}return i}function S(e,o,t,r){T._bind(e,o,function(r){var i={original:r=r||a.event,target:r.target||r.srcElement,type:"wheel",deltaMode:"MozMousePixelScroll"==r.type?0:1,deltaX:0,deltaZ:0,preventDefault:function(){return r.preventDefault?r.preventDefault():r.returnValue=!1,!1},stopImmediatePropagation:function(){r.stopImmediatePropagation?r.stopImmediatePropagation():r.cancelBubble=!0}};return"mousewheel"==o?(r.wheelDeltaX&&(i.deltaX=-.025*r.wheelDeltaX),r.wheelDeltaY&&(i.deltaY=-.025*r.wheelDeltaY),!i.deltaY&&!i.deltaX&&(i.deltaY=-.025*r.wheelDelta)):i.deltaY=r.detail,t.call(e,i)},r)}function z(e,o,t,r){T.scrollrunning||(T.newscrolly=T.getScrollTop(),T.newscrollx=T.getScrollLeft(),D=f());var i=f()-D;if(D=f(),i>350?A=1:A+=(2-A)/10,e=e*A|0,o=o*A|0,e){if(r)if(e<0){if(T.getScrollLeft()>=T.page.maxw)return!0}else if(T.getScrollLeft()<=0)return!0;var s=e>0?1:-1;X!==s&&(T.scrollmom&&T.scrollmom.stop(),T.newscrollx=T.getScrollLeft(),X=s),T.lastdeltax-=e}if(o){if(function(){var e=T.getScrollTop();if(o<0){if(e>=T.page.maxh)return!0}else if(e<=0)return!0}()){if(M.nativeparentscrolling&&t&&!T.ispage&&!T.zoomactive)return!0;var n=T.view.h>>1;T.newscrolly<-n?(T.newscrolly=-n,o=-1):T.newscrolly>T.page.maxh+n?(T.newscrolly=T.page.maxh+n,o=1):o=0}var l=o>0?1:-1;B!==l&&(T.scrollmom&&T.scrollmom.stop(),T.newscrolly=T.getScrollTop(),B=l),T.lastdeltay-=o}(o||e)&&T.synched("relativexy",function(){var e=T.lastdeltay+T.newscrolly;T.lastdeltay=0;var o=T.lastdeltax+T.newscrollx;T.lastdeltax=0,T.rail.drag||T.doScrollPos(o,e)})}function k(e,o,t){var r,i;return!(t||!q)||(0===e.deltaMode?(r=-e.deltaX*(M.mousescrollstep/54)|0,i=-e.deltaY*(M.mousescrollstep/54)|0):1===e.deltaMode&&(r=-e.deltaX*M.mousescrollstep*50/80|0,i=-e.deltaY*M.mousescrollstep*50/80|0),o&&M.oneaxismousemode&&0===r&&i&&(r=i,i=0,t&&(r<0?T.getScrollLeft()>=T.page.maxw:T.getScrollLeft()<=0)&&(i=r,r=0)),T.isrtlmode&&(r=-r),z(r,i,t,!0)?void(t&&(q=!0)):(q=!1,e.stopImmediatePropagation(),e.preventDefault()))}var T=this;this.version="3.7.6",this.name="nicescroll",this.me=p;var E=n("body"),M=this.opt={doc:E,win:!1};if(n.extend(M,g),M.snapbackspeed=80,e)for(var L in M)void 0!==e[L]&&(M[L]=e[L]);if(M.disablemutationobserver&&(m=!1),this.doc=M.doc,this.iddoc=this.doc&&this.doc[0]?this.doc[0].id||"":"",this.ispage=/^BODY|HTML/.test(M.win?M.win[0].nodeName:this.doc[0].nodeName),this.haswrapper=!1!==M.win,this.win=M.win||(this.ispage?c:this.doc),this.docscroll=this.ispage&&!this.haswrapper?c:this.win,this.body=E,this.viewport=!1,this.isfixed=!1,this.iframe=!1,this.isiframe="IFRAME"==this.doc[0].nodeName&&"IFRAME"==this.win[0].nodeName,this.istextarea="TEXTAREA"==this.win[0].nodeName,this.forcescreen=!1,this.canshowonmouseevent="scroll"!=M.autohidemode,this.onmousedown=!1,this.onmouseup=!1,this.onmousemove=!1,this.onmousewheel=!1,this.onkeypress=!1,this.ongesturezoom=!1,this.onclick=!1,this.onscrollstart=!1,this.onscrollend=!1,this.onscrollcancel=!1,this.onzoomin=!1,this.onzoomout=!1,this.view=!1,this.page=!1,this.scroll={x:0,y:0},this.scrollratio={x:0,y:0},this.cursorheight=20,this.scrollvaluemax=0,"auto"==M.rtlmode){var C=this.win[0]==a?this.body:this.win,N=C.css("writing-mode")||C.css("-webkit-writing-mode")||C.css("-ms-writing-mode")||C.css("-moz-writing-mode");"horizontal-tb"==N||"lr-tb"==N||""===N?(this.isrtlmode="rtl"==C.css("direction"),this.isvertical=!1):(this.isrtlmode="vertical-rl"==N||"tb"==N||"tb-rl"==N||"rl-tb"==N,this.isvertical="vertical-rl"==N||"tb"==N||"tb-rl"==N)}else this.isrtlmode=!0===M.rtlmode,this.isvertical=!1;if(this.scrollrunning=!1,this.scrollmom=!1,this.observer=!1,this.observerremover=!1,this.observerbody=!1,!1!==M.scrollbarid)this.id=M.scrollbarid;else do{this.id="ascrail"+i++}while(l.getElementById(this.id));this.rail=!1,this.cursor=!1,this.cursorfreezed=!1,this.selectiondrag=!1,this.zoom=!1,this.zoomactive=!1,this.hasfocus=!1,this.hasmousefocus=!1,this.railslocked=!1,this.locked=!1,this.hidden=!1,this.cursoractive=!0,this.wheelprevented=!1,this.overflowx=M.overflowx,this.overflowy=M.overflowy,this.nativescrollingarea=!1,this.checkarea=0,this.events=[],this.saved={},this.delaylist={},this.synclist={},this.lastdeltax=0,this.lastdeltay=0,this.detected=w();var P=n.extend({},this.detected);this.canhwscroll=P.hastransform&&M.hwacceleration,this.ishwscroll=this.canhwscroll&&T.haswrapper,this.isrtlmode?this.isvertical?this.hasreversehr=!(P.iswebkit||P.isie||P.isie11):this.hasreversehr=!(P.iswebkit||P.isie&&!P.isie10&&!P.isie11):this.hasreversehr=!1,this.istouchcapable=!1,P.cantouch||!P.hasw3ctouch&&!P.hasmstouch?!P.cantouch||P.isios||P.isandroid||!P.iswebkit&&!P.ismozilla||(this.istouchcapable=!0):this.istouchcapable=!0,M.enablemouselockapi||(P.hasmousecapture=!1,P.haspointerlock=!1),this.debounced=function(e,o,t){T&&(T.delaylist[e]||!1||(T.delaylist[e]={h:u(function(){T.delaylist[e].fn.call(T),T.delaylist[e]=!1},t)},o.call(T)),T.delaylist[e].fn=o)},this.synched=function(e,o){T.synclist[e]?T.synclist[e]=o:(T.synclist[e]=o,u(function(){T&&(T.synclist[e]&&T.synclist[e].call(T),T.synclist[e]=null)}))},this.unsynched=function(e){T.synclist[e]&&(T.synclist[e]=!1)},this.css=function(e,o){for(var t in o)T.saved.css.push([e,t,e.css(t)]),e.css(t,o[t])},this.scrollTop=function(e){return void 0===e?T.getScrollTop():T.setScrollTop(e)},this.scrollLeft=function(e){return void 0===e?T.getScrollLeft():T.setScrollLeft(e)};var R=function(e,o,t,r,i,s,n){this.st=e,this.ed=o,this.spd=t,this.p1=r||0,this.p2=i||1,this.p3=s||0,this.p4=n||1,this.ts=f(),this.df=o-e};if(R.prototype={B2:function(e){return 3*(1-e)*(1-e)*e},B3:function(e){return 3*(1-e)*e*e},B4:function(e){return e*e*e},getPos:function(){return(f()-this.ts)/this.spd},getNow:function(){var e=(f()-this.ts)/this.spd,o=this.B2(e)+this.B3(e)+this.B4(e);return e>=1?this.ed:this.st+this.df*o|0},update:function(e,o){return this.st=this.getNow(),this.ed=e,this.spd=o,this.ts=f(),this.df=this.ed-this.st,this}},this.ishwscroll){this.doc.translate={x:0,y:0,tx:"0px",ty:"0px"},P.hastranslate3d&&P.isios&&this.doc.css("-webkit-backface-visibility","hidden"),this.getScrollTop=function(e){if(!e){var o=v();if(o)return 16==o.length?-o[13]:-o[5];if(T.timerscroll&&T.timerscroll.bz)return T.timerscroll.bz.getNow()}return T.doc.translate.y},this.getScrollLeft=function(e){if(!e){var o=v();if(o)return 16==o.length?-o[12]:-o[4];if(T.timerscroll&&T.timerscroll.bh)return T.timerscroll.bh.getNow()}return T.doc.translate.x},this.notifyScrollEvent=function(e){var o=l.createEvent("UIEvents");o.initUIEvent("scroll",!1,!1,a,1),o.niceevent=!0,e.dispatchEvent(o)};var _=this.isrtlmode?1:-1;P.hastranslate3d&&M.enabletranslate3d?(this.setScrollTop=function(e,o){T.doc.translate.y=e,T.doc.translate.ty=-1*e+"px",T.doc.css(P.trstyle,"translate3d("+T.doc.translate.tx+","+T.doc.translate.ty+",0)"),o||T.notifyScrollEvent(T.win[0])},this.setScrollLeft=function(e,o){T.doc.translate.x=e,T.doc.translate.tx=e*_+"px",T.doc.css(P.trstyle,"translate3d("+T.doc.translate.tx+","+T.doc.translate.ty+",0)"),o||T.notifyScrollEvent(T.win[0])}):(this.setScrollTop=function(e,o){T.doc.translate.y=e,T.doc.translate.ty=-1*e+"px",T.doc.css(P.trstyle,"translate("+T.doc.translate.tx+","+T.doc.translate.ty+")"),o||T.notifyScrollEvent(T.win[0])},this.setScrollLeft=function(e,o){T.doc.translate.x=e,T.doc.translate.tx=e*_+"px",T.doc.css(P.trstyle,"translate("+T.doc.translate.tx+","+T.doc.translate.ty+")"),o||T.notifyScrollEvent(T.win[0])})}else this.getScrollTop=function(){return T.docscroll.scrollTop()},this.setScrollTop=function(e){T.docscroll.scrollTop(e)},this.getScrollLeft=function(){return T.hasreversehr?T.detected.ismozilla?T.page.maxw-Math.abs(T.docscroll.scrollLeft()):T.page.maxw-T.docscroll.scrollLeft():T.docscroll.scrollLeft()},this.setScrollLeft=function(e){return setTimeout(function(){if(T)return T.hasreversehr&&(e=T.detected.ismozilla?-(T.page.maxw-e):T.page.maxw-e),T.docscroll.scrollLeft(e)},1)};this.getTarget=function(e){return!!e&&(e.target?e.target:!!e.srcElement&&e.srcElement)},this.hasParent=function(e,o){if(!e)return!1;for(var t=e.target||e.srcElement||e||!1;t&&t.id!=o;)t=t.parentNode||!1;return!1!==t};var I={thin:1,medium:3,thick:5};this.getDocumentScrollOffset=function(){return{top:a.pageYOffset||l.documentElement.scrollTop,left:a.pageXOffset||l.documentElement.scrollLeft}},this.getOffset=function(){if(T.isfixed){var e=T.win.offset(),o=T.getDocumentScrollOffset();return e.top-=o.top,e.left-=o.left,e}var t=T.win.offset();if(!T.viewport)return t;var r=T.viewport.offset();return{top:t.top-r.top,left:t.left-r.left}},this.updateScrollBar=function(e){var o,t;if(T.ishwscroll)T.rail.css({height:T.win.innerHeight()-(M.railpadding.top+M.railpadding.bottom)}),T.railh&&T.railh.css({width:T.win.innerWidth()-(M.railpadding.left+M.railpadding.right)});else{var r=T.getOffset();if(o={top:r.top,left:r.left-(M.railpadding.left+M.railpadding.right)},o.top+=x(T.win,"border-top-width",!0),o.left+=T.rail.align?T.win.outerWidth()-x(T.win,"border-right-width")-T.rail.width:x(T.win,"border-left-width"),(t=M.railoffset)&&(t.top&&(o.top+=t.top),t.left&&(o.left+=t.left)),T.railslocked||T.rail.css({top:o.top,left:o.left,height:(e?e.h:T.win.innerHeight())-(M.railpadding.top+M.railpadding.bottom)}),T.zoom&&T.zoom.css({top:o.top+1,left:1==T.rail.align?o.left-20:o.left+T.rail.width+4}),T.railh&&!T.railslocked){o={top:r.top,left:r.left},(t=M.railhoffset)&&(t.top&&(o.top+=t.top),t.left&&(o.left+=t.left));var i=T.railh.align?o.top+x(T.win,"border-top-width",!0)+T.win.innerHeight()-T.railh.height:o.top+x(T.win,"border-top-width",!0),s=o.left+x(T.win,"border-left-width");T.railh.css({top:i-(M.railpadding.top+M.railpadding.bottom),left:s,width:T.railh.width})}}},this.doRailClick=function(e,o,t){var r,i,s,n;T.railslocked||(T.cancelEvent(e),"pageY"in e||(e.pageX=e.clientX+l.documentElement.scrollLeft,e.pageY=e.clientY+l.documentElement.scrollTop),o?(r=t?T.doScrollLeft:T.doScrollTop,s=t?(e.pageX-T.railh.offset().left-T.cursorwidth/2)*T.scrollratio.x:(e.pageY-T.rail.offset().top-T.cursorheight/2)*T.scrollratio.y,T.unsynched("relativexy"),r(0|s)):(r=t?T.doScrollLeftBy:T.doScrollBy,s=t?T.scroll.x:T.scroll.y,n=t?e.pageX-T.railh.offset().left:e.pageY-T.rail.offset().top,i=t?T.view.w:T.view.h,r(s>=n?i:-i)))},T.newscrolly=T.newscrollx=0,T.hasanimationframe="requestAnimationFrame"in a,T.hascancelanimationframe="cancelAnimationFrame"in a,T.hasborderbox=!1,this.init=function(){if(T.saved.css=[],P.isoperamini)return!0;if(P.isandroid&&!("hidden"in l))return!0;M.emulatetouch=M.emulatetouch||M.touchbehavior,T.hasborderbox=a.getComputedStyle&&"border-box"===a.getComputedStyle(l.body)["box-sizing"];var e={"overflow-y":"hidden"};if((P.isie11||P.isie10)&&(e["-ms-overflow-style"]="none"),T.ishwscroll&&(this.doc.css(P.transitionstyle,P.prefixstyle+"transform 0ms ease-out"),P.transitionend&&T.bind(T.doc,P.transitionend,T.onScrollTransitionEnd,!1)),T.zindex="auto",T.ispage||"auto"!=M.zindex?T.zindex=M.zindex:T.zindex=b()||"auto",!T.ispage&&"auto"!=T.zindex&&T.zindex>s&&(s=T.zindex),T.isie&&0===T.zindex&&"auto"==M.zindex&&(T.zindex="auto"),!T.ispage||!P.isieold){var i=T.docscroll;T.ispage&&(i=T.haswrapper?T.win:T.doc),T.css(i,e),T.ispage&&(P.isie11||P.isie)&&T.css(n("html"),e),!P.isios||T.ispage||T.haswrapper||T.css(E,{"-webkit-overflow-scrolling":"touch"});var d=n(l.createElement("div"));d.css({position:"relative",top:0,float:"right",width:M.cursorwidth,height:0,"background-color":M.cursorcolor,border:M.cursorborder,"background-clip":"padding-box","-webkit-border-radius":M.cursorborderradius,"-moz-border-radius":M.cursorborderradius,"border-radius":M.cursorborderradius}),d.addClass("nicescroll-cursors"),T.cursor=d;var u=n(l.createElement("div"));u.attr("id",T.id),u.addClass("nicescroll-rails nicescroll-rails-vr");var h,p,f=["left","right","top","bottom"];for(var g in f)p=f[g],(h=M.railpadding[p]||0)&&u.css("padding-"+p,h+"px");u.append(d),u.width=Math.max(parseFloat(M.cursorwidth),d.outerWidth()),u.css({width:u.width+"px",zIndex:T.zindex,background:M.background,cursor:"default"}),u.visibility=!0,u.scrollable=!0,u.align="left"==M.railalign?0:1,T.rail=u,T.rail.drag=!1;var v=!1;!M.boxzoom||T.ispage||P.isieold||(v=l.createElement("div"),T.bind(v,"click",T.doZoom),T.bind(v,"mouseenter",function(){T.zoom.css("opacity",M.cursoropacitymax)}),T.bind(v,"mouseleave",function(){T.zoom.css("opacity",M.cursoropacitymin)}),T.zoom=n(v),T.zoom.css({cursor:"pointer",zIndex:T.zindex,backgroundImage:"url("+M.scriptpath+"zoomico.png)",height:18,width:18,backgroundPosition:"0 0"}),M.dblclickzoom&&T.bind(T.win,"dblclick",T.doZoom),P.cantouch&&M.gesturezoom&&(T.ongesturezoom=function(e){return e.scale>1.5&&T.doZoomIn(e),e.scale<.8&&T.doZoomOut(e),T.cancelEvent(e)},T.bind(T.win,"gestureend",T.ongesturezoom))),T.railh=!1;var w;if(M.horizrailenabled&&(T.css(i,{overflowX:"hidden"}),(d=n(l.createElement("div"))).css({position:"absolute",top:0,height:M.cursorwidth,width:0,backgroundColor:M.cursorcolor,border:M.cursorborder,backgroundClip:"padding-box","-webkit-border-radius":M.cursorborderradius,"-moz-border-radius":M.cursorborderradius,"border-radius":M.cursorborderradius}),P.isieold&&d.css("overflow","hidden"),d.addClass("nicescroll-cursors"),T.cursorh=d,(w=n(l.createElement("div"))).attr("id",T.id+"-hr"),w.addClass("nicescroll-rails nicescroll-rails-hr"),w.height=Math.max(parseFloat(M.cursorwidth),d.outerHeight()),w.css({height:w.height+"px",zIndex:T.zindex,background:M.background}),w.append(d),w.visibility=!0,w.scrollable=!0,w.align="top"==M.railvalign?0:1,T.railh=w,T.railh.drag=!1),T.ispage)u.css({position:"fixed",top:0,height:"100%"}),u.css(u.align?{right:0}:{left:0}),T.body.append(u),T.railh&&(w.css({position:"fixed",left:0,width:"100%"}),w.css(w.align?{bottom:0}:{top:0}),T.body.append(w));else{if(T.ishwscroll){"static"==T.win.css("position")&&T.css(T.win,{position:"relative"});var x="HTML"==T.win[0].nodeName?T.body:T.win;n(x).scrollTop(0).scrollLeft(0),T.zoom&&(T.zoom.css({position:"absolute",top:1,right:0,"margin-right":u.width+4}),x.append(T.zoom)),u.css({position:"absolute",top:0}),u.css(u.align?{right:0}:{left:0}),x.append(u),w&&(w.css({position:"absolute",left:0,bottom:0}),w.css(w.align?{bottom:0}:{top:0}),x.append(w))}else{T.isfixed="fixed"==T.win.css("position");var S=T.isfixed?"fixed":"absolute";T.isfixed||(T.viewport=T.getViewport(T.win[0])),T.viewport&&(T.body=T.viewport,/fixed|absolute/.test(T.viewport.css("position"))||T.css(T.viewport,{position:"relative"})),u.css({position:S}),T.zoom&&T.zoom.css({position:S}),T.updateScrollBar(),T.body.append(u),T.zoom&&T.body.append(T.zoom),T.railh&&(w.css({position:S}),T.body.append(w))}P.isios&&T.css(T.win,{"-webkit-tap-highlight-color":"rgba(0,0,0,0)","-webkit-touch-callout":"none"}),M.disableoutline&&(P.isie&&T.win.attr("hideFocus","true"),P.iswebkit&&T.win.css("outline","none"))}if(!1===M.autohidemode?(T.autohidedom=!1,T.rail.css({opacity:M.cursoropacitymax}),T.railh&&T.railh.css({opacity:M.cursoropacitymax})):!0===M.autohidemode||"leave"===M.autohidemode?(T.autohidedom=n().add(T.rail),P.isie8&&(T.autohidedom=T.autohidedom.add(T.cursor)),T.railh&&(T.autohidedom=T.autohidedom.add(T.railh)),T.railh&&P.isie8&&(T.autohidedom=T.autohidedom.add(T.cursorh))):"scroll"==M.autohidemode?(T.autohidedom=n().add(T.rail),T.railh&&(T.autohidedom=T.autohidedom.add(T.railh))):"cursor"==M.autohidemode?(T.autohidedom=n().add(T.cursor),T.railh&&(T.autohidedom=T.autohidedom.add(T.cursorh))):"hidden"==M.autohidemode&&(T.autohidedom=!1,T.hide(),T.railslocked=!1),P.cantouch||T.istouchcapable||M.emulatetouch||P.hasmstouch){T.scrollmom=new y(T);T.ontouchstart=function(e){if(T.locked)return!1;if(e.pointerType&&("mouse"===e.pointerType||e.pointerType===e.MSPOINTER_TYPE_MOUSE))return!1;if(T.hasmoving=!1,T.scrollmom.timer&&(T.triggerScrollEnd(),T.scrollmom.stop()),!T.railslocked){var o=T.getTarget(e);if(o&&/INPUT/i.test(o.nodeName)&&/range/i.test(o.type))return T.stopPropagation(e);var t="mousedown"===e.type;if(!("clientX"in e)&&"changedTouches"in e&&(e.clientX=e.changedTouches[0].clientX,e.clientY=e.changedTouches[0].clientY),T.forcescreen){var r=e;(e={original:e.original?e.original:e}).clientX=r.screenX,e.clientY=r.screenY}if(T.rail.drag={x:e.clientX,y:e.clientY,sx:T.scroll.x,sy:T.scroll.y,st:T.getScrollTop(),sl:T.getScrollLeft(),pt:2,dl:!1,tg:o},T.ispage||!M.directionlockdeadzone)T.rail.drag.dl="f";else{var i={w:c.width(),h:c.height()},s=T.getContentSize(),l=s.h-i.h,a=s.w-i.w;T.rail.scrollable&&!T.railh.scrollable?T.rail.drag.ck=l>0&&"v":!T.rail.scrollable&&T.railh.scrollable?T.rail.drag.ck=a>0&&"h":T.rail.drag.ck=!1}if(M.emulatetouch&&T.isiframe&&P.isie){var d=T.win.position();T.rail.drag.x+=d.left,T.rail.drag.y+=d.top}if(T.hasmoving=!1,T.lastmouseup=!1,T.scrollmom.reset(e.clientX,e.clientY),o&&t){if(!/INPUT|SELECT|BUTTON|TEXTAREA/i.test(o.nodeName))return P.hasmousecapture&&o.setCapture(),M.emulatetouch?(o.onclick&&!o._onclick&&(o._onclick=o.onclick,o.onclick=function(e){if(T.hasmoving)return!1;o._onclick.call(this,e)}),T.cancelEvent(e)):T.stopPropagation(e);/SUBMIT|CANCEL|BUTTON/i.test(n(o).attr("type"))&&(T.preventclick={tg:o,click:!1})}}},T.ontouchend=function(e){if(!T.rail.drag)return!0;if(2==T.rail.drag.pt){if(e.pointerType&&("mouse"===e.pointerType||e.pointerType===e.MSPOINTER_TYPE_MOUSE))return!1;T.rail.drag=!1;var o="mouseup"===e.type;if(T.hasmoving&&(T.scrollmom.doMomentum(),T.lastmouseup=!0,T.hideCursor(),P.hasmousecapture&&l.releaseCapture(),o))return T.cancelEvent(e)}else if(1==T.rail.drag.pt)return T.onmouseup(e)};var z=M.emulatetouch&&T.isiframe&&!P.hasmousecapture,k=.3*M.directionlockdeadzone|0;T.ontouchmove=function(e,o){if(!T.rail.drag)return!0;if(e.targetTouches&&M.preventmultitouchscrolling&&e.targetTouches.length>1)return!0;if(e.pointerType&&("mouse"===e.pointerType||e.pointerType===e.MSPOINTER_TYPE_MOUSE))return!0;if(2==T.rail.drag.pt){"changedTouches"in e&&(e.clientX=e.changedTouches[0].clientX,e.clientY=e.changedTouches[0].clientY);var t,r;if(r=t=0,z&&!o){var i=T.win.position();r=-i.left,t=-i.top}var s=e.clientY+t,n=s-T.rail.drag.y,a=e.clientX+r,c=a-T.rail.drag.x,d=T.rail.drag.st-n;if(T.ishwscroll&&M.bouncescroll)d<0?d=Math.round(d/2):d>T.page.maxh&&(d=T.page.maxh+Math.round((d-T.page.maxh)/2));else if(d<0?(d=0,s=0):d>T.page.maxh&&(d=T.page.maxh,s=0),0===s&&!T.hasmoving)return T.ispage||(T.rail.drag=!1),!0;var u=T.getScrollLeft();if(T.railh&&T.railh.scrollable&&(u=T.isrtlmode?c-T.rail.drag.sl:T.rail.drag.sl-c,T.ishwscroll&&M.bouncescroll?u<0?u=Math.round(u/2):u>T.page.maxw&&(u=T.page.maxw+Math.round((u-T.page.maxw)/2)):(u<0&&(u=0,a=0),u>T.page.maxw&&(u=T.page.maxw,a=0))),!T.hasmoving){if(T.rail.drag.y===e.clientY&&T.rail.drag.x===e.clientX)return T.cancelEvent(e);var h=Math.abs(n),p=Math.abs(c),m=M.directionlockdeadzone;if(T.rail.drag.ck?"v"==T.rail.drag.ck?p>m&&h<=k?T.rail.drag=!1:h>m&&(T.rail.drag.dl="v"):"h"==T.rail.drag.ck&&(h>m&&p<=k?T.rail.drag=!1:p>m&&(T.rail.drag.dl="h")):h>m&&p>m?T.rail.drag.dl="f":h>m?T.rail.drag.dl=p>k?"f":"v":p>m&&(T.rail.drag.dl=h>k?"f":"h"),!T.rail.drag.dl)return T.cancelEvent(e);T.triggerScrollStart(e.clientX,e.clientY,0,0,0),T.hasmoving=!0}return T.preventclick&&!T.preventclick.click&&(T.preventclick.click=T.preventclick.tg.onclick||!1,T.preventclick.tg.onclick=T.onpreventclick),T.rail.drag.dl&&("v"==T.rail.drag.dl?u=T.rail.drag.sl:"h"==T.rail.drag.dl&&(d=T.rail.drag.st)),T.synched("touchmove",function(){T.rail.drag&&2==T.rail.drag.pt&&(T.prepareTransition&&T.resetTransition(),T.rail.scrollable&&T.setScrollTop(d),T.scrollmom.update(a,s),T.railh&&T.railh.scrollable?(T.setScrollLeft(u),T.showCursor(d,u)):T.showCursor(d),P.isie10&&l.selection.clear())}),T.cancelEvent(e)}return 1==T.rail.drag.pt?T.onmousemove(e):void 0},T.ontouchstartCursor=function(e,o){if(!T.rail.drag||3==T.rail.drag.pt){if(T.locked)return T.cancelEvent(e);T.cancelScroll(),T.rail.drag={x:e.touches[0].clientX,y:e.touches[0].clientY,sx:T.scroll.x,sy:T.scroll.y,pt:3,hr:!!o};var t=T.getTarget(e);return!T.ispage&&P.hasmousecapture&&t.setCapture(),T.isiframe&&!P.hasmousecapture&&(T.saved.csspointerevents=T.doc.css("pointer-events"),T.css(T.doc,{"pointer-events":"none"})),T.cancelEvent(e)}},T.ontouchendCursor=function(e){if(T.rail.drag){if(P.hasmousecapture&&l.releaseCapture(),T.isiframe&&!P.hasmousecapture&&T.doc.css("pointer-events",T.saved.csspointerevents),3!=T.rail.drag.pt)return;return T.rail.drag=!1,T.cancelEvent(e)}},T.ontouchmoveCursor=function(e){if(T.rail.drag){if(3!=T.rail.drag.pt)return;if(T.cursorfreezed=!0,T.rail.drag.hr){T.scroll.x=T.rail.drag.sx+(e.touches[0].clientX-T.rail.drag.x),T.scroll.x<0&&(T.scroll.x=0);var o=T.scrollvaluemaxw;T.scroll.x>o&&(T.scroll.x=o)}else{T.scroll.y=T.rail.drag.sy+(e.touches[0].clientY-T.rail.drag.y),T.scroll.y<0&&(T.scroll.y=0);var t=T.scrollvaluemax;T.scroll.y>t&&(T.scroll.y=t)}return T.synched("touchmove",function(){T.rail.drag&&3==T.rail.drag.pt&&(T.showCursor(),T.rail.drag.hr?T.doScrollLeft(Math.round(T.scroll.x*T.scrollratio.x),M.cursordragspeed):T.doScrollTop(Math.round(T.scroll.y*T.scrollratio.y),M.cursordragspeed))}),T.cancelEvent(e)}}}if(T.onmousedown=function(e,o){if(!T.rail.drag||1==T.rail.drag.pt){if(T.railslocked)return T.cancelEvent(e);T.cancelScroll(),T.rail.drag={x:e.clientX,y:e.clientY,sx:T.scroll.x,sy:T.scroll.y,pt:1,hr:o||!1};var t=T.getTarget(e);return P.hasmousecapture&&t.setCapture(),T.isiframe&&!P.hasmousecapture&&(T.saved.csspointerevents=T.doc.css("pointer-events"),T.css(T.doc,{"pointer-events":"none"})),T.hasmoving=!1,T.cancelEvent(e)}},T.onmouseup=function(e){if(T.rail.drag)return 1!=T.rail.drag.pt||(P.hasmousecapture&&l.releaseCapture(),T.isiframe&&!P.hasmousecapture&&T.doc.css("pointer-events",T.saved.csspointerevents),T.rail.drag=!1,T.cursorfreezed=!1,T.hasmoving&&T.triggerScrollEnd(),T.cancelEvent(e))},T.onmousemove=function(e){if(T.rail.drag){if(1!==T.rail.drag.pt)return;if(P.ischrome&&0===e.which)return T.onmouseup(e);if(T.cursorfreezed=!0,T.hasmoving||T.triggerScrollStart(e.clientX,e.clientY,0,0,0),T.hasmoving=!0,T.rail.drag.hr){T.scroll.x=T.rail.drag.sx+(e.clientX-T.rail.drag.x),T.scroll.x<0&&(T.scroll.x=0);var o=T.scrollvaluemaxw;T.scroll.x>o&&(T.scroll.x=o)}else{T.scroll.y=T.rail.drag.sy+(e.clientY-T.rail.drag.y),T.scroll.y<0&&(T.scroll.y=0);var t=T.scrollvaluemax;T.scroll.y>t&&(T.scroll.y=t)}return T.synched("mousemove",function(){T.cursorfreezed&&(T.showCursor(),T.rail.drag.hr?T.scrollLeft(Math.round(T.scroll.x*T.scrollratio.x)):T.scrollTop(Math.round(T.scroll.y*T.scrollratio.y)))}),T.cancelEvent(e)}T.checkarea=0},P.cantouch||M.emulatetouch)T.onpreventclick=function(e){if(T.preventclick)return T.preventclick.tg.onclick=T.preventclick.click,T.preventclick=!1,T.cancelEvent(e)},T.onclick=!P.isios&&function(e){return!T.lastmouseup||(T.lastmouseup=!1,T.cancelEvent(e))},M.grabcursorenabled&&P.cursorgrabvalue&&(T.css(T.ispage?T.doc:T.win,{cursor:P.cursorgrabvalue}),T.css(T.rail,{cursor:P.cursorgrabvalue}));else{var L=function(e){if(T.selectiondrag){if(e){var o=T.win.outerHeight(),t=e.pageY-T.selectiondrag.top;t>0&&t<o&&(t=0),t>=o&&(t-=o),T.selectiondrag.df=t}if(0!==T.selectiondrag.df){var r=-2*T.selectiondrag.df/6|0;T.doScrollBy(r),T.debounced("doselectionscroll",function(){L()},50)}}};T.hasTextSelected="getSelection"in l?function(){return l.getSelection().rangeCount>0}:"selection"in l?function(){return"None"!=l.selection.type}:function(){return!1},T.onselectionstart=function(e){T.ispage||(T.selectiondrag=T.win.offset())},T.onselectionend=function(e){T.selectiondrag=!1},T.onselectiondrag=function(e){T.selectiondrag&&T.hasTextSelected()&&T.debounced("selectionscroll",function(){L(e)},250)}}if(P.hasw3ctouch?(T.css(T.ispage?n("html"):T.win,{"touch-action":"none"}),T.css(T.rail,{"touch-action":"none"}),T.css(T.cursor,{"touch-action":"none"}),T.bind(T.win,"pointerdown",T.ontouchstart),T.bind(l,"pointerup",T.ontouchend),T.delegate(l,"pointermove",T.ontouchmove)):P.hasmstouch?(T.css(T.ispage?n("html"):T.win,{"-ms-touch-action":"none"}),T.css(T.rail,{"-ms-touch-action":"none"}),T.css(T.cursor,{"-ms-touch-action":"none"}),T.bind(T.win,"MSPointerDown",T.ontouchstart),T.bind(l,"MSPointerUp",T.ontouchend),T.delegate(l,"MSPointerMove",T.ontouchmove),T.bind(T.cursor,"MSGestureHold",function(e){e.preventDefault()}),T.bind(T.cursor,"contextmenu",function(e){e.preventDefault()})):P.cantouch&&(T.bind(T.win,"touchstart",T.ontouchstart,!1,!0),T.bind(l,"touchend",T.ontouchend,!1,!0),T.bind(l,"touchcancel",T.ontouchend,!1,!0),T.delegate(l,"touchmove",T.ontouchmove,!1,!0)),M.emulatetouch&&(T.bind(T.win,"mousedown",T.ontouchstart,!1,!0),T.bind(l,"mouseup",T.ontouchend,!1,!0),T.bind(l,"mousemove",T.ontouchmove,!1,!0)),(M.cursordragontouch||!P.cantouch&&!M.emulatetouch)&&(T.rail.css({cursor:"default"}),T.railh&&T.railh.css({cursor:"default"}),T.jqbind(T.rail,"mouseenter",function(){if(!T.ispage&&!T.win.is(":visible"))return!1;T.canshowonmouseevent&&T.showCursor(),T.rail.active=!0}),T.jqbind(T.rail,"mouseleave",function(){T.rail.active=!1,T.rail.drag||T.hideCursor()}),M.sensitiverail&&(T.bind(T.rail,"click",function(e){T.doRailClick(e,!1,!1)}),T.bind(T.rail,"dblclick",function(e){T.doRailClick(e,!0,!1)}),T.bind(T.cursor,"click",function(e){T.cancelEvent(e)}),T.bind(T.cursor,"dblclick",function(e){T.cancelEvent(e)})),T.railh&&(T.jqbind(T.railh,"mouseenter",function(){if(!T.ispage&&!T.win.is(":visible"))return!1;T.canshowonmouseevent&&T.showCursor(),T.rail.active=!0}),T.jqbind(T.railh,"mouseleave",function(){T.rail.active=!1,T.rail.drag||T.hideCursor()}),M.sensitiverail&&(T.bind(T.railh,"click",function(e){T.doRailClick(e,!1,!0)}),T.bind(T.railh,"dblclick",function(e){T.doRailClick(e,!0,!0)}),T.bind(T.cursorh,"click",function(e){T.cancelEvent(e)}),T.bind(T.cursorh,"dblclick",function(e){T.cancelEvent(e)})))),M.cursordragontouch&&(this.istouchcapable||P.cantouch)&&(T.bind(T.cursor,"touchstart",T.ontouchstartCursor),T.bind(T.cursor,"touchmove",T.ontouchmoveCursor),T.bind(T.cursor,"touchend",T.ontouchendCursor),T.cursorh&&T.bind(T.cursorh,"touchstart",function(e){T.ontouchstartCursor(e,!0)}),T.cursorh&&T.bind(T.cursorh,"touchmove",T.ontouchmoveCursor),T.cursorh&&T.bind(T.cursorh,"touchend",T.ontouchendCursor)),M.emulatetouch||P.isandroid||P.isios?(T.bind(P.hasmousecapture?T.win:l,"mouseup",T.ontouchend),T.onclick&&T.bind(l,"click",T.onclick),M.cursordragontouch?(T.bind(T.cursor,"mousedown",T.onmousedown),T.bind(T.cursor,"mouseup",T.onmouseup),T.cursorh&&T.bind(T.cursorh,"mousedown",function(e){T.onmousedown(e,!0)}),T.cursorh&&T.bind(T.cursorh,"mouseup",T.onmouseup)):(T.bind(T.rail,"mousedown",function(e){e.preventDefault()}),T.railh&&T.bind(T.railh,"mousedown",function(e){e.preventDefault()}))):(T.bind(P.hasmousecapture?T.win:l,"mouseup",T.onmouseup),T.bind(l,"mousemove",T.onmousemove),T.onclick&&T.bind(l,"click",T.onclick),T.bind(T.cursor,"mousedown",T.onmousedown),T.bind(T.cursor,"mouseup",T.onmouseup),T.railh&&(T.bind(T.cursorh,"mousedown",function(e){T.onmousedown(e,!0)}),T.bind(T.cursorh,"mouseup",T.onmouseup)),!T.ispage&&M.enablescrollonselection&&(T.bind(T.win[0],"mousedown",T.onselectionstart),T.bind(l,"mouseup",T.onselectionend),T.bind(T.cursor,"mouseup",T.onselectionend),T.cursorh&&T.bind(T.cursorh,"mouseup",T.onselectionend),T.bind(l,"mousemove",T.onselectiondrag)),T.zoom&&(T.jqbind(T.zoom,"mouseenter",function(){T.canshowonmouseevent&&T.showCursor(),T.rail.active=!0}),T.jqbind(T.zoom,"mouseleave",function(){T.rail.active=!1,T.rail.drag||T.hideCursor()}))),M.enablemousewheel&&(T.isiframe||T.mousewheel(P.isie&&T.ispage?l:T.win,T.onmousewheel),T.mousewheel(T.rail,T.onmousewheel),T.railh&&T.mousewheel(T.railh,T.onmousewheelhr)),T.ispage||P.cantouch||/HTML|^BODY/.test(T.win[0].nodeName)||(T.win.attr("tabindex")||T.win.attr({tabindex:++r}),T.bind(T.win,"focus",function(e){o=T.getTarget(e).id||T.getTarget(e)||!1,T.hasfocus=!0,T.canshowonmouseevent&&T.noticeCursor()}),T.bind(T.win,"blur",function(e){o=!1,T.hasfocus=!1}),T.bind(T.win,"mouseenter",function(e){t=T.getTarget(e).id||T.getTarget(e)||!1,T.hasmousefocus=!0,T.canshowonmouseevent&&T.noticeCursor()}),T.bind(T.win,"mouseleave",function(e){t=!1,T.hasmousefocus=!1,T.rail.drag||T.hideCursor()})),T.onkeypress=function(e){if(T.railslocked&&0===T.page.maxh)return!0;e=e||a.event;var r=T.getTarget(e);if(r&&/INPUT|TEXTAREA|SELECT|OPTION/.test(r.nodeName)&&(!(r.getAttribute("type")||r.type||!1)||!/submit|button|cancel/i.tp))return!0;if(n(r).attr("contenteditable"))return!0;if(T.hasfocus||T.hasmousefocus&&!o||T.ispage&&!o&&!t){var i=e.keyCode;if(T.railslocked&&27!=i)return T.cancelEvent(e);var s=e.ctrlKey||!1,l=e.shiftKey||!1,c=!1;switch(i){case 38:case 63233:T.doScrollBy(72),c=!0;break;case 40:case 63235:T.doScrollBy(-72),c=!0;break;case 37:case 63232:T.railh&&(s?T.doScrollLeft(0):T.doScrollLeftBy(72),c=!0);break;case 39:case 63234:T.railh&&(s?T.doScrollLeft(T.page.maxw):T.doScrollLeftBy(-72),c=!0);break;case 33:case 63276:T.doScrollBy(T.view.h),c=!0;break;case 34:case 63277:T.doScrollBy(-T.view.h),c=!0;break;case 36:case 63273:T.railh&&s?T.doScrollPos(0,0):T.doScrollTo(0),c=!0;break;case 35:case 63275:T.railh&&s?T.doScrollPos(T.page.maxw,T.page.maxh):T.doScrollTo(T.page.maxh),c=!0;break;case 32:M.spacebarenabled&&(l?T.doScrollBy(T.view.h):T.doScrollBy(-T.view.h),c=!0);break;case 27:T.zoomactive&&(T.doZoom(),c=!0)}if(c)return T.cancelEvent(e)}},M.enablekeyboard&&T.bind(l,P.isopera&&!P.isopera12?"keypress":"keydown",T.onkeypress),T.bind(l,"keydown",function(e){(e.ctrlKey||!1)&&(T.wheelprevented=!0)}),T.bind(l,"keyup",function(e){e.ctrlKey||!1||(T.wheelprevented=!1)}),T.bind(a,"blur",function(e){T.wheelprevented=!1}),T.bind(a,"resize",T.onscreenresize),T.bind(a,"orientationchange",T.onscreenresize),T.bind(a,"load",T.lazyResize),P.ischrome&&!T.ispage&&!T.haswrapper){var C=T.win.attr("style"),N=parseFloat(T.win.css("width"))+1;T.win.css("width",N),T.synched("chromefix",function(){T.win.attr("style",C)})}if(T.onAttributeChange=function(e){T.lazyResize(T.isieold?250:30)},M.enableobserver&&(T.isie11||!1===m||(T.observerbody=new m(function(e){if(e.forEach(function(e){if("attributes"==e.type)return E.hasClass("modal-open")&&E.hasClass("modal-dialog")&&!n.contains(n(".modal-dialog")[0],T.doc[0])?T.hide():T.show()}),T.me.clientWidth!=T.page.width||T.me.clientHeight!=T.page.height)return T.lazyResize(30)}),T.observerbody.observe(l.body,{childList:!0,subtree:!0,characterData:!1,attributes:!0,attributeFilter:["class"]})),!T.ispage&&!T.haswrapper)){var R=T.win[0];!1!==m?(T.observer=new m(function(e){e.forEach(T.onAttributeChange)}),T.observer.observe(R,{childList:!0,characterData:!1,attributes:!0,subtree:!1}),T.observerremover=new m(function(e){e.forEach(function(e){if(e.removedNodes.length>0)for(var o in e.removedNodes)if(T&&e.removedNodes[o]===R)return T.remove()})}),T.observerremover.observe(R.parentNode,{childList:!0,characterData:!1,attributes:!1,subtree:!1})):(T.bind(R,P.isie&&!P.isie9?"propertychange":"DOMAttrModified",T.onAttributeChange),P.isie9&&R.attachEvent("onpropertychange",T.onAttributeChange),T.bind(R,"DOMNodeRemoved",function(e){e.target===R&&T.remove()}))}!T.ispage&&M.boxzoom&&T.bind(a,"resize",T.resizeZoom),T.istextarea&&(T.bind(T.win,"keydown",T.lazyResize),T.bind(T.win,"mouseup",T.lazyResize)),T.lazyResize(30)}if("IFRAME"==this.doc[0].nodeName){var _=function(){T.iframexd=!1;var o;try{(o="contentDocument"in this?this.contentDocument:this.contentWindow._doc).domain}catch(e){T.iframexd=!0,o=!1}if(T.iframexd)return"console"in a&&console.log("NiceScroll error: policy restriced iframe"),!0;if(T.forcescreen=!0,T.isiframe&&(T.iframe={doc:n(o),html:T.doc.contents().find("html")[0],body:T.doc.contents().find("body")[0]},T.getContentSize=function(){return{w:Math.max(T.iframe.html.scrollWidth,T.iframe.body.scrollWidth),h:Math.max(T.iframe.html.scrollHeight,T.iframe.body.scrollHeight)}},T.docscroll=n(T.iframe.body)),!P.isios&&M.iframeautoresize&&!T.isiframe){T.win.scrollTop(0),T.doc.height("");var t=Math.max(o.getElementsByTagName("html")[0].scrollHeight,o.body.scrollHeight);T.doc.height(t)}T.lazyResize(30),T.css(n(T.iframe.body),e),P.isios&&T.haswrapper&&T.css(n(o.body),{"-webkit-transform":"translate3d(0,0,0)"}),"contentWindow"in this?T.bind(this.contentWindow,"scroll",T.onscroll):T.bind(o,"scroll",T.onscroll),M.enablemousewheel&&T.mousewheel(o,T.onmousewheel),M.enablekeyboard&&T.bind(o,P.isopera?"keypress":"keydown",T.onkeypress),P.cantouch?(T.bind(o,"touchstart",T.ontouchstart),T.bind(o,"touchmove",T.ontouchmove)):M.emulatetouch&&(T.bind(o,"mousedown",T.ontouchstart),T.bind(o,"mousemove",function(e){return T.ontouchmove(e,!0)}),M.grabcursorenabled&&P.cursorgrabvalue&&T.css(n(o.body),{cursor:P.cursorgrabvalue})),T.bind(o,"mouseup",T.ontouchend),T.zoom&&(M.dblclickzoom&&T.bind(o,"dblclick",T.doZoom),T.ongesturezoom&&T.bind(o,"gestureend",T.ongesturezoom))};this.doc[0].readyState&&"complete"===this.doc[0].readyState&&setTimeout(function(){_.call(T.doc[0],!1)},500),T.bind(this.doc,"load",_)}},this.showCursor=function(e,o){if(T.cursortimeout&&(clearTimeout(T.cursortimeout),T.cursortimeout=0),T.rail){if(T.autohidedom&&(T.autohidedom.stop().css({opacity:M.cursoropacitymax}),T.cursoractive=!0),T.rail.drag&&1==T.rail.drag.pt||(void 0!==e&&!1!==e&&(T.scroll.y=e/T.scrollratio.y|0),void 0!==o&&(T.scroll.x=o/T.scrollratio.x|0)),T.cursor.css({height:T.cursorheight,top:T.scroll.y}),T.cursorh){var t=T.hasreversehr?T.scrollvaluemaxw-T.scroll.x:T.scroll.x;T.cursorh.css({width:T.cursorwidth,left:!T.rail.align&&T.rail.visibility?t+T.rail.width:t}),T.cursoractive=!0}T.zoom&&T.zoom.stop().css({opacity:M.cursoropacitymax})}},this.hideCursor=function(e){T.cursortimeout||T.rail&&T.autohidedom&&(T.hasmousefocus&&"leave"===M.autohidemode||(T.cursortimeout=setTimeout(function(){T.rail.active&&T.showonmouseevent||(T.autohidedom.stop().animate({opacity:M.cursoropacitymin}),T.zoom&&T.zoom.stop().animate({opacity:M.cursoropacitymin}),T.cursoractive=!1),T.cursortimeout=0},e||M.hidecursordelay)))},this.noticeCursor=function(e,o,t){T.showCursor(o,t),T.rail.active||T.hideCursor(e)},this.getContentSize=T.ispage?function(){return{w:Math.max(l.body.scrollWidth,l.documentElement.scrollWidth),h:Math.max(l.body.scrollHeight,l.documentElement.scrollHeight)}}:T.haswrapper?function(){return{w:T.doc[0].offsetWidth,h:T.doc[0].offsetHeight}}:function(){return{w:T.docscroll[0].scrollWidth,h:T.docscroll[0].scrollHeight}},this.onResize=function(e,o){if(!T||!T.win)return!1;var t=T.page.maxh,r=T.page.maxw,i=T.view.h,s=T.view.w;if(T.view={w:T.ispage?T.win.width():T.win[0].clientWidth,h:T.ispage?T.win.height():T.win[0].clientHeight},T.page=o||T.getContentSize(),T.page.maxh=Math.max(0,T.page.h-T.view.h),T.page.maxw=Math.max(0,T.page.w-T.view.w),T.page.maxh==t&&T.page.maxw==r&&T.view.w==s&&T.view.h==i){if(T.ispage)return T;var n=T.win.offset();if(T.lastposition){var l=T.lastposition;if(l.top==n.top&&l.left==n.left)return T}T.lastposition=n}return 0===T.page.maxh?(T.hideRail(),T.scrollvaluemax=0,T.scroll.y=0,T.scrollratio.y=0,T.cursorheight=0,T.setScrollTop(0),T.rail&&(T.rail.scrollable=!1)):(T.page.maxh-=M.railpadding.top+M.railpadding.bottom,T.rail.scrollable=!0),0===T.page.maxw?(T.hideRailHr(),T.scrollvaluemaxw=0,T.scroll.x=0,T.scrollratio.x=0,T.cursorwidth=0,T.setScrollLeft(0),T.railh&&(T.railh.scrollable=!1)):(T.page.maxw-=M.railpadding.left+M.railpadding.right,T.railh&&(T.railh.scrollable=M.horizrailenabled)),T.railslocked=T.locked||0===T.page.maxh&&0===T.page.maxw,T.railslocked?(T.ispage||T.updateScrollBar(T.view),!1):(T.hidden||(T.rail.visibility||T.showRail(),T.railh&&!T.railh.visibility&&T.showRailHr()),T.istextarea&&T.win.css("resize")&&"none"!=T.win.css("resize")&&(T.view.h-=20),T.cursorheight=Math.min(T.view.h,Math.round(T.view.h*(T.view.h/T.page.h))),T.cursorheight=M.cursorfixedheight?M.cursorfixedheight:Math.max(M.cursorminheight,T.cursorheight),T.cursorwidth=Math.min(T.view.w,Math.round(T.view.w*(T.view.w/T.page.w))),T.cursorwidth=M.cursorfixedheight?M.cursorfixedheight:Math.max(M.cursorminheight,T.cursorwidth),T.scrollvaluemax=T.view.h-T.cursorheight-(M.railpadding.top+M.railpadding.bottom),T.hasborderbox||(T.scrollvaluemax-=T.cursor[0].offsetHeight-T.cursor[0].clientHeight),T.railh&&(T.railh.width=T.page.maxh>0?T.view.w-T.rail.width:T.view.w,T.scrollvaluemaxw=T.railh.width-T.cursorwidth-(M.railpadding.left+M.railpadding.right)),T.ispage||T.updateScrollBar(T.view),T.scrollratio={x:T.page.maxw/T.scrollvaluemaxw,y:T.page.maxh/T.scrollvaluemax},T.getScrollTop()>T.page.maxh?T.doScrollTop(T.page.maxh):(T.scroll.y=T.getScrollTop()/T.scrollratio.y|0,T.scroll.x=T.getScrollLeft()/T.scrollratio.x|0,T.cursoractive&&T.noticeCursor()),T.scroll.y&&0===T.getScrollTop()&&T.doScrollTo(T.scroll.y*T.scrollratio.y|0),T)},this.resize=T.onResize;var O=0;this.onscreenresize=function(e){clearTimeout(O);var o=!T.ispage&&!T.haswrapper;o&&T.hideRails(),O=setTimeout(function(){T&&(o&&T.showRails(),T.resize()),O=0},120)},this.lazyResize=function(e){return clearTimeout(O),e=isNaN(e)?240:e,O=setTimeout(function(){T&&T.resize(),O=0},e),T},this.jqbind=function(e,o,t){T.events.push({e:e,n:o,f:t,q:!0}),n(e).on(o,t)},this.mousewheel=function(e,o,t){var r="jquery"in e?e[0]:e;if("onwheel"in l.createElement("div"))T._bind(r,"wheel",o,t||!1);else{var i=void 0!==l.onmousewheel?"mousewheel":"DOMMouseScroll";S(r,i,o,t||!1),"DOMMouseScroll"==i&&S(r,"MozMousePixelScroll",o,t||!1)}};var Y=!1;if(P.haseventlistener){try{var H=Object.defineProperty({},"passive",{get:function(){Y=!0}});a.addEventListener("test",null,H)}catch(e){}this.stopPropagation=function(e){return!!e&&((e=e.original?e.original:e).stopPropagation(),!1)},this.cancelEvent=function(e){return e.cancelable&&e.preventDefault(),e.stopImmediatePropagation(),e.preventManipulation&&e.preventManipulation(),!1}}else Event.prototype.preventDefault=function(){this.returnValue=!1},Event.prototype.stopPropagation=function(){this.cancelBubble=!0},a.constructor.prototype.addEventListener=l.constructor.prototype.addEventListener=Element.prototype.addEventListener=function(e,o,t){this.attachEvent("on"+e,o)},a.constructor.prototype.removeEventListener=l.constructor.prototype.removeEventListener=Element.prototype.removeEventListener=function(e,o,t){this.detachEvent("on"+e,o)},this.cancelEvent=function(e){return(e=e||a.event)&&(e.cancelBubble=!0,e.cancel=!0,e.returnValue=!1),!1},this.stopPropagation=function(e){return(e=e||a.event)&&(e.cancelBubble=!0),!1};this.delegate=function(e,o,t,r,i){var s=d[o]||!1;s||(s={a:[],l:[],f:function(e){for(var o=s.l,t=!1,r=o.length-1;r>=0;r--)if(!1===(t=o[r].call(e.target,e)))return!1;return t}},T.bind(e,o,s.f,r,i),d[o]=s),T.ispage?(s.a=[T.id].concat(s.a),s.l=[t].concat(s.l)):(s.a.push(T.id),s.l.push(t))},this.undelegate=function(e,o,t,r,i){var s=d[o]||!1;if(s&&s.l)for(var n=0,l=s.l.length;n<l;n++)s.a[n]===T.id&&(s.a.splice(n),s.l.splice(n),0===s.a.length&&(T._unbind(e,o,s.l.f),d[o]=null))},this.bind=function(e,o,t,r,i){var s="jquery"in e?e[0]:e;T._bind(s,o,t,r||!1,i||!1)},this._bind=function(e,o,t,r,i){T.events.push({e:e,n:o,f:t,b:r,q:!1}),Y&&i?e.addEventListener(o,t,{passive:!1,capture:r}):e.addEventListener(o,t,r||!1)},this._unbind=function(e,o,t,r){d[o]?T.undelegate(e,o,t,r):e.removeEventListener(o,t,r)},this.unbindAll=function(){for(var e=0;e<T.events.length;e++){var o=T.events[e];o.q?o.e.unbind(o.n,o.f):T._unbind(o.e,o.n,o.f,o.b)}},this.showRails=function(){return T.showRail().showRailHr()},this.showRail=function(){return 0===T.page.maxh||!T.ispage&&"none"==T.win.css("display")||(T.rail.visibility=!0,T.rail.css("display","block")),T},this.showRailHr=function(){return T.railh&&(0===T.page.maxw||!T.ispage&&"none"==T.win.css("display")||(T.railh.visibility=!0,T.railh.css("display","block"))),T},this.hideRails=function(){return T.hideRail().hideRailHr()},this.hideRail=function(){return T.rail.visibility=!1,T.rail.css("display","none"),T},this.hideRailHr=function(){return T.railh&&(T.railh.visibility=!1,T.railh.css("display","none")),T},this.show=function(){return T.hidden=!1,T.railslocked=!1,T.showRails()},this.hide=function(){return T.hidden=!0,T.railslocked=!0,T.hideRails()},this.toggle=function(){return T.hidden?T.show():T.hide()},this.remove=function(){T.stop(),T.cursortimeout&&clearTimeout(T.cursortimeout);for(var e in T.delaylist)T.delaylist[e]&&h(T.delaylist[e].h);T.doZoomOut(),T.unbindAll(),P.isie9&&T.win[0].detachEvent("onpropertychange",T.onAttributeChange),!1!==T.observer&&T.observer.disconnect(),!1!==T.observerremover&&T.observerremover.disconnect(),!1!==T.observerbody&&T.observerbody.disconnect(),T.events=null,T.cursor&&T.cursor.remove(),T.cursorh&&T.cursorh.remove(),T.rail&&T.rail.remove(),T.railh&&T.railh.remove(),T.zoom&&T.zoom.remove();for(var o=0;o<T.saved.css.length;o++){var t=T.saved.css[o];t[0].css(t[1],void 0===t[2]?"":t[2])}T.saved=!1,T.me.data("__nicescroll","");var r=n.nicescroll;r.each(function(e){if(this&&this.id===T.id){delete r[e];for(var o=++e;o<r.length;o++,e++)r[e]=r[o];--r.length&&delete r[r.length]}});for(var i in T)T[i]=null,delete T[i];T=null},this.scrollstart=function(e){return this.onscrollstart=e,T},this.scrollend=function(e){return this.onscrollend=e,T},this.scrollcancel=function(e){return this.onscrollcancel=e,T},this.zoomin=function(e){return this.onzoomin=e,T},this.zoomout=function(e){return this.onzoomout=e,T},this.isScrollable=function(e){var o=e.target?e.target:e;if("OPTION"==o.nodeName)return!0;for(;o&&1==o.nodeType&&o!==this.me[0]&&!/^BODY|HTML/.test(o.nodeName);){var t=n(o),r=t.css("overflowY")||t.css("overflowX")||t.css("overflow")||"";if(/scroll|auto/.test(r))return o.clientHeight!=o.scrollHeight;o=!!o.parentNode&&o.parentNode}return!1},this.getViewport=function(e){for(var o=!(!e||!e.parentNode)&&e.parentNode;o&&1==o.nodeType&&!/^BODY|HTML/.test(o.nodeName);){var t=n(o);if(/fixed|absolute/.test(t.css("position")))return t;var r=t.css("overflowY")||t.css("overflowX")||t.css("overflow")||"";if(/scroll|auto/.test(r)&&o.clientHeight!=o.scrollHeight)return t;if(t.getNiceScroll().length>0)return t;o=!!o.parentNode&&o.parentNode}return!1},this.triggerScrollStart=function(e,o,t,r,i){if(T.onscrollstart){var s={type:"scrollstart",current:{x:e,y:o},request:{x:t,y:r},end:{x:T.newscrollx,y:T.newscrolly},speed:i};T.onscrollstart.call(T,s)}},this.triggerScrollEnd=function(){if(T.onscrollend){var e=T.getScrollLeft(),o=T.getScrollTop(),t={type:"scrollend",current:{x:e,y:o},end:{x:e,y:o}};T.onscrollend.call(T,t)}};var B=0,X=0,D=0,A=1,q=!1;if(this.onmousewheel=function(e){if(T.wheelprevented||T.locked)return!1;if(T.railslocked)return T.debounced("checkunlock",T.resize,250),!1;if(T.rail.drag)return T.cancelEvent(e);if("auto"===M.oneaxismousemode&&0!==e.deltaX&&(M.oneaxismousemode=!1),M.oneaxismousemode&&0===e.deltaX&&!T.rail.scrollable)return!T.railh||!T.railh.scrollable||T.onmousewheelhr(e);var o=f(),t=!1;if(M.preservenativescrolling&&T.checkarea+600<o&&(T.nativescrollingarea=T.isScrollable(e),t=!0),T.checkarea=o,T.nativescrollingarea)return!0;var r=k(e,!1,t);return r&&(T.checkarea=0),r},this.onmousewheelhr=function(e){if(!T.wheelprevented){if(T.railslocked||!T.railh.scrollable)return!0;if(T.rail.drag)return T.cancelEvent(e);var o=f(),t=!1;return M.preservenativescrolling&&T.checkarea+600<o&&(T.nativescrollingarea=T.isScrollable(e),t=!0),T.checkarea=o,!!T.nativescrollingarea||(T.railslocked?T.cancelEvent(e):k(e,!0,t))}},this.stop=function(){return T.cancelScroll(),T.scrollmon&&T.scrollmon.stop(),T.cursorfreezed=!1,T.scroll.y=Math.round(T.getScrollTop()*(1/T.scrollratio.y)),T.noticeCursor(),T},this.getTransitionSpeed=function(e){return 80+e/72*M.scrollspeed|0},M.smoothscroll)if(T.ishwscroll&&P.hastransition&&M.usetransition&&M.smoothscroll){var j="";this.resetTransition=function(){j="",T.doc.css(P.prefixstyle+"transition-duration","0ms")},this.prepareTransition=function(e,o){var t=o?e:T.getTransitionSpeed(e),r=t+"ms";return j!==r&&(j=r,T.doc.css(P.prefixstyle+"transition-duration",r)),t},this.doScrollLeft=function(e,o){var t=T.scrollrunning?T.newscrolly:T.getScrollTop();T.doScrollPos(e,t,o)},this.doScrollTop=function(e,o){var t=T.scrollrunning?T.newscrollx:T.getScrollLeft();T.doScrollPos(t,e,o)},this.cursorupdate={running:!1,start:function(){var e=this;if(!e.running){e.running=!0;var o=function(){e.running&&u(o),T.showCursor(T.getScrollTop(),T.getScrollLeft()),T.notifyScrollEvent(T.win[0])};u(o)}},stop:function(){this.running=!1}},this.doScrollPos=function(e,o,t){var r=T.getScrollTop(),i=T.getScrollLeft();if(((T.newscrolly-r)*(o-r)<0||(T.newscrollx-i)*(e-i)<0)&&T.cancelScroll(),M.bouncescroll?(o<0?o=o/2|0:o>T.page.maxh&&(o=T.page.maxh+(o-T.page.maxh)/2|0),e<0?e=e/2|0:e>T.page.maxw&&(e=T.page.maxw+(e-T.page.maxw)/2|0)):(o<0?o=0:o>T.page.maxh&&(o=T.page.maxh),e<0?e=0:e>T.page.maxw&&(e=T.page.maxw)),T.scrollrunning&&e==T.newscrollx&&o==T.newscrolly)return!1;T.newscrolly=o,T.newscrollx=e;var s=T.getScrollTop(),n=T.getScrollLeft(),l={};l.x=e-n,l.y=o-s;var a=0|Math.sqrt(l.x*l.x+l.y*l.y),c=T.prepareTransition(a);T.scrollrunning||(T.scrollrunning=!0,T.triggerScrollStart(n,s,e,o,c),T.cursorupdate.start()),T.scrollendtrapped=!0,P.transitionend||(T.scrollendtrapped&&clearTimeout(T.scrollendtrapped),T.scrollendtrapped=setTimeout(T.onScrollTransitionEnd,c)),T.setScrollTop(T.newscrolly),T.setScrollLeft(T.newscrollx)},this.cancelScroll=function(){if(!T.scrollendtrapped)return!0;var e=T.getScrollTop(),o=T.getScrollLeft();return T.scrollrunning=!1,P.transitionend||clearTimeout(P.transitionend),T.scrollendtrapped=!1,T.resetTransition(),T.setScrollTop(e),T.railh&&T.setScrollLeft(o),T.timerscroll&&T.timerscroll.tm&&clearInterval(T.timerscroll.tm),T.timerscroll=!1,T.cursorfreezed=!1,T.cursorupdate.stop(),T.showCursor(e,o),T},this.onScrollTransitionEnd=function(){if(T.scrollendtrapped){var e=T.getScrollTop(),o=T.getScrollLeft();if(e<0?e=0:e>T.page.maxh&&(e=T.page.maxh),o<0?o=0:o>T.page.maxw&&(o=T.page.maxw),e!=T.newscrolly||o!=T.newscrollx)return T.doScrollPos(o,e,M.snapbackspeed);T.scrollrunning&&T.triggerScrollEnd(),T.scrollrunning=!1,T.scrollendtrapped=!1,T.resetTransition(),T.timerscroll=!1,T.setScrollTop(e),T.railh&&T.setScrollLeft(o),T.cursorupdate.stop(),T.noticeCursor(!1,e,o),T.cursorfreezed=!1}}}else this.doScrollLeft=function(e,o){var t=T.scrollrunning?T.newscrolly:T.getScrollTop();T.doScrollPos(e,t,o)},this.doScrollTop=function(e,o){var t=T.scrollrunning?T.newscrollx:T.getScrollLeft();T.doScrollPos(t,e,o)},this.doScrollPos=function(e,o,t){var r=T.getScrollTop(),i=T.getScrollLeft();((T.newscrolly-r)*(o-r)<0||(T.newscrollx-i)*(e-i)<0)&&T.cancelScroll();var s=!1;if(T.bouncescroll&&T.rail.visibility||(o<0?(o=0,s=!0):o>T.page.maxh&&(o=T.page.maxh,s=!0)),T.bouncescroll&&T.railh.visibility||(e<0?(e=0,s=!0):e>T.page.maxw&&(e=T.page.maxw,s=!0)),T.scrollrunning&&T.newscrolly===o&&T.newscrollx===e)return!0;T.newscrolly=o,T.newscrollx=e,T.dst={},T.dst.x=e-i,T.dst.y=o-r,T.dst.px=i,T.dst.py=r;var n=0|Math.sqrt(T.dst.x*T.dst.x+T.dst.y*T.dst.y),l=T.getTransitionSpeed(n);T.bzscroll={};var a=s?1:.58;T.bzscroll.x=new R(i,T.newscrollx,l,0,0,a,1),T.bzscroll.y=new R(r,T.newscrolly,l,0,0,a,1);f();var c=function(){if(T.scrollrunning){var e=T.bzscroll.y.getPos();T.setScrollLeft(T.bzscroll.x.getNow()),T.setScrollTop(T.bzscroll.y.getNow()),e<=1?T.timer=u(c):(T.scrollrunning=!1,T.timer=0,T.triggerScrollEnd())}};T.scrollrunning||(T.triggerScrollStart(i,r,e,o,l),T.scrollrunning=!0,T.timer=u(c))},this.cancelScroll=function(){return T.timer&&h(T.timer),T.timer=0,T.bzscroll=!1,T.scrollrunning=!1,T};else this.doScrollLeft=function(e,o){var t=T.getScrollTop();T.doScrollPos(e,t,o)},this.doScrollTop=function(e,o){var t=T.getScrollLeft();T.doScrollPos(t,e,o)},this.doScrollPos=function(e,o,t){var r=e>T.page.maxw?T.page.maxw:e;r<0&&(r=0);var i=o>T.page.maxh?T.page.maxh:o;i<0&&(i=0),T.synched("scroll",function(){T.setScrollTop(i),T.setScrollLeft(r)})},this.cancelScroll=function(){};this.doScrollBy=function(e,o){z(0,e)},this.doScrollLeftBy=function(e,o){z(e,0)},this.doScrollTo=function(e,o){var t=o?Math.round(e*T.scrollratio.y):e;t<0?t=0:t>T.page.maxh&&(t=T.page.maxh),T.cursorfreezed=!1,T.doScrollTop(e)},this.checkContentSize=function(){var e=T.getContentSize();e.h==T.page.h&&e.w==T.page.w||T.resize(!1,e)},T.onscroll=function(e){T.rail.drag||T.cursorfreezed||T.synched("scroll",function(){T.scroll.y=Math.round(T.getScrollTop()/T.scrollratio.y),T.railh&&(T.scroll.x=Math.round(T.getScrollLeft()/T.scrollratio.x)),T.noticeCursor()})},T.bind(T.docscroll,"scroll",T.onscroll),this.doZoomIn=function(e){if(!T.zoomactive){T.zoomactive=!0,T.zoomrestore={style:{}};var o=["position","top","left","zIndex","backgroundColor","marginTop","marginBottom","marginLeft","marginRight"],t=T.win[0].style;for(var r in o){var i=o[r];T.zoomrestore.style[i]=void 0!==t[i]?t[i]:""}T.zoomrestore.style.width=T.win.css("width"),T.zoomrestore.style.height=T.win.css("height"),T.zoomrestore.padding={w:T.win.outerWidth()-T.win.width(),h:T.win.outerHeight()-T.win.height()},P.isios4&&(T.zoomrestore.scrollTop=c.scrollTop(),c.scrollTop(0)),T.win.css({position:P.isios4?"absolute":"fixed",top:0,left:0,zIndex:s+100,margin:0});var n=T.win.css("backgroundColor");return(""===n||/transparent|rgba\(0, 0, 0, 0\)|rgba\(0,0,0,0\)/.test(n))&&T.win.css("backgroundColor","#fff"),T.rail.css({zIndex:s+101}),T.zoom.css({zIndex:s+102}),T.zoom.css("backgroundPosition","0 -18px"),T.resizeZoom(),T.onzoomin&&T.onzoomin.call(T),T.cancelEvent(e)}},this.doZoomOut=function(e){if(T.zoomactive)return T.zoomactive=!1,T.win.css("margin",""),T.win.css(T.zoomrestore.style),P.isios4&&c.scrollTop(T.zoomrestore.scrollTop),T.rail.css({"z-index":T.zindex}),T.zoom.css({"z-index":T.zindex}),T.zoomrestore=!1,T.zoom.css("backgroundPosition","0 0"),T.onResize(),T.onzoomout&&T.onzoomout.call(T),T.cancelEvent(e)},this.doZoom=function(e){return T.zoomactive?T.doZoomOut(e):T.doZoomIn(e)},this.resizeZoom=function(){if(T.zoomactive){var e=T.getScrollTop();T.win.css({width:c.width()-T.zoomrestore.padding.w+"px",height:c.height()-T.zoomrestore.padding.h+"px"}),T.onResize(),T.setScrollTop(Math.min(T.page.maxh,e))}},this.init(),n.nicescroll.push(this)},y=function(e){var o=this;this.nc=e,this.lastx=0,this.lasty=0,this.speedx=0,this.speedy=0,this.lasttime=0,this.steptime=0,this.snapx=!1,this.snapy=!1,this.demulx=0,this.demuly=0,this.lastscrollx=-1,this.lastscrolly=-1,this.chkx=0,this.chky=0,this.timer=0,this.reset=function(e,t){o.stop(),o.steptime=0,o.lasttime=f(),o.speedx=0,o.speedy=0,o.lastx=e,o.lasty=t,o.lastscrollx=-1,o.lastscrolly=-1},this.update=function(e,t){var r=f();o.steptime=r-o.lasttime,o.lasttime=r;var i=t-o.lasty,s=e-o.lastx,n=o.nc.getScrollTop()+i,l=o.nc.getScrollLeft()+s;o.snapx=l<0||l>o.nc.page.maxw,o.snapy=n<0||n>o.nc.page.maxh,o.speedx=s,o.speedy=i,o.lastx=e,o.lasty=t},this.stop=function(){o.nc.unsynched("domomentum2d"),o.timer&&clearTimeout(o.timer),o.timer=0,o.lastscrollx=-1,o.lastscrolly=-1},this.doSnapy=function(e,t){var r=!1;t<0?(t=0,r=!0):t>o.nc.page.maxh&&(t=o.nc.page.maxh,r=!0),e<0?(e=0,r=!0):e>o.nc.page.maxw&&(e=o.nc.page.maxw,r=!0),r?o.nc.doScrollPos(e,t,o.nc.opt.snapbackspeed):o.nc.triggerScrollEnd()},this.doMomentum=function(e){var t=f(),r=e?t+e:o.lasttime,i=o.nc.getScrollLeft(),s=o.nc.getScrollTop(),n=o.nc.page.maxh,l=o.nc.page.maxw;o.speedx=l>0?Math.min(60,o.speedx):0,o.speedy=n>0?Math.min(60,o.speedy):0;var a=r&&t-r<=60;(s<0||s>n||i<0||i>l)&&(a=!1);var c=!(!o.speedy||!a)&&o.speedy,d=!(!o.speedx||!a)&&o.speedx;if(c||d){var u=Math.max(16,o.steptime);if(u>50){var h=u/50;o.speedx*=h,o.speedy*=h,u=50}o.demulxy=0,o.lastscrollx=o.nc.getScrollLeft(),o.chkx=o.lastscrollx,o.lastscrolly=o.nc.getScrollTop(),o.chky=o.lastscrolly;var p=o.lastscrollx,m=o.lastscrolly,g=function(){var e=f()-t>600?.04:.02;o.speedx&&(p=Math.floor(o.lastscrollx-o.speedx*(1-o.demulxy)),o.lastscrollx=p,(p<0||p>l)&&(e=.1)),o.speedy&&(m=Math.floor(o.lastscrolly-o.speedy*(1-o.demulxy)),o.lastscrolly=m,(m<0||m>n)&&(e=.1)),o.demulxy=Math.min(1,o.demulxy+e),o.nc.synched("domomentum2d",function(){if(o.speedx){o.nc.getScrollLeft();o.chkx=p,o.nc.setScrollLeft(p)}if(o.speedy){o.nc.getScrollTop();o.chky=m,o.nc.setScrollTop(m)}o.timer||(o.nc.hideCursor(),o.doSnapy(p,m))}),o.demulxy<1?o.timer=setTimeout(g,u):(o.stop(),o.nc.hideCursor(),o.doSnapy(p,m))};g()}else o.doSnapy(o.nc.getScrollLeft(),o.nc.getScrollTop())}},x=e.fn.scrollTop;e.cssHooks.pageYOffset={get:function(e,o,t){var r=n.data(e,"__nicescroll")||!1;return r&&r.ishwscroll?r.getScrollTop():x.call(e)},set:function(e,o){var t=n.data(e,"__nicescroll")||!1;return t&&t.ishwscroll?t.setScrollTop(parseInt(o)):x.call(e,o),this}},e.fn.scrollTop=function(e){if(void 0===e){var o=!!this[0]&&(n.data(this[0],"__nicescroll")||!1);return o&&o.ishwscroll?o.getScrollTop():x.call(this)}return this.each(function(){var o=n.data(this,"__nicescroll")||!1;o&&o.ishwscroll?o.setScrollTop(parseInt(e)):x.call(n(this),e)})};var S=e.fn.scrollLeft;n.cssHooks.pageXOffset={get:function(e,o,t){var r=n.data(e,"__nicescroll")||!1;return r&&r.ishwscroll?r.getScrollLeft():S.call(e)},set:function(e,o){var t=n.data(e,"__nicescroll")||!1;return t&&t.ishwscroll?t.setScrollLeft(parseInt(o)):S.call(e,o),this}},e.fn.scrollLeft=function(e){if(void 0===e){var o=!!this[0]&&(n.data(this[0],"__nicescroll")||!1);return o&&o.ishwscroll?o.getScrollLeft():S.call(this)}return this.each(function(){var o=n.data(this,"__nicescroll")||!1;o&&o.ishwscroll?o.setScrollLeft(parseInt(e)):S.call(n(this),e)})};var z=function(e){var o=this;if(this.length=0,this.name="nicescrollarray",this.each=function(e){return n.each(o,e),o},this.push=function(e){o[o.length]=e,o.length++},this.eq=function(e){return o[e]},e)for(var t=0;t<e.length;t++){var r=n.data(e[t],"__nicescroll")||!1;r&&(this[this.length]=r,this.length++)}return this};!function(e,o,t){for(var r=0,i=o.length;r<i;r++)t(e,o[r])}(z.prototype,["show","hide","toggle","onResize","resize","remove","stop","doScrollPos"],function(e,o){e[o]=function(){var e=arguments;return this.each(function(){this[o].apply(this,e)})}}),e.fn.getNiceScroll=function(e){return void 0===e?new z(this):this[e]&&n.data(this[e],"__nicescroll")||!1},(e.expr.pseudos||e.expr[":"]).nicescroll=function(e){return void 0!==n.data(e,"__nicescroll")},n.fn.niceScroll=function(e,o){void 0!==o||"object"!=typeof e||"jquery"in e||(o=e,e=!1);var t=new z;return this.each(function(){var r=n(this),i=n.extend({},o);if(e){var s=n(e);i.doc=s.length>1?n(e,r):s,i.win=r}!("doc"in i)||"win"in i||(i.win=r);var l=r.data("__nicescroll")||!1;l||(i.doc=i.doc||r,l=new b(i,r),r.data("__nicescroll",l)),t.push(l)}),1===t.length?t[0]:t},a.NiceScroll={getjQuery:function(){return e}},n.nicescroll||(n.nicescroll=new z,n.nicescroll.options=g)});


/* Feather icons */
!function(e,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define([],n):"object"==typeof exports?exports.feather=n():e.feather=n()}("undefined"!=typeof self?self:this,function(){return function(e){var n={};function i(l){if(n[l])return n[l].exports;var t=n[l]={i:l,l:!1,exports:{}};return e[l].call(t.exports,t,t.exports,i),t.l=!0,t.exports}return i.m=e,i.c=n,i.d=function(e,n,l){i.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:l})},i.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},i.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(n,"a",n),n},i.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},i.p="",i(i.s=61)}([function(e,n,i){var l=i(20)("wks"),t=i(11),r=i(1).Symbol,o="function"==typeof r;(e.exports=function(e){return l[e]||(l[e]=o&&r[e]||(o?r:t)("Symbol."+e))}).store=l},function(e,n){var i=e.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=i)},function(e,n){var i=e.exports={version:"2.5.6"};"number"==typeof __e&&(__e=i)},function(e,n){var i={}.hasOwnProperty;e.exports=function(e,n){return i.call(e,n)}},function(e,n,i){e.exports=!i(27)(function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a})},function(e,n,i){var l=i(13);e.exports=function(e){if(!l(e))throw TypeError(e+" is not an object!");return e}},function(e,n,i){var l=i(5),t=i(56),r=i(55),o=Object.defineProperty;n.f=i(4)?Object.defineProperty:function(e,n,i){if(l(e),n=r(n,!0),l(i),t)try{return o(e,n,i)}catch(e){}if("get"in i||"set"in i)throw TypeError("Accessors not supported!");return"value"in i&&(e[n]=i.value),e}},function(e,n,i){var l=i(6),t=i(12);e.exports=i(4)?function(e,n,i){return l.f(e,n,t(1,i))}:function(e,n,i){return e[n]=i,e}},function(e,n,i){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var l=o(i(35)),t=o(i(33)),r=o(i(32));function o(e){return e&&e.__esModule?e:{default:e}}n.default=Object.keys(t.default).map(function(e){return new l.default(e,t.default[e],r.default[e])}).reduce(function(e,n){return e[n.name]=n,e},{})},function(e,n,i){var l=i(20)("keys"),t=i(11);e.exports=function(e){return l[e]||(l[e]=t(e))}},function(e,n){e.exports={}},function(e,n){var i=0,l=Math.random();e.exports=function(e){return"Symbol(".concat(void 0===e?"":e,")_",(++i+l).toString(36))}},function(e,n){e.exports=function(e,n){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:n}}},function(e,n){e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},function(e,n){e.exports=function(e){if(void 0==e)throw TypeError("Can't call method on  "+e);return e}},function(e,n){var i=Math.ceil,l=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?l:i)(e)}},function(e,n,i){var l;
    /*!
      Copyright (c) 2016 Jed Watson.
      Licensed under the MIT License (MIT), see
      http://jedwatson.github.io/classnames
    */
    /*!
      Copyright (c) 2016 Jed Watson.
      Licensed under the MIT License (MIT), see
      http://jedwatson.github.io/classnames
    */
    !function(){"use strict";var i=function(){function e(){}function n(e,n){for(var i=n.length,l=0;l<i;++l)t(e,n[l])}e.prototype=Object.create(null);var i={}.hasOwnProperty;var l=/\s+/;function t(e,t){if(t){var r=typeof t;"string"===r?function(e,n){for(var i=n.split(l),t=i.length,r=0;r<t;++r)e[i[r]]=!0}(e,t):Array.isArray(t)?n(e,t):"object"===r?function(e,n){for(var l in n)i.call(n,l)&&(e[l]=!!n[l])}(e,t):"number"===r&&function(e,n){e[n]=!0}(e,t)}}return function(){for(var i=arguments.length,l=Array(i),t=0;t<i;t++)l[t]=arguments[t];var r=new e;n(r,l);var o=[];for(var a in r)r[a]&&o.push(a);return o.join(" ")}}();void 0!==e&&e.exports?e.exports=i:void 0===(l=function(){return i}.apply(n,[]))||(e.exports=l)}()},function(e,n,i){var l=i(14);e.exports=function(e){return Object(l(e))}},function(e,n,i){var l=i(6).f,t=i(3),r=i(0)("toStringTag");e.exports=function(e,n,i){e&&!t(e=i?e:e.prototype,r)&&l(e,r,{configurable:!0,value:n})}},function(e,n){e.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},function(e,n,i){var l=i(2),t=i(1),r=t["__core-js_shared__"]||(t["__core-js_shared__"]={});(e.exports=function(e,n){return r[e]||(r[e]=void 0!==n?n:{})})("versions",[]).push({version:l.version,mode:i(29)?"pure":"global",copyright:"© 2018 Denis Pushkarev (zloirock.ru)"})},function(e,n,i){var l=i(15),t=Math.min;e.exports=function(e){return e>0?t(l(e),9007199254740991):0}},function(e,n){var i={}.toString;e.exports=function(e){return i.call(e).slice(8,-1)}},function(e,n,i){var l=i(48),t=i(14);e.exports=function(e){return l(t(e))}},function(e,n,i){var l=i(54);e.exports=function(e,n,i){if(l(e),void 0===n)return e;switch(i){case 1:return function(i){return e.call(n,i)};case 2:return function(i,l){return e.call(n,i,l)};case 3:return function(i,l,t){return e.call(n,i,l,t)}}return function(){return e.apply(n,arguments)}}},function(e,n,i){var l=i(1),t=i(7),r=i(3),o=i(11)("src"),a=Function.toString,c=(""+a).split("toString");i(2).inspectSource=function(e){return a.call(e)},(e.exports=function(e,n,i,a){var y="function"==typeof i;y&&(r(i,"name")||t(i,"name",n)),e[n]!==i&&(y&&(r(i,o)||t(i,o,e[n]?""+e[n]:c.join(String(n)))),e===l?e[n]=i:a?e[n]?e[n]=i:t(e,n,i):(delete e[n],t(e,n,i)))})(Function.prototype,"toString",function(){return"function"==typeof this&&this[o]||a.call(this)})},function(e,n,i){var l=i(13),t=i(1).document,r=l(t)&&l(t.createElement);e.exports=function(e){return r?t.createElement(e):{}}},function(e,n){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,n,i){var l=i(1),t=i(2),r=i(7),o=i(25),a=i(24),c=function(e,n,i){var y,p,h,x,s=e&c.F,u=e&c.G,d=e&c.S,f=e&c.P,v=e&c.B,g=u?l:d?l[n]||(l[n]={}):(l[n]||{}).prototype,m=u?t:t[n]||(t[n]={}),M=m.prototype||(m.prototype={});for(y in u&&(i=n),i)h=((p=!s&&g&&void 0!==g[y])?g:i)[y],x=v&&p?a(h,l):f&&"function"==typeof h?a(Function.call,h):h,g&&o(g,y,h,e&c.U),m[y]!=h&&r(m,y,x),f&&M[y]!=h&&(M[y]=h)};l.core=t,c.F=1,c.G=2,c.S=4,c.P=8,c.B=16,c.W=32,c.U=64,c.R=128,e.exports=c},function(e,n){e.exports=!1},function(e,n,i){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var l=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var i=arguments[n];for(var l in i)Object.prototype.hasOwnProperty.call(i,l)&&(e[l]=i[l])}return e},t=o(i(16)),r=o(i(8));function o(e){return e&&e.__esModule?e:{default:e}}n.default=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if("undefined"==typeof document)throw new Error("`feather.replace()` only works in a browser environment.");var n=document.querySelectorAll("[data-feather]");Array.from(n).forEach(function(n){return function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=function(e){return Array.from(e.attributes).reduce(function(e,n){return e[n.name]=n.value,e},{})}(e),o=i["data-feather"];delete i["data-feather"];var a=r.default[o].toSvg(l({},n,i,{class:(0,t.default)(n.class,i.class)})),c=(new DOMParser).parseFromString(a,"image/svg+xml").querySelector("svg");e.parentNode.replaceChild(c,e)}(n,e)})}},function(e,n,i){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var l,t=i(8),r=(l=t)&&l.__esModule?l:{default:l};n.default=function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(console.warn("feather.toSvg() is deprecated. Please use feather.icons[name].toSvg() instead."),!e)throw new Error("The required `key` (icon name) parameter is missing.");if(!r.default[e])throw new Error("No icon matching '"+e+"'. See the complete list of icons at https://feathericons.com");return r.default[e].toSvg(n)}},function(e){e.exports={activity:["pulse","health","action","motion"],airplay:["stream","cast","mirroring"],"alert-circle":["warning"],"alert-octagon":["warning"],"alert-triangle":["warning"],"at-sign":["mention"],award:["achievement","badge"],aperture:["camera","photo"],bell:["alarm","notification"],"bell-off":["alarm","notification","silent"],bluetooth:["wireless"],"book-open":["read"],book:["read","dictionary","booklet","magazine"],bookmark:["read","clip","marker","tag"],briefcase:["work","bag","baggage","folder"],clipboard:["copy"],clock:["time","watch","alarm"],"cloud-drizzle":["weather","shower"],"cloud-lightning":["weather","bolt"],"cloud-rain":["weather"],"cloud-snow":["weather","blizzard"],cloud:["weather"],codepen:["logo"],codesandbox:["logo"],coffee:["drink","cup","mug","tea","cafe","hot","beverage"],command:["keyboard","cmd"],compass:["navigation","safari","travel"],copy:["clone","duplicate"],"corner-down-left":["arrow"],"corner-down-right":["arrow"],"corner-left-down":["arrow"],"corner-left-up":["arrow"],"corner-right-down":["arrow"],"corner-right-up":["arrow"],"corner-up-left":["arrow"],"corner-up-right":["arrow"],"credit-card":["purchase","payment","cc"],crop:["photo","image"],crosshair:["aim","target"],database:["storage"],delete:["remove"],disc:["album","cd","dvd","music"],"dollar-sign":["currency","money","payment"],droplet:["water"],edit:["pencil","change"],"edit-2":["pencil","change"],"edit-3":["pencil","change"],eye:["view","watch"],"eye-off":["view","watch"],"external-link":["outbound"],facebook:["logo"],"fast-forward":["music"],figma:["logo","design","tool"],film:["movie","video"],"folder-minus":["directory"],"folder-plus":["directory"],folder:["directory"],frown:["emoji","face","bad","sad","emotion"],gift:["present","box","birthday","party"],"git-branch":["code","version control"],"git-commit":["code","version control"],"git-merge":["code","version control"],"git-pull-request":["code","version control"],github:["logo","version control"],gitlab:["logo","version control"],global:["world","browser","language","translate"],"hard-drive":["computer","server"],hash:["hashtag","number","pound"],headphones:["music","audio"],heart:["like","love"],"help-circle":["question mark"],hexagon:["shape","node.js","logo"],home:["house"],image:["picture"],inbox:["email"],instagram:["logo","camera"],key:["password","login","authentication"],"life-bouy":["help","life ring","support"],linkedin:["logo"],lock:["security","password"],"log-in":["sign in","arrow"],"log-out":["sign out","arrow"],mail:["email"],"map-pin":["location","navigation","travel","marker"],map:["location","navigation","travel"],maximize:["fullscreen"],"maximize-2":["fullscreen","arrows"],meh:["emoji","face","neutral","emotion"],menu:["bars","navigation","hamburger"],"message-circle":["comment","chat"],"message-square":["comment","chat"],"mic-off":["record"],mic:["record"],minimize:["exit fullscreen"],"minimize-2":["exit fullscreen","arrows"],monitor:["tv"],moon:["dark","night"],"more-horizontal":["ellipsis"],"more-vertical":["ellipsis"],"mouse-pointer":["arrow","cursor"],move:["arrows"],navigation:["location","travel"],"navigation-2":["location","travel"],octagon:["stop"],package:["box"],paperclip:["attachment"],pause:["music","stop"],"pause-circle":["music","stop"],"pen-tool":["vector","drawing"],play:["music","start"],"play-circle":["music","start"],plus:["add","new"],"plus-circle":["add","new"],"plus-square":["add","new"],pocket:["logo","save"],power:["on","off"],radio:["signal"],rewind:["music"],rss:["feed","subscribe"],save:["floppy disk"],search:["find","magnifier","magnifying glass"],send:["message","mail","paper airplane"],settings:["cog","edit","gear","preferences"],shield:["security"],"shield-off":["security"],"shopping-bag":["ecommerce","cart","purchase","store"],"shopping-cart":["ecommerce","cart","purchase","store"],shuffle:["music"],"skip-back":["music"],"skip-forward":["music"],slash:["ban","no"],sliders:["settings","controls"],smile:["emoji","face","happy","good","emotion"],speaker:["music"],star:["bookmark","favorite","like"],sun:["brightness","weather","light"],sunrise:["weather"],sunset:["weather"],tag:["label"],target:["bullseye"],terminal:["code","command line"],"thumbs-down":["dislike","bad"],"thumbs-up":["like","good"],"toggle-left":["on","off","switch"],"toggle-right":["on","off","switch"],trash:["garbage","delete","remove"],"trash-2":["garbage","delete","remove"],triangle:["delta"],truck:["delivery","van","shipping"],twitter:["logo"],umbrella:["rain","weather"],"video-off":["camera","movie","film"],video:["camera","movie","film"],voicemail:["phone"],volume:["music","sound","mute"],"volume-1":["music","sound"],"volume-2":["music","sound"],"volume-x":["music","sound","mute"],watch:["clock","time"],wind:["weather","air"],"x-circle":["cancel","close","delete","remove","times"],"x-octagon":["delete","stop","alert","warning","times"],"x-square":["cancel","close","delete","remove","times"],x:["cancel","close","delete","remove","times"],youtube:["logo","video","play"],"zap-off":["flash","camera","lightning"],zap:["flash","camera","lightning"]}},function(e){e.exports={activity:'<polyline points="22 12 18 12 15 21 9 3 6 12 2 12"></polyline>',airplay:'<path d="M5 17H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-1"></path><polygon points="12 15 17 21 7 21 12 15"></polygon>',"alert-circle":'<circle cx="12" cy="12" r="10"></circle><line x1="12" y1="8" x2="12" y2="12"></line><line x1="12" y1="16" x2="12" y2="16"></line>',"alert-octagon":'<polygon points="7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2"></polygon><line x1="12" y1="8" x2="12" y2="12"></line><line x1="12" y1="16" x2="12" y2="16"></line>',"alert-triangle":'<path d="M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z"></path><line x1="12" y1="9" x2="12" y2="13"></line><line x1="12" y1="17" x2="12" y2="17"></line>',"align-center":'<line x1="18" y1="10" x2="6" y2="10"></line><line x1="21" y1="6" x2="3" y2="6"></line><line x1="21" y1="14" x2="3" y2="14"></line><line x1="18" y1="18" x2="6" y2="18"></line>',"align-justify":'<line x1="21" y1="10" x2="3" y2="10"></line><line x1="21" y1="6" x2="3" y2="6"></line><line x1="21" y1="14" x2="3" y2="14"></line><line x1="21" y1="18" x2="3" y2="18"></line>',"align-left":'<line x1="17" y1="10" x2="3" y2="10"></line><line x1="21" y1="6" x2="3" y2="6"></line><line x1="21" y1="14" x2="3" y2="14"></line><line x1="17" y1="18" x2="3" y2="18"></line>',"align-right":'<line x1="21" y1="10" x2="7" y2="10"></line><line x1="21" y1="6" x2="3" y2="6"></line><line x1="21" y1="14" x2="3" y2="14"></line><line x1="21" y1="18" x2="7" y2="18"></line>',anchor:'<circle cx="12" cy="5" r="3"></circle><line x1="12" y1="22" x2="12" y2="8"></line><path d="M5 12H2a10 10 0 0 0 20 0h-3"></path>',aperture:'<circle cx="12" cy="12" r="10"></circle><line x1="14.31" y1="8" x2="20.05" y2="17.94"></line><line x1="9.69" y1="8" x2="21.17" y2="8"></line><line x1="7.38" y1="12" x2="13.12" y2="2.06"></line><line x1="9.69" y1="16" x2="3.95" y2="6.06"></line><line x1="14.31" y1="16" x2="2.83" y2="16"></line><line x1="16.62" y1="12" x2="10.88" y2="21.94"></line>',archive:'<polyline points="21 8 21 21 3 21 3 8"></polyline><rect x="1" y="3" width="22" height="5"></rect><line x1="10" y1="12" x2="14" y2="12"></line>',"arrow-down-circle":'<circle cx="12" cy="12" r="10"></circle><polyline points="8 12 12 16 16 12"></polyline><line x1="12" y1="8" x2="12" y2="16"></line>',"arrow-down-left":'<line x1="17" y1="7" x2="7" y2="17"></line><polyline points="17 17 7 17 7 7"></polyline>',"arrow-down-right":'<line x1="7" y1="7" x2="17" y2="17"></line><polyline points="17 7 17 17 7 17"></polyline>',"arrow-down":'<line x1="12" y1="5" x2="12" y2="19"></line><polyline points="19 12 12 19 5 12"></polyline>',"arrow-left-circle":'<circle cx="12" cy="12" r="10"></circle><polyline points="12 8 8 12 12 16"></polyline><line x1="16" y1="12" x2="8" y2="12"></line>',"arrow-left":'<line x1="19" y1="12" x2="5" y2="12"></line><polyline points="12 19 5 12 12 5"></polyline>',"arrow-right-circle":'<circle cx="12" cy="12" r="10"></circle><polyline points="12 16 16 12 12 8"></polyline><line x1="8" y1="12" x2="16" y2="12"></line>',"arrow-right":'<line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline>',"arrow-up-circle":'<circle cx="12" cy="12" r="10"></circle><polyline points="16 12 12 8 8 12"></polyline><line x1="12" y1="16" x2="12" y2="8"></line>',"arrow-up-left":'<line x1="17" y1="17" x2="7" y2="7"></line><polyline points="7 17 7 7 17 7"></polyline>',"arrow-up-right":'<line x1="7" y1="17" x2="17" y2="7"></line><polyline points="7 7 17 7 17 17"></polyline>',"arrow-up":'<line x1="12" y1="19" x2="12" y2="5"></line><polyline points="5 12 12 5 19 12"></polyline>',"at-sign":'<circle cx="12" cy="12" r="4"></circle><path d="M16 8v5a3 3 0 0 0 6 0v-1a10 10 0 1 0-3.92 7.94"></path>',award:'<circle cx="12" cy="8" r="7"></circle><polyline points="8.21 13.89 7 23 12 20 17 23 15.79 13.88"></polyline>',"bar-chart-2":'<line x1="18" y1="20" x2="18" y2="10"></line><line x1="12" y1="20" x2="12" y2="4"></line><line x1="6" y1="20" x2="6" y2="14"></line>',"bar-chart":'<line x1="12" y1="20" x2="12" y2="10"></line><line x1="18" y1="20" x2="18" y2="4"></line><line x1="6" y1="20" x2="6" y2="16"></line>',"battery-charging":'<path d="M5 18H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h3.19M15 6h2a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-3.19"></path><line x1="23" y1="13" x2="23" y2="11"></line><polyline points="11 6 7 12 13 12 9 18"></polyline>',battery:'<rect x="1" y="6" width="18" height="12" rx="2" ry="2"></rect><line x1="23" y1="13" x2="23" y2="11"></line>',"bell-off":'<path d="M13.73 21a2 2 0 0 1-3.46 0"></path><path d="M18.63 13A17.89 17.89 0 0 1 18 8"></path><path d="M6.26 6.26A5.86 5.86 0 0 0 6 8c0 7-3 9-3 9h14"></path><path d="M18 8a6 6 0 0 0-9.33-5"></path><line x1="1" y1="1" x2="23" y2="23"></line>',bell:'<path d="M18 8A6 6 0 0 0 6 8c0 7-3 9-3 9h18s-3-2-3-9"></path><path d="M13.73 21a2 2 0 0 1-3.46 0"></path>',bluetooth:'<polyline points="6.5 6.5 17.5 17.5 12 23 12 1 17.5 6.5 6.5 17.5"></polyline>',bold:'<path d="M6 4h8a4 4 0 0 1 4 4 4 4 0 0 1-4 4H6z"></path><path d="M6 12h9a4 4 0 0 1 4 4 4 4 0 0 1-4 4H6z"></path>',"book-open":'<path d="M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z"></path><path d="M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z"></path>',book:'<path d="M4 19.5A2.5 2.5 0 0 1 6.5 17H20"></path><path d="M6.5 2H20v20H6.5A2.5 2.5 0 0 1 4 19.5v-15A2.5 2.5 0 0 1 6.5 2z"></path>',bookmark:'<path d="M19 21l-7-5-7 5V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2z"></path>',box:'<path d="M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z"></path><polyline points="3.27 6.96 12 12.01 20.73 6.96"></polyline><line x1="12" y1="22.08" x2="12" y2="12"></line>',briefcase:'<rect x="2" y="7" width="20" height="14" rx="2" ry="2"></rect><path d="M16 21V5a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v16"></path>',calendar:'<rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect><line x1="16" y1="2" x2="16" y2="6"></line><line x1="8" y1="2" x2="8" y2="6"></line><line x1="3" y1="10" x2="21" y2="10"></line>',"camera-off":'<line x1="1" y1="1" x2="23" y2="23"></line><path d="M21 21H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h3m3-3h6l2 3h4a2 2 0 0 1 2 2v9.34m-7.72-2.06a4 4 0 1 1-5.56-5.56"></path>',camera:'<path d="M23 19a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h4l2-3h6l2 3h4a2 2 0 0 1 2 2z"></path><circle cx="12" cy="13" r="4"></circle>',cast:'<path d="M2 16.1A5 5 0 0 1 5.9 20M2 12.05A9 9 0 0 1 9.95 20M2 8V6a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2h-6"></path><line x1="2" y1="20" x2="2" y2="20"></line>',"check-circle":'<path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path><polyline points="22 4 12 14.01 9 11.01"></polyline>',"check-square":'<polyline points="9 11 12 14 22 4"></polyline><path d="M21 12v7a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11"></path>',check:'<polyline points="20 6 9 17 4 12"></polyline>',"chevron-down":'<polyline points="6 9 12 15 18 9"></polyline>',"chevron-left":'<polyline points="15 18 9 12 15 6"></polyline>',"chevron-right":'<polyline points="9 18 15 12 9 6"></polyline>',"chevron-up":'<polyline points="18 15 12 9 6 15"></polyline>',"chevrons-down":'<polyline points="7 13 12 18 17 13"></polyline><polyline points="7 6 12 11 17 6"></polyline>',"chevrons-left":'<polyline points="11 17 6 12 11 7"></polyline><polyline points="18 17 13 12 18 7"></polyline>',"chevrons-right":'<polyline points="13 17 18 12 13 7"></polyline><polyline points="6 17 11 12 6 7"></polyline>',"chevrons-up":'<polyline points="17 11 12 6 7 11"></polyline><polyline points="17 18 12 13 7 18"></polyline>',chrome:'<circle cx="12" cy="12" r="10"></circle><circle cx="12" cy="12" r="4"></circle><line x1="21.17" y1="8" x2="12" y2="8"></line><line x1="3.95" y1="6.06" x2="8.54" y2="14"></line><line x1="10.88" y1="21.94" x2="15.46" y2="14"></line>',circle:'<circle cx="12" cy="12" r="10"></circle>',clipboard:'<path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"></path><rect x="8" y="2" width="8" height="4" rx="1" ry="1"></rect>',clock:'<circle cx="12" cy="12" r="10"></circle><polyline points="12 6 12 12 16 14"></polyline>',"cloud-drizzle":'<line x1="8" y1="19" x2="8" y2="21"></line><line x1="8" y1="13" x2="8" y2="15"></line><line x1="16" y1="19" x2="16" y2="21"></line><line x1="16" y1="13" x2="16" y2="15"></line><line x1="12" y1="21" x2="12" y2="23"></line><line x1="12" y1="15" x2="12" y2="17"></line><path d="M20 16.58A5 5 0 0 0 18 7h-1.26A8 8 0 1 0 4 15.25"></path>',"cloud-lightning":'<path d="M19 16.9A5 5 0 0 0 18 7h-1.26a8 8 0 1 0-11.62 9"></path><polyline points="13 11 9 17 15 17 11 23"></polyline>',"cloud-off":'<path d="M22.61 16.95A5 5 0 0 0 18 10h-1.26a8 8 0 0 0-7.05-6M5 5a8 8 0 0 0 4 15h9a5 5 0 0 0 1.7-.3"></path><line x1="1" y1="1" x2="23" y2="23"></line>',"cloud-rain":'<line x1="16" y1="13" x2="16" y2="21"></line><line x1="8" y1="13" x2="8" y2="21"></line><line x1="12" y1="15" x2="12" y2="23"></line><path d="M20 16.58A5 5 0 0 0 18 7h-1.26A8 8 0 1 0 4 15.25"></path>',"cloud-snow":'<path d="M20 17.58A5 5 0 0 0 18 8h-1.26A8 8 0 1 0 4 16.25"></path><line x1="8" y1="16" x2="8" y2="16"></line><line x1="8" y1="20" x2="8" y2="20"></line><line x1="12" y1="18" x2="12" y2="18"></line><line x1="12" y1="22" x2="12" y2="22"></line><line x1="16" y1="16" x2="16" y2="16"></line><line x1="16" y1="20" x2="16" y2="20"></line>',cloud:'<path d="M18 10h-1.26A8 8 0 1 0 9 20h9a5 5 0 0 0 0-10z"></path>',code:'<polyline points="16 18 22 12 16 6"></polyline><polyline points="8 6 2 12 8 18"></polyline>',codepen:'<polygon points="12 2 22 8.5 22 15.5 12 22 2 15.5 2 8.5 12 2"></polygon><line x1="12" y1="22" x2="12" y2="15.5"></line><polyline points="22 8.5 12 15.5 2 8.5"></polyline><polyline points="2 15.5 12 8.5 22 15.5"></polyline><line x1="12" y1="2" x2="12" y2="8.5"></line>',codesandbox:'<path d="M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z"></path><polyline points="7.5 4.21 12 6.81 16.5 4.21"></polyline><polyline points="7.5 19.79 7.5 14.6 3 12"></polyline><polyline points="21 12 16.5 14.6 16.5 19.79"></polyline><polyline points="3.27 6.96 12 12.01 20.73 6.96"></polyline><line x1="12" y1="22.08" x2="12" y2="12"></line>',coffee:'<path d="M18 8h1a4 4 0 0 1 0 8h-1"></path><path d="M2 8h16v9a4 4 0 0 1-4 4H6a4 4 0 0 1-4-4V8z"></path><line x1="6" y1="1" x2="6" y2="4"></line><line x1="10" y1="1" x2="10" y2="4"></line><line x1="14" y1="1" x2="14" y2="4"></line>',columns:'<path d="M12 3h7a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-7m0-18H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h7m0-18v18"></path>',command:'<path d="M18 3a3 3 0 0 0-3 3v12a3 3 0 0 0 3 3 3 3 0 0 0 3-3 3 3 0 0 0-3-3H6a3 3 0 0 0-3 3 3 3 0 0 0 3 3 3 3 0 0 0 3-3V6a3 3 0 0 0-3-3 3 3 0 0 0-3 3 3 3 0 0 0 3 3h12a3 3 0 0 0 3-3 3 3 0 0 0-3-3z"></path>',compass:'<circle cx="12" cy="12" r="10"></circle><polygon points="16.24 7.76 14.12 14.12 7.76 16.24 9.88 9.88 16.24 7.76"></polygon>',copy:'<rect x="9" y="9" width="13" height="13" rx="2" ry="2"></rect><path d="M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"></path>',"corner-down-left":'<polyline points="9 10 4 15 9 20"></polyline><path d="M20 4v7a4 4 0 0 1-4 4H4"></path>',"corner-down-right":'<polyline points="15 10 20 15 15 20"></polyline><path d="M4 4v7a4 4 0 0 0 4 4h12"></path>',"corner-left-down":'<polyline points="14 15 9 20 4 15"></polyline><path d="M20 4h-7a4 4 0 0 0-4 4v12"></path>',"corner-left-up":'<polyline points="14 9 9 4 4 9"></polyline><path d="M20 20h-7a4 4 0 0 1-4-4V4"></path>',"corner-right-down":'<polyline points="10 15 15 20 20 15"></polyline><path d="M4 4h7a4 4 0 0 1 4 4v12"></path>',"corner-right-up":'<polyline points="10 9 15 4 20 9"></polyline><path d="M4 20h7a4 4 0 0 0 4-4V4"></path>',"corner-up-left":'<polyline points="9 14 4 9 9 4"></polyline><path d="M20 20v-7a4 4 0 0 0-4-4H4"></path>',"corner-up-right":'<polyline points="15 14 20 9 15 4"></polyline><path d="M4 20v-7a4 4 0 0 1 4-4h12"></path>',cpu:'<rect x="4" y="4" width="16" height="16" rx="2" ry="2"></rect><rect x="9" y="9" width="6" height="6"></rect><line x1="9" y1="1" x2="9" y2="4"></line><line x1="15" y1="1" x2="15" y2="4"></line><line x1="9" y1="20" x2="9" y2="23"></line><line x1="15" y1="20" x2="15" y2="23"></line><line x1="20" y1="9" x2="23" y2="9"></line><line x1="20" y1="14" x2="23" y2="14"></line><line x1="1" y1="9" x2="4" y2="9"></line><line x1="1" y1="14" x2="4" y2="14"></line>',"credit-card":'<rect x="1" y="4" width="22" height="16" rx="2" ry="2"></rect><line x1="1" y1="10" x2="23" y2="10"></line>',crop:'<path d="M6.13 1L6 16a2 2 0 0 0 2 2h15"></path><path d="M1 6.13L16 6a2 2 0 0 1 2 2v15"></path>',crosshair:'<circle cx="12" cy="12" r="10"></circle><line x1="22" y1="12" x2="18" y2="12"></line><line x1="6" y1="12" x2="2" y2="12"></line><line x1="12" y1="6" x2="12" y2="2"></line><line x1="12" y1="22" x2="12" y2="18"></line>',database:'<ellipse cx="12" cy="5" rx="9" ry="3"></ellipse><path d="M21 12c0 1.66-4 3-9 3s-9-1.34-9-3"></path><path d="M3 5v14c0 1.66 4 3 9 3s9-1.34 9-3V5"></path>',delete:'<path d="M21 4H8l-7 8 7 8h13a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2z"></path><line x1="18" y1="9" x2="12" y2="15"></line><line x1="12" y1="9" x2="18" y2="15"></line>',disc:'<circle cx="12" cy="12" r="10"></circle><circle cx="12" cy="12" r="3"></circle>',"dollar-sign":'<line x1="12" y1="1" x2="12" y2="23"></line><path d="M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6"></path>',"download-cloud":'<polyline points="8 17 12 21 16 17"></polyline><line x1="12" y1="12" x2="12" y2="21"></line><path d="M20.88 18.09A5 5 0 0 0 18 9h-1.26A8 8 0 1 0 3 16.29"></path>',download:'<path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"></path><polyline points="7 10 12 15 17 10"></polyline><line x1="12" y1="15" x2="12" y2="3"></line>',droplet:'<path d="M12 2.69l5.66 5.66a8 8 0 1 1-11.31 0z"></path>',"edit-2":'<path d="M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z"></path>',"edit-3":'<path d="M12 20h9"></path><path d="M16.5 3.5a2.121 2.121 0 0 1 3 3L7 19l-4 1 1-4L16.5 3.5z"></path>',edit:'<path d="M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7"></path><path d="M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z"></path>',"external-link":'<path d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"></path><polyline points="15 3 21 3 21 9"></polyline><line x1="10" y1="14" x2="21" y2="3"></line>',"eye-off":'<path d="M17.94 17.94A10.07 10.07 0 0 1 12 20c-7 0-11-8-11-8a18.45 18.45 0 0 1 5.06-5.94M9.9 4.24A9.12 9.12 0 0 1 12 4c7 0 11 8 11 8a18.5 18.5 0 0 1-2.16 3.19m-6.72-1.07a3 3 0 1 1-4.24-4.24"></path><line x1="1" y1="1" x2="23" y2="23"></line>',eye:'<path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"></path><circle cx="12" cy="12" r="3"></circle>',facebook:'<path d="M18 2h-3a5 5 0 0 0-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 0 1 1-1h3z"></path>',"fast-forward":'<polygon points="13 19 22 12 13 5 13 19"></polygon><polygon points="2 19 11 12 2 5 2 19"></polygon>',feather:'<path d="M20.24 12.24a6 6 0 0 0-8.49-8.49L5 10.5V19h8.5z"></path><line x1="16" y1="8" x2="2" y2="22"></line><line x1="17.5" y1="15" x2="9" y2="15"></line>',figma:'<path d="M5 5.5A3.5 3.5 0 0 1 8.5 2H12v7H8.5A3.5 3.5 0 0 1 5 5.5z"></path><path d="M12 2h3.5a3.5 3.5 0 1 1 0 7H12V2z"></path><path d="M12 12.5a3.5 3.5 0 1 1 7 0 3.5 3.5 0 1 1-7 0z"></path><path d="M5 19.5A3.5 3.5 0 0 1 8.5 16H12v3.5a3.5 3.5 0 1 1-7 0z"></path><path d="M5 12.5A3.5 3.5 0 0 1 8.5 9H12v7H8.5A3.5 3.5 0 0 1 5 12.5z"></path>',"file-minus":'<path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path><polyline points="14 2 14 8 20 8"></polyline><line x1="9" y1="15" x2="15" y2="15"></line>',"file-plus":'<path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path><polyline points="14 2 14 8 20 8"></polyline><line x1="12" y1="18" x2="12" y2="12"></line><line x1="9" y1="15" x2="15" y2="15"></line>',"file-text":'<path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path><polyline points="14 2 14 8 20 8"></polyline><line x1="16" y1="13" x2="8" y2="13"></line><line x1="16" y1="17" x2="8" y2="17"></line><polyline points="10 9 9 9 8 9"></polyline>',file:'<path d="M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z"></path><polyline points="13 2 13 9 20 9"></polyline>',film:'<rect x="2" y="2" width="20" height="20" rx="2.18" ry="2.18"></rect><line x1="7" y1="2" x2="7" y2="22"></line><line x1="17" y1="2" x2="17" y2="22"></line><line x1="2" y1="12" x2="22" y2="12"></line><line x1="2" y1="7" x2="7" y2="7"></line><line x1="2" y1="17" x2="7" y2="17"></line><line x1="17" y1="17" x2="22" y2="17"></line><line x1="17" y1="7" x2="22" y2="7"></line>',filter:'<polygon points="22 3 2 3 10 12.46 10 19 14 21 14 12.46 22 3"></polygon>',flag:'<path d="M4 15s1-1 4-1 5 2 8 2 4-1 4-1V3s-1 1-4 1-5-2-8-2-4 1-4 1z"></path><line x1="4" y1="22" x2="4" y2="15"></line>',"folder-minus":'<path d="M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z"></path><line x1="9" y1="14" x2="15" y2="14"></line>',"folder-plus":'<path d="M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z"></path><line x1="12" y1="11" x2="12" y2="17"></line><line x1="9" y1="14" x2="15" y2="14"></line>',folder:'<path d="M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z"></path>',frown:'<circle cx="12" cy="12" r="10"></circle><path d="M16 16s-1.5-2-4-2-4 2-4 2"></path><line x1="9" y1="9" x2="9.01" y2="9"></line><line x1="15" y1="9" x2="15.01" y2="9"></line>',gift:'<polyline points="20 12 20 22 4 22 4 12"></polyline><rect x="2" y="7" width="20" height="5"></rect><line x1="12" y1="22" x2="12" y2="7"></line><path d="M12 7H7.5a2.5 2.5 0 0 1 0-5C11 2 12 7 12 7z"></path><path d="M12 7h4.5a2.5 2.5 0 0 0 0-5C13 2 12 7 12 7z"></path>',"git-branch":'<line x1="6" y1="3" x2="6" y2="15"></line><circle cx="18" cy="6" r="3"></circle><circle cx="6" cy="18" r="3"></circle><path d="M18 9a9 9 0 0 1-9 9"></path>',"git-commit":'<circle cx="12" cy="12" r="4"></circle><line x1="1.05" y1="12" x2="7" y2="12"></line><line x1="17.01" y1="12" x2="22.96" y2="12"></line>',"git-merge":'<circle cx="18" cy="18" r="3"></circle><circle cx="6" cy="6" r="3"></circle><path d="M6 21V9a9 9 0 0 0 9 9"></path>',"git-pull-request":'<circle cx="18" cy="18" r="3"></circle><circle cx="6" cy="6" r="3"></circle><path d="M13 6h3a2 2 0 0 1 2 2v7"></path><line x1="6" y1="9" x2="6" y2="21"></line>',github:'<path d="M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22"></path>',gitlab:'<path d="M22.65 14.39L12 22.13 1.35 14.39a.84.84 0 0 1-.3-.94l1.22-3.78 2.44-7.51A.42.42 0 0 1 4.82 2a.43.43 0 0 1 .58 0 .42.42 0 0 1 .11.18l2.44 7.49h8.1l2.44-7.51A.42.42 0 0 1 18.6 2a.43.43 0 0 1 .58 0 .42.42 0 0 1 .11.18l2.44 7.51L23 13.45a.84.84 0 0 1-.35.94z"></path>',globe:'<circle cx="12" cy="12" r="10"></circle><line x1="2" y1="12" x2="22" y2="12"></line><path d="M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z"></path>',grid:'<rect x="3" y="3" width="7" height="7"></rect><rect x="14" y="3" width="7" height="7"></rect><rect x="14" y="14" width="7" height="7"></rect><rect x="3" y="14" width="7" height="7"></rect>',"hard-drive":'<line x1="22" y1="12" x2="2" y2="12"></line><path d="M5.45 5.11L2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z"></path><line x1="6" y1="16" x2="6" y2="16"></line><line x1="10" y1="16" x2="10" y2="16"></line>',hash:'<line x1="4" y1="9" x2="20" y2="9"></line><line x1="4" y1="15" x2="20" y2="15"></line><line x1="10" y1="3" x2="8" y2="21"></line><line x1="16" y1="3" x2="14" y2="21"></line>',headphones:'<path d="M3 18v-6a9 9 0 0 1 18 0v6"></path><path d="M21 19a2 2 0 0 1-2 2h-1a2 2 0 0 1-2-2v-3a2 2 0 0 1 2-2h3zM3 19a2 2 0 0 0 2 2h1a2 2 0 0 0 2-2v-3a2 2 0 0 0-2-2H3z"></path>',heart:'<path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"></path>',"help-circle":'<circle cx="12" cy="12" r="10"></circle><path d="M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3"></path><line x1="12" y1="17" x2="12" y2="17"></line>',hexagon:'<path d="M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z"></path>',home:'<path d="M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"></path><polyline points="9 22 9 12 15 12 15 22"></polyline>',image:'<rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect><circle cx="8.5" cy="8.5" r="1.5"></circle><polyline points="21 15 16 10 5 21"></polyline>',inbox:'<polyline points="22 12 16 12 14 15 10 15 8 12 2 12"></polyline><path d="M5.45 5.11L2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z"></path>',info:'<circle cx="12" cy="12" r="10"></circle><line x1="12" y1="16" x2="12" y2="12"></line><line x1="12" y1="8" x2="12" y2="8"></line>',instagram:'<rect x="2" y="2" width="20" height="20" rx="5" ry="5"></rect><path d="M16 11.37A4 4 0 1 1 12.63 8 4 4 0 0 1 16 11.37z"></path><line x1="17.5" y1="6.5" x2="17.5" y2="6.5"></line>',italic:'<line x1="19" y1="4" x2="10" y2="4"></line><line x1="14" y1="20" x2="5" y2="20"></line><line x1="15" y1="4" x2="9" y2="20"></line>',key:'<path d="M21 2l-2 2m-7.61 7.61a5.5 5.5 0 1 1-7.778 7.778 5.5 5.5 0 0 1 7.777-7.777zm0 0L15.5 7.5m0 0l3 3L22 7l-3-3m-3.5 3.5L19 4"></path>',layers:'<polygon points="12 2 2 7 12 12 22 7 12 2"></polygon><polyline points="2 17 12 22 22 17"></polyline><polyline points="2 12 12 17 22 12"></polyline>',layout:'<rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect><line x1="3" y1="9" x2="21" y2="9"></line><line x1="9" y1="21" x2="9" y2="9"></line>',"life-buoy":'<circle cx="12" cy="12" r="10"></circle><circle cx="12" cy="12" r="4"></circle><line x1="4.93" y1="4.93" x2="9.17" y2="9.17"></line><line x1="14.83" y1="14.83" x2="19.07" y2="19.07"></line><line x1="14.83" y1="9.17" x2="19.07" y2="4.93"></line><line x1="14.83" y1="9.17" x2="18.36" y2="5.64"></line><line x1="4.93" y1="19.07" x2="9.17" y2="14.83"></line>',"link-2":'<path d="M15 7h3a5 5 0 0 1 5 5 5 5 0 0 1-5 5h-3m-6 0H6a5 5 0 0 1-5-5 5 5 0 0 1 5-5h3"></path><line x1="8" y1="12" x2="16" y2="12"></line>',link:'<path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71"></path><path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71"></path>',linkedin:'<path d="M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z"></path><rect x="2" y="9" width="4" height="12"></rect><circle cx="4" cy="4" r="2"></circle>',list:'<line x1="8" y1="6" x2="21" y2="6"></line><line x1="8" y1="12" x2="21" y2="12"></line><line x1="8" y1="18" x2="21" y2="18"></line><line x1="3" y1="6" x2="3" y2="6"></line><line x1="3" y1="12" x2="3" y2="12"></line><line x1="3" y1="18" x2="3" y2="18"></line>',loader:'<line x1="12" y1="2" x2="12" y2="6"></line><line x1="12" y1="18" x2="12" y2="22"></line><line x1="4.93" y1="4.93" x2="7.76" y2="7.76"></line><line x1="16.24" y1="16.24" x2="19.07" y2="19.07"></line><line x1="2" y1="12" x2="6" y2="12"></line><line x1="18" y1="12" x2="22" y2="12"></line><line x1="4.93" y1="19.07" x2="7.76" y2="16.24"></line><line x1="16.24" y1="7.76" x2="19.07" y2="4.93"></line>',lock:'<rect x="3" y="11" width="18" height="11" rx="2" ry="2"></rect><path d="M7 11V7a5 5 0 0 1 10 0v4"></path>',"log-in":'<path d="M15 3h4a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-4"></path><polyline points="10 17 15 12 10 7"></polyline><line x1="15" y1="12" x2="3" y2="12"></line>',"log-out":'<path d="M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4"></path><polyline points="16 17 21 12 16 7"></polyline><line x1="21" y1="12" x2="9" y2="12"></line>',mail:'<path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"></path><polyline points="22,6 12,13 2,6"></polyline>',"map-pin":'<path d="M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z"></path><circle cx="12" cy="10" r="3"></circle>',map:'<polygon points="1 6 1 22 8 18 16 22 23 18 23 2 16 6 8 2 1 6"></polygon><line x1="8" y1="2" x2="8" y2="18"></line><line x1="16" y1="6" x2="16" y2="22"></line>',"maximize-2":'<polyline points="15 3 21 3 21 9"></polyline><polyline points="9 21 3 21 3 15"></polyline><line x1="21" y1="3" x2="14" y2="10"></line><line x1="3" y1="21" x2="10" y2="14"></line>',maximize:'<path d="M8 3H5a2 2 0 0 0-2 2v3m18 0V5a2 2 0 0 0-2-2h-3m0 18h3a2 2 0 0 0 2-2v-3M3 16v3a2 2 0 0 0 2 2h3"></path>',meh:'<circle cx="12" cy="12" r="10"></circle><line x1="8" y1="15" x2="16" y2="15"></line><line x1="9" y1="9" x2="9.01" y2="9"></line><line x1="15" y1="9" x2="15.01" y2="9"></line>',menu:'<line x1="3" y1="12" x2="21" y2="12"></line><line x1="3" y1="6" x2="21" y2="6"></line><line x1="3" y1="18" x2="21" y2="18"></line>',"message-circle":'<path d="M21 11.5a8.38 8.38 0 0 1-.9 3.8 8.5 8.5 0 0 1-7.6 4.7 8.38 8.38 0 0 1-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 0 1-.9-3.8 8.5 8.5 0 0 1 4.7-7.6 8.38 8.38 0 0 1 3.8-.9h.5a8.48 8.48 0 0 1 8 8v.5z"></path>',"message-square":'<path d="M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"></path>',"mic-off":'<line x1="1" y1="1" x2="23" y2="23"></line><path d="M9 9v3a3 3 0 0 0 5.12 2.12M15 9.34V4a3 3 0 0 0-5.94-.6"></path><path d="M17 16.95A7 7 0 0 1 5 12v-2m14 0v2a7 7 0 0 1-.11 1.23"></path><line x1="12" y1="19" x2="12" y2="23"></line><line x1="8" y1="23" x2="16" y2="23"></line>',mic:'<path d="M12 1a3 3 0 0 0-3 3v8a3 3 0 0 0 6 0V4a3 3 0 0 0-3-3z"></path><path d="M19 10v2a7 7 0 0 1-14 0v-2"></path><line x1="12" y1="19" x2="12" y2="23"></line><line x1="8" y1="23" x2="16" y2="23"></line>',"minimize-2":'<polyline points="4 14 10 14 10 20"></polyline><polyline points="20 10 14 10 14 4"></polyline><line x1="14" y1="10" x2="21" y2="3"></line><line x1="3" y1="21" x2="10" y2="14"></line>',minimize:'<path d="M8 3v3a2 2 0 0 1-2 2H3m18 0h-3a2 2 0 0 1-2-2V3m0 18v-3a2 2 0 0 1 2-2h3M3 16h3a2 2 0 0 1 2 2v3"></path>',"minus-circle":'<circle cx="12" cy="12" r="10"></circle><line x1="8" y1="12" x2="16" y2="12"></line>',"minus-square":'<rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect><line x1="8" y1="12" x2="16" y2="12"></line>',minus:'<line x1="5" y1="12" x2="19" y2="12"></line>',monitor:'<rect x="2" y="3" width="20" height="14" rx="2" ry="2"></rect><line x1="8" y1="21" x2="16" y2="21"></line><line x1="12" y1="17" x2="12" y2="21"></line>',moon:'<path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path>',"more-horizontal":'<circle cx="12" cy="12" r="1"></circle><circle cx="19" cy="12" r="1"></circle><circle cx="5" cy="12" r="1"></circle>',"more-vertical":'<circle cx="12" cy="12" r="1"></circle><circle cx="12" cy="5" r="1"></circle><circle cx="12" cy="19" r="1"></circle>',"mouse-pointer":'<path d="M3 3l7.07 16.97 2.51-7.39 7.39-2.51L3 3z"></path><path d="M13 13l6 6"></path>',move:'<polyline points="5 9 2 12 5 15"></polyline><polyline points="9 5 12 2 15 5"></polyline><polyline points="15 19 12 22 9 19"></polyline><polyline points="19 9 22 12 19 15"></polyline><line x1="2" y1="12" x2="22" y2="12"></line><line x1="12" y1="2" x2="12" y2="22"></line>',music:'<path d="M9 18V5l12-2v13"></path><circle cx="6" cy="18" r="3"></circle><circle cx="18" cy="16" r="3"></circle>',"navigation-2":'<polygon points="12 2 19 21 12 17 5 21 12 2"></polygon>',navigation:'<polygon points="3 11 22 2 13 21 11 13 3 11"></polygon>',octagon:'<polygon points="7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2"></polygon>',package:'<line x1="16.5" y1="9.4" x2="7.5" y2="4.21"></line><path d="M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z"></path><polyline points="3.27 6.96 12 12.01 20.73 6.96"></polyline><line x1="12" y1="22.08" x2="12" y2="12"></line>',paperclip:'<path d="M21.44 11.05l-9.19 9.19a6 6 0 0 1-8.49-8.49l9.19-9.19a4 4 0 0 1 5.66 5.66l-9.2 9.19a2 2 0 0 1-2.83-2.83l8.49-8.48"></path>',"pause-circle":'<circle cx="12" cy="12" r="10"></circle><line x1="10" y1="15" x2="10" y2="9"></line><line x1="14" y1="15" x2="14" y2="9"></line>',pause:'<rect x="6" y="4" width="4" height="16"></rect><rect x="14" y="4" width="4" height="16"></rect>',"pen-tool":'<path d="M12 19l7-7 3 3-7 7-3-3z"></path><path d="M18 13l-1.5-7.5L2 2l3.5 14.5L13 18l5-5z"></path><path d="M2 2l7.586 7.586"></path><circle cx="11" cy="11" r="2"></circle>',percent:'<line x1="19" y1="5" x2="5" y2="19"></line><circle cx="6.5" cy="6.5" r="2.5"></circle><circle cx="17.5" cy="17.5" r="2.5"></circle>',"phone-call":'<path d="M15.05 5A5 5 0 0 1 19 8.95M15.05 1A9 9 0 0 1 23 8.94m-1 7.98v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"></path>',"phone-forwarded":'<polyline points="19 1 23 5 19 9"></polyline><line x1="15" y1="5" x2="23" y2="5"></line><path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"></path>',"phone-incoming":'<polyline points="16 2 16 8 22 8"></polyline><line x1="23" y1="1" x2="16" y2="8"></line><path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"></path>',"phone-missed":'<line x1="23" y1="1" x2="17" y2="7"></line><line x1="17" y1="1" x2="23" y2="7"></line><path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"></path>',"phone-off":'<path d="M10.68 13.31a16 16 0 0 0 3.41 2.6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7 2 2 0 0 1 1.72 2v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.42 19.42 0 0 1-3.33-2.67m-2.67-3.34a19.79 19.79 0 0 1-3.07-8.63A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91"></path><line x1="23" y1="1" x2="1" y2="23"></line>',"phone-outgoing":'<polyline points="23 7 23 1 17 1"></polyline><line x1="16" y1="8" x2="23" y2="1"></line><path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"></path>',phone:'<path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"></path>',"pie-chart":'<path d="M21.21 15.89A10 10 0 1 1 8 2.83"></path><path d="M22 12A10 10 0 0 0 12 2v10z"></path>',"play-circle":'<circle cx="12" cy="12" r="10"></circle><polygon points="10 8 16 12 10 16 10 8"></polygon>',play:'<polygon points="5 3 19 12 5 21 5 3"></polygon>',"plus-circle":'<circle cx="12" cy="12" r="10"></circle><line x1="12" y1="8" x2="12" y2="16"></line><line x1="8" y1="12" x2="16" y2="12"></line>',"plus-square":'<rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect><line x1="12" y1="8" x2="12" y2="16"></line><line x1="8" y1="12" x2="16" y2="12"></line>',plus:'<line x1="12" y1="5" x2="12" y2="19"></line><line x1="5" y1="12" x2="19" y2="12"></line>',pocket:'<path d="M4 3h16a2 2 0 0 1 2 2v6a10 10 0 0 1-10 10A10 10 0 0 1 2 11V5a2 2 0 0 1 2-2z"></path><polyline points="8 10 12 14 16 10"></polyline>',power:'<path d="M18.36 6.64a9 9 0 1 1-12.73 0"></path><line x1="12" y1="2" x2="12" y2="12"></line>',printer:'<polyline points="6 9 6 2 18 2 18 9"></polyline><path d="M6 18H4a2 2 0 0 1-2-2v-5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-2"></path><rect x="6" y="14" width="12" height="8"></rect>',radio:'<circle cx="12" cy="12" r="2"></circle><path d="M16.24 7.76a6 6 0 0 1 0 8.49m-8.48-.01a6 6 0 0 1 0-8.49m11.31-2.82a10 10 0 0 1 0 14.14m-14.14 0a10 10 0 0 1 0-14.14"></path>',"refresh-ccw":'<polyline points="1 4 1 10 7 10"></polyline><polyline points="23 20 23 14 17 14"></polyline><path d="M20.49 9A9 9 0 0 0 5.64 5.64L1 10m22 4l-4.64 4.36A9 9 0 0 1 3.51 15"></path>',"refresh-cw":'<polyline points="23 4 23 10 17 10"></polyline><polyline points="1 20 1 14 7 14"></polyline><path d="M3.51 9a9 9 0 0 1 14.85-3.36L23 10M1 14l4.64 4.36A9 9 0 0 0 20.49 15"></path>',repeat:'<polyline points="17 1 21 5 17 9"></polyline><path d="M3 11V9a4 4 0 0 1 4-4h14"></path><polyline points="7 23 3 19 7 15"></polyline><path d="M21 13v2a4 4 0 0 1-4 4H3"></path>',rewind:'<polygon points="11 19 2 12 11 5 11 19"></polygon><polygon points="22 19 13 12 22 5 22 19"></polygon>',"rotate-ccw":'<polyline points="1 4 1 10 7 10"></polyline><path d="M3.51 15a9 9 0 1 0 2.13-9.36L1 10"></path>',"rotate-cw":'<polyline points="23 4 23 10 17 10"></polyline><path d="M20.49 15a9 9 0 1 1-2.12-9.36L23 10"></path>',rss:'<path d="M4 11a9 9 0 0 1 9 9"></path><path d="M4 4a16 16 0 0 1 16 16"></path><circle cx="5" cy="19" r="1"></circle>',save:'<path d="M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z"></path><polyline points="17 21 17 13 7 13 7 21"></polyline><polyline points="7 3 7 8 15 8"></polyline>',scissors:'<circle cx="6" cy="6" r="3"></circle><circle cx="6" cy="18" r="3"></circle><line x1="20" y1="4" x2="8.12" y2="15.88"></line><line x1="14.47" y1="14.48" x2="20" y2="20"></line><line x1="8.12" y1="8.12" x2="12" y2="12"></line>',search:'<circle cx="11" cy="11" r="8"></circle><line x1="21" y1="21" x2="16.65" y2="16.65"></line>',send:'<line x1="22" y1="2" x2="11" y2="13"></line><polygon points="22 2 15 22 11 13 2 9 22 2"></polygon>',server:'<rect x="2" y="2" width="20" height="8" rx="2" ry="2"></rect><rect x="2" y="14" width="20" height="8" rx="2" ry="2"></rect><line x1="6" y1="6" x2="6" y2="6"></line><line x1="6" y1="18" x2="6" y2="18"></line>',settings:'<circle cx="12" cy="12" r="3"></circle><path d="M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z"></path>',"share-2":'<circle cx="18" cy="5" r="3"></circle><circle cx="6" cy="12" r="3"></circle><circle cx="18" cy="19" r="3"></circle><line x1="8.59" y1="13.51" x2="15.42" y2="17.49"></line><line x1="15.41" y1="6.51" x2="8.59" y2="10.49"></line>',share:'<path d="M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8"></path><polyline points="16 6 12 2 8 6"></polyline><line x1="12" y1="2" x2="12" y2="15"></line>',"shield-off":'<path d="M19.69 14a6.9 6.9 0 0 0 .31-2V5l-8-3-3.16 1.18"></path><path d="M4.73 4.73L4 5v7c0 6 8 10 8 10a20.29 20.29 0 0 0 5.62-4.38"></path><line x1="1" y1="1" x2="23" y2="23"></line>',shield:'<path d="M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z"></path>',"shopping-bag":'<path d="M6 2L3 6v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V6l-3-4z"></path><line x1="3" y1="6" x2="21" y2="6"></line><path d="M16 10a4 4 0 0 1-8 0"></path>',"shopping-cart":'<circle cx="9" cy="21" r="1"></circle><circle cx="20" cy="21" r="1"></circle><path d="M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6"></path>',shuffle:'<polyline points="16 3 21 3 21 8"></polyline><line x1="4" y1="20" x2="21" y2="3"></line><polyline points="21 16 21 21 16 21"></polyline><line x1="15" y1="15" x2="21" y2="21"></line><line x1="4" y1="4" x2="9" y2="9"></line>',sidebar:'<rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect><line x1="9" y1="3" x2="9" y2="21"></line>',"skip-back":'<polygon points="19 20 9 12 19 4 19 20"></polygon><line x1="5" y1="19" x2="5" y2="5"></line>',"skip-forward":'<polygon points="5 4 15 12 5 20 5 4"></polygon><line x1="19" y1="5" x2="19" y2="19"></line>',slack:'<path d="M14.5 10c-.83 0-1.5-.67-1.5-1.5v-5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5v5c0 .83-.67 1.5-1.5 1.5z"></path><path d="M20.5 10H19V8.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5-.67 1.5-1.5 1.5z"></path><path d="M9.5 14c.83 0 1.5.67 1.5 1.5v5c0 .83-.67 1.5-1.5 1.5S8 21.33 8 20.5v-5c0-.83.67-1.5 1.5-1.5z"></path><path d="M3.5 14H5v1.5c0 .83-.67 1.5-1.5 1.5S2 16.33 2 15.5 2.67 14 3.5 14z"></path><path d="M14 14.5c0-.83.67-1.5 1.5-1.5h5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5h-5c-.83 0-1.5-.67-1.5-1.5z"></path><path d="M15.5 19H14v1.5c0 .83.67 1.5 1.5 1.5s1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z"></path><path d="M10 9.5C10 8.67 9.33 8 8.5 8h-5C2.67 8 2 8.67 2 9.5S2.67 11 3.5 11h5c.83 0 1.5-.67 1.5-1.5z"></path><path d="M8.5 5H10V3.5C10 2.67 9.33 2 8.5 2S7 2.67 7 3.5 7.67 5 8.5 5z"></path>',slash:'<circle cx="12" cy="12" r="10"></circle><line x1="4.93" y1="4.93" x2="19.07" y2="19.07"></line>',sliders:'<line x1="4" y1="21" x2="4" y2="14"></line><line x1="4" y1="10" x2="4" y2="3"></line><line x1="12" y1="21" x2="12" y2="12"></line><line x1="12" y1="8" x2="12" y2="3"></line><line x1="20" y1="21" x2="20" y2="16"></line><line x1="20" y1="12" x2="20" y2="3"></line><line x1="1" y1="14" x2="7" y2="14"></line><line x1="9" y1="8" x2="15" y2="8"></line><line x1="17" y1="16" x2="23" y2="16"></line>',smartphone:'<rect x="5" y="2" width="14" height="20" rx="2" ry="2"></rect><line x1="12" y1="18" x2="12" y2="18"></line>',smile:'<circle cx="12" cy="12" r="10"></circle><path d="M8 14s1.5 2 4 2 4-2 4-2"></path><line x1="9" y1="9" x2="9.01" y2="9"></line><line x1="15" y1="9" x2="15.01" y2="9"></line>',speaker:'<rect x="4" y="2" width="16" height="20" rx="2" ry="2"></rect><circle cx="12" cy="14" r="4"></circle><line x1="12" y1="6" x2="12" y2="6"></line>',square:'<rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect>',star:'<polygon points="12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2"></polygon>',"stop-circle":'<circle cx="12" cy="12" r="10"></circle><rect x="9" y="9" width="6" height="6"></rect>',sun:'<circle cx="12" cy="12" r="5"></circle><line x1="12" y1="1" x2="12" y2="3"></line><line x1="12" y1="21" x2="12" y2="23"></line><line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line><line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line><line x1="1" y1="12" x2="3" y2="12"></line><line x1="21" y1="12" x2="23" y2="12"></line><line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line><line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>',sunrise:'<path d="M17 18a5 5 0 0 0-10 0"></path><line x1="12" y1="2" x2="12" y2="9"></line><line x1="4.22" y1="10.22" x2="5.64" y2="11.64"></line><line x1="1" y1="18" x2="3" y2="18"></line><line x1="21" y1="18" x2="23" y2="18"></line><line x1="18.36" y1="11.64" x2="19.78" y2="10.22"></line><line x1="23" y1="22" x2="1" y2="22"></line><polyline points="8 6 12 2 16 6"></polyline>',sunset:'<path d="M17 18a5 5 0 0 0-10 0"></path><line x1="12" y1="9" x2="12" y2="2"></line><line x1="4.22" y1="10.22" x2="5.64" y2="11.64"></line><line x1="1" y1="18" x2="3" y2="18"></line><line x1="21" y1="18" x2="23" y2="18"></line><line x1="18.36" y1="11.64" x2="19.78" y2="10.22"></line><line x1="23" y1="22" x2="1" y2="22"></line><polyline points="16 5 12 9 8 5"></polyline>',tablet:'<rect x="4" y="2" width="16" height="20" rx="2" ry="2" transform="rotate(180 12 12)"></rect><line x1="12" y1="18" x2="12" y2="18"></line>',tag:'<path d="M20.59 13.41l-7.17 7.17a2 2 0 0 1-2.83 0L2 12V2h10l8.59 8.59a2 2 0 0 1 0 2.82z"></path><line x1="7" y1="7" x2="7" y2="7"></line>',target:'<circle cx="12" cy="12" r="10"></circle><circle cx="12" cy="12" r="6"></circle><circle cx="12" cy="12" r="2"></circle>',terminal:'<polyline points="4 17 10 11 4 5"></polyline><line x1="12" y1="19" x2="20" y2="19"></line>',thermometer:'<path d="M14 14.76V3.5a2.5 2.5 0 0 0-5 0v11.26a4.5 4.5 0 1 0 5 0z"></path>',"thumbs-down":'<path d="M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17"></path>',"thumbs-up":'<path d="M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3"></path>',"toggle-left":'<rect x="1" y="5" width="22" height="14" rx="7" ry="7"></rect><circle cx="8" cy="12" r="3"></circle>',"toggle-right":'<rect x="1" y="5" width="22" height="14" rx="7" ry="7"></rect><circle cx="16" cy="12" r="3"></circle>',"trash-2":'<polyline points="3 6 5 6 21 6"></polyline><path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"></path><line x1="10" y1="11" x2="10" y2="17"></line><line x1="14" y1="11" x2="14" y2="17"></line>',trash:'<polyline points="3 6 5 6 21 6"></polyline><path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"></path>',trello:'<rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect><rect x="7" y="7" width="3" height="9"></rect><rect x="14" y="7" width="3" height="5"></rect>',"trending-down":'<polyline points="23 18 13.5 8.5 8.5 13.5 1 6"></polyline><polyline points="17 18 23 18 23 12"></polyline>',"trending-up":'<polyline points="23 6 13.5 15.5 8.5 10.5 1 18"></polyline><polyline points="17 6 23 6 23 12"></polyline>',triangle:'<path d="M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z"></path>',truck:'<rect x="1" y="3" width="15" height="13"></rect><polygon points="16 8 20 8 23 11 23 16 16 16 16 8"></polygon><circle cx="5.5" cy="18.5" r="2.5"></circle><circle cx="18.5" cy="18.5" r="2.5"></circle>',tv:'<rect x="2" y="7" width="20" height="15" rx="2" ry="2"></rect><polyline points="17 2 12 7 7 2"></polyline>',twitter:'<path d="M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66 10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5 4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z"></path>',type:'<polyline points="4 7 4 4 20 4 20 7"></polyline><line x1="9" y1="20" x2="15" y2="20"></line><line x1="12" y1="4" x2="12" y2="20"></line>',umbrella:'<path d="M23 12a11.05 11.05 0 0 0-22 0zm-5 7a3 3 0 0 1-6 0v-7"></path>',underline:'<path d="M6 3v7a6 6 0 0 0 6 6 6 6 0 0 0 6-6V3"></path><line x1="4" y1="21" x2="20" y2="21"></line>',unlock:'<rect x="3" y="11" width="18" height="11" rx="2" ry="2"></rect><path d="M7 11V7a5 5 0 0 1 9.9-1"></path>',"upload-cloud":'<polyline points="16 16 12 12 8 16"></polyline><line x1="12" y1="12" x2="12" y2="21"></line><path d="M20.39 18.39A5 5 0 0 0 18 9h-1.26A8 8 0 1 0 3 16.3"></path><polyline points="16 16 12 12 8 16"></polyline>',upload:'<path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"></path><polyline points="17 8 12 3 7 8"></polyline><line x1="12" y1="3" x2="12" y2="15"></line>',"user-check":'<path d="M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"></path><circle cx="8.5" cy="7" r="4"></circle><polyline points="17 11 19 13 23 9"></polyline>',"user-minus":'<path d="M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"></path><circle cx="8.5" cy="7" r="4"></circle><line x1="23" y1="11" x2="17" y2="11"></line>',"user-plus":'<path d="M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"></path><circle cx="8.5" cy="7" r="4"></circle><line x1="20" y1="8" x2="20" y2="14"></line><line x1="23" y1="11" x2="17" y2="11"></line>',"user-x":'<path d="M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"></path><circle cx="8.5" cy="7" r="4"></circle><line x1="18" y1="8" x2="23" y2="13"></line><line x1="23" y1="8" x2="18" y2="13"></line>',user:'<path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path><circle cx="12" cy="7" r="4"></circle>',users:'<path d="M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"></path><circle cx="9" cy="7" r="4"></circle><path d="M23 21v-2a4 4 0 0 0-3-3.87"></path><path d="M16 3.13a4 4 0 0 1 0 7.75"></path>',"video-off":'<path d="M16 16v1a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h2m5.66 0H14a2 2 0 0 1 2 2v3.34l1 1L23 7v10"></path><line x1="1" y1="1" x2="23" y2="23"></line>',video:'<polygon points="23 7 16 12 23 17 23 7"></polygon><rect x="1" y="5" width="15" height="14" rx="2" ry="2"></rect>',voicemail:'<circle cx="5.5" cy="11.5" r="4.5"></circle><circle cx="18.5" cy="11.5" r="4.5"></circle><line x1="5.5" y1="16" x2="18.5" y2="16"></line>',"volume-1":'<polygon points="11 5 6 9 2 9 2 15 6 15 11 19 11 5"></polygon><path d="M15.54 8.46a5 5 0 0 1 0 7.07"></path>',"volume-2":'<polygon points="11 5 6 9 2 9 2 15 6 15 11 19 11 5"></polygon><path d="M19.07 4.93a10 10 0 0 1 0 14.14M15.54 8.46a5 5 0 0 1 0 7.07"></path>',"volume-x":'<polygon points="11 5 6 9 2 9 2 15 6 15 11 19 11 5"></polygon><line x1="23" y1="9" x2="17" y2="15"></line><line x1="17" y1="9" x2="23" y2="15"></line>',volume:'<polygon points="11 5 6 9 2 9 2 15 6 15 11 19 11 5"></polygon>',watch:'<circle cx="12" cy="12" r="7"></circle><polyline points="12 9 12 12 13.5 13.5"></polyline><path d="M16.51 17.35l-.35 3.83a2 2 0 0 1-2 1.82H9.83a2 2 0 0 1-2-1.82l-.35-3.83m.01-10.7l.35-3.83A2 2 0 0 1 9.83 1h4.35a2 2 0 0 1 2 1.82l.35 3.83"></path>',"wifi-off":'<line x1="1" y1="1" x2="23" y2="23"></line><path d="M16.72 11.06A10.94 10.94 0 0 1 19 12.55"></path><path d="M5 12.55a10.94 10.94 0 0 1 5.17-2.39"></path><path d="M10.71 5.05A16 16 0 0 1 22.58 9"></path><path d="M1.42 9a15.91 15.91 0 0 1 4.7-2.88"></path><path d="M8.53 16.11a6 6 0 0 1 6.95 0"></path><line x1="12" y1="20" x2="12" y2="20"></line>',wifi:'<path d="M5 12.55a11 11 0 0 1 14.08 0"></path><path d="M1.42 9a16 16 0 0 1 21.16 0"></path><path d="M8.53 16.11a6 6 0 0 1 6.95 0"></path><line x1="12" y1="20" x2="12" y2="20"></line>',wind:'<path d="M9.59 4.59A2 2 0 1 1 11 8H2m10.59 11.41A2 2 0 1 0 14 16H2m15.73-8.27A2.5 2.5 0 1 1 19.5 12H2"></path>',"x-circle":'<circle cx="12" cy="12" r="10"></circle><line x1="15" y1="9" x2="9" y2="15"></line><line x1="9" y1="9" x2="15" y2="15"></line>',"x-octagon":'<polygon points="7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2"></polygon><line x1="15" y1="9" x2="9" y2="15"></line><line x1="9" y1="9" x2="15" y2="15"></line>',"x-square":'<rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect><line x1="9" y1="9" x2="15" y2="15"></line><line x1="15" y1="9" x2="9" y2="15"></line>',x:'<line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line>',youtube:'<path d="M22.54 6.42a2.78 2.78 0 0 0-1.94-2C18.88 4 12 4 12 4s-6.88 0-8.6.46a2.78 2.78 0 0 0-1.94 2A29 29 0 0 0 1 11.75a29 29 0 0 0 .46 5.33A2.78 2.78 0 0 0 3.4 19c1.72.46 8.6.46 8.6.46s6.88 0 8.6-.46a2.78 2.78 0 0 0 1.94-2 29 29 0 0 0 .46-5.25 29 29 0 0 0-.46-5.33z"></path><polygon points="9.75 15.02 15.5 11.75 9.75 8.48 9.75 15.02"></polygon>',"zap-off":'<polyline points="12.41 6.75 13 2 10.57 4.92"></polyline><polyline points="18.57 12.91 21 10 15.66 10"></polyline><polyline points="8 8 3 14 12 14 11 22 16 16"></polyline><line x1="1" y1="1" x2="23" y2="23"></line>',zap:'<polygon points="13 2 3 14 12 14 11 22 21 10 12 10 13 2"></polygon>',"zoom-in":'<circle cx="11" cy="11" r="8"></circle><line x1="21" y1="21" x2="16.65" y2="16.65"></line><line x1="11" y1="8" x2="11" y2="14"></line><line x1="8" y1="11" x2="14" y2="11"></line>',"zoom-out":'<circle cx="11" cy="11" r="8"></circle><line x1="21" y1="21" x2="16.65" y2="16.65"></line><line x1="8" y1="11" x2="14" y2="11"></line>'}},function(e){e.exports={xmlns:"http://www.w3.org/2000/svg",width:24,height:24,viewBox:"0 0 24 24",fill:"none",stroke:"currentColor","stroke-width":2,"stroke-linecap":"round","stroke-linejoin":"round"}},function(e,n,i){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var l=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var i=arguments[n];for(var l in i)Object.prototype.hasOwnProperty.call(i,l)&&(e[l]=i[l])}return e},t=function(){function e(e,n){for(var i=0;i<n.length;i++){var l=n[i];l.enumerable=l.enumerable||!1,l.configurable=!0,"value"in l&&(l.writable=!0),Object.defineProperty(e,l.key,l)}}return function(n,i,l){return i&&e(n.prototype,i),l&&e(n,l),n}}(),r=a(i(16)),o=a(i(34));function a(e){return e&&e.__esModule?e:{default:e}}var c=function(){function e(n,i){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];!function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,e),this.name=n,this.contents=i,this.tags=t,this.attrs=l({},o.default,{class:"feather feather-"+n})}return t(e,[{key:"toSvg",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return"<svg "+function(e){return Object.keys(e).map(function(n){return n+'="'+e[n]+'"'}).join(" ")}(l({},this.attrs,e,{class:(0,r.default)(this.attrs.class,e.class)}))+">"+this.contents+"</svg>"}},{key:"toString",value:function(){return this.contents}}]),e}();n.default=c},function(e,n,i){"use strict";var l=o(i(8)),t=o(i(31)),r=o(i(30));function o(e){return e&&e.__esModule?e:{default:e}}e.exports={icons:l.default,toSvg:t.default,replace:r.default}},function(e,n,i){var l=i(0)("iterator"),t=!1;try{var r=[7][l]();r.return=function(){t=!0},Array.from(r,function(){throw 2})}catch(e){}e.exports=function(e,n){if(!n&&!t)return!1;var i=!1;try{var r=[7],o=r[l]();o.next=function(){return{done:i=!0}},r[l]=function(){return o},e(r)}catch(e){}return i}},function(e,n,i){var l=i(22),t=i(0)("toStringTag"),r="Arguments"==l(function(){return arguments}());e.exports=function(e){var n,i,o;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(i=function(e,n){try{return e[n]}catch(e){}}(n=Object(e),t))?i:r?l(n):"Object"==(o=l(n))&&"function"==typeof n.callee?"Arguments":o}},function(e,n,i){var l=i(38),t=i(0)("iterator"),r=i(10);e.exports=i(2).getIteratorMethod=function(e){if(void 0!=e)return e[t]||e["@@iterator"]||r[l(e)]}},function(e,n,i){"use strict";var l=i(6),t=i(12);e.exports=function(e,n,i){n in e?l.f(e,n,t(0,i)):e[n]=i}},function(e,n,i){var l=i(10),t=i(0)("iterator"),r=Array.prototype;e.exports=function(e){return void 0!==e&&(l.Array===e||r[t]===e)}},function(e,n,i){var l=i(5);e.exports=function(e,n,i,t){try{return t?n(l(i)[0],i[1]):n(i)}catch(n){var r=e.return;throw void 0!==r&&l(r.call(e)),n}}},function(e,n,i){"use strict";var l=i(24),t=i(28),r=i(17),o=i(42),a=i(41),c=i(21),y=i(40),p=i(39);t(t.S+t.F*!i(37)(function(e){Array.from(e)}),"Array",{from:function(e){var n,i,t,h,x=r(e),s="function"==typeof this?this:Array,u=arguments.length,d=u>1?arguments[1]:void 0,f=void 0!==d,v=0,g=p(x);if(f&&(d=l(d,u>2?arguments[2]:void 0,2)),void 0==g||s==Array&&a(g))for(i=new s(n=c(x.length));n>v;v++)y(i,v,f?d(x[v],v):x[v]);else for(h=g.call(x),i=new s;!(t=h.next()).done;v++)y(i,v,f?o(h,d,[t.value,v],!0):t.value);return i.length=v,i}})},function(e,n,i){var l=i(3),t=i(17),r=i(9)("IE_PROTO"),o=Object.prototype;e.exports=Object.getPrototypeOf||function(e){return e=t(e),l(e,r)?e[r]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?o:null}},function(e,n,i){var l=i(1).document;e.exports=l&&l.documentElement},function(e,n,i){var l=i(15),t=Math.max,r=Math.min;e.exports=function(e,n){return(e=l(e))<0?t(e+n,0):r(e,n)}},function(e,n,i){var l=i(23),t=i(21),r=i(46);e.exports=function(e){return function(n,i,o){var a,c=l(n),y=t(c.length),p=r(o,y);if(e&&i!=i){for(;y>p;)if((a=c[p++])!=a)return!0}else for(;y>p;p++)if((e||p in c)&&c[p]===i)return e||p||0;return!e&&-1}}},function(e,n,i){var l=i(22);e.exports=Object("z").propertyIsEnumerable(0)?Object:function(e){return"String"==l(e)?e.split(""):Object(e)}},function(e,n,i){var l=i(3),t=i(23),r=i(47)(!1),o=i(9)("IE_PROTO");e.exports=function(e,n){var i,a=t(e),c=0,y=[];for(i in a)i!=o&&l(a,i)&&y.push(i);for(;n.length>c;)l(a,i=n[c++])&&(~r(y,i)||y.push(i));return y}},function(e,n,i){var l=i(49),t=i(19);e.exports=Object.keys||function(e){return l(e,t)}},function(e,n,i){var l=i(6),t=i(5),r=i(50);e.exports=i(4)?Object.defineProperties:function(e,n){t(e);for(var i,o=r(n),a=o.length,c=0;a>c;)l.f(e,i=o[c++],n[i]);return e}},function(e,n,i){var l=i(5),t=i(51),r=i(19),o=i(9)("IE_PROTO"),a=function(){},c=function(){var e,n=i(26)("iframe"),l=r.length;for(n.style.display="none",i(45).appendChild(n),n.src="javascript:",(e=n.contentWindow.document).open(),e.write("<script>document.F=Object<\/script>"),e.close(),c=e.F;l--;)delete c.prototype[r[l]];return c()};e.exports=Object.create||function(e,n){var i;return null!==e?(a.prototype=l(e),i=new a,a.prototype=null,i[o]=e):i=c(),void 0===n?i:t(i,n)}},function(e,n,i){"use strict";var l=i(52),t=i(12),r=i(18),o={};i(7)(o,i(0)("iterator"),function(){return this}),e.exports=function(e,n,i){e.prototype=l(o,{next:t(1,i)}),r(e,n+" Iterator")}},function(e,n){e.exports=function(e){if("function"!=typeof e)throw TypeError(e+" is not a function!");return e}},function(e,n,i){var l=i(13);e.exports=function(e,n){if(!l(e))return e;var i,t;if(n&&"function"==typeof(i=e.toString)&&!l(t=i.call(e)))return t;if("function"==typeof(i=e.valueOf)&&!l(t=i.call(e)))return t;if(!n&&"function"==typeof(i=e.toString)&&!l(t=i.call(e)))return t;throw TypeError("Can't convert object to primitive value")}},function(e,n,i){e.exports=!i(4)&&!i(27)(function(){return 7!=Object.defineProperty(i(26)("div"),"a",{get:function(){return 7}}).a})},function(e,n,i){"use strict";var l=i(29),t=i(28),r=i(25),o=i(7),a=i(10),c=i(53),y=i(18),p=i(44),h=i(0)("iterator"),x=!([].keys&&"next"in[].keys()),s=function(){return this};e.exports=function(e,n,i,u,d,f,v){c(i,n,u);var g,m,M,w=function(e){if(!x&&e in k)return k[e];switch(e){case"keys":case"values":return function(){return new i(this,e)}}return function(){return new i(this,e)}},b=n+" Iterator",z="values"==d,A=!1,k=e.prototype,H=k[h]||k["@@iterator"]||d&&k[d],V=H||w(d),j=d?z?w("entries"):V:void 0,O="Array"==n&&k.entries||H;if(O&&(M=p(O.call(new e)))!==Object.prototype&&M.next&&(y(M,b,!0),l||"function"==typeof M[h]||o(M,h,s)),z&&H&&"values"!==H.name&&(A=!0,V=function(){return H.call(this)}),l&&!v||!x&&!A&&k[h]||o(k,h,V),a[n]=V,a[b]=s,d)if(g={values:z?V:w("values"),keys:f?V:w("keys"),entries:j},v)for(m in g)m in k||r(k,m,g[m]);else t(t.P+t.F*(x||A),n,g);return g}},function(e,n,i){var l=i(15),t=i(14);e.exports=function(e){return function(n,i){var r,o,a=String(t(n)),c=l(i),y=a.length;return c<0||c>=y?e?"":void 0:(r=a.charCodeAt(c))<55296||r>56319||c+1===y||(o=a.charCodeAt(c+1))<56320||o>57343?e?a.charAt(c):r:e?a.slice(c,c+2):o-56320+(r-55296<<10)+65536}}},function(e,n,i){"use strict";var l=i(58)(!0);i(57)(String,"String",function(e){this._t=String(e),this._i=0},function(){var e,n=this._t,i=this._i;return i>=n.length?{value:void 0,done:!0}:(e=l(n,i),this._i+=e.length,{value:e,done:!1})})},function(e,n,i){i(59),i(43),e.exports=i(2).Array.from},function(e,n,i){i(60),e.exports=i(36)}])});
//# sourceMappingURL=feather.min.js.map

/* Waves Effect */
!function(t,e){"use strict";"function"==typeof define&&define.amd?define([],function(){return t.Waves=e.call(t),t.Waves}):"object"==typeof exports?module.exports=e.call(t):t.Waves=e.call(t)}("object"==typeof global?global:this,function(){"use strict";function t(t){return null!==t&&t===t.window}function e(e){return t(e)?e:9===e.nodeType&&e.defaultView}function n(t){var e=typeof t;return"function"===e||"object"===e&&!!t}function o(t){return n(t)&&t.nodeType>0}function a(t){var e=f.call(t);return"[object String]"===e?d(t):n(t)&&/^\[object (Array|HTMLCollection|NodeList|Object)\]$/.test(e)&&t.hasOwnProperty("length")?t:o(t)?[t]:[]}function i(t){var n,o,a={top:0,left:0},i=t&&t.ownerDocument;return n=i.documentElement,void 0!==t.getBoundingClientRect&&(a=t.getBoundingClientRect()),o=e(i),{top:a.top+o.pageYOffset-n.clientTop,left:a.left+o.pageXOffset-n.clientLeft}}function r(t){var e="";for(var n in t)t.hasOwnProperty(n)&&(e+=n+":"+t[n]+";");return e}function s(t,e,n){if(n){n.classList.remove("waves-rippling");var o=n.getAttribute("data-x"),a=n.getAttribute("data-y"),i=n.getAttribute("data-scale"),s=n.getAttribute("data-translate"),u=350-(Date.now()-Number(n.getAttribute("data-hold")));u<0&&(u=0),"mousemove"===t.type&&(u=150);var c="mousemove"===t.type?2500:v.duration;setTimeout(function(){var t={top:a+"px",left:o+"px",opacity:"0","-webkit-transition-duration":c+"ms","-moz-transition-duration":c+"ms","-o-transition-duration":c+"ms","transition-duration":c+"ms","-webkit-transform":i+" "+s,"-moz-transform":i+" "+s,"-ms-transform":i+" "+s,"-o-transform":i+" "+s,transform:i+" "+s};n.setAttribute("style",r(t)),setTimeout(function(){try{e.removeChild(n)}catch(t){return!1}},c)},u)}}function u(t){if(!1===h.allowEvent(t))return null;for(var e=null,n=t.target||t.srcElement;n.parentElement;){if(!(n instanceof SVGElement)&&n.classList.contains("waves-effect")){e=n;break}n=n.parentElement}return e}function c(t){var e=u(t);if(null!==e){if(e.disabled||e.getAttribute("disabled")||e.classList.contains("disabled"))return;if(h.registerEvent(t),"touchstart"===t.type&&v.delay){var n=!1,o=setTimeout(function(){o=null,v.show(t,e)},v.delay),a=function(a){o&&(clearTimeout(o),o=null,v.show(t,e)),n||(n=!0,v.hide(a,e)),r()},i=function(t){o&&(clearTimeout(o),o=null),a(t),r()};e.addEventListener("touchmove",i,!1),e.addEventListener("touchend",a,!1),e.addEventListener("touchcancel",a,!1);var r=function(){e.removeEventListener("touchmove",i),e.removeEventListener("touchend",a),e.removeEventListener("touchcancel",a)}}else v.show(t,e),m&&(e.addEventListener("touchend",v.hide,!1),e.addEventListener("touchcancel",v.hide,!1)),e.addEventListener("mouseup",v.hide,!1),e.addEventListener("mouseleave",v.hide,!1)}}var l=l||{},d=document.querySelectorAll.bind(document),f=Object.prototype.toString,m="ontouchstart"in window,v={duration:750,delay:200,show:function(t,e,n){if(2===t.button)return!1;e=e||this;var o=document.createElement("div");o.className="waves-ripple waves-rippling",e.appendChild(o);var a=i(e),s=0,u=0;"touches"in t&&t.touches.length?(s=t.touches[0].pageY-a.top,u=t.touches[0].pageX-a.left):(s=t.pageY-a.top,u=t.pageX-a.left),u=u>=0?u:0,s=s>=0?s:0;var c="scale("+e.clientWidth/100*3+")",l="translate(0,0)";n&&(l="translate("+n.x+"px, "+n.y+"px)"),o.setAttribute("data-hold",Date.now()),o.setAttribute("data-x",u),o.setAttribute("data-y",s),o.setAttribute("data-scale",c),o.setAttribute("data-translate",l);var d={top:s+"px",left:u+"px"};o.classList.add("waves-notransition"),o.setAttribute("style",r(d)),o.classList.remove("waves-notransition"),d["-webkit-transform"]=c+" "+l,d["-moz-transform"]=c+" "+l,d["-ms-transform"]=c+" "+l,d["-o-transform"]=c+" "+l,d.transform=c+" "+l,d.opacity="1";var f="mousemove"===t.type?2500:v.duration;d["-webkit-transition-duration"]=f+"ms",d["-moz-transition-duration"]=f+"ms",d["-o-transition-duration"]=f+"ms",d["transition-duration"]=f+"ms",o.setAttribute("style",r(d))},hide:function(t,e){for(var n=(e=e||this).getElementsByClassName("waves-rippling"),o=0,a=n.length;o<a;o++)s(t,e,n[o]);m&&(e.removeEventListener("touchend",v.hide),e.removeEventListener("touchcancel",v.hide)),e.removeEventListener("mouseup",v.hide),e.removeEventListener("mouseleave",v.hide)}},p={input:function(t){var e=t.parentNode;if("i"!==e.tagName.toLowerCase()||!e.classList.contains("waves-effect")){var n=document.createElement("i");n.className=t.className+" waves-input-wrapper",t.className="waves-button-input",e.replaceChild(n,t),n.appendChild(t);var o=window.getComputedStyle(t,null),a=o.color,i=o.backgroundColor;n.setAttribute("style","color:"+a+";background:"+i),t.setAttribute("style","background-color:rgba(0,0,0,0);")}},img:function(t){var e=t.parentNode;if("i"!==e.tagName.toLowerCase()||!e.classList.contains("waves-effect")){var n=document.createElement("i");e.replaceChild(n,t),n.appendChild(t)}}},h={touches:0,allowEvent:function(t){var e=!0;return/^(mousedown|mousemove)$/.test(t.type)&&h.touches&&(e=!1),e},registerEvent:function(t){var e=t.type;"touchstart"===e?h.touches+=1:/^(touchend|touchcancel)$/.test(e)&&setTimeout(function(){h.touches&&(h.touches-=1)},500)}};return l.init=function(t){var e=document.body;"duration"in(t=t||{})&&(v.duration=t.duration),"delay"in t&&(v.delay=t.delay),m&&(e.addEventListener("touchstart",c,!1),e.addEventListener("touchcancel",h.registerEvent,!1),e.addEventListener("touchend",h.registerEvent,!1)),e.addEventListener("mousedown",c,!1)},l.attach=function(t,e){t=a(t),"[object Array]"===f.call(e)&&(e=e.join(" ")),e=e?" "+e:"";for(var n,o,i=0,r=t.length;i<r;i++)o=(n=t[i]).tagName.toLowerCase(),-1!==["input","img"].indexOf(o)&&(p[o](n),n=n.parentElement),-1===n.className.indexOf("waves-effect")&&(n.className+=" waves-effect"+e)},l.ripple=function(t,e){var n=(t=a(t)).length;if(e=e||{},e.wait=e.wait||0,e.position=e.position||null,n)for(var o,r,s,u={},c=0,l={type:"mousedown",button:1};c<n;c++)if(o=t[c],r=e.position||{x:o.clientWidth/2,y:o.clientHeight/2},s=i(o),u.x=s.left+r.x,u.y=s.top+r.y,l.pageX=u.x,l.pageY=u.y,v.show(l,o),e.wait>=0&&null!==e.wait){var d={type:"mouseup",button:1};setTimeout(function(t,e){return function(){v.hide(t,e)}}(d,o),e.wait)}},l.calm=function(t){for(var e={type:"mouseup",button:1},n=0,o=(t=a(t)).length;n<o;n++)v.hide(e,t[n])},l.displayEffect=function(t){l.init(t)},l});
//# sourceMappingURL=waves.min.js.map

!function(e,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define([],n):"object"==typeof exports?exports.feather=n():e.feather=n()}("undefined"!=typeof self?self:this,function(){return function(e){var n={};function i(t){if(n[t])return n[t].exports;var l=n[t]={i:t,l:!1,exports:{}};return e[t].call(l.exports,l,l.exports,i),l.l=!0,l.exports}return i.m=e,i.c=n,i.d=function(e,n,t){i.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:t})},i.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},i.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(n,"a",n),n},i.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},i.p="",i(i.s=80)}([function(e,n,i){(function(n){var i="object",t=function(e){return e&&e.Math==Math&&e};e.exports=t(typeof globalThis==i&&globalThis)||t(typeof window==i&&window)||t(typeof self==i&&self)||t(typeof n==i&&n)||Function("return this")()}).call(this,i(75))},function(e,n){var i={}.hasOwnProperty;e.exports=function(e,n){return i.call(e,n)}},function(e,n,i){var t=i(0),l=i(11),r=i(33),o=i(62),a=t.Symbol,c=l("wks");e.exports=function(e){return c[e]||(c[e]=o&&a[e]||(o?a:r)("Symbol."+e))}},function(e,n,i){var t=i(6);e.exports=function(e){if(!t(e))throw TypeError(String(e)+" is not an object");return e}},function(e,n){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,n,i){var t=i(8),l=i(7),r=i(10);e.exports=t?function(e,n,i){return l.f(e,n,r(1,i))}:function(e,n,i){return e[n]=i,e}},function(e,n){e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},function(e,n,i){var t=i(8),l=i(35),r=i(3),o=i(18),a=Object.defineProperty;n.f=t?a:function(e,n,i){if(r(e),n=o(n,!0),r(i),l)try{return a(e,n,i)}catch(e){}if("get"in i||"set"in i)throw TypeError("Accessors not supported");return"value"in i&&(e[n]=i.value),e}},function(e,n,i){var t=i(4);e.exports=!t(function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a})},function(e,n){e.exports={}},function(e,n){e.exports=function(e,n){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:n}}},function(e,n,i){var t=i(0),l=i(19),r=i(17),o=t["__core-js_shared__"]||l("__core-js_shared__",{});(e.exports=function(e,n){return o[e]||(o[e]=void 0!==n?n:{})})("versions",[]).push({version:"3.1.3",mode:r?"pure":"global",copyright:"© 2019 Denis Pushkarev (zloirock.ru)"})},function(e,n,i){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var t=o(i(43)),l=o(i(41)),r=o(i(40));function o(e){return e&&e.__esModule?e:{default:e}}n.default=Object.keys(l.default).map(function(e){return new t.default(e,l.default[e],r.default[e])}).reduce(function(e,n){return e[n.name]=n,e},{})},function(e,n){e.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},function(e,n,i){var t=i(72),l=i(20);e.exports=function(e){return t(l(e))}},function(e,n){e.exports={}},function(e,n,i){var t=i(11),l=i(33),r=t("keys");e.exports=function(e){return r[e]||(r[e]=l(e))}},function(e,n){e.exports=!1},function(e,n,i){var t=i(6);e.exports=function(e,n){if(!t(e))return e;var i,l;if(n&&"function"==typeof(i=e.toString)&&!t(l=i.call(e)))return l;if("function"==typeof(i=e.valueOf)&&!t(l=i.call(e)))return l;if(!n&&"function"==typeof(i=e.toString)&&!t(l=i.call(e)))return l;throw TypeError("Can't convert object to primitive value")}},function(e,n,i){var t=i(0),l=i(5);e.exports=function(e,n){try{l(t,e,n)}catch(i){t[e]=n}return n}},function(e,n){e.exports=function(e){if(void 0==e)throw TypeError("Can't call method on "+e);return e}},function(e,n){var i=Math.ceil,t=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?t:i)(e)}},function(e,n,i){var t;
    /*!
      Copyright (c) 2016 Jed Watson.
      Licensed under the MIT License (MIT), see
      http://jedwatson.github.io/classnames
    */
    /*!
      Copyright (c) 2016 Jed Watson.
      Licensed under the MIT License (MIT), see
      http://jedwatson.github.io/classnames
    */
    !function(){"use strict";var i=function(){function e(){}function n(e,n){for(var i=n.length,t=0;t<i;++t)l(e,n[t])}e.prototype=Object.create(null);var i={}.hasOwnProperty;var t=/\s+/;function l(e,l){if(l){var r=typeof l;"string"===r?function(e,n){for(var i=n.split(t),l=i.length,r=0;r<l;++r)e[i[r]]=!0}(e,l):Array.isArray(l)?n(e,l):"object"===r?function(e,n){for(var t in n)i.call(n,t)&&(e[t]=!!n[t])}(e,l):"number"===r&&function(e,n){e[n]=!0}(e,l)}}return function(){for(var i=arguments.length,t=Array(i),l=0;l<i;l++)t[l]=arguments[l];var r=new e;n(r,t);var o=[];for(var a in r)r[a]&&o.push(a);return o.join(" ")}}();void 0!==e&&e.exports?e.exports=i:void 0===(t=function(){return i}.apply(n,[]))||(e.exports=t)}()},function(e,n,i){var t=i(7).f,l=i(1),r=i(2)("toStringTag");e.exports=function(e,n,i){e&&!l(e=i?e:e.prototype,r)&&t(e,r,{configurable:!0,value:n})}},function(e,n,i){var t=i(20);e.exports=function(e){return Object(t(e))}},function(e,n,i){var t=i(1),l=i(24),r=i(16),o=i(63),a=r("IE_PROTO"),c=Object.prototype;e.exports=o?Object.getPrototypeOf:function(e){return e=l(e),t(e,a)?e[a]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?c:null}},function(e,n,i){"use strict";var t,l,r,o=i(25),a=i(5),c=i(1),p=i(2),y=i(17),h=p("iterator"),x=!1;[].keys&&("next"in(r=[].keys())?(l=o(o(r)))!==Object.prototype&&(t=l):x=!0),void 0==t&&(t={}),y||c(t,h)||a(t,h,function(){return this}),e.exports={IteratorPrototype:t,BUGGY_SAFARI_ITERATORS:x}},function(e,n,i){var t=i(21),l=Math.min;e.exports=function(e){return e>0?l(t(e),9007199254740991):0}},function(e,n,i){var t=i(1),l=i(14),r=i(68),o=i(15),a=r(!1);e.exports=function(e,n){var i,r=l(e),c=0,p=[];for(i in r)!t(o,i)&&t(r,i)&&p.push(i);for(;n.length>c;)t(r,i=n[c++])&&(~a(p,i)||p.push(i));return p}},function(e,n,i){var t=i(0),l=i(11),r=i(5),o=i(1),a=i(19),c=i(36),p=i(37),y=p.get,h=p.enforce,x=String(c).split("toString");l("inspectSource",function(e){return c.call(e)}),(e.exports=function(e,n,i,l){var c=!!l&&!!l.unsafe,p=!!l&&!!l.enumerable,y=!!l&&!!l.noTargetGet;"function"==typeof i&&("string"!=typeof n||o(i,"name")||r(i,"name",n),h(i).source=x.join("string"==typeof n?n:"")),e!==t?(c?!y&&e[n]&&(p=!0):delete e[n],p?e[n]=i:r(e,n,i)):p?e[n]=i:a(n,i)})(Function.prototype,"toString",function(){return"function"==typeof this&&y(this).source||c.call(this)})},function(e,n){var i={}.toString;e.exports=function(e){return i.call(e).slice(8,-1)}},function(e,n,i){var t=i(8),l=i(73),r=i(10),o=i(14),a=i(18),c=i(1),p=i(35),y=Object.getOwnPropertyDescriptor;n.f=t?y:function(e,n){if(e=o(e),n=a(n,!0),p)try{return y(e,n)}catch(e){}if(c(e,n))return r(!l.f.call(e,n),e[n])}},function(e,n,i){var t=i(0),l=i(31).f,r=i(5),o=i(29),a=i(19),c=i(71),p=i(65);e.exports=function(e,n){var i,y,h,x,s,u=e.target,d=e.global,f=e.stat;if(i=d?t:f?t[u]||a(u,{}):(t[u]||{}).prototype)for(y in n){if(x=n[y],h=e.noTargetGet?(s=l(i,y))&&s.value:i[y],!p(d?y:u+(f?".":"#")+y,e.forced)&&void 0!==h){if(typeof x==typeof h)continue;c(x,h)}(e.sham||h&&h.sham)&&r(x,"sham",!0),o(i,y,x,e)}}},function(e,n){var i=0,t=Math.random();e.exports=function(e){return"Symbol(".concat(void 0===e?"":e,")_",(++i+t).toString(36))}},function(e,n,i){var t=i(0),l=i(6),r=t.document,o=l(r)&&l(r.createElement);e.exports=function(e){return o?r.createElement(e):{}}},function(e,n,i){var t=i(8),l=i(4),r=i(34);e.exports=!t&&!l(function(){return 7!=Object.defineProperty(r("div"),"a",{get:function(){return 7}}).a})},function(e,n,i){var t=i(11);e.exports=t("native-function-to-string",Function.toString)},function(e,n,i){var t,l,r,o=i(76),a=i(0),c=i(6),p=i(5),y=i(1),h=i(16),x=i(15),s=a.WeakMap;if(o){var u=new s,d=u.get,f=u.has,v=u.set;t=function(e,n){return v.call(u,e,n),n},l=function(e){return d.call(u,e)||{}},r=function(e){return f.call(u,e)}}else{var g=h("state");x[g]=!0,t=function(e,n){return p(e,g,n),n},l=function(e){return y(e,g)?e[g]:{}},r=function(e){return y(e,g)}}e.exports={set:t,get:l,has:r,enforce:function(e){return r(e)?l(e):t(e,{})},getterFor:function(e){return function(n){var i;if(!c(n)||(i=l(n)).type!==e)throw TypeError("Incompatible receiver, "+e+" required");return i}}}},function(e,n,i){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var t=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var i=arguments[n];for(var t in i)Object.prototype.hasOwnProperty.call(i,t)&&(e[t]=i[t])}return e},l=o(i(22)),r=o(i(12));function o(e){return e&&e.__esModule?e:{default:e}}n.default=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if("undefined"==typeof document)throw new Error("`feather.replace()` only works in a browser environment.");var n=document.querySelectorAll("[data-feather]");Array.from(n).forEach(function(n){return function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=function(e){return Array.from(e.attributes).reduce(function(e,n){return e[n.name]=n.value,e},{})}(e),o=i["data-feather"];delete i["data-feather"];var a=r.default[o].toSvg(t({},n,i,{class:(0,l.default)(n.class,i.class)})),c=(new DOMParser).parseFromString(a,"image/svg+xml").querySelector("svg");e.parentNode.replaceChild(c,e)}(n,e)})}},function(e,n,i){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var t,l=i(12),r=(t=l)&&t.__esModule?t:{default:t};n.default=function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(console.warn("feather.toSvg() is deprecated. Please use feather.icons[name].toSvg() instead."),!e)throw new Error("The required `key` (icon name) parameter is missing.");if(!r.default[e])throw new Error("No icon matching '"+e+"'. See the complete list of icons at https://feathericons.com");return r.default[e].toSvg(n)}},function(e){e.exports={activity:["pulse","health","action","motion"],airplay:["stream","cast","mirroring"],"alert-circle":["warning"],"alert-octagon":["warning"],"alert-triangle":["warning"],"at-sign":["mention"],award:["achievement","badge"],aperture:["camera","photo"],bell:["alarm","notification"],"bell-off":["alarm","notification","silent"],bluetooth:["wireless"],"book-open":["read"],book:["read","dictionary","booklet","magazine"],bookmark:["read","clip","marker","tag"],briefcase:["work","bag","baggage","folder"],clipboard:["copy"],clock:["time","watch","alarm"],"cloud-drizzle":["weather","shower"],"cloud-lightning":["weather","bolt"],"cloud-rain":["weather"],"cloud-snow":["weather","blizzard"],cloud:["weather"],codepen:["logo"],codesandbox:["logo"],coffee:["drink","cup","mug","tea","cafe","hot","beverage"],command:["keyboard","cmd"],compass:["navigation","safari","travel"],copy:["clone","duplicate"],"corner-down-left":["arrow"],"corner-down-right":["arrow"],"corner-left-down":["arrow"],"corner-left-up":["arrow"],"corner-right-down":["arrow"],"corner-right-up":["arrow"],"corner-up-left":["arrow"],"corner-up-right":["arrow"],"credit-card":["purchase","payment","cc"],crop:["photo","image"],crosshair:["aim","target"],database:["storage"],delete:["remove"],disc:["album","cd","dvd","music"],"dollar-sign":["currency","money","payment"],droplet:["water"],edit:["pencil","change"],"edit-2":["pencil","change"],"edit-3":["pencil","change"],eye:["view","watch"],"eye-off":["view","watch"],"external-link":["outbound"],facebook:["logo"],"fast-forward":["music"],figma:["logo","design","tool"],film:["movie","video"],"folder-minus":["directory"],"folder-plus":["directory"],folder:["directory"],framer:["logo","design","tool"],frown:["emoji","face","bad","sad","emotion"],gift:["present","box","birthday","party"],"git-branch":["code","version control"],"git-commit":["code","version control"],"git-merge":["code","version control"],"git-pull-request":["code","version control"],github:["logo","version control"],gitlab:["logo","version control"],global:["world","browser","language","translate"],"hard-drive":["computer","server"],hash:["hashtag","number","pound"],headphones:["music","audio"],heart:["like","love"],"help-circle":["question mark"],hexagon:["shape","node.js","logo"],home:["house"],image:["picture"],inbox:["email"],instagram:["logo","camera"],key:["password","login","authentication"],"life-bouy":["help","life ring","support"],linkedin:["logo"],lock:["security","password"],"log-in":["sign in","arrow"],"log-out":["sign out","arrow"],mail:["email"],"map-pin":["location","navigation","travel","marker"],map:["location","navigation","travel"],maximize:["fullscreen"],"maximize-2":["fullscreen","arrows"],meh:["emoji","face","neutral","emotion"],menu:["bars","navigation","hamburger"],"message-circle":["comment","chat"],"message-square":["comment","chat"],"mic-off":["record"],mic:["record"],minimize:["exit fullscreen"],"minimize-2":["exit fullscreen","arrows"],monitor:["tv"],moon:["dark","night"],"more-horizontal":["ellipsis"],"more-vertical":["ellipsis"],"mouse-pointer":["arrow","cursor"],move:["arrows"],navigation:["location","travel"],"navigation-2":["location","travel"],octagon:["stop"],package:["box"],paperclip:["attachment"],pause:["music","stop"],"pause-circle":["music","stop"],"pen-tool":["vector","drawing"],play:["music","start"],"play-circle":["music","start"],plus:["add","new"],"plus-circle":["add","new"],"plus-square":["add","new"],pocket:["logo","save"],power:["on","off"],radio:["signal"],rewind:["music"],rss:["feed","subscribe"],save:["floppy disk"],search:["find","magnifier","magnifying glass"],send:["message","mail","paper airplane"],settings:["cog","edit","gear","preferences"],shield:["security"],"shield-off":["security"],"shopping-bag":["ecommerce","cart","purchase","store"],"shopping-cart":["ecommerce","cart","purchase","store"],shuffle:["music"],"skip-back":["music"],"skip-forward":["music"],slash:["ban","no"],sliders:["settings","controls"],smile:["emoji","face","happy","good","emotion"],speaker:["music"],star:["bookmark","favorite","like"],sun:["brightness","weather","light"],sunrise:["weather"],sunset:["weather"],tag:["label"],target:["bullseye"],terminal:["code","command line"],"thumbs-down":["dislike","bad"],"thumbs-up":["like","good"],"toggle-left":["on","off","switch"],"toggle-right":["on","off","switch"],trash:["garbage","delete","remove"],"trash-2":["garbage","delete","remove"],triangle:["delta"],truck:["delivery","van","shipping"],twitter:["logo"],umbrella:["rain","weather"],"video-off":["camera","movie","film"],video:["camera","movie","film"],voicemail:["phone"],volume:["music","sound","mute"],"volume-1":["music","sound"],"volume-2":["music","sound"],"volume-x":["music","sound","mute"],watch:["clock","time"],wind:["weather","air"],"x-circle":["cancel","close","delete","remove","times"],"x-octagon":["delete","stop","alert","warning","times"],"x-square":["cancel","close","delete","remove","times"],x:["cancel","close","delete","remove","times"],youtube:["logo","video","play"],"zap-off":["flash","camera","lightning"],zap:["flash","camera","lightning"]}},function(e){e.exports={activity:'<polyline points="22 12 18 12 15 21 9 3 6 12 2 12"></polyline>',airplay:'<path d="M5 17H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-1"></path><polygon points="12 15 17 21 7 21 12 15"></polygon>',"alert-circle":'<circle cx="12" cy="12" r="10"></circle><line x1="12" y1="8" x2="12" y2="12"></line><line x1="12" y1="16" x2="12.01" y2="16"></line>',"alert-octagon":'<polygon points="7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2"></polygon><line x1="12" y1="8" x2="12" y2="12"></line><line x1="12" y1="16" x2="12.01" y2="16"></line>',"alert-triangle":'<path d="M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z"></path><line x1="12" y1="9" x2="12" y2="13"></line><line x1="12" y1="17" x2="12.01" y2="17"></line>',"align-center":'<line x1="18" y1="10" x2="6" y2="10"></line><line x1="21" y1="6" x2="3" y2="6"></line><line x1="21" y1="14" x2="3" y2="14"></line><line x1="18" y1="18" x2="6" y2="18"></line>',"align-justify":'<line x1="21" y1="10" x2="3" y2="10"></line><line x1="21" y1="6" x2="3" y2="6"></line><line x1="21" y1="14" x2="3" y2="14"></line><line x1="21" y1="18" x2="3" y2="18"></line>',"align-left":'<line x1="17" y1="10" x2="3" y2="10"></line><line x1="21" y1="6" x2="3" y2="6"></line><line x1="21" y1="14" x2="3" y2="14"></line><line x1="17" y1="18" x2="3" y2="18"></line>',"align-right":'<line x1="21" y1="10" x2="7" y2="10"></line><line x1="21" y1="6" x2="3" y2="6"></line><line x1="21" y1="14" x2="3" y2="14"></line><line x1="21" y1="18" x2="7" y2="18"></line>',anchor:'<circle cx="12" cy="5" r="3"></circle><line x1="12" y1="22" x2="12" y2="8"></line><path d="M5 12H2a10 10 0 0 0 20 0h-3"></path>',aperture:'<circle cx="12" cy="12" r="10"></circle><line x1="14.31" y1="8" x2="20.05" y2="17.94"></line><line x1="9.69" y1="8" x2="21.17" y2="8"></line><line x1="7.38" y1="12" x2="13.12" y2="2.06"></line><line x1="9.69" y1="16" x2="3.95" y2="6.06"></line><line x1="14.31" y1="16" x2="2.83" y2="16"></line><line x1="16.62" y1="12" x2="10.88" y2="21.94"></line>',archive:'<polyline points="21 8 21 21 3 21 3 8"></polyline><rect x="1" y="3" width="22" height="5"></rect><line x1="10" y1="12" x2="14" y2="12"></line>',"arrow-down-circle":'<circle cx="12" cy="12" r="10"></circle><polyline points="8 12 12 16 16 12"></polyline><line x1="12" y1="8" x2="12" y2="16"></line>',"arrow-down-left":'<line x1="17" y1="7" x2="7" y2="17"></line><polyline points="17 17 7 17 7 7"></polyline>',"arrow-down-right":'<line x1="7" y1="7" x2="17" y2="17"></line><polyline points="17 7 17 17 7 17"></polyline>',"arrow-down":'<line x1="12" y1="5" x2="12" y2="19"></line><polyline points="19 12 12 19 5 12"></polyline>',"arrow-left-circle":'<circle cx="12" cy="12" r="10"></circle><polyline points="12 8 8 12 12 16"></polyline><line x1="16" y1="12" x2="8" y2="12"></line>',"arrow-left":'<line x1="19" y1="12" x2="5" y2="12"></line><polyline points="12 19 5 12 12 5"></polyline>',"arrow-right-circle":'<circle cx="12" cy="12" r="10"></circle><polyline points="12 16 16 12 12 8"></polyline><line x1="8" y1="12" x2="16" y2="12"></line>',"arrow-right":'<line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline>',"arrow-up-circle":'<circle cx="12" cy="12" r="10"></circle><polyline points="16 12 12 8 8 12"></polyline><line x1="12" y1="16" x2="12" y2="8"></line>',"arrow-up-left":'<line x1="17" y1="17" x2="7" y2="7"></line><polyline points="7 17 7 7 17 7"></polyline>',"arrow-up-right":'<line x1="7" y1="17" x2="17" y2="7"></line><polyline points="7 7 17 7 17 17"></polyline>',"arrow-up":'<line x1="12" y1="19" x2="12" y2="5"></line><polyline points="5 12 12 5 19 12"></polyline>',"at-sign":'<circle cx="12" cy="12" r="4"></circle><path d="M16 8v5a3 3 0 0 0 6 0v-1a10 10 0 1 0-3.92 7.94"></path>',award:'<circle cx="12" cy="8" r="7"></circle><polyline points="8.21 13.89 7 23 12 20 17 23 15.79 13.88"></polyline>',"bar-chart-2":'<line x1="18" y1="20" x2="18" y2="10"></line><line x1="12" y1="20" x2="12" y2="4"></line><line x1="6" y1="20" x2="6" y2="14"></line>',"bar-chart":'<line x1="12" y1="20" x2="12" y2="10"></line><line x1="18" y1="20" x2="18" y2="4"></line><line x1="6" y1="20" x2="6" y2="16"></line>',"battery-charging":'<path d="M5 18H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h3.19M15 6h2a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-3.19"></path><line x1="23" y1="13" x2="23" y2="11"></line><polyline points="11 6 7 12 13 12 9 18"></polyline>',battery:'<rect x="1" y="6" width="18" height="12" rx="2" ry="2"></rect><line x1="23" y1="13" x2="23" y2="11"></line>',"bell-off":'<path d="M13.73 21a2 2 0 0 1-3.46 0"></path><path d="M18.63 13A17.89 17.89 0 0 1 18 8"></path><path d="M6.26 6.26A5.86 5.86 0 0 0 6 8c0 7-3 9-3 9h14"></path><path d="M18 8a6 6 0 0 0-9.33-5"></path><line x1="1" y1="1" x2="23" y2="23"></line>',bell:'<path d="M18 8A6 6 0 0 0 6 8c0 7-3 9-3 9h18s-3-2-3-9"></path><path d="M13.73 21a2 2 0 0 1-3.46 0"></path>',bluetooth:'<polyline points="6.5 6.5 17.5 17.5 12 23 12 1 17.5 6.5 6.5 17.5"></polyline>',bold:'<path d="M6 4h8a4 4 0 0 1 4 4 4 4 0 0 1-4 4H6z"></path><path d="M6 12h9a4 4 0 0 1 4 4 4 4 0 0 1-4 4H6z"></path>',"book-open":'<path d="M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z"></path><path d="M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z"></path>',book:'<path d="M4 19.5A2.5 2.5 0 0 1 6.5 17H20"></path><path d="M6.5 2H20v20H6.5A2.5 2.5 0 0 1 4 19.5v-15A2.5 2.5 0 0 1 6.5 2z"></path>',bookmark:'<path d="M19 21l-7-5-7 5V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2z"></path>',box:'<path d="M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z"></path><polyline points="3.27 6.96 12 12.01 20.73 6.96"></polyline><line x1="12" y1="22.08" x2="12" y2="12"></line>',briefcase:'<rect x="2" y="7" width="20" height="14" rx="2" ry="2"></rect><path d="M16 21V5a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v16"></path>',calendar:'<rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect><line x1="16" y1="2" x2="16" y2="6"></line><line x1="8" y1="2" x2="8" y2="6"></line><line x1="3" y1="10" x2="21" y2="10"></line>',"camera-off":'<line x1="1" y1="1" x2="23" y2="23"></line><path d="M21 21H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h3m3-3h6l2 3h4a2 2 0 0 1 2 2v9.34m-7.72-2.06a4 4 0 1 1-5.56-5.56"></path>',camera:'<path d="M23 19a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h4l2-3h6l2 3h4a2 2 0 0 1 2 2z"></path><circle cx="12" cy="13" r="4"></circle>',cast:'<path d="M2 16.1A5 5 0 0 1 5.9 20M2 12.05A9 9 0 0 1 9.95 20M2 8V6a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2h-6"></path><line x1="2" y1="20" x2="2.01" y2="20"></line>',"check-circle":'<path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path><polyline points="22 4 12 14.01 9 11.01"></polyline>',"check-square":'<polyline points="9 11 12 14 22 4"></polyline><path d="M21 12v7a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11"></path>',check:'<polyline points="20 6 9 17 4 12"></polyline>',"chevron-down":'<polyline points="6 9 12 15 18 9"></polyline>',"chevron-left":'<polyline points="15 18 9 12 15 6"></polyline>',"chevron-right":'<polyline points="9 18 15 12 9 6"></polyline>',"chevron-up":'<polyline points="18 15 12 9 6 15"></polyline>',"chevrons-down":'<polyline points="7 13 12 18 17 13"></polyline><polyline points="7 6 12 11 17 6"></polyline>',"chevrons-left":'<polyline points="11 17 6 12 11 7"></polyline><polyline points="18 17 13 12 18 7"></polyline>',"chevrons-right":'<polyline points="13 17 18 12 13 7"></polyline><polyline points="6 17 11 12 6 7"></polyline>',"chevrons-up":'<polyline points="17 11 12 6 7 11"></polyline><polyline points="17 18 12 13 7 18"></polyline>',chrome:'<circle cx="12" cy="12" r="10"></circle><circle cx="12" cy="12" r="4"></circle><line x1="21.17" y1="8" x2="12" y2="8"></line><line x1="3.95" y1="6.06" x2="8.54" y2="14"></line><line x1="10.88" y1="21.94" x2="15.46" y2="14"></line>',circle:'<circle cx="12" cy="12" r="10"></circle>',clipboard:'<path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"></path><rect x="8" y="2" width="8" height="4" rx="1" ry="1"></rect>',clock:'<circle cx="12" cy="12" r="10"></circle><polyline points="12 6 12 12 16 14"></polyline>',"cloud-drizzle":'<line x1="8" y1="19" x2="8" y2="21"></line><line x1="8" y1="13" x2="8" y2="15"></line><line x1="16" y1="19" x2="16" y2="21"></line><line x1="16" y1="13" x2="16" y2="15"></line><line x1="12" y1="21" x2="12" y2="23"></line><line x1="12" y1="15" x2="12" y2="17"></line><path d="M20 16.58A5 5 0 0 0 18 7h-1.26A8 8 0 1 0 4 15.25"></path>',"cloud-lightning":'<path d="M19 16.9A5 5 0 0 0 18 7h-1.26a8 8 0 1 0-11.62 9"></path><polyline points="13 11 9 17 15 17 11 23"></polyline>',"cloud-off":'<path d="M22.61 16.95A5 5 0 0 0 18 10h-1.26a8 8 0 0 0-7.05-6M5 5a8 8 0 0 0 4 15h9a5 5 0 0 0 1.7-.3"></path><line x1="1" y1="1" x2="23" y2="23"></line>',"cloud-rain":'<line x1="16" y1="13" x2="16" y2="21"></line><line x1="8" y1="13" x2="8" y2="21"></line><line x1="12" y1="15" x2="12" y2="23"></line><path d="M20 16.58A5 5 0 0 0 18 7h-1.26A8 8 0 1 0 4 15.25"></path>',"cloud-snow":'<path d="M20 17.58A5 5 0 0 0 18 8h-1.26A8 8 0 1 0 4 16.25"></path><line x1="8" y1="16" x2="8.01" y2="16"></line><line x1="8" y1="20" x2="8.01" y2="20"></line><line x1="12" y1="18" x2="12.01" y2="18"></line><line x1="12" y1="22" x2="12.01" y2="22"></line><line x1="16" y1="16" x2="16.01" y2="16"></line><line x1="16" y1="20" x2="16.01" y2="20"></line>',cloud:'<path d="M18 10h-1.26A8 8 0 1 0 9 20h9a5 5 0 0 0 0-10z"></path>',code:'<polyline points="16 18 22 12 16 6"></polyline><polyline points="8 6 2 12 8 18"></polyline>',codepen:'<polygon points="12 2 22 8.5 22 15.5 12 22 2 15.5 2 8.5 12 2"></polygon><line x1="12" y1="22" x2="12" y2="15.5"></line><polyline points="22 8.5 12 15.5 2 8.5"></polyline><polyline points="2 15.5 12 8.5 22 15.5"></polyline><line x1="12" y1="2" x2="12" y2="8.5"></line>',codesandbox:'<path d="M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z"></path><polyline points="7.5 4.21 12 6.81 16.5 4.21"></polyline><polyline points="7.5 19.79 7.5 14.6 3 12"></polyline><polyline points="21 12 16.5 14.6 16.5 19.79"></polyline><polyline points="3.27 6.96 12 12.01 20.73 6.96"></polyline><line x1="12" y1="22.08" x2="12" y2="12"></line>',coffee:'<path d="M18 8h1a4 4 0 0 1 0 8h-1"></path><path d="M2 8h16v9a4 4 0 0 1-4 4H6a4 4 0 0 1-4-4V8z"></path><line x1="6" y1="1" x2="6" y2="4"></line><line x1="10" y1="1" x2="10" y2="4"></line><line x1="14" y1="1" x2="14" y2="4"></line>',columns:'<path d="M12 3h7a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-7m0-18H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h7m0-18v18"></path>',command:'<path d="M18 3a3 3 0 0 0-3 3v12a3 3 0 0 0 3 3 3 3 0 0 0 3-3 3 3 0 0 0-3-3H6a3 3 0 0 0-3 3 3 3 0 0 0 3 3 3 3 0 0 0 3-3V6a3 3 0 0 0-3-3 3 3 0 0 0-3 3 3 3 0 0 0 3 3h12a3 3 0 0 0 3-3 3 3 0 0 0-3-3z"></path>',compass:'<circle cx="12" cy="12" r="10"></circle><polygon points="16.24 7.76 14.12 14.12 7.76 16.24 9.88 9.88 16.24 7.76"></polygon>',copy:'<rect x="9" y="9" width="13" height="13" rx="2" ry="2"></rect><path d="M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"></path>',"corner-down-left":'<polyline points="9 10 4 15 9 20"></polyline><path d="M20 4v7a4 4 0 0 1-4 4H4"></path>',"corner-down-right":'<polyline points="15 10 20 15 15 20"></polyline><path d="M4 4v7a4 4 0 0 0 4 4h12"></path>',"corner-left-down":'<polyline points="14 15 9 20 4 15"></polyline><path d="M20 4h-7a4 4 0 0 0-4 4v12"></path>',"corner-left-up":'<polyline points="14 9 9 4 4 9"></polyline><path d="M20 20h-7a4 4 0 0 1-4-4V4"></path>',"corner-right-down":'<polyline points="10 15 15 20 20 15"></polyline><path d="M4 4h7a4 4 0 0 1 4 4v12"></path>',"corner-right-up":'<polyline points="10 9 15 4 20 9"></polyline><path d="M4 20h7a4 4 0 0 0 4-4V4"></path>',"corner-up-left":'<polyline points="9 14 4 9 9 4"></polyline><path d="M20 20v-7a4 4 0 0 0-4-4H4"></path>',"corner-up-right":'<polyline points="15 14 20 9 15 4"></polyline><path d="M4 20v-7a4 4 0 0 1 4-4h12"></path>',cpu:'<rect x="4" y="4" width="16" height="16" rx="2" ry="2"></rect><rect x="9" y="9" width="6" height="6"></rect><line x1="9" y1="1" x2="9" y2="4"></line><line x1="15" y1="1" x2="15" y2="4"></line><line x1="9" y1="20" x2="9" y2="23"></line><line x1="15" y1="20" x2="15" y2="23"></line><line x1="20" y1="9" x2="23" y2="9"></line><line x1="20" y1="14" x2="23" y2="14"></line><line x1="1" y1="9" x2="4" y2="9"></line><line x1="1" y1="14" x2="4" y2="14"></line>',"credit-card":'<rect x="1" y="4" width="22" height="16" rx="2" ry="2"></rect><line x1="1" y1="10" x2="23" y2="10"></line>',crop:'<path d="M6.13 1L6 16a2 2 0 0 0 2 2h15"></path><path d="M1 6.13L16 6a2 2 0 0 1 2 2v15"></path>',crosshair:'<circle cx="12" cy="12" r="10"></circle><line x1="22" y1="12" x2="18" y2="12"></line><line x1="6" y1="12" x2="2" y2="12"></line><line x1="12" y1="6" x2="12" y2="2"></line><line x1="12" y1="22" x2="12" y2="18"></line>',database:'<ellipse cx="12" cy="5" rx="9" ry="3"></ellipse><path d="M21 12c0 1.66-4 3-9 3s-9-1.34-9-3"></path><path d="M3 5v14c0 1.66 4 3 9 3s9-1.34 9-3V5"></path>',delete:'<path d="M21 4H8l-7 8 7 8h13a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2z"></path><line x1="18" y1="9" x2="12" y2="15"></line><line x1="12" y1="9" x2="18" y2="15"></line>',disc:'<circle cx="12" cy="12" r="10"></circle><circle cx="12" cy="12" r="3"></circle>',"dollar-sign":'<line x1="12" y1="1" x2="12" y2="23"></line><path d="M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6"></path>',"download-cloud":'<polyline points="8 17 12 21 16 17"></polyline><line x1="12" y1="12" x2="12" y2="21"></line><path d="M20.88 18.09A5 5 0 0 0 18 9h-1.26A8 8 0 1 0 3 16.29"></path>',download:'<path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"></path><polyline points="7 10 12 15 17 10"></polyline><line x1="12" y1="15" x2="12" y2="3"></line>',droplet:'<path d="M12 2.69l5.66 5.66a8 8 0 1 1-11.31 0z"></path>',"edit-2":'<path d="M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z"></path>',"edit-3":'<path d="M12 20h9"></path><path d="M16.5 3.5a2.121 2.121 0 0 1 3 3L7 19l-4 1 1-4L16.5 3.5z"></path>',edit:'<path d="M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7"></path><path d="M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z"></path>',"external-link":'<path d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"></path><polyline points="15 3 21 3 21 9"></polyline><line x1="10" y1="14" x2="21" y2="3"></line>',"eye-off":'<path d="M17.94 17.94A10.07 10.07 0 0 1 12 20c-7 0-11-8-11-8a18.45 18.45 0 0 1 5.06-5.94M9.9 4.24A9.12 9.12 0 0 1 12 4c7 0 11 8 11 8a18.5 18.5 0 0 1-2.16 3.19m-6.72-1.07a3 3 0 1 1-4.24-4.24"></path><line x1="1" y1="1" x2="23" y2="23"></line>',eye:'<path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"></path><circle cx="12" cy="12" r="3"></circle>',facebook:'<path d="M18 2h-3a5 5 0 0 0-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 0 1 1-1h3z"></path>',"fast-forward":'<polygon points="13 19 22 12 13 5 13 19"></polygon><polygon points="2 19 11 12 2 5 2 19"></polygon>',feather:'<path d="M20.24 12.24a6 6 0 0 0-8.49-8.49L5 10.5V19h8.5z"></path><line x1="16" y1="8" x2="2" y2="22"></line><line x1="17.5" y1="15" x2="9" y2="15"></line>',figma:'<path d="M5 5.5A3.5 3.5 0 0 1 8.5 2H12v7H8.5A3.5 3.5 0 0 1 5 5.5z"></path><path d="M12 2h3.5a3.5 3.5 0 1 1 0 7H12V2z"></path><path d="M12 12.5a3.5 3.5 0 1 1 7 0 3.5 3.5 0 1 1-7 0z"></path><path d="M5 19.5A3.5 3.5 0 0 1 8.5 16H12v3.5a3.5 3.5 0 1 1-7 0z"></path><path d="M5 12.5A3.5 3.5 0 0 1 8.5 9H12v7H8.5A3.5 3.5 0 0 1 5 12.5z"></path>',"file-minus":'<path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path><polyline points="14 2 14 8 20 8"></polyline><line x1="9" y1="15" x2="15" y2="15"></line>',"file-plus":'<path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path><polyline points="14 2 14 8 20 8"></polyline><line x1="12" y1="18" x2="12" y2="12"></line><line x1="9" y1="15" x2="15" y2="15"></line>',"file-text":'<path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path><polyline points="14 2 14 8 20 8"></polyline><line x1="16" y1="13" x2="8" y2="13"></line><line x1="16" y1="17" x2="8" y2="17"></line><polyline points="10 9 9 9 8 9"></polyline>',file:'<path d="M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z"></path><polyline points="13 2 13 9 20 9"></polyline>',film:'<rect x="2" y="2" width="20" height="20" rx="2.18" ry="2.18"></rect><line x1="7" y1="2" x2="7" y2="22"></line><line x1="17" y1="2" x2="17" y2="22"></line><line x1="2" y1="12" x2="22" y2="12"></line><line x1="2" y1="7" x2="7" y2="7"></line><line x1="2" y1="17" x2="7" y2="17"></line><line x1="17" y1="17" x2="22" y2="17"></line><line x1="17" y1="7" x2="22" y2="7"></line>',filter:'<polygon points="22 3 2 3 10 12.46 10 19 14 21 14 12.46 22 3"></polygon>',flag:'<path d="M4 15s1-1 4-1 5 2 8 2 4-1 4-1V3s-1 1-4 1-5-2-8-2-4 1-4 1z"></path><line x1="4" y1="22" x2="4" y2="15"></line>',"folder-minus":'<path d="M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z"></path><line x1="9" y1="14" x2="15" y2="14"></line>',"folder-plus":'<path d="M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z"></path><line x1="12" y1="11" x2="12" y2="17"></line><line x1="9" y1="14" x2="15" y2="14"></line>',folder:'<path d="M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z"></path>',framer:'<path d="M5 16V9h14V2H5l14 14h-7m-7 0l7 7v-7m-7 0h7"></path>',frown:'<circle cx="12" cy="12" r="10"></circle><path d="M16 16s-1.5-2-4-2-4 2-4 2"></path><line x1="9" y1="9" x2="9.01" y2="9"></line><line x1="15" y1="9" x2="15.01" y2="9"></line>',gift:'<polyline points="20 12 20 22 4 22 4 12"></polyline><rect x="2" y="7" width="20" height="5"></rect><line x1="12" y1="22" x2="12" y2="7"></line><path d="M12 7H7.5a2.5 2.5 0 0 1 0-5C11 2 12 7 12 7z"></path><path d="M12 7h4.5a2.5 2.5 0 0 0 0-5C13 2 12 7 12 7z"></path>',"git-branch":'<line x1="6" y1="3" x2="6" y2="15"></line><circle cx="18" cy="6" r="3"></circle><circle cx="6" cy="18" r="3"></circle><path d="M18 9a9 9 0 0 1-9 9"></path>',"git-commit":'<circle cx="12" cy="12" r="4"></circle><line x1="1.05" y1="12" x2="7" y2="12"></line><line x1="17.01" y1="12" x2="22.96" y2="12"></line>',"git-merge":'<circle cx="18" cy="18" r="3"></circle><circle cx="6" cy="6" r="3"></circle><path d="M6 21V9a9 9 0 0 0 9 9"></path>',"git-pull-request":'<circle cx="18" cy="18" r="3"></circle><circle cx="6" cy="6" r="3"></circle><path d="M13 6h3a2 2 0 0 1 2 2v7"></path><line x1="6" y1="9" x2="6" y2="21"></line>',github:'<path d="M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22"></path>',gitlab:'<path d="M22.65 14.39L12 22.13 1.35 14.39a.84.84 0 0 1-.3-.94l1.22-3.78 2.44-7.51A.42.42 0 0 1 4.82 2a.43.43 0 0 1 .58 0 .42.42 0 0 1 .11.18l2.44 7.49h8.1l2.44-7.51A.42.42 0 0 1 18.6 2a.43.43 0 0 1 .58 0 .42.42 0 0 1 .11.18l2.44 7.51L23 13.45a.84.84 0 0 1-.35.94z"></path>',globe:'<circle cx="12" cy="12" r="10"></circle><line x1="2" y1="12" x2="22" y2="12"></line><path d="M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z"></path>',grid:'<rect x="3" y="3" width="7" height="7"></rect><rect x="14" y="3" width="7" height="7"></rect><rect x="14" y="14" width="7" height="7"></rect><rect x="3" y="14" width="7" height="7"></rect>',"hard-drive":'<line x1="22" y1="12" x2="2" y2="12"></line><path d="M5.45 5.11L2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z"></path><line x1="6" y1="16" x2="6.01" y2="16"></line><line x1="10" y1="16" x2="10.01" y2="16"></line>',hash:'<line x1="4" y1="9" x2="20" y2="9"></line><line x1="4" y1="15" x2="20" y2="15"></line><line x1="10" y1="3" x2="8" y2="21"></line><line x1="16" y1="3" x2="14" y2="21"></line>',headphones:'<path d="M3 18v-6a9 9 0 0 1 18 0v6"></path><path d="M21 19a2 2 0 0 1-2 2h-1a2 2 0 0 1-2-2v-3a2 2 0 0 1 2-2h3zM3 19a2 2 0 0 0 2 2h1a2 2 0 0 0 2-2v-3a2 2 0 0 0-2-2H3z"></path>',heart:'<path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"></path>',"help-circle":'<circle cx="12" cy="12" r="10"></circle><path d="M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3"></path><line x1="12" y1="17" x2="12.01" y2="17"></line>',hexagon:'<path d="M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z"></path>',home:'<path d="M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"></path><polyline points="9 22 9 12 15 12 15 22"></polyline>',image:'<rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect><circle cx="8.5" cy="8.5" r="1.5"></circle><polyline points="21 15 16 10 5 21"></polyline>',inbox:'<polyline points="22 12 16 12 14 15 10 15 8 12 2 12"></polyline><path d="M5.45 5.11L2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z"></path>',info:'<circle cx="12" cy="12" r="10"></circle><line x1="12" y1="16" x2="12" y2="12"></line><line x1="12" y1="8" x2="12.01" y2="8"></line>',instagram:'<rect x="2" y="2" width="20" height="20" rx="5" ry="5"></rect><path d="M16 11.37A4 4 0 1 1 12.63 8 4 4 0 0 1 16 11.37z"></path><line x1="17.5" y1="6.5" x2="17.51" y2="6.5"></line>',italic:'<line x1="19" y1="4" x2="10" y2="4"></line><line x1="14" y1="20" x2="5" y2="20"></line><line x1="15" y1="4" x2="9" y2="20"></line>',key:'<path d="M21 2l-2 2m-7.61 7.61a5.5 5.5 0 1 1-7.778 7.778 5.5 5.5 0 0 1 7.777-7.777zm0 0L15.5 7.5m0 0l3 3L22 7l-3-3m-3.5 3.5L19 4"></path>',layers:'<polygon points="12 2 2 7 12 12 22 7 12 2"></polygon><polyline points="2 17 12 22 22 17"></polyline><polyline points="2 12 12 17 22 12"></polyline>',layout:'<rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect><line x1="3" y1="9" x2="21" y2="9"></line><line x1="9" y1="21" x2="9" y2="9"></line>',"life-buoy":'<circle cx="12" cy="12" r="10"></circle><circle cx="12" cy="12" r="4"></circle><line x1="4.93" y1="4.93" x2="9.17" y2="9.17"></line><line x1="14.83" y1="14.83" x2="19.07" y2="19.07"></line><line x1="14.83" y1="9.17" x2="19.07" y2="4.93"></line><line x1="14.83" y1="9.17" x2="18.36" y2="5.64"></line><line x1="4.93" y1="19.07" x2="9.17" y2="14.83"></line>',"link-2":'<path d="M15 7h3a5 5 0 0 1 5 5 5 5 0 0 1-5 5h-3m-6 0H6a5 5 0 0 1-5-5 5 5 0 0 1 5-5h3"></path><line x1="8" y1="12" x2="16" y2="12"></line>',link:'<path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71"></path><path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71"></path>',linkedin:'<path d="M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z"></path><rect x="2" y="9" width="4" height="12"></rect><circle cx="4" cy="4" r="2"></circle>',list:'<line x1="8" y1="6" x2="21" y2="6"></line><line x1="8" y1="12" x2="21" y2="12"></line><line x1="8" y1="18" x2="21" y2="18"></line><line x1="3" y1="6" x2="3.01" y2="6"></line><line x1="3" y1="12" x2="3.01" y2="12"></line><line x1="3" y1="18" x2="3.01" y2="18"></line>',loader:'<line x1="12" y1="2" x2="12" y2="6"></line><line x1="12" y1="18" x2="12" y2="22"></line><line x1="4.93" y1="4.93" x2="7.76" y2="7.76"></line><line x1="16.24" y1="16.24" x2="19.07" y2="19.07"></line><line x1="2" y1="12" x2="6" y2="12"></line><line x1="18" y1="12" x2="22" y2="12"></line><line x1="4.93" y1="19.07" x2="7.76" y2="16.24"></line><line x1="16.24" y1="7.76" x2="19.07" y2="4.93"></line>',lock:'<rect x="3" y="11" width="18" height="11" rx="2" ry="2"></rect><path d="M7 11V7a5 5 0 0 1 10 0v4"></path>',"log-in":'<path d="M15 3h4a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-4"></path><polyline points="10 17 15 12 10 7"></polyline><line x1="15" y1="12" x2="3" y2="12"></line>',"log-out":'<path d="M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4"></path><polyline points="16 17 21 12 16 7"></polyline><line x1="21" y1="12" x2="9" y2="12"></line>',mail:'<path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"></path><polyline points="22,6 12,13 2,6"></polyline>',"map-pin":'<path d="M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z"></path><circle cx="12" cy="10" r="3"></circle>',map:'<polygon points="1 6 1 22 8 18 16 22 23 18 23 2 16 6 8 2 1 6"></polygon><line x1="8" y1="2" x2="8" y2="18"></line><line x1="16" y1="6" x2="16" y2="22"></line>',"maximize-2":'<polyline points="15 3 21 3 21 9"></polyline><polyline points="9 21 3 21 3 15"></polyline><line x1="21" y1="3" x2="14" y2="10"></line><line x1="3" y1="21" x2="10" y2="14"></line>',maximize:'<path d="M8 3H5a2 2 0 0 0-2 2v3m18 0V5a2 2 0 0 0-2-2h-3m0 18h3a2 2 0 0 0 2-2v-3M3 16v3a2 2 0 0 0 2 2h3"></path>',meh:'<circle cx="12" cy="12" r="10"></circle><line x1="8" y1="15" x2="16" y2="15"></line><line x1="9" y1="9" x2="9.01" y2="9"></line><line x1="15" y1="9" x2="15.01" y2="9"></line>',menu:'<line x1="3" y1="12" x2="21" y2="12"></line><line x1="3" y1="6" x2="21" y2="6"></line><line x1="3" y1="18" x2="21" y2="18"></line>',"message-circle":'<path d="M21 11.5a8.38 8.38 0 0 1-.9 3.8 8.5 8.5 0 0 1-7.6 4.7 8.38 8.38 0 0 1-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 0 1-.9-3.8 8.5 8.5 0 0 1 4.7-7.6 8.38 8.38 0 0 1 3.8-.9h.5a8.48 8.48 0 0 1 8 8v.5z"></path>',"message-square":'<path d="M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"></path>',"mic-off":'<line x1="1" y1="1" x2="23" y2="23"></line><path d="M9 9v3a3 3 0 0 0 5.12 2.12M15 9.34V4a3 3 0 0 0-5.94-.6"></path><path d="M17 16.95A7 7 0 0 1 5 12v-2m14 0v2a7 7 0 0 1-.11 1.23"></path><line x1="12" y1="19" x2="12" y2="23"></line><line x1="8" y1="23" x2="16" y2="23"></line>',mic:'<path d="M12 1a3 3 0 0 0-3 3v8a3 3 0 0 0 6 0V4a3 3 0 0 0-3-3z"></path><path d="M19 10v2a7 7 0 0 1-14 0v-2"></path><line x1="12" y1="19" x2="12" y2="23"></line><line x1="8" y1="23" x2="16" y2="23"></line>',"minimize-2":'<polyline points="4 14 10 14 10 20"></polyline><polyline points="20 10 14 10 14 4"></polyline><line x1="14" y1="10" x2="21" y2="3"></line><line x1="3" y1="21" x2="10" y2="14"></line>',minimize:'<path d="M8 3v3a2 2 0 0 1-2 2H3m18 0h-3a2 2 0 0 1-2-2V3m0 18v-3a2 2 0 0 1 2-2h3M3 16h3a2 2 0 0 1 2 2v3"></path>',"minus-circle":'<circle cx="12" cy="12" r="10"></circle><line x1="8" y1="12" x2="16" y2="12"></line>',"minus-square":'<rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect><line x1="8" y1="12" x2="16" y2="12"></line>',minus:'<line x1="5" y1="12" x2="19" y2="12"></line>',monitor:'<rect x="2" y="3" width="20" height="14" rx="2" ry="2"></rect><line x1="8" y1="21" x2="16" y2="21"></line><line x1="12" y1="17" x2="12" y2="21"></line>',moon:'<path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path>',"more-horizontal":'<circle cx="12" cy="12" r="1"></circle><circle cx="19" cy="12" r="1"></circle><circle cx="5" cy="12" r="1"></circle>',"more-vertical":'<circle cx="12" cy="12" r="1"></circle><circle cx="12" cy="5" r="1"></circle><circle cx="12" cy="19" r="1"></circle>',"mouse-pointer":'<path d="M3 3l7.07 16.97 2.51-7.39 7.39-2.51L3 3z"></path><path d="M13 13l6 6"></path>',move:'<polyline points="5 9 2 12 5 15"></polyline><polyline points="9 5 12 2 15 5"></polyline><polyline points="15 19 12 22 9 19"></polyline><polyline points="19 9 22 12 19 15"></polyline><line x1="2" y1="12" x2="22" y2="12"></line><line x1="12" y1="2" x2="12" y2="22"></line>',music:'<path d="M9 18V5l12-2v13"></path><circle cx="6" cy="18" r="3"></circle><circle cx="18" cy="16" r="3"></circle>',"navigation-2":'<polygon points="12 2 19 21 12 17 5 21 12 2"></polygon>',navigation:'<polygon points="3 11 22 2 13 21 11 13 3 11"></polygon>',octagon:'<polygon points="7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2"></polygon>',package:'<line x1="16.5" y1="9.4" x2="7.5" y2="4.21"></line><path d="M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z"></path><polyline points="3.27 6.96 12 12.01 20.73 6.96"></polyline><line x1="12" y1="22.08" x2="12" y2="12"></line>',paperclip:'<path d="M21.44 11.05l-9.19 9.19a6 6 0 0 1-8.49-8.49l9.19-9.19a4 4 0 0 1 5.66 5.66l-9.2 9.19a2 2 0 0 1-2.83-2.83l8.49-8.48"></path>',"pause-circle":'<circle cx="12" cy="12" r="10"></circle><line x1="10" y1="15" x2="10" y2="9"></line><line x1="14" y1="15" x2="14" y2="9"></line>',pause:'<rect x="6" y="4" width="4" height="16"></rect><rect x="14" y="4" width="4" height="16"></rect>',"pen-tool":'<path d="M12 19l7-7 3 3-7 7-3-3z"></path><path d="M18 13l-1.5-7.5L2 2l3.5 14.5L13 18l5-5z"></path><path d="M2 2l7.586 7.586"></path><circle cx="11" cy="11" r="2"></circle>',percent:'<line x1="19" y1="5" x2="5" y2="19"></line><circle cx="6.5" cy="6.5" r="2.5"></circle><circle cx="17.5" cy="17.5" r="2.5"></circle>',"phone-call":'<path d="M15.05 5A5 5 0 0 1 19 8.95M15.05 1A9 9 0 0 1 23 8.94m-1 7.98v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"></path>',"phone-forwarded":'<polyline points="19 1 23 5 19 9"></polyline><line x1="15" y1="5" x2="23" y2="5"></line><path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"></path>',"phone-incoming":'<polyline points="16 2 16 8 22 8"></polyline><line x1="23" y1="1" x2="16" y2="8"></line><path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"></path>',"phone-missed":'<line x1="23" y1="1" x2="17" y2="7"></line><line x1="17" y1="1" x2="23" y2="7"></line><path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"></path>',"phone-off":'<path d="M10.68 13.31a16 16 0 0 0 3.41 2.6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7 2 2 0 0 1 1.72 2v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.42 19.42 0 0 1-3.33-2.67m-2.67-3.34a19.79 19.79 0 0 1-3.07-8.63A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91"></path><line x1="23" y1="1" x2="1" y2="23"></line>',"phone-outgoing":'<polyline points="23 7 23 1 17 1"></polyline><line x1="16" y1="8" x2="23" y2="1"></line><path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"></path>',phone:'<path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"></path>',"pie-chart":'<path d="M21.21 15.89A10 10 0 1 1 8 2.83"></path><path d="M22 12A10 10 0 0 0 12 2v10z"></path>',"play-circle":'<circle cx="12" cy="12" r="10"></circle><polygon points="10 8 16 12 10 16 10 8"></polygon>',play:'<polygon points="5 3 19 12 5 21 5 3"></polygon>',"plus-circle":'<circle cx="12" cy="12" r="10"></circle><line x1="12" y1="8" x2="12" y2="16"></line><line x1="8" y1="12" x2="16" y2="12"></line>',"plus-square":'<rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect><line x1="12" y1="8" x2="12" y2="16"></line><line x1="8" y1="12" x2="16" y2="12"></line>',plus:'<line x1="12" y1="5" x2="12" y2="19"></line><line x1="5" y1="12" x2="19" y2="12"></line>',pocket:'<path d="M4 3h16a2 2 0 0 1 2 2v6a10 10 0 0 1-10 10A10 10 0 0 1 2 11V5a2 2 0 0 1 2-2z"></path><polyline points="8 10 12 14 16 10"></polyline>',power:'<path d="M18.36 6.64a9 9 0 1 1-12.73 0"></path><line x1="12" y1="2" x2="12" y2="12"></line>',printer:'<polyline points="6 9 6 2 18 2 18 9"></polyline><path d="M6 18H4a2 2 0 0 1-2-2v-5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-2"></path><rect x="6" y="14" width="12" height="8"></rect>',radio:'<circle cx="12" cy="12" r="2"></circle><path d="M16.24 7.76a6 6 0 0 1 0 8.49m-8.48-.01a6 6 0 0 1 0-8.49m11.31-2.82a10 10 0 0 1 0 14.14m-14.14 0a10 10 0 0 1 0-14.14"></path>',"refresh-ccw":'<polyline points="1 4 1 10 7 10"></polyline><polyline points="23 20 23 14 17 14"></polyline><path d="M20.49 9A9 9 0 0 0 5.64 5.64L1 10m22 4l-4.64 4.36A9 9 0 0 1 3.51 15"></path>',"refresh-cw":'<polyline points="23 4 23 10 17 10"></polyline><polyline points="1 20 1 14 7 14"></polyline><path d="M3.51 9a9 9 0 0 1 14.85-3.36L23 10M1 14l4.64 4.36A9 9 0 0 0 20.49 15"></path>',repeat:'<polyline points="17 1 21 5 17 9"></polyline><path d="M3 11V9a4 4 0 0 1 4-4h14"></path><polyline points="7 23 3 19 7 15"></polyline><path d="M21 13v2a4 4 0 0 1-4 4H3"></path>',rewind:'<polygon points="11 19 2 12 11 5 11 19"></polygon><polygon points="22 19 13 12 22 5 22 19"></polygon>',"rotate-ccw":'<polyline points="1 4 1 10 7 10"></polyline><path d="M3.51 15a9 9 0 1 0 2.13-9.36L1 10"></path>',"rotate-cw":'<polyline points="23 4 23 10 17 10"></polyline><path d="M20.49 15a9 9 0 1 1-2.12-9.36L23 10"></path>',rss:'<path d="M4 11a9 9 0 0 1 9 9"></path><path d="M4 4a16 16 0 0 1 16 16"></path><circle cx="5" cy="19" r="1"></circle>',save:'<path d="M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z"></path><polyline points="17 21 17 13 7 13 7 21"></polyline><polyline points="7 3 7 8 15 8"></polyline>',scissors:'<circle cx="6" cy="6" r="3"></circle><circle cx="6" cy="18" r="3"></circle><line x1="20" y1="4" x2="8.12" y2="15.88"></line><line x1="14.47" y1="14.48" x2="20" y2="20"></line><line x1="8.12" y1="8.12" x2="12" y2="12"></line>',search:'<circle cx="11" cy="11" r="8"></circle><line x1="21" y1="21" x2="16.65" y2="16.65"></line>',send:'<line x1="22" y1="2" x2="11" y2="13"></line><polygon points="22 2 15 22 11 13 2 9 22 2"></polygon>',server:'<rect x="2" y="2" width="20" height="8" rx="2" ry="2"></rect><rect x="2" y="14" width="20" height="8" rx="2" ry="2"></rect><line x1="6" y1="6" x2="6.01" y2="6"></line><line x1="6" y1="18" x2="6.01" y2="18"></line>',settings:'<circle cx="12" cy="12" r="3"></circle><path d="M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z"></path>',"share-2":'<circle cx="18" cy="5" r="3"></circle><circle cx="6" cy="12" r="3"></circle><circle cx="18" cy="19" r="3"></circle><line x1="8.59" y1="13.51" x2="15.42" y2="17.49"></line><line x1="15.41" y1="6.51" x2="8.59" y2="10.49"></line>',share:'<path d="M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8"></path><polyline points="16 6 12 2 8 6"></polyline><line x1="12" y1="2" x2="12" y2="15"></line>',"shield-off":'<path d="M19.69 14a6.9 6.9 0 0 0 .31-2V5l-8-3-3.16 1.18"></path><path d="M4.73 4.73L4 5v7c0 6 8 10 8 10a20.29 20.29 0 0 0 5.62-4.38"></path><line x1="1" y1="1" x2="23" y2="23"></line>',shield:'<path d="M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z"></path>',"shopping-bag":'<path d="M6 2L3 6v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V6l-3-4z"></path><line x1="3" y1="6" x2="21" y2="6"></line><path d="M16 10a4 4 0 0 1-8 0"></path>',"shopping-cart":'<circle cx="9" cy="21" r="1"></circle><circle cx="20" cy="21" r="1"></circle><path d="M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6"></path>',shuffle:'<polyline points="16 3 21 3 21 8"></polyline><line x1="4" y1="20" x2="21" y2="3"></line><polyline points="21 16 21 21 16 21"></polyline><line x1="15" y1="15" x2="21" y2="21"></line><line x1="4" y1="4" x2="9" y2="9"></line>',sidebar:'<rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect><line x1="9" y1="3" x2="9" y2="21"></line>',"skip-back":'<polygon points="19 20 9 12 19 4 19 20"></polygon><line x1="5" y1="19" x2="5" y2="5"></line>',"skip-forward":'<polygon points="5 4 15 12 5 20 5 4"></polygon><line x1="19" y1="5" x2="19" y2="19"></line>',slack:'<path d="M14.5 10c-.83 0-1.5-.67-1.5-1.5v-5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5v5c0 .83-.67 1.5-1.5 1.5z"></path><path d="M20.5 10H19V8.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5-.67 1.5-1.5 1.5z"></path><path d="M9.5 14c.83 0 1.5.67 1.5 1.5v5c0 .83-.67 1.5-1.5 1.5S8 21.33 8 20.5v-5c0-.83.67-1.5 1.5-1.5z"></path><path d="M3.5 14H5v1.5c0 .83-.67 1.5-1.5 1.5S2 16.33 2 15.5 2.67 14 3.5 14z"></path><path d="M14 14.5c0-.83.67-1.5 1.5-1.5h5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5h-5c-.83 0-1.5-.67-1.5-1.5z"></path><path d="M15.5 19H14v1.5c0 .83.67 1.5 1.5 1.5s1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z"></path><path d="M10 9.5C10 8.67 9.33 8 8.5 8h-5C2.67 8 2 8.67 2 9.5S2.67 11 3.5 11h5c.83 0 1.5-.67 1.5-1.5z"></path><path d="M8.5 5H10V3.5C10 2.67 9.33 2 8.5 2S7 2.67 7 3.5 7.67 5 8.5 5z"></path>',slash:'<circle cx="12" cy="12" r="10"></circle><line x1="4.93" y1="4.93" x2="19.07" y2="19.07"></line>',sliders:'<line x1="4" y1="21" x2="4" y2="14"></line><line x1="4" y1="10" x2="4" y2="3"></line><line x1="12" y1="21" x2="12" y2="12"></line><line x1="12" y1="8" x2="12" y2="3"></line><line x1="20" y1="21" x2="20" y2="16"></line><line x1="20" y1="12" x2="20" y2="3"></line><line x1="1" y1="14" x2="7" y2="14"></line><line x1="9" y1="8" x2="15" y2="8"></line><line x1="17" y1="16" x2="23" y2="16"></line>',smartphone:'<rect x="5" y="2" width="14" height="20" rx="2" ry="2"></rect><line x1="12" y1="18" x2="12.01" y2="18"></line>',smile:'<circle cx="12" cy="12" r="10"></circle><path d="M8 14s1.5 2 4 2 4-2 4-2"></path><line x1="9" y1="9" x2="9.01" y2="9"></line><line x1="15" y1="9" x2="15.01" y2="9"></line>',speaker:'<rect x="4" y="2" width="16" height="20" rx="2" ry="2"></rect><circle cx="12" cy="14" r="4"></circle><line x1="12" y1="6" x2="12.01" y2="6"></line>',square:'<rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect>',star:'<polygon points="12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2"></polygon>',"stop-circle":'<circle cx="12" cy="12" r="10"></circle><rect x="9" y="9" width="6" height="6"></rect>',sun:'<circle cx="12" cy="12" r="5"></circle><line x1="12" y1="1" x2="12" y2="3"></line><line x1="12" y1="21" x2="12" y2="23"></line><line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line><line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line><line x1="1" y1="12" x2="3" y2="12"></line><line x1="21" y1="12" x2="23" y2="12"></line><line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line><line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>',sunrise:'<path d="M17 18a5 5 0 0 0-10 0"></path><line x1="12" y1="2" x2="12" y2="9"></line><line x1="4.22" y1="10.22" x2="5.64" y2="11.64"></line><line x1="1" y1="18" x2="3" y2="18"></line><line x1="21" y1="18" x2="23" y2="18"></line><line x1="18.36" y1="11.64" x2="19.78" y2="10.22"></line><line x1="23" y1="22" x2="1" y2="22"></line><polyline points="8 6 12 2 16 6"></polyline>',sunset:'<path d="M17 18a5 5 0 0 0-10 0"></path><line x1="12" y1="9" x2="12" y2="2"></line><line x1="4.22" y1="10.22" x2="5.64" y2="11.64"></line><line x1="1" y1="18" x2="3" y2="18"></line><line x1="21" y1="18" x2="23" y2="18"></line><line x1="18.36" y1="11.64" x2="19.78" y2="10.22"></line><line x1="23" y1="22" x2="1" y2="22"></line><polyline points="16 5 12 9 8 5"></polyline>',tablet:'<rect x="4" y="2" width="16" height="20" rx="2" ry="2"></rect><line x1="12" y1="18" x2="12.01" y2="18"></line>',tag:'<path d="M20.59 13.41l-7.17 7.17a2 2 0 0 1-2.83 0L2 12V2h10l8.59 8.59a2 2 0 0 1 0 2.82z"></path><line x1="7" y1="7" x2="7.01" y2="7"></line>',target:'<circle cx="12" cy="12" r="10"></circle><circle cx="12" cy="12" r="6"></circle><circle cx="12" cy="12" r="2"></circle>',terminal:'<polyline points="4 17 10 11 4 5"></polyline><line x1="12" y1="19" x2="20" y2="19"></line>',thermometer:'<path d="M14 14.76V3.5a2.5 2.5 0 0 0-5 0v11.26a4.5 4.5 0 1 0 5 0z"></path>',"thumbs-down":'<path d="M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17"></path>',"thumbs-up":'<path d="M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3"></path>',"toggle-left":'<rect x="1" y="5" width="22" height="14" rx="7" ry="7"></rect><circle cx="8" cy="12" r="3"></circle>',"toggle-right":'<rect x="1" y="5" width="22" height="14" rx="7" ry="7"></rect><circle cx="16" cy="12" r="3"></circle>',tool:'<path d="M14.7 6.3a1 1 0 0 0 0 1.4l1.6 1.6a1 1 0 0 0 1.4 0l3.77-3.77a6 6 0 0 1-7.94 7.94l-6.91 6.91a2.12 2.12 0 0 1-3-3l6.91-6.91a6 6 0 0 1 7.94-7.94l-3.76 3.76z"></path>',"trash-2":'<polyline points="3 6 5 6 21 6"></polyline><path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"></path><line x1="10" y1="11" x2="10" y2="17"></line><line x1="14" y1="11" x2="14" y2="17"></line>',trash:'<polyline points="3 6 5 6 21 6"></polyline><path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"></path>',trello:'<rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect><rect x="7" y="7" width="3" height="9"></rect><rect x="14" y="7" width="3" height="5"></rect>',"trending-down":'<polyline points="23 18 13.5 8.5 8.5 13.5 1 6"></polyline><polyline points="17 18 23 18 23 12"></polyline>',"trending-up":'<polyline points="23 6 13.5 15.5 8.5 10.5 1 18"></polyline><polyline points="17 6 23 6 23 12"></polyline>',triangle:'<path d="M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z"></path>',truck:'<rect x="1" y="3" width="15" height="13"></rect><polygon points="16 8 20 8 23 11 23 16 16 16 16 8"></polygon><circle cx="5.5" cy="18.5" r="2.5"></circle><circle cx="18.5" cy="18.5" r="2.5"></circle>',tv:'<rect x="2" y="7" width="20" height="15" rx="2" ry="2"></rect><polyline points="17 2 12 7 7 2"></polyline>',twitch:'<path d="M21 2H3v16h5v4l4-4h5l4-4V2zm-10 9V7m5 4V7"></path>',twitter:'<path d="M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66 10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5 4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z"></path>',type:'<polyline points="4 7 4 4 20 4 20 7"></polyline><line x1="9" y1="20" x2="15" y2="20"></line><line x1="12" y1="4" x2="12" y2="20"></line>',umbrella:'<path d="M23 12a11.05 11.05 0 0 0-22 0zm-5 7a3 3 0 0 1-6 0v-7"></path>',underline:'<path d="M6 3v7a6 6 0 0 0 6 6 6 6 0 0 0 6-6V3"></path><line x1="4" y1="21" x2="20" y2="21"></line>',unlock:'<rect x="3" y="11" width="18" height="11" rx="2" ry="2"></rect><path d="M7 11V7a5 5 0 0 1 9.9-1"></path>',"upload-cloud":'<polyline points="16 16 12 12 8 16"></polyline><line x1="12" y1="12" x2="12" y2="21"></line><path d="M20.39 18.39A5 5 0 0 0 18 9h-1.26A8 8 0 1 0 3 16.3"></path><polyline points="16 16 12 12 8 16"></polyline>',upload:'<path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"></path><polyline points="17 8 12 3 7 8"></polyline><line x1="12" y1="3" x2="12" y2="15"></line>',"user-check":'<path d="M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"></path><circle cx="8.5" cy="7" r="4"></circle><polyline points="17 11 19 13 23 9"></polyline>',"user-minus":'<path d="M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"></path><circle cx="8.5" cy="7" r="4"></circle><line x1="23" y1="11" x2="17" y2="11"></line>',"user-plus":'<path d="M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"></path><circle cx="8.5" cy="7" r="4"></circle><line x1="20" y1="8" x2="20" y2="14"></line><line x1="23" y1="11" x2="17" y2="11"></line>',"user-x":'<path d="M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"></path><circle cx="8.5" cy="7" r="4"></circle><line x1="18" y1="8" x2="23" y2="13"></line><line x1="23" y1="8" x2="18" y2="13"></line>',user:'<path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path><circle cx="12" cy="7" r="4"></circle>',users:'<path d="M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"></path><circle cx="9" cy="7" r="4"></circle><path d="M23 21v-2a4 4 0 0 0-3-3.87"></path><path d="M16 3.13a4 4 0 0 1 0 7.75"></path>',"video-off":'<path d="M16 16v1a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h2m5.66 0H14a2 2 0 0 1 2 2v3.34l1 1L23 7v10"></path><line x1="1" y1="1" x2="23" y2="23"></line>',video:'<polygon points="23 7 16 12 23 17 23 7"></polygon><rect x="1" y="5" width="15" height="14" rx="2" ry="2"></rect>',voicemail:'<circle cx="5.5" cy="11.5" r="4.5"></circle><circle cx="18.5" cy="11.5" r="4.5"></circle><line x1="5.5" y1="16" x2="18.5" y2="16"></line>',"volume-1":'<polygon points="11 5 6 9 2 9 2 15 6 15 11 19 11 5"></polygon><path d="M15.54 8.46a5 5 0 0 1 0 7.07"></path>',"volume-2":'<polygon points="11 5 6 9 2 9 2 15 6 15 11 19 11 5"></polygon><path d="M19.07 4.93a10 10 0 0 1 0 14.14M15.54 8.46a5 5 0 0 1 0 7.07"></path>',"volume-x":'<polygon points="11 5 6 9 2 9 2 15 6 15 11 19 11 5"></polygon><line x1="23" y1="9" x2="17" y2="15"></line><line x1="17" y1="9" x2="23" y2="15"></line>',volume:'<polygon points="11 5 6 9 2 9 2 15 6 15 11 19 11 5"></polygon>',watch:'<circle cx="12" cy="12" r="7"></circle><polyline points="12 9 12 12 13.5 13.5"></polyline><path d="M16.51 17.35l-.35 3.83a2 2 0 0 1-2 1.82H9.83a2 2 0 0 1-2-1.82l-.35-3.83m.01-10.7l.35-3.83A2 2 0 0 1 9.83 1h4.35a2 2 0 0 1 2 1.82l.35 3.83"></path>',"wifi-off":'<line x1="1" y1="1" x2="23" y2="23"></line><path d="M16.72 11.06A10.94 10.94 0 0 1 19 12.55"></path><path d="M5 12.55a10.94 10.94 0 0 1 5.17-2.39"></path><path d="M10.71 5.05A16 16 0 0 1 22.58 9"></path><path d="M1.42 9a15.91 15.91 0 0 1 4.7-2.88"></path><path d="M8.53 16.11a6 6 0 0 1 6.95 0"></path><line x1="12" y1="20" x2="12.01" y2="20"></line>',wifi:'<path d="M5 12.55a11 11 0 0 1 14.08 0"></path><path d="M1.42 9a16 16 0 0 1 21.16 0"></path><path d="M8.53 16.11a6 6 0 0 1 6.95 0"></path><line x1="12" y1="20" x2="12.01" y2="20"></line>',wind:'<path d="M9.59 4.59A2 2 0 1 1 11 8H2m10.59 11.41A2 2 0 1 0 14 16H2m15.73-8.27A2.5 2.5 0 1 1 19.5 12H2"></path>',"x-circle":'<circle cx="12" cy="12" r="10"></circle><line x1="15" y1="9" x2="9" y2="15"></line><line x1="9" y1="9" x2="15" y2="15"></line>',"x-octagon":'<polygon points="7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2"></polygon><line x1="15" y1="9" x2="9" y2="15"></line><line x1="9" y1="9" x2="15" y2="15"></line>',"x-square":'<rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect><line x1="9" y1="9" x2="15" y2="15"></line><line x1="15" y1="9" x2="9" y2="15"></line>',x:'<line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line>',youtube:'<path d="M22.54 6.42a2.78 2.78 0 0 0-1.94-2C18.88 4 12 4 12 4s-6.88 0-8.6.46a2.78 2.78 0 0 0-1.94 2A29 29 0 0 0 1 11.75a29 29 0 0 0 .46 5.33A2.78 2.78 0 0 0 3.4 19c1.72.46 8.6.46 8.6.46s6.88 0 8.6-.46a2.78 2.78 0 0 0 1.94-2 29 29 0 0 0 .46-5.25 29 29 0 0 0-.46-5.33z"></path><polygon points="9.75 15.02 15.5 11.75 9.75 8.48 9.75 15.02"></polygon>',"zap-off":'<polyline points="12.41 6.75 13 2 10.57 4.92"></polyline><polyline points="18.57 12.91 21 10 15.66 10"></polyline><polyline points="8 8 3 14 12 14 11 22 16 16"></polyline><line x1="1" y1="1" x2="23" y2="23"></line>',zap:'<polygon points="13 2 3 14 12 14 11 22 21 10 12 10 13 2"></polygon>',"zoom-in":'<circle cx="11" cy="11" r="8"></circle><line x1="21" y1="21" x2="16.65" y2="16.65"></line><line x1="11" y1="8" x2="11" y2="14"></line><line x1="8" y1="11" x2="14" y2="11"></line>',"zoom-out":'<circle cx="11" cy="11" r="8"></circle><line x1="21" y1="21" x2="16.65" y2="16.65"></line><line x1="8" y1="11" x2="14" y2="11"></line>'}},function(e){e.exports={xmlns:"http://www.w3.org/2000/svg",width:24,height:24,viewBox:"0 0 24 24",fill:"none",stroke:"currentColor","stroke-width":2,"stroke-linecap":"round","stroke-linejoin":"round"}},function(e,n,i){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var t=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var i=arguments[n];for(var t in i)Object.prototype.hasOwnProperty.call(i,t)&&(e[t]=i[t])}return e},l=function(){function e(e,n){for(var i=0;i<n.length;i++){var t=n[i];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(e,t.key,t)}}return function(n,i,t){return i&&e(n.prototype,i),t&&e(n,t),n}}(),r=a(i(22)),o=a(i(42));function a(e){return e&&e.__esModule?e:{default:e}}var c=function(){function e(n,i){var l=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];!function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,e),this.name=n,this.contents=i,this.tags=l,this.attrs=t({},o.default,{class:"feather feather-"+n})}return l(e,[{key:"toSvg",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return"<svg "+function(e){return Object.keys(e).map(function(n){return n+'="'+e[n]+'"'}).join(" ")}(t({},this.attrs,e,{class:(0,r.default)(this.attrs.class,e.class)}))+">"+this.contents+"</svg>"}},{key:"toString",value:function(){return this.contents}}]),e}();n.default=c},function(e,n,i){"use strict";var t=o(i(12)),l=o(i(39)),r=o(i(38));function o(e){return e&&e.__esModule?e:{default:e}}e.exports={icons:t.default,toSvg:l.default,replace:r.default}},function(e,n,i){e.exports=i(0)},function(e,n,i){var t=i(2)("iterator"),l=!1;try{var r=0,o={next:function(){return{done:!!r++}},return:function(){l=!0}};o[t]=function(){return this},Array.from(o,function(){throw 2})}catch(e){}e.exports=function(e,n){if(!n&&!l)return!1;var i=!1;try{var r={};r[t]=function(){return{next:function(){return{done:i=!0}}}},e(r)}catch(e){}return i}},function(e,n,i){var t=i(30),l=i(2)("toStringTag"),r="Arguments"==t(function(){return arguments}());e.exports=function(e){var n,i,o;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(i=function(e,n){try{return e[n]}catch(e){}}(n=Object(e),l))?i:r?t(n):"Object"==(o=t(n))&&"function"==typeof n.callee?"Arguments":o}},function(e,n,i){var t=i(47),l=i(9),r=i(2)("iterator");e.exports=function(e){if(void 0!=e)return e[r]||e["@@iterator"]||l[t(e)]}},function(e,n,i){"use strict";var t=i(18),l=i(7),r=i(10);e.exports=function(e,n,i){var o=t(n);o in e?l.f(e,o,r(0,i)):e[o]=i}},function(e,n,i){var t=i(2),l=i(9),r=t("iterator"),o=Array.prototype;e.exports=function(e){return void 0!==e&&(l.Array===e||o[r]===e)}},function(e,n,i){var t=i(3);e.exports=function(e,n,i,l){try{return l?n(t(i)[0],i[1]):n(i)}catch(n){var r=e.return;throw void 0!==r&&t(r.call(e)),n}}},function(e,n){e.exports=function(e){if("function"!=typeof e)throw TypeError(String(e)+" is not a function");return e}},function(e,n,i){var t=i(52);e.exports=function(e,n,i){if(t(e),void 0===n)return e;switch(i){case 0:return function(){return e.call(n)};case 1:return function(i){return e.call(n,i)};case 2:return function(i,t){return e.call(n,i,t)};case 3:return function(i,t,l){return e.call(n,i,t,l)}}return function(){return e.apply(n,arguments)}}},function(e,n,i){"use strict";var t=i(53),l=i(24),r=i(51),o=i(50),a=i(27),c=i(49),p=i(48);e.exports=function(e){var n,i,y,h,x=l(e),s="function"==typeof this?this:Array,u=arguments.length,d=u>1?arguments[1]:void 0,f=void 0!==d,v=0,g=p(x);if(f&&(d=t(d,u>2?arguments[2]:void 0,2)),void 0==g||s==Array&&o(g))for(i=new s(n=a(x.length));n>v;v++)c(i,v,f?d(x[v],v):x[v]);else for(h=g.call(x),i=new s;!(y=h.next()).done;v++)c(i,v,f?r(h,d,[y.value,v],!0):y.value);return i.length=v,i}},function(e,n,i){var t=i(32),l=i(54);t({target:"Array",stat:!0,forced:!i(46)(function(e){Array.from(e)})},{from:l})},function(e,n,i){var t=i(6),l=i(3);e.exports=function(e,n){if(l(e),!t(n)&&null!==n)throw TypeError("Can't set "+String(n)+" as a prototype")}},function(e,n,i){var t=i(56);e.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var e,n=!1,i={};try{(e=Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set).call(i,[]),n=i instanceof Array}catch(e){}return function(i,l){return t(i,l),n?e.call(i,l):i.__proto__=l,i}}():void 0)},function(e,n,i){var t=i(0).document;e.exports=t&&t.documentElement},function(e,n,i){var t=i(28),l=i(13);e.exports=Object.keys||function(e){return t(e,l)}},function(e,n,i){var t=i(8),l=i(7),r=i(3),o=i(59);e.exports=t?Object.defineProperties:function(e,n){r(e);for(var i,t=o(n),a=t.length,c=0;a>c;)l.f(e,i=t[c++],n[i]);return e}},function(e,n,i){var t=i(3),l=i(60),r=i(13),o=i(15),a=i(58),c=i(34),p=i(16)("IE_PROTO"),y=function(){},h=function(){var e,n=c("iframe"),i=r.length;for(n.style.display="none",a.appendChild(n),n.src=String("javascript:"),(e=n.contentWindow.document).open(),e.write("<script>document.F=Object<\/script>"),e.close(),h=e.F;i--;)delete h.prototype[r[i]];return h()};e.exports=Object.create||function(e,n){var i;return null!==e?(y.prototype=t(e),i=new y,y.prototype=null,i[p]=e):i=h(),void 0===n?i:l(i,n)},o[p]=!0},function(e,n,i){var t=i(4);e.exports=!!Object.getOwnPropertySymbols&&!t(function(){return!String(Symbol())})},function(e,n,i){var t=i(4);e.exports=!t(function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype})},function(e,n,i){"use strict";var t=i(26).IteratorPrototype,l=i(61),r=i(10),o=i(23),a=i(9),c=function(){return this};e.exports=function(e,n,i){var p=n+" Iterator";return e.prototype=l(t,{next:r(1,i)}),o(e,p,!1,!0),a[p]=c,e}},function(e,n,i){var t=i(4),l=/#|\.prototype\./,r=function(e,n){var i=a[o(e)];return i==p||i!=c&&("function"==typeof n?t(n):!!n)},o=r.normalize=function(e){return String(e).replace(l,".").toLowerCase()},a=r.data={},c=r.NATIVE="N",p=r.POLYFILL="P";e.exports=r},function(e,n){n.f=Object.getOwnPropertySymbols},function(e,n,i){var t=i(21),l=Math.max,r=Math.min;e.exports=function(e,n){var i=t(e);return i<0?l(i+n,0):r(i,n)}},function(e,n,i){var t=i(14),l=i(27),r=i(67);e.exports=function(e){return function(n,i,o){var a,c=t(n),p=l(c.length),y=r(o,p);if(e&&i!=i){for(;p>y;)if((a=c[y++])!=a)return!0}else for(;p>y;y++)if((e||y in c)&&c[y]===i)return e||y||0;return!e&&-1}}},function(e,n,i){var t=i(28),l=i(13).concat("length","prototype");n.f=Object.getOwnPropertyNames||function(e){return t(e,l)}},function(e,n,i){var t=i(0),l=i(69),r=i(66),o=i(3),a=t.Reflect;e.exports=a&&a.ownKeys||function(e){var n=l.f(o(e)),i=r.f;return i?n.concat(i(e)):n}},function(e,n,i){var t=i(1),l=i(70),r=i(31),o=i(7);e.exports=function(e,n){for(var i=l(n),a=o.f,c=r.f,p=0;p<i.length;p++){var y=i[p];t(e,y)||a(e,y,c(n,y))}}},function(e,n,i){var t=i(4),l=i(30),r="".split;e.exports=t(function(){return!Object("z").propertyIsEnumerable(0)})?function(e){return"String"==l(e)?r.call(e,""):Object(e)}:Object},function(e,n,i){"use strict";var t={}.propertyIsEnumerable,l=Object.getOwnPropertyDescriptor,r=l&&!t.call({1:2},1);n.f=r?function(e){var n=l(this,e);return!!n&&n.enumerable}:t},function(e,n,i){"use strict";var t=i(32),l=i(64),r=i(25),o=i(57),a=i(23),c=i(5),p=i(29),y=i(2),h=i(17),x=i(9),s=i(26),u=s.IteratorPrototype,d=s.BUGGY_SAFARI_ITERATORS,f=y("iterator"),v=function(){return this};e.exports=function(e,n,i,y,s,g,m){l(i,n,y);var M,w,b,z=function(e){if(e===s&&O)return O;if(!d&&e in H)return H[e];switch(e){case"keys":case"values":case"entries":return function(){return new i(this,e)}}return function(){return new i(this)}},A=n+" Iterator",k=!1,H=e.prototype,V=H[f]||H["@@iterator"]||s&&H[s],O=!d&&V||z(s),j="Array"==n&&H.entries||V;if(j&&(M=r(j.call(new e)),u!==Object.prototype&&M.next&&(h||r(M)===u||(o?o(M,u):"function"!=typeof M[f]&&c(M,f,v)),a(M,A,!0,!0),h&&(x[A]=v))),"values"==s&&V&&"values"!==V.name&&(k=!0,O=function(){return V.call(this)}),h&&!m||H[f]===O||c(H,f,O),x[n]=O,s)if(w={values:z("values"),keys:g?O:z("keys"),entries:z("entries")},m)for(b in w)!d&&!k&&b in H||p(H,b,w[b]);else t({target:n,proto:!0,forced:d||k},w);return w}},function(e,n){var i;i=function(){return this}();try{i=i||Function("return this")()||(0,eval)("this")}catch(e){"object"==typeof window&&(i=window)}e.exports=i},function(e,n,i){var t=i(0),l=i(36),r=t.WeakMap;e.exports="function"==typeof r&&/native code/.test(l.call(r))},function(e,n,i){var t=i(21),l=i(20);e.exports=function(e,n,i){var r,o,a=String(l(e)),c=t(n),p=a.length;return c<0||c>=p?i?"":void 0:(r=a.charCodeAt(c))<55296||r>56319||c+1===p||(o=a.charCodeAt(c+1))<56320||o>57343?i?a.charAt(c):r:i?a.slice(c,c+2):o-56320+(r-55296<<10)+65536}},function(e,n,i){"use strict";var t=i(77),l=i(37),r=i(74),o=l.set,a=l.getterFor("String Iterator");r(String,"String",function(e){o(this,{type:"String Iterator",string:String(e),index:0})},function(){var e,n=a(this),i=n.string,l=n.index;return l>=i.length?{value:void 0,done:!0}:(e=t(i,l,!0),n.index+=e.length,{value:e,done:!1})})},function(e,n,i){i(78),i(55);var t=i(45);e.exports=t.Array.from},function(e,n,i){i(79),e.exports=i(44)}])});
//# sourceMappingURL=feather.min.js.map
!function(i){"use strict";"function"==typeof define&&define.amd?define(["jquery"],i):"undefined"!=typeof exports?module.exports=i(require("jquery")):i(jQuery)}(function(i){"use strict";var e=window.Slick||{};(e=function(){var e=0;return function(t,o){var s,n=this;n.defaults={accessibility:!0,adaptiveHeight:!1,appendArrows:i(t),appendDots:i(t),arrows:!0,asNavFor:null,prevArrow:'<button class="slick-prev" aria-label="Previous" type="button">Previous</button>',nextArrow:'<button class="slick-next" aria-label="Next" type="button">Next</button>',autoplay:!1,autoplaySpeed:3e3,centerMode:!1,centerPadding:"50px",cssEase:"ease",customPaging:function(e,t){return i('<button type="button" />').text(t+1)},dots:!1,dotsClass:"slick-dots",draggable:!0,easing:"linear",edgeFriction:.35,fade:!1,focusOnSelect:!1,focusOnChange:!1,infinite:!0,initialSlide:0,lazyLoad:"ondemand",mobileFirst:!1,pauseOnHover:!0,pauseOnFocus:!0,pauseOnDotsHover:!1,respondTo:"window",responsive:null,rows:1,rtl:!1,slide:"",slidesPerRow:1,slidesToShow:1,slidesToScroll:1,speed:500,swipe:!0,swipeToSlide:!1,touchMove:!0,touchThreshold:5,useCSS:!0,useTransform:!0,variableWidth:!1,vertical:!1,verticalSwiping:!1,waitForAnimate:!0,zIndex:1e3},n.initials={animating:!1,dragging:!1,autoPlayTimer:null,currentDirection:0,currentLeft:null,currentSlide:0,direction:1,$dots:null,listWidth:null,listHeight:null,loadIndex:0,$nextArrow:null,$prevArrow:null,scrolling:!1,slideCount:null,slideWidth:null,$slideTrack:null,$slides:null,sliding:!1,slideOffset:0,swipeLeft:null,swiping:!1,$list:null,touchObject:{},transformsEnabled:!1,unslicked:!1},i.extend(n,n.initials),n.activeBreakpoint=null,n.animType=null,n.animProp=null,n.breakpoints=[],n.breakpointSettings=[],n.cssTransitions=!1,n.focussed=!1,n.interrupted=!1,n.hidden="hidden",n.paused=!0,n.positionProp=null,n.respondTo=null,n.rowCount=1,n.shouldClick=!0,n.$slider=i(t),n.$slidesCache=null,n.transformType=null,n.transitionType=null,n.visibilityChange="visibilitychange",n.windowWidth=0,n.windowTimer=null,s=i(t).data("slick")||{},n.options=i.extend({},n.defaults,o,s),n.currentSlide=n.options.initialSlide,n.originalSettings=n.options,void 0!==document.mozHidden?(n.hidden="mozHidden",n.visibilityChange="mozvisibilitychange"):void 0!==document.webkitHidden&&(n.hidden="webkitHidden",n.visibilityChange="webkitvisibilitychange"),n.autoPlay=i.proxy(n.autoPlay,n),n.autoPlayClear=i.proxy(n.autoPlayClear,n),n.autoPlayIterator=i.proxy(n.autoPlayIterator,n),n.changeSlide=i.proxy(n.changeSlide,n),n.clickHandler=i.proxy(n.clickHandler,n),n.selectHandler=i.proxy(n.selectHandler,n),n.setPosition=i.proxy(n.setPosition,n),n.swipeHandler=i.proxy(n.swipeHandler,n),n.dragHandler=i.proxy(n.dragHandler,n),n.keyHandler=i.proxy(n.keyHandler,n),n.instanceUid=e++,n.htmlExpr=/^(?:\s*(<[\w\W]+>)[^>]*)$/,n.registerBreakpoints(),n.init(!0)}}()).prototype.activateADA=function(){this.$slideTrack.find(".slick-active").attr({"aria-hidden":"false"}).find("a, input, button, select").attr({tabindex:"0"})},e.prototype.addSlide=e.prototype.slickAdd=function(e,t,o){var s=this;if("boolean"==typeof t)o=t,t=null;else if(t<0||t>=s.slideCount)return!1;s.unload(),"number"==typeof t?0===t&&0===s.$slides.length?i(e).appendTo(s.$slideTrack):o?i(e).insertBefore(s.$slides.eq(t)):i(e).insertAfter(s.$slides.eq(t)):!0===o?i(e).prependTo(s.$slideTrack):i(e).appendTo(s.$slideTrack),s.$slides=s.$slideTrack.children(this.options.slide),s.$slideTrack.children(this.options.slide).detach(),s.$slideTrack.append(s.$slides),s.$slides.each(function(e,t){i(t).attr("data-slick-index",e)}),s.$slidesCache=s.$slides,s.reinit()},e.prototype.animateHeight=function(){var i=this;if(1===i.options.slidesToShow&&!0===i.options.adaptiveHeight&&!1===i.options.vertical){var e=i.$slides.eq(i.currentSlide).outerHeight(!0);i.$list.animate({height:e},i.options.speed)}},e.prototype.animateSlide=function(e,t){var o={},s=this;s.animateHeight(),!0===s.options.rtl&&!1===s.options.vertical&&(e=-e),!1===s.transformsEnabled?!1===s.options.vertical?s.$slideTrack.animate({left:e},s.options.speed,s.options.easing,t):s.$slideTrack.animate({top:e},s.options.speed,s.options.easing,t):!1===s.cssTransitions?(!0===s.options.rtl&&(s.currentLeft=-s.currentLeft),i({animStart:s.currentLeft}).animate({animStart:e},{duration:s.options.speed,easing:s.options.easing,step:function(i){i=Math.ceil(i),!1===s.options.vertical?(o[s.animType]="translate("+i+"px, 0px)",s.$slideTrack.css(o)):(o[s.animType]="translate(0px,"+i+"px)",s.$slideTrack.css(o))},complete:function(){t&&t.call()}})):(s.applyTransition(),e=Math.ceil(e),!1===s.options.vertical?o[s.animType]="translate3d("+e+"px, 0px, 0px)":o[s.animType]="translate3d(0px,"+e+"px, 0px)",s.$slideTrack.css(o),t&&setTimeout(function(){s.disableTransition(),t.call()},s.options.speed))},e.prototype.getNavTarget=function(){var e=this,t=e.options.asNavFor;return t&&null!==t&&(t=i(t).not(e.$slider)),t},e.prototype.asNavFor=function(e){var t=this.getNavTarget();null!==t&&"object"==typeof t&&t.each(function(){var t=i(this).slick("getSlick");t.unslicked||t.slideHandler(e,!0)})},e.prototype.applyTransition=function(i){var e=this,t={};!1===e.options.fade?t[e.transitionType]=e.transformType+" "+e.options.speed+"ms "+e.options.cssEase:t[e.transitionType]="opacity "+e.options.speed+"ms "+e.options.cssEase,!1===e.options.fade?e.$slideTrack.css(t):e.$slides.eq(i).css(t)},e.prototype.autoPlay=function(){var i=this;i.autoPlayClear(),i.slideCount>i.options.slidesToShow&&(i.autoPlayTimer=setInterval(i.autoPlayIterator,i.options.autoplaySpeed))},e.prototype.autoPlayClear=function(){var i=this;i.autoPlayTimer&&clearInterval(i.autoPlayTimer)},e.prototype.autoPlayIterator=function(){var i=this,e=i.currentSlide+i.options.slidesToScroll;i.paused||i.interrupted||i.focussed||(!1===i.options.infinite&&(1===i.direction&&i.currentSlide+1===i.slideCount-1?i.direction=0:0===i.direction&&(e=i.currentSlide-i.options.slidesToScroll,i.currentSlide-1==0&&(i.direction=1))),i.slideHandler(e))},e.prototype.buildArrows=function(){var e=this;!0===e.options.arrows&&(e.$prevArrow=i(e.options.prevArrow).addClass("slick-arrow"),e.$nextArrow=i(e.options.nextArrow).addClass("slick-arrow"),e.slideCount>e.options.slidesToShow?(e.$prevArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"),e.$nextArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"),e.htmlExpr.test(e.options.prevArrow)&&e.$prevArrow.prependTo(e.options.appendArrows),e.htmlExpr.test(e.options.nextArrow)&&e.$nextArrow.appendTo(e.options.appendArrows),!0!==e.options.infinite&&e.$prevArrow.addClass("slick-disabled").attr("aria-disabled","true")):e.$prevArrow.add(e.$nextArrow).addClass("slick-hidden").attr({"aria-disabled":"true",tabindex:"-1"}))},e.prototype.buildDots=function(){var e,t,o=this;if(!0===o.options.dots){for(o.$slider.addClass("slick-dotted"),t=i("<ul />").addClass(o.options.dotsClass),e=0;e<=o.getDotCount();e+=1)t.append(i("<li />").append(o.options.customPaging.call(this,o,e)));o.$dots=t.appendTo(o.options.appendDots),o.$dots.find("li").first().addClass("slick-active")}},e.prototype.buildOut=function(){var e=this;e.$slides=e.$slider.children(e.options.slide+":not(.slick-cloned)").addClass("slick-slide"),e.slideCount=e.$slides.length,e.$slides.each(function(e,t){i(t).attr("data-slick-index",e).data("originalStyling",i(t).attr("style")||"")}),e.$slider.addClass("slick-slider"),e.$slideTrack=0===e.slideCount?i('<div class="slick-track"/>').appendTo(e.$slider):e.$slides.wrapAll('<div class="slick-track"/>').parent(),e.$list=e.$slideTrack.wrap('<div class="slick-list"/>').parent(),e.$slideTrack.css("opacity",0),!0!==e.options.centerMode&&!0!==e.options.swipeToSlide||(e.options.slidesToScroll=1),i("img[data-lazy]",e.$slider).not("[src]").addClass("slick-loading"),e.setupInfinite(),e.buildArrows(),e.buildDots(),e.updateDots(),e.setSlideClasses("number"==typeof e.currentSlide?e.currentSlide:0),!0===e.options.draggable&&e.$list.addClass("draggable")},e.prototype.buildRows=function(){var i,e,t,o,s,n,r,l=this;if(o=document.createDocumentFragment(),n=l.$slider.children(),l.options.rows>1){for(r=l.options.slidesPerRow*l.options.rows,s=Math.ceil(n.length/r),i=0;i<s;i++){var d=document.createElement("div");for(e=0;e<l.options.rows;e++){var a=document.createElement("div");for(t=0;t<l.options.slidesPerRow;t++){var c=i*r+(e*l.options.slidesPerRow+t);n.get(c)&&a.appendChild(n.get(c))}d.appendChild(a)}o.appendChild(d)}l.$slider.empty().append(o),l.$slider.children().children().children().css({width:100/l.options.slidesPerRow+"%",display:"inline-block"})}},e.prototype.checkResponsive=function(e,t){var o,s,n,r=this,l=!1,d=r.$slider.width(),a=window.innerWidth||i(window).width();if("window"===r.respondTo?n=a:"slider"===r.respondTo?n=d:"min"===r.respondTo&&(n=Math.min(a,d)),r.options.responsive&&r.options.responsive.length&&null!==r.options.responsive){s=null;for(o in r.breakpoints)r.breakpoints.hasOwnProperty(o)&&(!1===r.originalSettings.mobileFirst?n<r.breakpoints[o]&&(s=r.breakpoints[o]):n>r.breakpoints[o]&&(s=r.breakpoints[o]));null!==s?null!==r.activeBreakpoint?(s!==r.activeBreakpoint||t)&&(r.activeBreakpoint=s,"unslick"===r.breakpointSettings[s]?r.unslick(s):(r.options=i.extend({},r.originalSettings,r.breakpointSettings[s]),!0===e&&(r.currentSlide=r.options.initialSlide),r.refresh(e)),l=s):(r.activeBreakpoint=s,"unslick"===r.breakpointSettings[s]?r.unslick(s):(r.options=i.extend({},r.originalSettings,r.breakpointSettings[s]),!0===e&&(r.currentSlide=r.options.initialSlide),r.refresh(e)),l=s):null!==r.activeBreakpoint&&(r.activeBreakpoint=null,r.options=r.originalSettings,!0===e&&(r.currentSlide=r.options.initialSlide),r.refresh(e),l=s),e||!1===l||r.$slider.trigger("breakpoint",[r,l])}},e.prototype.changeSlide=function(e,t){var o,s,n,r=this,l=i(e.currentTarget);switch(l.is("a")&&e.preventDefault(),l.is("li")||(l=l.closest("li")),n=r.slideCount%r.options.slidesToScroll!=0,o=n?0:(r.slideCount-r.currentSlide)%r.options.slidesToScroll,e.data.message){case"previous":s=0===o?r.options.slidesToScroll:r.options.slidesToShow-o,r.slideCount>r.options.slidesToShow&&r.slideHandler(r.currentSlide-s,!1,t);break;case"next":s=0===o?r.options.slidesToScroll:o,r.slideCount>r.options.slidesToShow&&r.slideHandler(r.currentSlide+s,!1,t);break;case"index":var d=0===e.data.index?0:e.data.index||l.index()*r.options.slidesToScroll;r.slideHandler(r.checkNavigable(d),!1,t),l.children().trigger("focus");break;default:return}},e.prototype.checkNavigable=function(i){var e,t;if(e=this.getNavigableIndexes(),t=0,i>e[e.length-1])i=e[e.length-1];else for(var o in e){if(i<e[o]){i=t;break}t=e[o]}return i},e.prototype.cleanUpEvents=function(){var e=this;e.options.dots&&null!==e.$dots&&(i("li",e.$dots).off("click.slick",e.changeSlide).off("mouseenter.slick",i.proxy(e.interrupt,e,!0)).off("mouseleave.slick",i.proxy(e.interrupt,e,!1)),!0===e.options.accessibility&&e.$dots.off("keydown.slick",e.keyHandler)),e.$slider.off("focus.slick blur.slick"),!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow&&e.$prevArrow.off("click.slick",e.changeSlide),e.$nextArrow&&e.$nextArrow.off("click.slick",e.changeSlide),!0===e.options.accessibility&&(e.$prevArrow&&e.$prevArrow.off("keydown.slick",e.keyHandler),e.$nextArrow&&e.$nextArrow.off("keydown.slick",e.keyHandler))),e.$list.off("touchstart.slick mousedown.slick",e.swipeHandler),e.$list.off("touchmove.slick mousemove.slick",e.swipeHandler),e.$list.off("touchend.slick mouseup.slick",e.swipeHandler),e.$list.off("touchcancel.slick mouseleave.slick",e.swipeHandler),e.$list.off("click.slick",e.clickHandler),i(document).off(e.visibilityChange,e.visibility),e.cleanUpSlideEvents(),!0===e.options.accessibility&&e.$list.off("keydown.slick",e.keyHandler),!0===e.options.focusOnSelect&&i(e.$slideTrack).children().off("click.slick",e.selectHandler),i(window).off("orientationchange.slick.slick-"+e.instanceUid,e.orientationChange),i(window).off("resize.slick.slick-"+e.instanceUid,e.resize),i("[draggable!=true]",e.$slideTrack).off("dragstart",e.preventDefault),i(window).off("load.slick.slick-"+e.instanceUid,e.setPosition)},e.prototype.cleanUpSlideEvents=function(){var e=this;e.$list.off("mouseenter.slick",i.proxy(e.interrupt,e,!0)),e.$list.off("mouseleave.slick",i.proxy(e.interrupt,e,!1))},e.prototype.cleanUpRows=function(){var i,e=this;e.options.rows>1&&((i=e.$slides.children().children()).removeAttr("style"),e.$slider.empty().append(i))},e.prototype.clickHandler=function(i){!1===this.shouldClick&&(i.stopImmediatePropagation(),i.stopPropagation(),i.preventDefault())},e.prototype.destroy=function(e){var t=this;t.autoPlayClear(),t.touchObject={},t.cleanUpEvents(),i(".slick-cloned",t.$slider).detach(),t.$dots&&t.$dots.remove(),t.$prevArrow&&t.$prevArrow.length&&(t.$prevArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display",""),t.htmlExpr.test(t.options.prevArrow)&&t.$prevArrow.remove()),t.$nextArrow&&t.$nextArrow.length&&(t.$nextArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display",""),t.htmlExpr.test(t.options.nextArrow)&&t.$nextArrow.remove()),t.$slides&&(t.$slides.removeClass("slick-slide slick-active slick-center slick-visible slick-current").removeAttr("aria-hidden").removeAttr("data-slick-index").each(function(){i(this).attr("style",i(this).data("originalStyling"))}),t.$slideTrack.children(this.options.slide).detach(),t.$slideTrack.detach(),t.$list.detach(),t.$slider.append(t.$slides)),t.cleanUpRows(),t.$slider.removeClass("slick-slider"),t.$slider.removeClass("slick-initialized"),t.$slider.removeClass("slick-dotted"),t.unslicked=!0,e||t.$slider.trigger("destroy",[t])},e.prototype.disableTransition=function(i){var e=this,t={};t[e.transitionType]="",!1===e.options.fade?e.$slideTrack.css(t):e.$slides.eq(i).css(t)},e.prototype.fadeSlide=function(i,e){var t=this;!1===t.cssTransitions?(t.$slides.eq(i).css({zIndex:t.options.zIndex}),t.$slides.eq(i).animate({opacity:1},t.options.speed,t.options.easing,e)):(t.applyTransition(i),t.$slides.eq(i).css({opacity:1,zIndex:t.options.zIndex}),e&&setTimeout(function(){t.disableTransition(i),e.call()},t.options.speed))},e.prototype.fadeSlideOut=function(i){var e=this;!1===e.cssTransitions?e.$slides.eq(i).animate({opacity:0,zIndex:e.options.zIndex-2},e.options.speed,e.options.easing):(e.applyTransition(i),e.$slides.eq(i).css({opacity:0,zIndex:e.options.zIndex-2}))},e.prototype.filterSlides=e.prototype.slickFilter=function(i){var e=this;null!==i&&(e.$slidesCache=e.$slides,e.unload(),e.$slideTrack.children(this.options.slide).detach(),e.$slidesCache.filter(i).appendTo(e.$slideTrack),e.reinit())},e.prototype.focusHandler=function(){var e=this;e.$slider.off("focus.slick blur.slick").on("focus.slick blur.slick","*",function(t){t.stopImmediatePropagation();var o=i(this);setTimeout(function(){e.options.pauseOnFocus&&(e.focussed=o.is(":focus"),e.autoPlay())},0)})},e.prototype.getCurrent=e.prototype.slickCurrentSlide=function(){return this.currentSlide},e.prototype.getDotCount=function(){var i=this,e=0,t=0,o=0;if(!0===i.options.infinite)if(i.slideCount<=i.options.slidesToShow)++o;else for(;e<i.slideCount;)++o,e=t+i.options.slidesToScroll,t+=i.options.slidesToScroll<=i.options.slidesToShow?i.options.slidesToScroll:i.options.slidesToShow;else if(!0===i.options.centerMode)o=i.slideCount;else if(i.options.asNavFor)for(;e<i.slideCount;)++o,e=t+i.options.slidesToScroll,t+=i.options.slidesToScroll<=i.options.slidesToShow?i.options.slidesToScroll:i.options.slidesToShow;else o=1+Math.ceil((i.slideCount-i.options.slidesToShow)/i.options.slidesToScroll);return o-1},e.prototype.getLeft=function(i){var e,t,o,s,n=this,r=0;return n.slideOffset=0,t=n.$slides.first().outerHeight(!0),!0===n.options.infinite?(n.slideCount>n.options.slidesToShow&&(n.slideOffset=n.slideWidth*n.options.slidesToShow*-1,s=-1,!0===n.options.vertical&&!0===n.options.centerMode&&(2===n.options.slidesToShow?s=-1.5:1===n.options.slidesToShow&&(s=-2)),r=t*n.options.slidesToShow*s),n.slideCount%n.options.slidesToScroll!=0&&i+n.options.slidesToScroll>n.slideCount&&n.slideCount>n.options.slidesToShow&&(i>n.slideCount?(n.slideOffset=(n.options.slidesToShow-(i-n.slideCount))*n.slideWidth*-1,r=(n.options.slidesToShow-(i-n.slideCount))*t*-1):(n.slideOffset=n.slideCount%n.options.slidesToScroll*n.slideWidth*-1,r=n.slideCount%n.options.slidesToScroll*t*-1))):i+n.options.slidesToShow>n.slideCount&&(n.slideOffset=(i+n.options.slidesToShow-n.slideCount)*n.slideWidth,r=(i+n.options.slidesToShow-n.slideCount)*t),n.slideCount<=n.options.slidesToShow&&(n.slideOffset=0,r=0),!0===n.options.centerMode&&n.slideCount<=n.options.slidesToShow?n.slideOffset=n.slideWidth*Math.floor(n.options.slidesToShow)/2-n.slideWidth*n.slideCount/2:!0===n.options.centerMode&&!0===n.options.infinite?n.slideOffset+=n.slideWidth*Math.floor(n.options.slidesToShow/2)-n.slideWidth:!0===n.options.centerMode&&(n.slideOffset=0,n.slideOffset+=n.slideWidth*Math.floor(n.options.slidesToShow/2)),e=!1===n.options.vertical?i*n.slideWidth*-1+n.slideOffset:i*t*-1+r,!0===n.options.variableWidth&&(o=n.slideCount<=n.options.slidesToShow||!1===n.options.infinite?n.$slideTrack.children(".slick-slide").eq(i):n.$slideTrack.children(".slick-slide").eq(i+n.options.slidesToShow),e=!0===n.options.rtl?o[0]?-1*(n.$slideTrack.width()-o[0].offsetLeft-o.width()):0:o[0]?-1*o[0].offsetLeft:0,!0===n.options.centerMode&&(o=n.slideCount<=n.options.slidesToShow||!1===n.options.infinite?n.$slideTrack.children(".slick-slide").eq(i):n.$slideTrack.children(".slick-slide").eq(i+n.options.slidesToShow+1),e=!0===n.options.rtl?o[0]?-1*(n.$slideTrack.width()-o[0].offsetLeft-o.width()):0:o[0]?-1*o[0].offsetLeft:0,e+=(n.$list.width()-o.outerWidth())/2)),e},e.prototype.getOption=e.prototype.slickGetOption=function(i){return this.options[i]},e.prototype.getNavigableIndexes=function(){var i,e=this,t=0,o=0,s=[];for(!1===e.options.infinite?i=e.slideCount:(t=-1*e.options.slidesToScroll,o=-1*e.options.slidesToScroll,i=2*e.slideCount);t<i;)s.push(t),t=o+e.options.slidesToScroll,o+=e.options.slidesToScroll<=e.options.slidesToShow?e.options.slidesToScroll:e.options.slidesToShow;return s},e.prototype.getSlick=function(){return this},e.prototype.getSlideCount=function(){var e,t,o=this;return t=!0===o.options.centerMode?o.slideWidth*Math.floor(o.options.slidesToShow/2):0,!0===o.options.swipeToSlide?(o.$slideTrack.find(".slick-slide").each(function(s,n){if(n.offsetLeft-t+i(n).outerWidth()/2>-1*o.swipeLeft)return e=n,!1}),Math.abs(i(e).attr("data-slick-index")-o.currentSlide)||1):o.options.slidesToScroll},e.prototype.goTo=e.prototype.slickGoTo=function(i,e){this.changeSlide({data:{message:"index",index:parseInt(i)}},e)},e.prototype.init=function(e){var t=this;i(t.$slider).hasClass("slick-initialized")||(i(t.$slider).addClass("slick-initialized"),t.buildRows(),t.buildOut(),t.setProps(),t.startLoad(),t.loadSlider(),t.initializeEvents(),t.updateArrows(),t.updateDots(),t.checkResponsive(!0),t.focusHandler()),e&&t.$slider.trigger("init",[t]),!0===t.options.accessibility&&t.initADA(),t.options.autoplay&&(t.paused=!1,t.autoPlay())},e.prototype.initADA=function(){var e=this,t=Math.ceil(e.slideCount/e.options.slidesToShow),o=e.getNavigableIndexes().filter(function(i){return i>=0&&i<e.slideCount});e.$slides.add(e.$slideTrack.find(".slick-cloned")).attr({"aria-hidden":"true",tabindex:"-1"}).find("a, input, button, select").attr({tabindex:"-1"}),null!==e.$dots&&(e.$slides.not(e.$slideTrack.find(".slick-cloned")).each(function(t){var s=o.indexOf(t);i(this).attr({role:"tabpanel",id:"slick-slide"+e.instanceUid+t,tabindex:-1}),-1!==s&&i(this).attr({"aria-describedby":"slick-slide-control"+e.instanceUid+s})}),e.$dots.attr("role","tablist").find("li").each(function(s){var n=o[s];i(this).attr({role:"presentation"}),i(this).find("button").first().attr({role:"tab",id:"slick-slide-control"+e.instanceUid+s,"aria-controls":"slick-slide"+e.instanceUid+n,"aria-label":s+1+" of "+t,"aria-selected":null,tabindex:"-1"})}).eq(e.currentSlide).find("button").attr({"aria-selected":"true",tabindex:"0"}).end());for(var s=e.currentSlide,n=s+e.options.slidesToShow;s<n;s++)e.$slides.eq(s).attr("tabindex",0);e.activateADA()},e.prototype.initArrowEvents=function(){var i=this;!0===i.options.arrows&&i.slideCount>i.options.slidesToShow&&(i.$prevArrow.off("click.slick").on("click.slick",{message:"previous"},i.changeSlide),i.$nextArrow.off("click.slick").on("click.slick",{message:"next"},i.changeSlide),!0===i.options.accessibility&&(i.$prevArrow.on("keydown.slick",i.keyHandler),i.$nextArrow.on("keydown.slick",i.keyHandler)))},e.prototype.initDotEvents=function(){var e=this;!0===e.options.dots&&(i("li",e.$dots).on("click.slick",{message:"index"},e.changeSlide),!0===e.options.accessibility&&e.$dots.on("keydown.slick",e.keyHandler)),!0===e.options.dots&&!0===e.options.pauseOnDotsHover&&i("li",e.$dots).on("mouseenter.slick",i.proxy(e.interrupt,e,!0)).on("mouseleave.slick",i.proxy(e.interrupt,e,!1))},e.prototype.initSlideEvents=function(){var e=this;e.options.pauseOnHover&&(e.$list.on("mouseenter.slick",i.proxy(e.interrupt,e,!0)),e.$list.on("mouseleave.slick",i.proxy(e.interrupt,e,!1)))},e.prototype.initializeEvents=function(){var e=this;e.initArrowEvents(),e.initDotEvents(),e.initSlideEvents(),e.$list.on("touchstart.slick mousedown.slick",{action:"start"},e.swipeHandler),e.$list.on("touchmove.slick mousemove.slick",{action:"move"},e.swipeHandler),e.$list.on("touchend.slick mouseup.slick",{action:"end"},e.swipeHandler),e.$list.on("touchcancel.slick mouseleave.slick",{action:"end"},e.swipeHandler),e.$list.on("click.slick",e.clickHandler),i(document).on(e.visibilityChange,i.proxy(e.visibility,e)),!0===e.options.accessibility&&e.$list.on("keydown.slick",e.keyHandler),!0===e.options.focusOnSelect&&i(e.$slideTrack).children().on("click.slick",e.selectHandler),i(window).on("orientationchange.slick.slick-"+e.instanceUid,i.proxy(e.orientationChange,e)),i(window).on("resize.slick.slick-"+e.instanceUid,i.proxy(e.resize,e)),i("[draggable!=true]",e.$slideTrack).on("dragstart",e.preventDefault),i(window).on("load.slick.slick-"+e.instanceUid,e.setPosition),i(e.setPosition)},e.prototype.initUI=function(){var i=this;!0===i.options.arrows&&i.slideCount>i.options.slidesToShow&&(i.$prevArrow.show(),i.$nextArrow.show()),!0===i.options.dots&&i.slideCount>i.options.slidesToShow&&i.$dots.show()},e.prototype.keyHandler=function(i){var e=this;i.target.tagName.match("TEXTAREA|INPUT|SELECT")||(37===i.keyCode&&!0===e.options.accessibility?e.changeSlide({data:{message:!0===e.options.rtl?"next":"previous"}}):39===i.keyCode&&!0===e.options.accessibility&&e.changeSlide({data:{message:!0===e.options.rtl?"previous":"next"}}))},e.prototype.lazyLoad=function(){function e(e){i("img[data-lazy]",e).each(function(){var e=i(this),t=i(this).attr("data-lazy"),o=i(this).attr("data-srcset"),s=i(this).attr("data-sizes")||n.$slider.attr("data-sizes"),r=document.createElement("img");r.onload=function(){e.animate({opacity:0},100,function(){o&&(e.attr("srcset",o),s&&e.attr("sizes",s)),e.attr("src",t).animate({opacity:1},200,function(){e.removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading")}),n.$slider.trigger("lazyLoaded",[n,e,t])})},r.onerror=function(){e.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"),n.$slider.trigger("lazyLoadError",[n,e,t])},r.src=t})}var t,o,s,n=this;if(!0===n.options.centerMode?!0===n.options.infinite?s=(o=n.currentSlide+(n.options.slidesToShow/2+1))+n.options.slidesToShow+2:(o=Math.max(0,n.currentSlide-(n.options.slidesToShow/2+1)),s=n.options.slidesToShow/2+1+2+n.currentSlide):(o=n.options.infinite?n.options.slidesToShow+n.currentSlide:n.currentSlide,s=Math.ceil(o+n.options.slidesToShow),!0===n.options.fade&&(o>0&&o--,s<=n.slideCount&&s++)),t=n.$slider.find(".slick-slide").slice(o,s),"anticipated"===n.options.lazyLoad)for(var r=o-1,l=s,d=n.$slider.find(".slick-slide"),a=0;a<n.options.slidesToScroll;a++)r<0&&(r=n.slideCount-1),t=(t=t.add(d.eq(r))).add(d.eq(l)),r--,l++;e(t),n.slideCount<=n.options.slidesToShow?e(n.$slider.find(".slick-slide")):n.currentSlide>=n.slideCount-n.options.slidesToShow?e(n.$slider.find(".slick-cloned").slice(0,n.options.slidesToShow)):0===n.currentSlide&&e(n.$slider.find(".slick-cloned").slice(-1*n.options.slidesToShow))},e.prototype.loadSlider=function(){var i=this;i.setPosition(),i.$slideTrack.css({opacity:1}),i.$slider.removeClass("slick-loading"),i.initUI(),"progressive"===i.options.lazyLoad&&i.progressiveLazyLoad()},e.prototype.next=e.prototype.slickNext=function(){this.changeSlide({data:{message:"next"}})},e.prototype.orientationChange=function(){var i=this;i.checkResponsive(),i.setPosition()},e.prototype.pause=e.prototype.slickPause=function(){var i=this;i.autoPlayClear(),i.paused=!0},e.prototype.play=e.prototype.slickPlay=function(){var i=this;i.autoPlay(),i.options.autoplay=!0,i.paused=!1,i.focussed=!1,i.interrupted=!1},e.prototype.postSlide=function(e){var t=this;t.unslicked||(t.$slider.trigger("afterChange",[t,e]),t.animating=!1,t.slideCount>t.options.slidesToShow&&t.setPosition(),t.swipeLeft=null,t.options.autoplay&&t.autoPlay(),!0===t.options.accessibility&&(t.initADA(),t.options.focusOnChange&&i(t.$slides.get(t.currentSlide)).attr("tabindex",0).focus()))},e.prototype.prev=e.prototype.slickPrev=function(){this.changeSlide({data:{message:"previous"}})},e.prototype.preventDefault=function(i){i.preventDefault()},e.prototype.progressiveLazyLoad=function(e){e=e||1;var t,o,s,n,r,l=this,d=i("img[data-lazy]",l.$slider);d.length?(t=d.first(),o=t.attr("data-lazy"),s=t.attr("data-srcset"),n=t.attr("data-sizes")||l.$slider.attr("data-sizes"),(r=document.createElement("img")).onload=function(){s&&(t.attr("srcset",s),n&&t.attr("sizes",n)),t.attr("src",o).removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading"),!0===l.options.adaptiveHeight&&l.setPosition(),l.$slider.trigger("lazyLoaded",[l,t,o]),l.progressiveLazyLoad()},r.onerror=function(){e<3?setTimeout(function(){l.progressiveLazyLoad(e+1)},500):(t.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"),l.$slider.trigger("lazyLoadError",[l,t,o]),l.progressiveLazyLoad())},r.src=o):l.$slider.trigger("allImagesLoaded",[l])},e.prototype.refresh=function(e){var t,o,s=this;o=s.slideCount-s.options.slidesToShow,!s.options.infinite&&s.currentSlide>o&&(s.currentSlide=o),s.slideCount<=s.options.slidesToShow&&(s.currentSlide=0),t=s.currentSlide,s.destroy(!0),i.extend(s,s.initials,{currentSlide:t}),s.init(),e||s.changeSlide({data:{message:"index",index:t}},!1)},e.prototype.registerBreakpoints=function(){var e,t,o,s=this,n=s.options.responsive||null;if("array"===i.type(n)&&n.length){s.respondTo=s.options.respondTo||"window";for(e in n)if(o=s.breakpoints.length-1,n.hasOwnProperty(e)){for(t=n[e].breakpoint;o>=0;)s.breakpoints[o]&&s.breakpoints[o]===t&&s.breakpoints.splice(o,1),o--;s.breakpoints.push(t),s.breakpointSettings[t]=n[e].settings}s.breakpoints.sort(function(i,e){return s.options.mobileFirst?i-e:e-i})}},e.prototype.reinit=function(){var e=this;e.$slides=e.$slideTrack.children(e.options.slide).addClass("slick-slide"),e.slideCount=e.$slides.length,e.currentSlide>=e.slideCount&&0!==e.currentSlide&&(e.currentSlide=e.currentSlide-e.options.slidesToScroll),e.slideCount<=e.options.slidesToShow&&(e.currentSlide=0),e.registerBreakpoints(),e.setProps(),e.setupInfinite(),e.buildArrows(),e.updateArrows(),e.initArrowEvents(),e.buildDots(),e.updateDots(),e.initDotEvents(),e.cleanUpSlideEvents(),e.initSlideEvents(),e.checkResponsive(!1,!0),!0===e.options.focusOnSelect&&i(e.$slideTrack).children().on("click.slick",e.selectHandler),e.setSlideClasses("number"==typeof e.currentSlide?e.currentSlide:0),e.setPosition(),e.focusHandler(),e.paused=!e.options.autoplay,e.autoPlay(),e.$slider.trigger("reInit",[e])},e.prototype.resize=function(){var e=this;i(window).width()!==e.windowWidth&&(clearTimeout(e.windowDelay),e.windowDelay=window.setTimeout(function(){e.windowWidth=i(window).width(),e.checkResponsive(),e.unslicked||e.setPosition()},50))},e.prototype.removeSlide=e.prototype.slickRemove=function(i,e,t){var o=this;if(i="boolean"==typeof i?!0===(e=i)?0:o.slideCount-1:!0===e?--i:i,o.slideCount<1||i<0||i>o.slideCount-1)return!1;o.unload(),!0===t?o.$slideTrack.children().remove():o.$slideTrack.children(this.options.slide).eq(i).remove(),o.$slides=o.$slideTrack.children(this.options.slide),o.$slideTrack.children(this.options.slide).detach(),o.$slideTrack.append(o.$slides),o.$slidesCache=o.$slides,o.reinit()},e.prototype.setCSS=function(i){var e,t,o=this,s={};!0===o.options.rtl&&(i=-i),e="left"==o.positionProp?Math.ceil(i)+"px":"0px",t="top"==o.positionProp?Math.ceil(i)+"px":"0px",s[o.positionProp]=i,!1===o.transformsEnabled?o.$slideTrack.css(s):(s={},!1===o.cssTransitions?(s[o.animType]="translate("+e+", "+t+")",o.$slideTrack.css(s)):(s[o.animType]="translate3d("+e+", "+t+", 0px)",o.$slideTrack.css(s)))},e.prototype.setDimensions=function(){var i=this;!1===i.options.vertical?!0===i.options.centerMode&&i.$list.css({padding:"0px "+i.options.centerPadding}):(i.$list.height(i.$slides.first().outerHeight(!0)*i.options.slidesToShow),!0===i.options.centerMode&&i.$list.css({padding:i.options.centerPadding+" 0px"})),i.listWidth=i.$list.width(),i.listHeight=i.$list.height(),!1===i.options.vertical&&!1===i.options.variableWidth?(i.slideWidth=Math.ceil(i.listWidth/i.options.slidesToShow),i.$slideTrack.width(Math.ceil(i.slideWidth*i.$slideTrack.children(".slick-slide").length))):!0===i.options.variableWidth?i.$slideTrack.width(5e3*i.slideCount):(i.slideWidth=Math.ceil(i.listWidth),i.$slideTrack.height(Math.ceil(i.$slides.first().outerHeight(!0)*i.$slideTrack.children(".slick-slide").length)));var e=i.$slides.first().outerWidth(!0)-i.$slides.first().width();!1===i.options.variableWidth&&i.$slideTrack.children(".slick-slide").width(i.slideWidth-e)},e.prototype.setFade=function(){var e,t=this;t.$slides.each(function(o,s){e=t.slideWidth*o*-1,!0===t.options.rtl?i(s).css({position:"relative",right:e,top:0,zIndex:t.options.zIndex-2,opacity:0}):i(s).css({position:"relative",left:e,top:0,zIndex:t.options.zIndex-2,opacity:0})}),t.$slides.eq(t.currentSlide).css({zIndex:t.options.zIndex-1,opacity:1})},e.prototype.setHeight=function(){var i=this;if(1===i.options.slidesToShow&&!0===i.options.adaptiveHeight&&!1===i.options.vertical){var e=i.$slides.eq(i.currentSlide).outerHeight(!0);i.$list.css("height",e)}},e.prototype.setOption=e.prototype.slickSetOption=function(){var e,t,o,s,n,r=this,l=!1;if("object"===i.type(arguments[0])?(o=arguments[0],l=arguments[1],n="multiple"):"string"===i.type(arguments[0])&&(o=arguments[0],s=arguments[1],l=arguments[2],"responsive"===arguments[0]&&"array"===i.type(arguments[1])?n="responsive":void 0!==arguments[1]&&(n="single")),"single"===n)r.options[o]=s;else if("multiple"===n)i.each(o,function(i,e){r.options[i]=e});else if("responsive"===n)for(t in s)if("array"!==i.type(r.options.responsive))r.options.responsive=[s[t]];else{for(e=r.options.responsive.length-1;e>=0;)r.options.responsive[e].breakpoint===s[t].breakpoint&&r.options.responsive.splice(e,1),e--;r.options.responsive.push(s[t])}l&&(r.unload(),r.reinit())},e.prototype.setPosition=function(){var i=this;i.setDimensions(),i.setHeight(),!1===i.options.fade?i.setCSS(i.getLeft(i.currentSlide)):i.setFade(),i.$slider.trigger("setPosition",[i])},e.prototype.setProps=function(){var i=this,e=document.body.style;i.positionProp=!0===i.options.vertical?"top":"left","top"===i.positionProp?i.$slider.addClass("slick-vertical"):i.$slider.removeClass("slick-vertical"),void 0===e.WebkitTransition&&void 0===e.MozTransition&&void 0===e.msTransition||!0===i.options.useCSS&&(i.cssTransitions=!0),i.options.fade&&("number"==typeof i.options.zIndex?i.options.zIndex<3&&(i.options.zIndex=3):i.options.zIndex=i.defaults.zIndex),void 0!==e.OTransform&&(i.animType="OTransform",i.transformType="-o-transform",i.transitionType="OTransition",void 0===e.perspectiveProperty&&void 0===e.webkitPerspective&&(i.animType=!1)),void 0!==e.MozTransform&&(i.animType="MozTransform",i.transformType="-moz-transform",i.transitionType="MozTransition",void 0===e.perspectiveProperty&&void 0===e.MozPerspective&&(i.animType=!1)),void 0!==e.webkitTransform&&(i.animType="webkitTransform",i.transformType="-webkit-transform",i.transitionType="webkitTransition",void 0===e.perspectiveProperty&&void 0===e.webkitPerspective&&(i.animType=!1)),void 0!==e.msTransform&&(i.animType="msTransform",i.transformType="-ms-transform",i.transitionType="msTransition",void 0===e.msTransform&&(i.animType=!1)),void 0!==e.transform&&!1!==i.animType&&(i.animType="transform",i.transformType="transform",i.transitionType="transition"),i.transformsEnabled=i.options.useTransform&&null!==i.animType&&!1!==i.animType},e.prototype.setSlideClasses=function(i){var e,t,o,s,n=this;if(t=n.$slider.find(".slick-slide").removeClass("slick-active slick-center slick-current").attr("aria-hidden","true"),n.$slides.eq(i).addClass("slick-current"),!0===n.options.centerMode){var r=n.options.slidesToShow%2==0?1:0;e=Math.floor(n.options.slidesToShow/2),!0===n.options.infinite&&(i>=e&&i<=n.slideCount-1-e?n.$slides.slice(i-e+r,i+e+1).addClass("slick-active").attr("aria-hidden","false"):(o=n.options.slidesToShow+i,t.slice(o-e+1+r,o+e+2).addClass("slick-active").attr("aria-hidden","false")),0===i?t.eq(t.length-1-n.options.slidesToShow).addClass("slick-center"):i===n.slideCount-1&&t.eq(n.options.slidesToShow).addClass("slick-center")),n.$slides.eq(i).addClass("slick-center")}else i>=0&&i<=n.slideCount-n.options.slidesToShow?n.$slides.slice(i,i+n.options.slidesToShow).addClass("slick-active").attr("aria-hidden","false"):t.length<=n.options.slidesToShow?t.addClass("slick-active").attr("aria-hidden","false"):(s=n.slideCount%n.options.slidesToShow,o=!0===n.options.infinite?n.options.slidesToShow+i:i,n.options.slidesToShow==n.options.slidesToScroll&&n.slideCount-i<n.options.slidesToShow?t.slice(o-(n.options.slidesToShow-s),o+s).addClass("slick-active").attr("aria-hidden","false"):t.slice(o,o+n.options.slidesToShow).addClass("slick-active").attr("aria-hidden","false"));"ondemand"!==n.options.lazyLoad&&"anticipated"!==n.options.lazyLoad||n.lazyLoad()},e.prototype.setupInfinite=function(){var e,t,o,s=this;if(!0===s.options.fade&&(s.options.centerMode=!1),!0===s.options.infinite&&!1===s.options.fade&&(t=null,s.slideCount>s.options.slidesToShow)){for(o=!0===s.options.centerMode?s.options.slidesToShow+1:s.options.slidesToShow,e=s.slideCount;e>s.slideCount-o;e-=1)t=e-1,i(s.$slides[t]).clone(!0).attr("id","").attr("data-slick-index",t-s.slideCount).prependTo(s.$slideTrack).addClass("slick-cloned");for(e=0;e<o+s.slideCount;e+=1)t=e,i(s.$slides[t]).clone(!0).attr("id","").attr("data-slick-index",t+s.slideCount).appendTo(s.$slideTrack).addClass("slick-cloned");s.$slideTrack.find(".slick-cloned").find("[id]").each(function(){i(this).attr("id","")})}},e.prototype.interrupt=function(i){var e=this;i||e.autoPlay(),e.interrupted=i},e.prototype.selectHandler=function(e){var t=this,o=i(e.target).is(".slick-slide")?i(e.target):i(e.target).parents(".slick-slide"),s=parseInt(o.attr("data-slick-index"));s||(s=0),t.slideCount<=t.options.slidesToShow?t.slideHandler(s,!1,!0):t.slideHandler(s)},e.prototype.slideHandler=function(i,e,t){var o,s,n,r,l,d=null,a=this;if(e=e||!1,!(!0===a.animating&&!0===a.options.waitForAnimate||!0===a.options.fade&&a.currentSlide===i))if(!1===e&&a.asNavFor(i),o=i,d=a.getLeft(o),r=a.getLeft(a.currentSlide),a.currentLeft=null===a.swipeLeft?r:a.swipeLeft,!1===a.options.infinite&&!1===a.options.centerMode&&(i<0||i>a.getDotCount()*a.options.slidesToScroll))!1===a.options.fade&&(o=a.currentSlide,!0!==t?a.animateSlide(r,function(){a.postSlide(o)}):a.postSlide(o));else if(!1===a.options.infinite&&!0===a.options.centerMode&&(i<0||i>a.slideCount-a.options.slidesToScroll))!1===a.options.fade&&(o=a.currentSlide,!0!==t?a.animateSlide(r,function(){a.postSlide(o)}):a.postSlide(o));else{if(a.options.autoplay&&clearInterval(a.autoPlayTimer),s=o<0?a.slideCount%a.options.slidesToScroll!=0?a.slideCount-a.slideCount%a.options.slidesToScroll:a.slideCount+o:o>=a.slideCount?a.slideCount%a.options.slidesToScroll!=0?0:o-a.slideCount:o,a.animating=!0,a.$slider.trigger("beforeChange",[a,a.currentSlide,s]),n=a.currentSlide,a.currentSlide=s,a.setSlideClasses(a.currentSlide),a.options.asNavFor&&(l=(l=a.getNavTarget()).slick("getSlick")).slideCount<=l.options.slidesToShow&&l.setSlideClasses(a.currentSlide),a.updateDots(),a.updateArrows(),!0===a.options.fade)return!0!==t?(a.fadeSlideOut(n),a.fadeSlide(s,function(){a.postSlide(s)})):a.postSlide(s),void a.animateHeight();!0!==t?a.animateSlide(d,function(){a.postSlide(s)}):a.postSlide(s)}},e.prototype.startLoad=function(){var i=this;!0===i.options.arrows&&i.slideCount>i.options.slidesToShow&&(i.$prevArrow.hide(),i.$nextArrow.hide()),!0===i.options.dots&&i.slideCount>i.options.slidesToShow&&i.$dots.hide(),i.$slider.addClass("slick-loading")},e.prototype.swipeDirection=function(){var i,e,t,o,s=this;return i=s.touchObject.startX-s.touchObject.curX,e=s.touchObject.startY-s.touchObject.curY,t=Math.atan2(e,i),(o=Math.round(180*t/Math.PI))<0&&(o=360-Math.abs(o)),o<=45&&o>=0?!1===s.options.rtl?"left":"right":o<=360&&o>=315?!1===s.options.rtl?"left":"right":o>=135&&o<=225?!1===s.options.rtl?"right":"left":!0===s.options.verticalSwiping?o>=35&&o<=135?"down":"up":"vertical"},e.prototype.swipeEnd=function(i){var e,t,o=this;if(o.dragging=!1,o.swiping=!1,o.scrolling)return o.scrolling=!1,!1;if(o.interrupted=!1,o.shouldClick=!(o.touchObject.swipeLength>10),void 0===o.touchObject.curX)return!1;if(!0===o.touchObject.edgeHit&&o.$slider.trigger("edge",[o,o.swipeDirection()]),o.touchObject.swipeLength>=o.touchObject.minSwipe){switch(t=o.swipeDirection()){case"left":case"down":e=o.options.swipeToSlide?o.checkNavigable(o.currentSlide+o.getSlideCount()):o.currentSlide+o.getSlideCount(),o.currentDirection=0;break;case"right":case"up":e=o.options.swipeToSlide?o.checkNavigable(o.currentSlide-o.getSlideCount()):o.currentSlide-o.getSlideCount(),o.currentDirection=1}"vertical"!=t&&(o.slideHandler(e),o.touchObject={},o.$slider.trigger("swipe",[o,t]))}else o.touchObject.startX!==o.touchObject.curX&&(o.slideHandler(o.currentSlide),o.touchObject={})},e.prototype.swipeHandler=function(i){var e=this;if(!(!1===e.options.swipe||"ontouchend"in document&&!1===e.options.swipe||!1===e.options.draggable&&-1!==i.type.indexOf("mouse")))switch(e.touchObject.fingerCount=i.originalEvent&&void 0!==i.originalEvent.touches?i.originalEvent.touches.length:1,e.touchObject.minSwipe=e.listWidth/e.options.touchThreshold,!0===e.options.verticalSwiping&&(e.touchObject.minSwipe=e.listHeight/e.options.touchThreshold),i.data.action){case"start":e.swipeStart(i);break;case"move":e.swipeMove(i);break;case"end":e.swipeEnd(i)}},e.prototype.swipeMove=function(i){var e,t,o,s,n,r,l=this;return n=void 0!==i.originalEvent?i.originalEvent.touches:null,!(!l.dragging||l.scrolling||n&&1!==n.length)&&(e=l.getLeft(l.currentSlide),l.touchObject.curX=void 0!==n?n[0].pageX:i.clientX,l.touchObject.curY=void 0!==n?n[0].pageY:i.clientY,l.touchObject.swipeLength=Math.round(Math.sqrt(Math.pow(l.touchObject.curX-l.touchObject.startX,2))),r=Math.round(Math.sqrt(Math.pow(l.touchObject.curY-l.touchObject.startY,2))),!l.options.verticalSwiping&&!l.swiping&&r>4?(l.scrolling=!0,!1):(!0===l.options.verticalSwiping&&(l.touchObject.swipeLength=r),t=l.swipeDirection(),void 0!==i.originalEvent&&l.touchObject.swipeLength>4&&(l.swiping=!0,i.preventDefault()),s=(!1===l.options.rtl?1:-1)*(l.touchObject.curX>l.touchObject.startX?1:-1),!0===l.options.verticalSwiping&&(s=l.touchObject.curY>l.touchObject.startY?1:-1),o=l.touchObject.swipeLength,l.touchObject.edgeHit=!1,!1===l.options.infinite&&(0===l.currentSlide&&"right"===t||l.currentSlide>=l.getDotCount()&&"left"===t)&&(o=l.touchObject.swipeLength*l.options.edgeFriction,l.touchObject.edgeHit=!0),!1===l.options.vertical?l.swipeLeft=e+o*s:l.swipeLeft=e+o*(l.$list.height()/l.listWidth)*s,!0===l.options.verticalSwiping&&(l.swipeLeft=e+o*s),!0!==l.options.fade&&!1!==l.options.touchMove&&(!0===l.animating?(l.swipeLeft=null,!1):void l.setCSS(l.swipeLeft))))},e.prototype.swipeStart=function(i){var e,t=this;if(t.interrupted=!0,1!==t.touchObject.fingerCount||t.slideCount<=t.options.slidesToShow)return t.touchObject={},!1;void 0!==i.originalEvent&&void 0!==i.originalEvent.touches&&(e=i.originalEvent.touches[0]),t.touchObject.startX=t.touchObject.curX=void 0!==e?e.pageX:i.clientX,t.touchObject.startY=t.touchObject.curY=void 0!==e?e.pageY:i.clientY,t.dragging=!0},e.prototype.unfilterSlides=e.prototype.slickUnfilter=function(){var i=this;null!==i.$slidesCache&&(i.unload(),i.$slideTrack.children(this.options.slide).detach(),i.$slidesCache.appendTo(i.$slideTrack),i.reinit())},e.prototype.unload=function(){var e=this;i(".slick-cloned",e.$slider).remove(),e.$dots&&e.$dots.remove(),e.$prevArrow&&e.htmlExpr.test(e.options.prevArrow)&&e.$prevArrow.remove(),e.$nextArrow&&e.htmlExpr.test(e.options.nextArrow)&&e.$nextArrow.remove(),e.$slides.removeClass("slick-slide slick-active slick-visible slick-current").attr("aria-hidden","true").css("width","")},e.prototype.unslick=function(i){var e=this;e.$slider.trigger("unslick",[e,i]),e.destroy()},e.prototype.updateArrows=function(){var i=this;Math.floor(i.options.slidesToShow/2),!0===i.options.arrows&&i.slideCount>i.options.slidesToShow&&!i.options.infinite&&(i.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false"),i.$nextArrow.removeClass("slick-disabled").attr("aria-disabled","false"),0===i.currentSlide?(i.$prevArrow.addClass("slick-disabled").attr("aria-disabled","true"),i.$nextArrow.removeClass("slick-disabled").attr("aria-disabled","false")):i.currentSlide>=i.slideCount-i.options.slidesToShow&&!1===i.options.centerMode?(i.$nextArrow.addClass("slick-disabled").attr("aria-disabled","true"),i.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false")):i.currentSlide>=i.slideCount-1&&!0===i.options.centerMode&&(i.$nextArrow.addClass("slick-disabled").attr("aria-disabled","true"),i.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false")))},e.prototype.updateDots=function(){var i=this;null!==i.$dots&&(i.$dots.find("li").removeClass("slick-active").end(),i.$dots.find("li").eq(Math.floor(i.currentSlide/i.options.slidesToScroll)).addClass("slick-active"))},e.prototype.visibility=function(){var i=this;i.options.autoplay&&(document[i.hidden]?i.interrupted=!0:i.interrupted=!1)},i.fn.slick=function(){var i,t,o=this,s=arguments[0],n=Array.prototype.slice.call(arguments,1),r=o.length;for(i=0;i<r;i++)if("object"==typeof s||void 0===s?o[i].slick=new e(o[i],s):t=o[i].slick[s].apply(o[i].slick,n),void 0!==t)return t;return o}});

/*!
 * Chart.js
 * http://chartjs.org/
 * Version: 2.7.1
 *
 * Copyright 2017 Nick Downie
 * Released under the MIT license
 * https://github.com/chartjs/Chart.js/blob/master/LICENSE.md
 */
(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.Chart = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){

    },{}],2:[function(require,module,exports){
        /* MIT license */
        var colorNames = require(6);

        module.exports = {
            getRgba: getRgba,
            getHsla: getHsla,
            getRgb: getRgb,
            getHsl: getHsl,
            getHwb: getHwb,
            getAlpha: getAlpha,

            hexString: hexString,
            rgbString: rgbString,
            rgbaString: rgbaString,
            percentString: percentString,
            percentaString: percentaString,
            hslString: hslString,
            hslaString: hslaString,
            hwbString: hwbString,
            keyword: keyword
        }

        function getRgba(string) {
            if (!string) {
                return;
            }
            var abbr =  /^#([a-fA-F0-9]{3})$/i,
                hex =  /^#([a-fA-F0-9]{6})$/i,
                rgba = /^rgba?\(\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/i,
                per = /^rgba?\(\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/i,
                keyword = /(\w+)/;

            var rgb = [0, 0, 0],
                a = 1,
                match = string.match(abbr);
            if (match) {
                match = match[1];
                for (var i = 0; i < rgb.length; i++) {
                    rgb[i] = parseInt(match[i] + match[i], 16);
                }
            }
            else if (match = string.match(hex)) {
                match = match[1];
                for (var i = 0; i < rgb.length; i++) {
                    rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);
                }
            }
            else if (match = string.match(rgba)) {
                for (var i = 0; i < rgb.length; i++) {
                    rgb[i] = parseInt(match[i + 1]);
                }
                a = parseFloat(match[4]);
            }
            else if (match = string.match(per)) {
                for (var i = 0; i < rgb.length; i++) {
                    rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);
                }
                a = parseFloat(match[4]);
            }
            else if (match = string.match(keyword)) {
                if (match[1] == "transparent") {
                    return [0, 0, 0, 0];
                }
                rgb = colorNames[match[1]];
                if (!rgb) {
                    return;
                }
            }

            for (var i = 0; i < rgb.length; i++) {
                rgb[i] = scale(rgb[i], 0, 255);
            }
            if (!a && a != 0) {
                a = 1;
            }
            else {
                a = scale(a, 0, 1);
            }
            rgb[3] = a;
            return rgb;
        }

        function getHsla(string) {
            if (!string) {
                return;
            }
            var hsl = /^hsla?\(\s*([+-]?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)/;
            var match = string.match(hsl);
            if (match) {
                var alpha = parseFloat(match[4]);
                var h = scale(parseInt(match[1]), 0, 360),
                    s = scale(parseFloat(match[2]), 0, 100),
                    l = scale(parseFloat(match[3]), 0, 100),
                    a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);
                return [h, s, l, a];
            }
        }

        function getHwb(string) {
            if (!string) {
                return;
            }
            var hwb = /^hwb\(\s*([+-]?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)/;
            var match = string.match(hwb);
            if (match) {
                var alpha = parseFloat(match[4]);
                var h = scale(parseInt(match[1]), 0, 360),
                    w = scale(parseFloat(match[2]), 0, 100),
                    b = scale(parseFloat(match[3]), 0, 100),
                    a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);
                return [h, w, b, a];
            }
        }

        function getRgb(string) {
            var rgba = getRgba(string);
            return rgba && rgba.slice(0, 3);
        }

        function getHsl(string) {
            var hsla = getHsla(string);
            return hsla && hsla.slice(0, 3);
        }

        function getAlpha(string) {
            var vals = getRgba(string);
            if (vals) {
                return vals[3];
            }
            else if (vals = getHsla(string)) {
                return vals[3];
            }
            else if (vals = getHwb(string)) {
                return vals[3];
            }
        }

// generators
        function hexString(rgb) {
            return "#" + hexDouble(rgb[0]) + hexDouble(rgb[1])
                + hexDouble(rgb[2]);
        }

        function rgbString(rgba, alpha) {
            if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {
                return rgbaString(rgba, alpha);
            }
            return "rgb(" + rgba[0] + ", " + rgba[1] + ", " + rgba[2] + ")";
        }

        function rgbaString(rgba, alpha) {
            if (alpha === undefined) {
                alpha = (rgba[3] !== undefined ? rgba[3] : 1);
            }
            return "rgba(" + rgba[0] + ", " + rgba[1] + ", " + rgba[2]
                + ", " + alpha + ")";
        }

        function percentString(rgba, alpha) {
            if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {
                return percentaString(rgba, alpha);
            }
            var r = Math.round(rgba[0]/255 * 100),
                g = Math.round(rgba[1]/255 * 100),
                b = Math.round(rgba[2]/255 * 100);

            return "rgb(" + r + "%, " + g + "%, " + b + "%)";
        }

        function percentaString(rgba, alpha) {
            var r = Math.round(rgba[0]/255 * 100),
                g = Math.round(rgba[1]/255 * 100),
                b = Math.round(rgba[2]/255 * 100);
            return "rgba(" + r + "%, " + g + "%, " + b + "%, " + (alpha || rgba[3] || 1) + ")";
        }

        function hslString(hsla, alpha) {
            if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {
                return hslaString(hsla, alpha);
            }
            return "hsl(" + hsla[0] + ", " + hsla[1] + "%, " + hsla[2] + "%)";
        }

        function hslaString(hsla, alpha) {
            if (alpha === undefined) {
                alpha = (hsla[3] !== undefined ? hsla[3] : 1);
            }
            return "hsla(" + hsla[0] + ", " + hsla[1] + "%, " + hsla[2] + "%, "
                + alpha + ")";
        }

// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax
// (hwb have alpha optional & 1 is default value)
        function hwbString(hwb, alpha) {
            if (alpha === undefined) {
                alpha = (hwb[3] !== undefined ? hwb[3] : 1);
            }
            return "hwb(" + hwb[0] + ", " + hwb[1] + "%, " + hwb[2] + "%"
                + (alpha !== undefined && alpha !== 1 ? ", " + alpha : "") + ")";
        }

        function keyword(rgb) {
            return reverseNames[rgb.slice(0, 3)];
        }

// helpers
        function scale(num, min, max) {
            return Math.min(Math.max(min, num), max);
        }

        function hexDouble(num) {
            var str = num.toString(16).toUpperCase();
            return (str.length < 2) ? "0" + str : str;
        }


//create a list of reverse color names
        var reverseNames = {};
        for (var name in colorNames) {
            reverseNames[colorNames[name]] = name;
        }

    },{"6":6}],3:[function(require,module,exports){
        /* MIT license */
        var convert = require(5);
        var string = require(2);

        var Color = function (obj) {
            if (obj instanceof Color) {
                return obj;
            }
            if (!(this instanceof Color)) {
                return new Color(obj);
            }

            this.valid = false;
            this.values = {
                rgb: [0, 0, 0],
                hsl: [0, 0, 0],
                hsv: [0, 0, 0],
                hwb: [0, 0, 0],
                cmyk: [0, 0, 0, 0],
                alpha: 1
            };

            // parse Color() argument
            var vals;
            if (typeof obj === 'string') {
                vals = string.getRgba(obj);
                if (vals) {
                    this.setValues('rgb', vals);
                } else if (vals = string.getHsla(obj)) {
                    this.setValues('hsl', vals);
                } else if (vals = string.getHwb(obj)) {
                    this.setValues('hwb', vals);
                }
            } else if (typeof obj === 'object') {
                vals = obj;
                if (vals.r !== undefined || vals.red !== undefined) {
                    this.setValues('rgb', vals);
                } else if (vals.l !== undefined || vals.lightness !== undefined) {
                    this.setValues('hsl', vals);
                } else if (vals.v !== undefined || vals.value !== undefined) {
                    this.setValues('hsv', vals);
                } else if (vals.w !== undefined || vals.whiteness !== undefined) {
                    this.setValues('hwb', vals);
                } else if (vals.c !== undefined || vals.cyan !== undefined) {
                    this.setValues('cmyk', vals);
                }
            }
        };

        Color.prototype = {
            isValid: function () {
                return this.valid;
            },
            rgb: function () {
                return this.setSpace('rgb', arguments);
            },
            hsl: function () {
                return this.setSpace('hsl', arguments);
            },
            hsv: function () {
                return this.setSpace('hsv', arguments);
            },
            hwb: function () {
                return this.setSpace('hwb', arguments);
            },
            cmyk: function () {
                return this.setSpace('cmyk', arguments);
            },

            rgbArray: function () {
                return this.values.rgb;
            },
            hslArray: function () {
                return this.values.hsl;
            },
            hsvArray: function () {
                return this.values.hsv;
            },
            hwbArray: function () {
                var values = this.values;
                if (values.alpha !== 1) {
                    return values.hwb.concat([values.alpha]);
                }
                return values.hwb;
            },
            cmykArray: function () {
                return this.values.cmyk;
            },
            rgbaArray: function () {
                var values = this.values;
                return values.rgb.concat([values.alpha]);
            },
            hslaArray: function () {
                var values = this.values;
                return values.hsl.concat([values.alpha]);
            },
            alpha: function (val) {
                if (val === undefined) {
                    return this.values.alpha;
                }
                this.setValues('alpha', val);
                return this;
            },

            red: function (val) {
                return this.setChannel('rgb', 0, val);
            },
            green: function (val) {
                return this.setChannel('rgb', 1, val);
            },
            blue: function (val) {
                return this.setChannel('rgb', 2, val);
            },
            hue: function (val) {
                if (val) {
                    val %= 360;
                    val = val < 0 ? 360 + val : val;
                }
                return this.setChannel('hsl', 0, val);
            },
            saturation: function (val) {
                return this.setChannel('hsl', 1, val);
            },
            lightness: function (val) {
                return this.setChannel('hsl', 2, val);
            },
            saturationv: function (val) {
                return this.setChannel('hsv', 1, val);
            },
            whiteness: function (val) {
                return this.setChannel('hwb', 1, val);
            },
            blackness: function (val) {
                return this.setChannel('hwb', 2, val);
            },
            value: function (val) {
                return this.setChannel('hsv', 2, val);
            },
            cyan: function (val) {
                return this.setChannel('cmyk', 0, val);
            },
            magenta: function (val) {
                return this.setChannel('cmyk', 1, val);
            },
            yellow: function (val) {
                return this.setChannel('cmyk', 2, val);
            },
            black: function (val) {
                return this.setChannel('cmyk', 3, val);
            },

            hexString: function () {
                return string.hexString(this.values.rgb);
            },
            rgbString: function () {
                return string.rgbString(this.values.rgb, this.values.alpha);
            },
            rgbaString: function () {
                return string.rgbaString(this.values.rgb, this.values.alpha);
            },
            percentString: function () {
                return string.percentString(this.values.rgb, this.values.alpha);
            },
            hslString: function () {
                return string.hslString(this.values.hsl, this.values.alpha);
            },
            hslaString: function () {
                return string.hslaString(this.values.hsl, this.values.alpha);
            },
            hwbString: function () {
                return string.hwbString(this.values.hwb, this.values.alpha);
            },
            keyword: function () {
                return string.keyword(this.values.rgb, this.values.alpha);
            },

            rgbNumber: function () {
                var rgb = this.values.rgb;
                return (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];
            },

            luminosity: function () {
                // http://www.w3.org/TR/WCAG20/#relativeluminancedef
                var rgb = this.values.rgb;
                var lum = [];
                for (var i = 0; i < rgb.length; i++) {
                    var chan = rgb[i] / 255;
                    lum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);
                }
                return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];
            },

            contrast: function (color2) {
                // http://www.w3.org/TR/WCAG20/#contrast-ratiodef
                var lum1 = this.luminosity();
                var lum2 = color2.luminosity();
                if (lum1 > lum2) {
                    return (lum1 + 0.05) / (lum2 + 0.05);
                }
                return (lum2 + 0.05) / (lum1 + 0.05);
            },

            level: function (color2) {
                var contrastRatio = this.contrast(color2);
                if (contrastRatio >= 7.1) {
                    return 'AAA';
                }

                return (contrastRatio >= 4.5) ? 'AA' : '';
            },

            dark: function () {
                // YIQ equation from http://24ways.org/2010/calculating-color-contrast
                var rgb = this.values.rgb;
                var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;
                return yiq < 128;
            },

            light: function () {
                return !this.dark();
            },

            negate: function () {
                var rgb = [];
                for (var i = 0; i < 3; i++) {
                    rgb[i] = 255 - this.values.rgb[i];
                }
                this.setValues('rgb', rgb);
                return this;
            },

            lighten: function (ratio) {
                var hsl = this.values.hsl;
                hsl[2] += hsl[2] * ratio;
                this.setValues('hsl', hsl);
                return this;
            },

            darken: function (ratio) {
                var hsl = this.values.hsl;
                hsl[2] -= hsl[2] * ratio;
                this.setValues('hsl', hsl);
                return this;
            },

            saturate: function (ratio) {
                var hsl = this.values.hsl;
                hsl[1] += hsl[1] * ratio;
                this.setValues('hsl', hsl);
                return this;
            },

            desaturate: function (ratio) {
                var hsl = this.values.hsl;
                hsl[1] -= hsl[1] * ratio;
                this.setValues('hsl', hsl);
                return this;
            },

            whiten: function (ratio) {
                var hwb = this.values.hwb;
                hwb[1] += hwb[1] * ratio;
                this.setValues('hwb', hwb);
                return this;
            },

            blacken: function (ratio) {
                var hwb = this.values.hwb;
                hwb[2] += hwb[2] * ratio;
                this.setValues('hwb', hwb);
                return this;
            },

            greyscale: function () {
                var rgb = this.values.rgb;
                // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale
                var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;
                this.setValues('rgb', [val, val, val]);
                return this;
            },

            clearer: function (ratio) {
                var alpha = this.values.alpha;
                this.setValues('alpha', alpha - (alpha * ratio));
                return this;
            },

            opaquer: function (ratio) {
                var alpha = this.values.alpha;
                this.setValues('alpha', alpha + (alpha * ratio));
                return this;
            },

            rotate: function (degrees) {
                var hsl = this.values.hsl;
                var hue = (hsl[0] + degrees) % 360;
                hsl[0] = hue < 0 ? 360 + hue : hue;
                this.setValues('hsl', hsl);
                return this;
            },

            /**
             * Ported from sass implementation in C
             * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209
             */
            mix: function (mixinColor, weight) {
                var color1 = this;
                var color2 = mixinColor;
                var p = weight === undefined ? 0.5 : weight;

                var w = 2 * p - 1;
                var a = color1.alpha() - color2.alpha();

                var w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;
                var w2 = 1 - w1;

                return this
                    .rgb(
                        w1 * color1.red() + w2 * color2.red(),
                        w1 * color1.green() + w2 * color2.green(),
                        w1 * color1.blue() + w2 * color2.blue()
                    )
                    .alpha(color1.alpha() * p + color2.alpha() * (1 - p));
            },

            toJSON: function () {
                return this.rgb();
            },

            clone: function () {
                // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,
                // making the final build way to big to embed in Chart.js. So let's do it manually,
                // assuming that values to clone are 1 dimension arrays containing only numbers,
                // except 'alpha' which is a number.
                var result = new Color();
                var source = this.values;
                var target = result.values;
                var value, type;

                for (var prop in source) {
                    if (source.hasOwnProperty(prop)) {
                        value = source[prop];
                        type = ({}).toString.call(value);
                        if (type === '[object Array]') {
                            target[prop] = value.slice(0);
                        } else if (type === '[object Number]') {
                            target[prop] = value;
                        } else {
                            console.error('unexpected color value:', value);
                        }
                    }
                }

                return result;
            }
        };

        Color.prototype.spaces = {
            rgb: ['red', 'green', 'blue'],
            hsl: ['hue', 'saturation', 'lightness'],
            hsv: ['hue', 'saturation', 'value'],
            hwb: ['hue', 'whiteness', 'blackness'],
            cmyk: ['cyan', 'magenta', 'yellow', 'black']
        };

        Color.prototype.maxes = {
            rgb: [255, 255, 255],
            hsl: [360, 100, 100],
            hsv: [360, 100, 100],
            hwb: [360, 100, 100],
            cmyk: [100, 100, 100, 100]
        };

        Color.prototype.getValues = function (space) {
            var values = this.values;
            var vals = {};

            for (var i = 0; i < space.length; i++) {
                vals[space.charAt(i)] = values[space][i];
            }

            if (values.alpha !== 1) {
                vals.a = values.alpha;
            }

            // {r: 255, g: 255, b: 255, a: 0.4}
            return vals;
        };

        Color.prototype.setValues = function (space, vals) {
            var values = this.values;
            var spaces = this.spaces;
            var maxes = this.maxes;
            var alpha = 1;
            var i;

            this.valid = true;

            if (space === 'alpha') {
                alpha = vals;
            } else if (vals.length) {
                // [10, 10, 10]
                values[space] = vals.slice(0, space.length);
                alpha = vals[space.length];
            } else if (vals[space.charAt(0)] !== undefined) {
                // {r: 10, g: 10, b: 10}
                for (i = 0; i < space.length; i++) {
                    values[space][i] = vals[space.charAt(i)];
                }

                alpha = vals.a;
            } else if (vals[spaces[space][0]] !== undefined) {
                // {red: 10, green: 10, blue: 10}
                var chans = spaces[space];

                for (i = 0; i < space.length; i++) {
                    values[space][i] = vals[chans[i]];
                }

                alpha = vals.alpha;
            }

            values.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));

            if (space === 'alpha') {
                return false;
            }

            var capped;

            // cap values of the space prior converting all values
            for (i = 0; i < space.length; i++) {
                capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));
                values[space][i] = Math.round(capped);
            }

            // convert to all the other color spaces
            for (var sname in spaces) {
                if (sname !== space) {
                    values[sname] = convert[space][sname](values[space]);
                }
            }

            return true;
        };

        Color.prototype.setSpace = function (space, args) {
            var vals = args[0];

            if (vals === undefined) {
                // color.rgb()
                return this.getValues(space);
            }

            // color.rgb(10, 10, 10)
            if (typeof vals === 'number') {
                vals = Array.prototype.slice.call(args);
            }

            this.setValues(space, vals);
            return this;
        };

        Color.prototype.setChannel = function (space, index, val) {
            var svalues = this.values[space];
            if (val === undefined) {
                // color.red()
                return svalues[index];
            } else if (val === svalues[index]) {
                // color.red(color.red())
                return this;
            }

            // color.red(100)
            svalues[index] = val;
            this.setValues(space, svalues);

            return this;
        };

        if (typeof window !== 'undefined') {
            window.Color = Color;
        }

        module.exports = Color;

    },{"2":2,"5":5}],4:[function(require,module,exports){
        /* MIT license */

        module.exports = {
            rgb2hsl: rgb2hsl,
            rgb2hsv: rgb2hsv,
            rgb2hwb: rgb2hwb,
            rgb2cmyk: rgb2cmyk,
            rgb2keyword: rgb2keyword,
            rgb2xyz: rgb2xyz,
            rgb2lab: rgb2lab,
            rgb2lch: rgb2lch,

            hsl2rgb: hsl2rgb,
            hsl2hsv: hsl2hsv,
            hsl2hwb: hsl2hwb,
            hsl2cmyk: hsl2cmyk,
            hsl2keyword: hsl2keyword,

            hsv2rgb: hsv2rgb,
            hsv2hsl: hsv2hsl,
            hsv2hwb: hsv2hwb,
            hsv2cmyk: hsv2cmyk,
            hsv2keyword: hsv2keyword,

            hwb2rgb: hwb2rgb,
            hwb2hsl: hwb2hsl,
            hwb2hsv: hwb2hsv,
            hwb2cmyk: hwb2cmyk,
            hwb2keyword: hwb2keyword,

            cmyk2rgb: cmyk2rgb,
            cmyk2hsl: cmyk2hsl,
            cmyk2hsv: cmyk2hsv,
            cmyk2hwb: cmyk2hwb,
            cmyk2keyword: cmyk2keyword,

            keyword2rgb: keyword2rgb,
            keyword2hsl: keyword2hsl,
            keyword2hsv: keyword2hsv,
            keyword2hwb: keyword2hwb,
            keyword2cmyk: keyword2cmyk,
            keyword2lab: keyword2lab,
            keyword2xyz: keyword2xyz,

            xyz2rgb: xyz2rgb,
            xyz2lab: xyz2lab,
            xyz2lch: xyz2lch,

            lab2xyz: lab2xyz,
            lab2rgb: lab2rgb,
            lab2lch: lab2lch,

            lch2lab: lch2lab,
            lch2xyz: lch2xyz,
            lch2rgb: lch2rgb
        }


        function rgb2hsl(rgb) {
            var r = rgb[0]/255,
                g = rgb[1]/255,
                b = rgb[2]/255,
                min = Math.min(r, g, b),
                max = Math.max(r, g, b),
                delta = max - min,
                h, s, l;

            if (max == min)
                h = 0;
            else if (r == max)
                h = (g - b) / delta;
            else if (g == max)
                h = 2 + (b - r) / delta;
            else if (b == max)
                h = 4 + (r - g)/ delta;

            h = Math.min(h * 60, 360);

            if (h < 0)
                h += 360;

            l = (min + max) / 2;

            if (max == min)
                s = 0;
            else if (l <= 0.5)
                s = delta / (max + min);
            else
                s = delta / (2 - max - min);

            return [h, s * 100, l * 100];
        }

        function rgb2hsv(rgb) {
            var r = rgb[0],
                g = rgb[1],
                b = rgb[2],
                min = Math.min(r, g, b),
                max = Math.max(r, g, b),
                delta = max - min,
                h, s, v;

            if (max == 0)
                s = 0;
            else
                s = (delta/max * 1000)/10;

            if (max == min)
                h = 0;
            else if (r == max)
                h = (g - b) / delta;
            else if (g == max)
                h = 2 + (b - r) / delta;
            else if (b == max)
                h = 4 + (r - g) / delta;

            h = Math.min(h * 60, 360);

            if (h < 0)
                h += 360;

            v = ((max / 255) * 1000) / 10;

            return [h, s, v];
        }

        function rgb2hwb(rgb) {
            var r = rgb[0],
                g = rgb[1],
                b = rgb[2],
                h = rgb2hsl(rgb)[0],
                w = 1/255 * Math.min(r, Math.min(g, b)),
                b = 1 - 1/255 * Math.max(r, Math.max(g, b));

            return [h, w * 100, b * 100];
        }

        function rgb2cmyk(rgb) {
            var r = rgb[0] / 255,
                g = rgb[1] / 255,
                b = rgb[2] / 255,
                c, m, y, k;

            k = Math.min(1 - r, 1 - g, 1 - b);
            c = (1 - r - k) / (1 - k) || 0;
            m = (1 - g - k) / (1 - k) || 0;
            y = (1 - b - k) / (1 - k) || 0;
            return [c * 100, m * 100, y * 100, k * 100];
        }

        function rgb2keyword(rgb) {
            return reverseKeywords[JSON.stringify(rgb)];
        }

        function rgb2xyz(rgb) {
            var r = rgb[0] / 255,
                g = rgb[1] / 255,
                b = rgb[2] / 255;

            // assume sRGB
            r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);
            g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);
            b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);

            var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);
            var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);
            var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);

            return [x * 100, y *100, z * 100];
        }

        function rgb2lab(rgb) {
            var xyz = rgb2xyz(rgb),
                x = xyz[0],
                y = xyz[1],
                z = xyz[2],
                l, a, b;

            x /= 95.047;
            y /= 100;
            z /= 108.883;

            x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);
            y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);
            z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);

            l = (116 * y) - 16;
            a = 500 * (x - y);
            b = 200 * (y - z);

            return [l, a, b];
        }

        function rgb2lch(args) {
            return lab2lch(rgb2lab(args));
        }

        function hsl2rgb(hsl) {
            var h = hsl[0] / 360,
                s = hsl[1] / 100,
                l = hsl[2] / 100,
                t1, t2, t3, rgb, val;

            if (s == 0) {
                val = l * 255;
                return [val, val, val];
            }

            if (l < 0.5)
                t2 = l * (1 + s);
            else
                t2 = l + s - l * s;
            t1 = 2 * l - t2;

            rgb = [0, 0, 0];
            for (var i = 0; i < 3; i++) {
                t3 = h + 1 / 3 * - (i - 1);
                t3 < 0 && t3++;
                t3 > 1 && t3--;

                if (6 * t3 < 1)
                    val = t1 + (t2 - t1) * 6 * t3;
                else if (2 * t3 < 1)
                    val = t2;
                else if (3 * t3 < 2)
                    val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;
                else
                    val = t1;

                rgb[i] = val * 255;
            }

            return rgb;
        }

        function hsl2hsv(hsl) {
            var h = hsl[0],
                s = hsl[1] / 100,
                l = hsl[2] / 100,
                sv, v;

            if(l === 0) {
                // no need to do calc on black
                // also avoids divide by 0 error
                return [0, 0, 0];
            }

            l *= 2;
            s *= (l <= 1) ? l : 2 - l;
            v = (l + s) / 2;
            sv = (2 * s) / (l + s);
            return [h, sv * 100, v * 100];
        }

        function hsl2hwb(args) {
            return rgb2hwb(hsl2rgb(args));
        }

        function hsl2cmyk(args) {
            return rgb2cmyk(hsl2rgb(args));
        }

        function hsl2keyword(args) {
            return rgb2keyword(hsl2rgb(args));
        }


        function hsv2rgb(hsv) {
            var h = hsv[0] / 60,
                s = hsv[1] / 100,
                v = hsv[2] / 100,
                hi = Math.floor(h) % 6;

            var f = h - Math.floor(h),
                p = 255 * v * (1 - s),
                q = 255 * v * (1 - (s * f)),
                t = 255 * v * (1 - (s * (1 - f))),
                v = 255 * v;

            switch(hi) {
                case 0:
                    return [v, t, p];
                case 1:
                    return [q, v, p];
                case 2:
                    return [p, v, t];
                case 3:
                    return [p, q, v];
                case 4:
                    return [t, p, v];
                case 5:
                    return [v, p, q];
            }
        }

        function hsv2hsl(hsv) {
            var h = hsv[0],
                s = hsv[1] / 100,
                v = hsv[2] / 100,
                sl, l;

            l = (2 - s) * v;
            sl = s * v;
            sl /= (l <= 1) ? l : 2 - l;
            sl = sl || 0;
            l /= 2;
            return [h, sl * 100, l * 100];
        }

        function hsv2hwb(args) {
            return rgb2hwb(hsv2rgb(args))
        }

        function hsv2cmyk(args) {
            return rgb2cmyk(hsv2rgb(args));
        }

        function hsv2keyword(args) {
            return rgb2keyword(hsv2rgb(args));
        }

// http://dev.w3.org/csswg/css-color/#hwb-to-rgb
        function hwb2rgb(hwb) {
            var h = hwb[0] / 360,
                wh = hwb[1] / 100,
                bl = hwb[2] / 100,
                ratio = wh + bl,
                i, v, f, n;

            // wh + bl cant be > 1
            if (ratio > 1) {
                wh /= ratio;
                bl /= ratio;
            }

            i = Math.floor(6 * h);
            v = 1 - bl;
            f = 6 * h - i;
            if ((i & 0x01) != 0) {
                f = 1 - f;
            }
            n = wh + f * (v - wh);  // linear interpolation

            switch (i) {
                default:
                case 6:
                case 0: r = v; g = n; b = wh; break;
                case 1: r = n; g = v; b = wh; break;
                case 2: r = wh; g = v; b = n; break;
                case 3: r = wh; g = n; b = v; break;
                case 4: r = n; g = wh; b = v; break;
                case 5: r = v; g = wh; b = n; break;
            }

            return [r * 255, g * 255, b * 255];
        }

        function hwb2hsl(args) {
            return rgb2hsl(hwb2rgb(args));
        }

        function hwb2hsv(args) {
            return rgb2hsv(hwb2rgb(args));
        }

        function hwb2cmyk(args) {
            return rgb2cmyk(hwb2rgb(args));
        }

        function hwb2keyword(args) {
            return rgb2keyword(hwb2rgb(args));
        }

        function cmyk2rgb(cmyk) {
            var c = cmyk[0] / 100,
                m = cmyk[1] / 100,
                y = cmyk[2] / 100,
                k = cmyk[3] / 100,
                r, g, b;

            r = 1 - Math.min(1, c * (1 - k) + k);
            g = 1 - Math.min(1, m * (1 - k) + k);
            b = 1 - Math.min(1, y * (1 - k) + k);
            return [r * 255, g * 255, b * 255];
        }

        function cmyk2hsl(args) {
            return rgb2hsl(cmyk2rgb(args));
        }

        function cmyk2hsv(args) {
            return rgb2hsv(cmyk2rgb(args));
        }

        function cmyk2hwb(args) {
            return rgb2hwb(cmyk2rgb(args));
        }

        function cmyk2keyword(args) {
            return rgb2keyword(cmyk2rgb(args));
        }


        function xyz2rgb(xyz) {
            var x = xyz[0] / 100,
                y = xyz[1] / 100,
                z = xyz[2] / 100,
                r, g, b;

            r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);
            g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);
            b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);

            // assume sRGB
            r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)
                : r = (r * 12.92);

            g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)
                : g = (g * 12.92);

            b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)
                : b = (b * 12.92);

            r = Math.min(Math.max(0, r), 1);
            g = Math.min(Math.max(0, g), 1);
            b = Math.min(Math.max(0, b), 1);

            return [r * 255, g * 255, b * 255];
        }

        function xyz2lab(xyz) {
            var x = xyz[0],
                y = xyz[1],
                z = xyz[2],
                l, a, b;

            x /= 95.047;
            y /= 100;
            z /= 108.883;

            x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);
            y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);
            z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);

            l = (116 * y) - 16;
            a = 500 * (x - y);
            b = 200 * (y - z);

            return [l, a, b];
        }

        function xyz2lch(args) {
            return lab2lch(xyz2lab(args));
        }

        function lab2xyz(lab) {
            var l = lab[0],
                a = lab[1],
                b = lab[2],
                x, y, z, y2;

            if (l <= 8) {
                y = (l * 100) / 903.3;
                y2 = (7.787 * (y / 100)) + (16 / 116);
            } else {
                y = 100 * Math.pow((l + 16) / 116, 3);
                y2 = Math.pow(y / 100, 1/3);
            }

            x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);

            z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);

            return [x, y, z];
        }

        function lab2lch(lab) {
            var l = lab[0],
                a = lab[1],
                b = lab[2],
                hr, h, c;

            hr = Math.atan2(b, a);
            h = hr * 360 / 2 / Math.PI;
            if (h < 0) {
                h += 360;
            }
            c = Math.sqrt(a * a + b * b);
            return [l, c, h];
        }

        function lab2rgb(args) {
            return xyz2rgb(lab2xyz(args));
        }

        function lch2lab(lch) {
            var l = lch[0],
                c = lch[1],
                h = lch[2],
                a, b, hr;

            hr = h / 360 * 2 * Math.PI;
            a = c * Math.cos(hr);
            b = c * Math.sin(hr);
            return [l, a, b];
        }

        function lch2xyz(args) {
            return lab2xyz(lch2lab(args));
        }

        function lch2rgb(args) {
            return lab2rgb(lch2lab(args));
        }

        function keyword2rgb(keyword) {
            return cssKeywords[keyword];
        }

        function keyword2hsl(args) {
            return rgb2hsl(keyword2rgb(args));
        }

        function keyword2hsv(args) {
            return rgb2hsv(keyword2rgb(args));
        }

        function keyword2hwb(args) {
            return rgb2hwb(keyword2rgb(args));
        }

        function keyword2cmyk(args) {
            return rgb2cmyk(keyword2rgb(args));
        }

        function keyword2lab(args) {
            return rgb2lab(keyword2rgb(args));
        }

        function keyword2xyz(args) {
            return rgb2xyz(keyword2rgb(args));
        }

        var cssKeywords = {
            aliceblue:  [240,248,255],
            antiquewhite: [250,235,215],
            aqua: [0,255,255],
            aquamarine: [127,255,212],
            azure:  [240,255,255],
            beige:  [245,245,220],
            bisque: [255,228,196],
            black:  [0,0,0],
            blanchedalmond: [255,235,205],
            blue: [0,0,255],
            blueviolet: [138,43,226],
            brown:  [165,42,42],
            burlywood:  [222,184,135],
            cadetblue:  [95,158,160],
            chartreuse: [127,255,0],
            chocolate:  [210,105,30],
            coral:  [255,127,80],
            cornflowerblue: [100,149,237],
            cornsilk: [255,248,220],
            crimson:  [220,20,60],
            cyan: [0,255,255],
            darkblue: [0,0,139],
            darkcyan: [0,139,139],
            darkgoldenrod:  [184,134,11],
            darkgray: [169,169,169],
            darkgreen:  [0,100,0],
            darkgrey: [169,169,169],
            darkkhaki:  [189,183,107],
            darkmagenta:  [139,0,139],
            darkolivegreen: [85,107,47],
            darkorange: [255,140,0],
            darkorchid: [153,50,204],
            darkred:  [139,0,0],
            darksalmon: [233,150,122],
            darkseagreen: [143,188,143],
            darkslateblue:  [72,61,139],
            darkslategray:  [47,79,79],
            darkslategrey:  [47,79,79],
            darkturquoise:  [0,206,209],
            darkviolet: [148,0,211],
            deeppink: [255,20,147],
            deepskyblue:  [0,191,255],
            dimgray:  [105,105,105],
            dimgrey:  [105,105,105],
            dodgerblue: [30,144,255],
            firebrick:  [178,34,34],
            floralwhite:  [255,250,240],
            forestgreen:  [34,139,34],
            fuchsia:  [255,0,255],
            gainsboro:  [220,220,220],
            ghostwhite: [248,248,255],
            gold: [255,215,0],
            goldenrod:  [218,165,32],
            gray: [128,128,128],
            green:  [0,128,0],
            greenyellow:  [173,255,47],
            grey: [128,128,128],
            honeydew: [240,255,240],
            hotpink:  [255,105,180],
            indianred:  [205,92,92],
            indigo: [75,0,130],
            ivory:  [255,255,240],
            khaki:  [240,230,140],
            lavender: [230,230,250],
            lavenderblush:  [255,240,245],
            lawngreen:  [124,252,0],
            lemonchiffon: [255,250,205],
            lightblue:  [173,216,230],
            lightcoral: [240,128,128],
            lightcyan:  [224,255,255],
            lightgoldenrodyellow: [250,250,210],
            lightgray:  [211,211,211],
            lightgreen: [144,238,144],
            lightgrey:  [211,211,211],
            lightpink:  [255,182,193],
            lightsalmon:  [255,160,122],
            lightseagreen:  [32,178,170],
            lightskyblue: [135,206,250],
            lightslategray: [119,136,153],
            lightslategrey: [119,136,153],
            lightsteelblue: [176,196,222],
            lightyellow:  [255,255,224],
            lime: [0,255,0],
            limegreen:  [50,205,50],
            linen:  [250,240,230],
            magenta:  [255,0,255],
            maroon: [128,0,0],
            mediumaquamarine: [102,205,170],
            mediumblue: [0,0,205],
            mediumorchid: [186,85,211],
            mediumpurple: [147,112,219],
            mediumseagreen: [60,179,113],
            mediumslateblue:  [123,104,238],
            mediumspringgreen:  [0,250,154],
            mediumturquoise:  [72,209,204],
            mediumvioletred:  [199,21,133],
            midnightblue: [25,25,112],
            mintcream:  [245,255,250],
            mistyrose:  [255,228,225],
            moccasin: [255,228,181],
            navajowhite:  [255,222,173],
            navy: [0,0,128],
            oldlace:  [253,245,230],
            olive:  [128,128,0],
            olivedrab:  [107,142,35],
            orange: [255,165,0],
            orangered:  [255,69,0],
            orchid: [218,112,214],
            palegoldenrod:  [238,232,170],
            palegreen:  [152,251,152],
            paleturquoise:  [175,238,238],
            palevioletred:  [219,112,147],
            papayawhip: [255,239,213],
            peachpuff:  [255,218,185],
            peru: [205,133,63],
            pink: [255,192,203],
            plum: [221,160,221],
            powderblue: [176,224,230],
            purple: [128,0,128],
            rebeccapurple: [102, 51, 153],
            red:  [255,0,0],
            rosybrown:  [188,143,143],
            royalblue:  [65,105,225],
            saddlebrown:  [139,69,19],
            salmon: [250,128,114],
            sandybrown: [244,164,96],
            seagreen: [46,139,87],
            seashell: [255,245,238],
            sienna: [160,82,45],
            silver: [192,192,192],
            skyblue:  [135,206,235],
            slateblue:  [106,90,205],
            slategray:  [112,128,144],
            slategrey:  [112,128,144],
            snow: [255,250,250],
            springgreen:  [0,255,127],
            steelblue:  [70,130,180],
            tan:  [210,180,140],
            teal: [0,128,128],
            thistle:  [216,191,216],
            tomato: [255,99,71],
            turquoise:  [64,224,208],
            violet: [238,130,238],
            wheat:  [245,222,179],
            white:  [255,255,255],
            whitesmoke: [245,245,245],
            yellow: [255,255,0],
            yellowgreen:  [154,205,50]
        };

        var reverseKeywords = {};
        for (var key in cssKeywords) {
            reverseKeywords[JSON.stringify(cssKeywords[key])] = key;
        }

    },{}],5:[function(require,module,exports){
        var conversions = require(4);

        var convert = function() {
            return new Converter();
        }

        for (var func in conversions) {
            // export Raw versions
            convert[func + "Raw"] =  (function(func) {
                // accept array or plain args
                return function(arg) {
                    if (typeof arg == "number")
                        arg = Array.prototype.slice.call(arguments);
                    return conversions[func](arg);
                }
            })(func);

            var pair = /(\w+)2(\w+)/.exec(func),
                from = pair[1],
                to = pair[2];

            // export rgb2hsl and ["rgb"]["hsl"]
            convert[from] = convert[from] || {};

            convert[from][to] = convert[func] = (function(func) {
                return function(arg) {
                    if (typeof arg == "number")
                        arg = Array.prototype.slice.call(arguments);

                    var val = conversions[func](arg);
                    if (typeof val == "string" || val === undefined)
                        return val; // keyword

                    for (var i = 0; i < val.length; i++)
                        val[i] = Math.round(val[i]);
                    return val;
                }
            })(func);
        }


        /* Converter does lazy conversion and caching */
        var Converter = function() {
            this.convs = {};
        };

        /* Either get the values for a space or
  set the values for a space, depending on args */
        Converter.prototype.routeSpace = function(space, args) {
            var values = args[0];
            if (values === undefined) {
                // color.rgb()
                return this.getValues(space);
            }
            // color.rgb(10, 10, 10)
            if (typeof values == "number") {
                values = Array.prototype.slice.call(args);
            }

            return this.setValues(space, values);
        };

        /* Set the values for a space, invalidating cache */
        Converter.prototype.setValues = function(space, values) {
            this.space = space;
            this.convs = {};
            this.convs[space] = values;
            return this;
        };

        /* Get the values for a space. If there's already
  a conversion for the space, fetch it, otherwise
  compute it */
        Converter.prototype.getValues = function(space) {
            var vals = this.convs[space];
            if (!vals) {
                var fspace = this.space,
                    from = this.convs[fspace];
                vals = convert[fspace][space](from);

                this.convs[space] = vals;
            }
            return vals;
        };

        ["rgb", "hsl", "hsv", "cmyk", "keyword"].forEach(function(space) {
            Converter.prototype[space] = function(vals) {
                return this.routeSpace(space, arguments);
            }
        });

        module.exports = convert;
    },{"4":4}],6:[function(require,module,exports){
        'use strict'

        module.exports = {
            "aliceblue": [240, 248, 255],
            "antiquewhite": [250, 235, 215],
            "aqua": [0, 255, 255],
            "aquamarine": [127, 255, 212],
            "azure": [240, 255, 255],
            "beige": [245, 245, 220],
            "bisque": [255, 228, 196],
            "black": [0, 0, 0],
            "blanchedalmond": [255, 235, 205],
            "blue": [0, 0, 255],
            "blueviolet": [138, 43, 226],
            "brown": [165, 42, 42],
            "burlywood": [222, 184, 135],
            "cadetblue": [95, 158, 160],
            "chartreuse": [127, 255, 0],
            "chocolate": [210, 105, 30],
            "coral": [255, 127, 80],
            "cornflowerblue": [100, 149, 237],
            "cornsilk": [255, 248, 220],
            "crimson": [220, 20, 60],
            "cyan": [0, 255, 255],
            "darkblue": [0, 0, 139],
            "darkcyan": [0, 139, 139],
            "darkgoldenrod": [184, 134, 11],
            "darkgray": [169, 169, 169],
            "darkgreen": [0, 100, 0],
            "darkgrey": [169, 169, 169],
            "darkkhaki": [189, 183, 107],
            "darkmagenta": [139, 0, 139],
            "darkolivegreen": [85, 107, 47],
            "darkorange": [255, 140, 0],
            "darkorchid": [153, 50, 204],
            "darkred": [139, 0, 0],
            "darksalmon": [233, 150, 122],
            "darkseagreen": [143, 188, 143],
            "darkslateblue": [72, 61, 139],
            "darkslategray": [47, 79, 79],
            "darkslategrey": [47, 79, 79],
            "darkturquoise": [0, 206, 209],
            "darkviolet": [148, 0, 211],
            "deeppink": [255, 20, 147],
            "deepskyblue": [0, 191, 255],
            "dimgray": [105, 105, 105],
            "dimgrey": [105, 105, 105],
            "dodgerblue": [30, 144, 255],
            "firebrick": [178, 34, 34],
            "floralwhite": [255, 250, 240],
            "forestgreen": [34, 139, 34],
            "fuchsia": [255, 0, 255],
            "gainsboro": [220, 220, 220],
            "ghostwhite": [248, 248, 255],
            "gold": [255, 215, 0],
            "goldenrod": [218, 165, 32],
            "gray": [128, 128, 128],
            "green": [0, 128, 0],
            "greenyellow": [173, 255, 47],
            "grey": [128, 128, 128],
            "honeydew": [240, 255, 240],
            "hotpink": [255, 105, 180],
            "indianred": [205, 92, 92],
            "indigo": [75, 0, 130],
            "ivory": [255, 255, 240],
            "khaki": [240, 230, 140],
            "lavender": [230, 230, 250],
            "lavenderblush": [255, 240, 245],
            "lawngreen": [124, 252, 0],
            "lemonchiffon": [255, 250, 205],
            "lightblue": [173, 216, 230],
            "lightcoral": [240, 128, 128],
            "lightcyan": [224, 255, 255],
            "lightgoldenrodyellow": [250, 250, 210],
            "lightgray": [211, 211, 211],
            "lightgreen": [144, 238, 144],
            "lightgrey": [211, 211, 211],
            "lightpink": [255, 182, 193],
            "lightsalmon": [255, 160, 122],
            "lightseagreen": [32, 178, 170],
            "lightskyblue": [135, 206, 250],
            "lightslategray": [119, 136, 153],
            "lightslategrey": [119, 136, 153],
            "lightsteelblue": [176, 196, 222],
            "lightyellow": [255, 255, 224],
            "lime": [0, 255, 0],
            "limegreen": [50, 205, 50],
            "linen": [250, 240, 230],
            "magenta": [255, 0, 255],
            "maroon": [128, 0, 0],
            "mediumaquamarine": [102, 205, 170],
            "mediumblue": [0, 0, 205],
            "mediumorchid": [186, 85, 211],
            "mediumpurple": [147, 112, 219],
            "mediumseagreen": [60, 179, 113],
            "mediumslateblue": [123, 104, 238],
            "mediumspringgreen": [0, 250, 154],
            "mediumturquoise": [72, 209, 204],
            "mediumvioletred": [199, 21, 133],
            "midnightblue": [25, 25, 112],
            "mintcream": [245, 255, 250],
            "mistyrose": [255, 228, 225],
            "moccasin": [255, 228, 181],
            "navajowhite": [255, 222, 173],
            "navy": [0, 0, 128],
            "oldlace": [253, 245, 230],
            "olive": [128, 128, 0],
            "olivedrab": [107, 142, 35],
            "orange": [255, 165, 0],
            "orangered": [255, 69, 0],
            "orchid": [218, 112, 214],
            "palegoldenrod": [238, 232, 170],
            "palegreen": [152, 251, 152],
            "paleturquoise": [175, 238, 238],
            "palevioletred": [219, 112, 147],
            "papayawhip": [255, 239, 213],
            "peachpuff": [255, 218, 185],
            "peru": [205, 133, 63],
            "pink": [255, 192, 203],
            "plum": [221, 160, 221],
            "powderblue": [176, 224, 230],
            "purple": [128, 0, 128],
            "rebeccapurple": [102, 51, 153],
            "red": [255, 0, 0],
            "rosybrown": [188, 143, 143],
            "royalblue": [65, 105, 225],
            "saddlebrown": [139, 69, 19],
            "salmon": [250, 128, 114],
            "sandybrown": [244, 164, 96],
            "seagreen": [46, 139, 87],
            "seashell": [255, 245, 238],
            "sienna": [160, 82, 45],
            "silver": [192, 192, 192],
            "skyblue": [135, 206, 235],
            "slateblue": [106, 90, 205],
            "slategray": [112, 128, 144],
            "slategrey": [112, 128, 144],
            "snow": [255, 250, 250],
            "springgreen": [0, 255, 127],
            "steelblue": [70, 130, 180],
            "tan": [210, 180, 140],
            "teal": [0, 128, 128],
            "thistle": [216, 191, 216],
            "tomato": [255, 99, 71],
            "turquoise": [64, 224, 208],
            "violet": [238, 130, 238],
            "wheat": [245, 222, 179],
            "white": [255, 255, 255],
            "whitesmoke": [245, 245, 245],
            "yellow": [255, 255, 0],
            "yellowgreen": [154, 205, 50]
        };

    },{}],7:[function(require,module,exports){
        /**
         * @namespace Chart
         */
        var Chart = require(29)();

        Chart.helpers = require(45);

// @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!
        require(27)(Chart);

        Chart.defaults = require(25);
        Chart.Element = require(26);
        Chart.elements = require(40);
        Chart.Interaction = require(28);
        Chart.platform = require(48);

        require(31)(Chart);
        require(22)(Chart);
        require(23)(Chart);
        require(24)(Chart);
        require(30)(Chart);
        require(33)(Chart);
        require(32)(Chart);
        require(35)(Chart);

        require(54)(Chart);
        require(52)(Chart);
        require(53)(Chart);
        require(55)(Chart);
        require(56)(Chart);
        require(57)(Chart);

// Controllers must be loaded after elements
// See Chart.core.datasetController.dataElementType
        require(15)(Chart);
        require(16)(Chart);
        require(17)(Chart);
        require(18)(Chart);
        require(19)(Chart);
        require(20)(Chart);
        require(21)(Chart);

        require(8)(Chart);
        require(9)(Chart);
        require(10)(Chart);
        require(11)(Chart);
        require(12)(Chart);
        require(13)(Chart);
        require(14)(Chart);

// Loading built-it plugins
        var plugins = [];

        plugins.push(
            require(49)(Chart),
            require(50)(Chart),
            require(51)(Chart)
        );

        Chart.plugins.register(plugins);

        Chart.platform.initialize();

        module.exports = Chart;
        if (typeof window !== 'undefined') {
            window.Chart = Chart;
        }

// DEPRECATIONS

        /**
         * Provided for backward compatibility, use Chart.helpers.canvas instead.
         * @namespace Chart.canvasHelpers
         * @deprecated since version 2.6.0
         * @todo remove at version 3
         * @private
         */
        Chart.canvasHelpers = Chart.helpers.canvas;

    },{"10":10,"11":11,"12":12,"13":13,"14":14,"15":15,"16":16,"17":17,"18":18,"19":19,"20":20,"21":21,"22":22,"23":23,"24":24,"25":25,"26":26,"27":27,"28":28,"29":29,"30":30,"31":31,"32":32,"33":33,"35":35,"40":40,"45":45,"48":48,"49":49,"50":50,"51":51,"52":52,"53":53,"54":54,"55":55,"56":56,"57":57,"8":8,"9":9}],8:[function(require,module,exports){
        'use strict';

        module.exports = function(Chart) {

            Chart.Bar = function(context, config) {
                config.type = 'bar';

                return new Chart(context, config);
            };

        };

    },{}],9:[function(require,module,exports){
        'use strict';

        module.exports = function(Chart) {

            Chart.Bubble = function(context, config) {
                config.type = 'bubble';
                return new Chart(context, config);
            };

        };

    },{}],10:[function(require,module,exports){
        'use strict';

        module.exports = function(Chart) {

            Chart.Doughnut = function(context, config) {
                config.type = 'doughnut';

                return new Chart(context, config);
            };

        };

    },{}],11:[function(require,module,exports){
        'use strict';

        module.exports = function(Chart) {

            Chart.Line = function(context, config) {
                config.type = 'line';

                return new Chart(context, config);
            };

        };

    },{}],12:[function(require,module,exports){
        'use strict';

        module.exports = function(Chart) {

            Chart.PolarArea = function(context, config) {
                config.type = 'polarArea';

                return new Chart(context, config);
            };

        };

    },{}],13:[function(require,module,exports){
        'use strict';

        module.exports = function(Chart) {

            Chart.Radar = function(context, config) {
                config.type = 'radar';

                return new Chart(context, config);
            };

        };

    },{}],14:[function(require,module,exports){
        'use strict';

        module.exports = function(Chart) {
            Chart.Scatter = function(context, config) {
                config.type = 'scatter';
                return new Chart(context, config);
            };
        };

    },{}],15:[function(require,module,exports){
        'use strict';

        var defaults = require(25);
        var elements = require(40);
        var helpers = require(45);

        defaults._set('bar', {
            hover: {
                mode: 'label'
            },

            scales: {
                xAxes: [{
                    type: 'category',

                    // Specific to Bar Controller
                    categoryPercentage: 0.8,
                    barPercentage: 0.9,

                    // offset settings
                    offset: true,

                    // grid line settings
                    gridLines: {
                        offsetGridLines: true
                    }
                }],

                yAxes: [{
                    type: 'linear'
                }]
            }
        });

        defaults._set('horizontalBar', {
            hover: {
                mode: 'index',
                axis: 'y'
            },

            scales: {
                xAxes: [{
                    type: 'linear',
                    position: 'bottom'
                }],

                yAxes: [{
                    position: 'left',
                    type: 'category',

                    // Specific to Horizontal Bar Controller
                    categoryPercentage: 0.8,
                    barPercentage: 0.9,

                    // offset settings
                    offset: true,

                    // grid line settings
                    gridLines: {
                        offsetGridLines: true
                    }
                }]
            },

            elements: {
                rectangle: {
                    borderSkipped: 'left'
                }
            },

            tooltips: {
                callbacks: {
                    title: function(item, data) {
                        // Pick first xLabel for now
                        var title = '';

                        if (item.length > 0) {
                            if (item[0].yLabel) {
                                title = item[0].yLabel;
                            } else if (data.labels.length > 0 && item[0].index < data.labels.length) {
                                title = data.labels[item[0].index];
                            }
                        }

                        return title;
                    },

                    label: function(item, data) {
                        var datasetLabel = data.datasets[item.datasetIndex].label || '';
                        return datasetLabel + ': ' + item.xLabel;
                    }
                },
                mode: 'index',
                axis: 'y'
            }
        });

        module.exports = function(Chart) {

            Chart.controllers.bar = Chart.DatasetController.extend({

                dataElementType: elements.Rectangle,

                initialize: function() {
                    var me = this;
                    var meta;

                    Chart.DatasetController.prototype.initialize.apply(me, arguments);

                    meta = me.getMeta();
                    meta.stack = me.getDataset().stack;
                    meta.bar = true;
                },

                update: function(reset) {
                    var me = this;
                    var rects = me.getMeta().data;
                    var i, ilen;

                    me._ruler = me.getRuler();

                    for (i = 0, ilen = rects.length; i < ilen; ++i) {
                        me.updateElement(rects[i], i, reset);
                    }
                },

                updateElement: function(rectangle, index, reset) {
                    var me = this;
                    var chart = me.chart;
                    var meta = me.getMeta();
                    var dataset = me.getDataset();
                    var custom = rectangle.custom || {};
                    var rectangleOptions = chart.options.elements.rectangle;

                    rectangle._xScale = me.getScaleForId(meta.xAxisID);
                    rectangle._yScale = me.getScaleForId(meta.yAxisID);
                    rectangle._datasetIndex = me.index;
                    rectangle._index = index;

                    rectangle._model = {
                        datasetLabel: dataset.label,
                        label: chart.data.labels[index],
                        borderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleOptions.borderSkipped,
                        backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleOptions.backgroundColor),
                        borderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleOptions.borderColor),
                        borderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleOptions.borderWidth)
                    };

                    me.updateElementGeometry(rectangle, index, reset);

                    rectangle.pivot();
                },

                /**
                 * @private
                 */
                updateElementGeometry: function(rectangle, index, reset) {
                    var me = this;
                    var model = rectangle._model;
                    var vscale = me.getValueScale();
                    var base = vscale.getBasePixel();
                    var horizontal = vscale.isHorizontal();
                    var ruler = me._ruler || me.getRuler();
                    var vpixels = me.calculateBarValuePixels(me.index, index);
                    var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);

                    model.horizontal = horizontal;
                    model.base = reset ? base : vpixels.base;
                    model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;
                    model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;
                    model.height = horizontal ? ipixels.size : undefined;
                    model.width = horizontal ? undefined : ipixels.size;
                },

                /**
                 * @private
                 */
                getValueScaleId: function() {
                    return this.getMeta().yAxisID;
                },

                /**
                 * @private
                 */
                getIndexScaleId: function() {
                    return this.getMeta().xAxisID;
                },

                /**
                 * @private
                 */
                getValueScale: function() {
                    return this.getScaleForId(this.getValueScaleId());
                },

                /**
                 * @private
                 */
                getIndexScale: function() {
                    return this.getScaleForId(this.getIndexScaleId());
                },

                /**
                 * Returns the effective number of stacks based on groups and bar visibility.
                 * @private
                 */
                getStackCount: function(last) {
                    var me = this;
                    var chart = me.chart;
                    var scale = me.getIndexScale();
                    var stacked = scale.options.stacked;
                    var ilen = last === undefined ? chart.data.datasets.length : last + 1;
                    var stacks = [];
                    var i, meta;

                    for (i = 0; i < ilen; ++i) {
                        meta = chart.getDatasetMeta(i);
                        if (meta.bar && chart.isDatasetVisible(i) &&
                            (stacked === false ||
                                (stacked === true && stacks.indexOf(meta.stack) === -1) ||
                                (stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1)))) {
                            stacks.push(meta.stack);
                        }
                    }

                    return stacks.length;
                },

                /**
                 * Returns the stack index for the given dataset based on groups and bar visibility.
                 * @private
                 */
                getStackIndex: function(datasetIndex) {
                    return this.getStackCount(datasetIndex) - 1;
                },

                /**
                 * @private
                 */
                getRuler: function() {
                    var me = this;
                    var scale = me.getIndexScale();
                    var stackCount = me.getStackCount();
                    var datasetIndex = me.index;
                    var pixels = [];
                    var isHorizontal = scale.isHorizontal();
                    var start = isHorizontal ? scale.left : scale.top;
                    var end = start + (isHorizontal ? scale.width : scale.height);
                    var i, ilen;

                    for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {
                        pixels.push(scale.getPixelForValue(null, i, datasetIndex));
                    }

                    return {
                        pixels: pixels,
                        start: start,
                        end: end,
                        stackCount: stackCount,
                        scale: scale
                    };
                },

                /**
                 * Note: pixel values are not clamped to the scale area.
                 * @private
                 */
                calculateBarValuePixels: function(datasetIndex, index) {
                    var me = this;
                    var chart = me.chart;
                    var meta = me.getMeta();
                    var scale = me.getValueScale();
                    var datasets = chart.data.datasets;
                    var value = scale.getRightValue(datasets[datasetIndex].data[index]);
                    var stacked = scale.options.stacked;
                    var stack = meta.stack;
                    var start = 0;
                    var i, imeta, ivalue, base, head, size;

                    if (stacked || (stacked === undefined && stack !== undefined)) {
                        for (i = 0; i < datasetIndex; ++i) {
                            imeta = chart.getDatasetMeta(i);

                            if (imeta.bar &&
                                imeta.stack === stack &&
                                imeta.controller.getValueScaleId() === scale.id &&
                                chart.isDatasetVisible(i)) {

                                ivalue = scale.getRightValue(datasets[i].data[index]);
                                if ((value < 0 && ivalue < 0) || (value >= 0 && ivalue > 0)) {
                                    start += ivalue;
                                }
                            }
                        }
                    }

                    base = scale.getPixelForValue(start);
                    head = scale.getPixelForValue(start + value);
                    size = (head - base) / 2;

                    return {
                        size: size,
                        base: base,
                        head: head,
                        center: head + size / 2
                    };
                },

                /**
                 * @private
                 */
                calculateBarIndexPixels: function(datasetIndex, index, ruler) {
                    var me = this;
                    var options = ruler.scale.options;
                    var stackIndex = me.getStackIndex(datasetIndex);
                    var pixels = ruler.pixels;
                    var base = pixels[index];
                    var length = pixels.length;
                    var start = ruler.start;
                    var end = ruler.end;
                    var leftSampleSize, rightSampleSize, leftCategorySize, rightCategorySize, fullBarSize, size;

                    if (length === 1) {
                        leftSampleSize = base > start ? base - start : end - base;
                        rightSampleSize = base < end ? end - base : base - start;
                    } else {
                        if (index > 0) {
                            leftSampleSize = (base - pixels[index - 1]) / 2;
                            if (index === length - 1) {
                                rightSampleSize = leftSampleSize;
                            }
                        }
                        if (index < length - 1) {
                            rightSampleSize = (pixels[index + 1] - base) / 2;
                            if (index === 0) {
                                leftSampleSize = rightSampleSize;
                            }
                        }
                    }

                    leftCategorySize = leftSampleSize * options.categoryPercentage;
                    rightCategorySize = rightSampleSize * options.categoryPercentage;
                    fullBarSize = (leftCategorySize + rightCategorySize) / ruler.stackCount;
                    size = fullBarSize * options.barPercentage;

                    size = Math.min(
                        helpers.valueOrDefault(options.barThickness, size),
                        helpers.valueOrDefault(options.maxBarThickness, Infinity));

                    base -= leftCategorySize;
                    base += fullBarSize * stackIndex;
                    base += (fullBarSize - size) / 2;

                    return {
                        size: size,
                        base: base,
                        head: base + size,
                        center: base + size / 2
                    };
                },

                draw: function() {
                    var me = this;
                    var chart = me.chart;
                    var scale = me.getValueScale();
                    var rects = me.getMeta().data;
                    var dataset = me.getDataset();
                    var ilen = rects.length;
                    var i = 0;

                    helpers.canvas.clipArea(chart.ctx, chart.chartArea);

                    for (; i < ilen; ++i) {
                        if (!isNaN(scale.getRightValue(dataset.data[i]))) {
                            rects[i].draw();
                        }
                    }

                    helpers.canvas.unclipArea(chart.ctx);
                },

                setHoverStyle: function(rectangle) {
                    var dataset = this.chart.data.datasets[rectangle._datasetIndex];
                    var index = rectangle._index;
                    var custom = rectangle.custom || {};
                    var model = rectangle._model;

                    model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.hoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));
                    model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.hoverBorderColor, index, helpers.getHoverColor(model.borderColor));
                    model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);
                },

                removeHoverStyle: function(rectangle) {
                    var dataset = this.chart.data.datasets[rectangle._datasetIndex];
                    var index = rectangle._index;
                    var custom = rectangle.custom || {};
                    var model = rectangle._model;
                    var rectangleElementOptions = this.chart.options.elements.rectangle;

                    model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor);
                    model.borderColor = custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor);
                    model.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth);
                }
            });

            Chart.controllers.horizontalBar = Chart.controllers.bar.extend({
                /**
                 * @private
                 */
                getValueScaleId: function() {
                    return this.getMeta().xAxisID;
                },

                /**
                 * @private
                 */
                getIndexScaleId: function() {
                    return this.getMeta().yAxisID;
                }
            });
        };

    },{"25":25,"40":40,"45":45}],16:[function(require,module,exports){
        'use strict';

        var defaults = require(25);
        var elements = require(40);
        var helpers = require(45);

        defaults._set('bubble', {
            hover: {
                mode: 'single'
            },

            scales: {
                xAxes: [{
                    type: 'linear', // bubble should probably use a linear scale by default
                    position: 'bottom',
                    id: 'x-axis-0' // need an ID so datasets can reference the scale
                }],
                yAxes: [{
                    type: 'linear',
                    position: 'left',
                    id: 'y-axis-0'
                }]
            },

            tooltips: {
                callbacks: {
                    title: function() {
                        // Title doesn't make sense for scatter since we format the data as a point
                        return '';
                    },
                    label: function(item, data) {
                        var datasetLabel = data.datasets[item.datasetIndex].label || '';
                        var dataPoint = data.datasets[item.datasetIndex].data[item.index];
                        return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';
                    }
                }
            }
        });


        module.exports = function(Chart) {

            Chart.controllers.bubble = Chart.DatasetController.extend({
                /**
                 * @protected
                 */
                dataElementType: elements.Point,

                /**
                 * @protected
                 */
                update: function(reset) {
                    var me = this;
                    var meta = me.getMeta();
                    var points = meta.data;

                    // Update Points
                    helpers.each(points, function(point, index) {
                        me.updateElement(point, index, reset);
                    });
                },

                /**
                 * @protected
                 */
                updateElement: function(point, index, reset) {
                    var me = this;
                    var meta = me.getMeta();
                    var custom = point.custom || {};
                    var xScale = me.getScaleForId(meta.xAxisID);
                    var yScale = me.getScaleForId(meta.yAxisID);
                    var options = me._resolveElementOptions(point, index);
                    var data = me.getDataset().data[index];
                    var dsIndex = me.index;

                    var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);
                    var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);

                    point._xScale = xScale;
                    point._yScale = yScale;
                    point._options = options;
                    point._datasetIndex = dsIndex;
                    point._index = index;
                    point._model = {
                        backgroundColor: options.backgroundColor,
                        borderColor: options.borderColor,
                        borderWidth: options.borderWidth,
                        hitRadius: options.hitRadius,
                        pointStyle: options.pointStyle,
                        radius: reset ? 0 : options.radius,
                        skip: custom.skip || isNaN(x) || isNaN(y),
                        x: x,
                        y: y,
                    };

                    point.pivot();
                },

                /**
                 * @protected
                 */
                setHoverStyle: function(point) {
                    var model = point._model;
                    var options = point._options;

                    model.backgroundColor = helpers.valueOrDefault(options.hoverBackgroundColor, helpers.getHoverColor(options.backgroundColor));
                    model.borderColor = helpers.valueOrDefault(options.hoverBorderColor, helpers.getHoverColor(options.borderColor));
                    model.borderWidth = helpers.valueOrDefault(options.hoverBorderWidth, options.borderWidth);
                    model.radius = options.radius + options.hoverRadius;
                },

                /**
                 * @protected
                 */
                removeHoverStyle: function(point) {
                    var model = point._model;
                    var options = point._options;

                    model.backgroundColor = options.backgroundColor;
                    model.borderColor = options.borderColor;
                    model.borderWidth = options.borderWidth;
                    model.radius = options.radius;
                },

                /**
                 * @private
                 */
                _resolveElementOptions: function(point, index) {
                    var me = this;
                    var chart = me.chart;
                    var datasets = chart.data.datasets;
                    var dataset = datasets[me.index];
                    var custom = point.custom || {};
                    var options = chart.options.elements.point;
                    var resolve = helpers.options.resolve;
                    var data = dataset.data[index];
                    var values = {};
                    var i, ilen, key;

                    // Scriptable options
                    var context = {
                        chart: chart,
                        dataIndex: index,
                        dataset: dataset,
                        datasetIndex: me.index
                    };

                    var keys = [
                        'backgroundColor',
                        'borderColor',
                        'borderWidth',
                        'hoverBackgroundColor',
                        'hoverBorderColor',
                        'hoverBorderWidth',
                        'hoverRadius',
                        'hitRadius',
                        'pointStyle'
                    ];

                    for (i = 0, ilen = keys.length; i < ilen; ++i) {
                        key = keys[i];
                        values[key] = resolve([
                            custom[key],
                            dataset[key],
                            options[key]
                        ], context, index);
                    }

                    // Custom radius resolution
                    values.radius = resolve([
                        custom.radius,
                        data ? data.r : undefined,
                        dataset.radius,
                        options.radius
                    ], context, index);

                    return values;
                }
            });
        };

    },{"25":25,"40":40,"45":45}],17:[function(require,module,exports){
        'use strict';

        var defaults = require(25);
        var elements = require(40);
        var helpers = require(45);

        defaults._set('doughnut', {
            animation: {
                // Boolean - Whether we animate the rotation of the Doughnut
                animateRotate: true,
                // Boolean - Whether we animate scaling the Doughnut from the centre
                animateScale: false
            },
            hover: {
                mode: 'single'
            },
            legendCallback: function(chart) {
                var text = [];
                text.push('<ul class="' + chart.id + '-legend">');

                var data = chart.data;
                var datasets = data.datasets;
                var labels = data.labels;

                if (datasets.length) {
                    for (var i = 0; i < datasets[0].data.length; ++i) {
                        text.push('<li><span style="background-color:' + datasets[0].backgroundColor[i] + '"></span>');
                        if (labels[i]) {
                            text.push(labels[i]);
                        }
                        text.push('</li>');
                    }
                }

                text.push('</ul>');
                return text.join('');
            },
            legend: {
                labels: {
                    generateLabels: function(chart) {
                        var data = chart.data;
                        if (data.labels.length && data.datasets.length) {
                            return data.labels.map(function(label, i) {
                                var meta = chart.getDatasetMeta(0);
                                var ds = data.datasets[0];
                                var arc = meta.data[i];
                                var custom = arc && arc.custom || {};
                                var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;
                                var arcOpts = chart.options.elements.arc;
                                var fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);
                                var stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);
                                var bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);

                                return {
                                    text: label,
                                    fillStyle: fill,
                                    strokeStyle: stroke,
                                    lineWidth: bw,
                                    hidden: isNaN(ds.data[i]) || meta.data[i].hidden,

                                    // Extra data used for toggling the correct item
                                    index: i
                                };
                            });
                        }
                        return [];
                    }
                },

                onClick: function(e, legendItem) {
                    var index = legendItem.index;
                    var chart = this.chart;
                    var i, ilen, meta;

                    for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {
                        meta = chart.getDatasetMeta(i);
                        // toggle visibility of index if exists
                        if (meta.data[index]) {
                            meta.data[index].hidden = !meta.data[index].hidden;
                        }
                    }

                    chart.update();
                }
            },

            // The percentage of the chart that we cut out of the middle.
            cutoutPercentage: 50,

            // The rotation of the chart, where the first data arc begins.
            rotation: Math.PI * -0.5,

            // The total circumference of the chart.
            circumference: Math.PI * 2.0,

            // Need to override these to give a nice default
            tooltips: {
                callbacks: {
                    title: function() {
                        return '';
                    },
                    label: function(tooltipItem, data) {
                        var dataLabel = data.labels[tooltipItem.index];
                        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];

                        if (helpers.isArray(dataLabel)) {
                            // show value on first line of multiline label
                            // need to clone because we are changing the value
                            dataLabel = dataLabel.slice();
                            dataLabel[0] += value;
                        } else {
                            dataLabel += value;
                        }

                        return dataLabel;
                    }
                }
            }
        });

        defaults._set('pie', helpers.clone(defaults.doughnut));
        defaults._set('pie', {
            cutoutPercentage: 0
        });

        module.exports = function(Chart) {

            Chart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({

                dataElementType: elements.Arc,

                linkScales: helpers.noop,

                // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly
                getRingIndex: function(datasetIndex) {
                    var ringIndex = 0;

                    for (var j = 0; j < datasetIndex; ++j) {
                        if (this.chart.isDatasetVisible(j)) {
                            ++ringIndex;
                        }
                    }

                    return ringIndex;
                },

                update: function(reset) {
                    var me = this;
                    var chart = me.chart;
                    var chartArea = chart.chartArea;
                    var opts = chart.options;
                    var arcOpts = opts.elements.arc;
                    var availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth;
                    var availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth;
                    var minSize = Math.min(availableWidth, availableHeight);
                    var offset = {x: 0, y: 0};
                    var meta = me.getMeta();
                    var cutoutPercentage = opts.cutoutPercentage;
                    var circumference = opts.circumference;

                    // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc
                    if (circumference < Math.PI * 2.0) {
                        var startAngle = opts.rotation % (Math.PI * 2.0);
                        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);
                        var endAngle = startAngle + circumference;
                        var start = {x: Math.cos(startAngle), y: Math.sin(startAngle)};
                        var end = {x: Math.cos(endAngle), y: Math.sin(endAngle)};
                        var contains0 = (startAngle <= 0 && endAngle >= 0) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);
                        var contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);
                        var contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);
                        var contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);
                        var cutout = cutoutPercentage / 100.0;
                        var min = {x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))};
                        var max = {x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))};
                        var size = {width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5};
                        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);
                        offset = {x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5};
                    }

                    chart.borderWidth = me.getMaxBorderWidth(meta.data);
                    chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);
                    chart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);
                    chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();
                    chart.offsetX = offset.x * chart.outerRadius;
                    chart.offsetY = offset.y * chart.outerRadius;

                    meta.total = me.calculateTotal();

                    me.outerRadius = chart.outerRadius - (chart.radiusLength * me.getRingIndex(me.index));
                    me.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);

                    helpers.each(meta.data, function(arc, index) {
                        me.updateElement(arc, index, reset);
                    });
                },

                updateElement: function(arc, index, reset) {
                    var me = this;
                    var chart = me.chart;
                    var chartArea = chart.chartArea;
                    var opts = chart.options;
                    var animationOpts = opts.animation;
                    var centerX = (chartArea.left + chartArea.right) / 2;
                    var centerY = (chartArea.top + chartArea.bottom) / 2;
                    var startAngle = opts.rotation; // non reset case handled later
                    var endAngle = opts.rotation; // non reset case handled later
                    var dataset = me.getDataset();
                    var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));
                    var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;
                    var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;
                    var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;

                    helpers.extend(arc, {
                        // Utility
                        _datasetIndex: me.index,
                        _index: index,

                        // Desired view properties
                        _model: {
                            x: centerX + chart.offsetX,
                            y: centerY + chart.offsetY,
                            startAngle: startAngle,
                            endAngle: endAngle,
                            circumference: circumference,
                            outerRadius: outerRadius,
                            innerRadius: innerRadius,
                            label: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])
                        }
                    });

                    var model = arc._model;
                    // Resets the visual styles
                    this.removeHoverStyle(arc);

                    // Set correct angles if not resetting
                    if (!reset || !animationOpts.animateRotate) {
                        if (index === 0) {
                            model.startAngle = opts.rotation;
                        } else {
                            model.startAngle = me.getMeta().data[index - 1]._model.endAngle;
                        }

                        model.endAngle = model.startAngle + model.circumference;
                    }

                    arc.pivot();
                },

                removeHoverStyle: function(arc) {
                    Chart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);
                },

                calculateTotal: function() {
                    var dataset = this.getDataset();
                    var meta = this.getMeta();
                    var total = 0;
                    var value;

                    helpers.each(meta.data, function(element, index) {
                        value = dataset.data[index];
                        if (!isNaN(value) && !element.hidden) {
                            total += Math.abs(value);
                        }
                    });

                    /* if (total === 0) {
				total = NaN;
			}*/

                    return total;
                },

                calculateCircumference: function(value) {
                    var total = this.getMeta().total;
                    if (total > 0 && !isNaN(value)) {
                        return (Math.PI * 2.0) * (value / total);
                    }
                    return 0;
                },

                // gets the max border or hover width to properly scale pie charts
                getMaxBorderWidth: function(arcs) {
                    var max = 0;
                    var index = this.index;
                    var length = arcs.length;
                    var borderWidth;
                    var hoverWidth;

                    for (var i = 0; i < length; i++) {
                        borderWidth = arcs[i]._model ? arcs[i]._model.borderWidth : 0;
                        hoverWidth = arcs[i]._chart ? arcs[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;

                        max = borderWidth > max ? borderWidth : max;
                        max = hoverWidth > max ? hoverWidth : max;
                    }
                    return max;
                }
            });
        };

    },{"25":25,"40":40,"45":45}],18:[function(require,module,exports){
        'use strict';

        var defaults = require(25);
        var elements = require(40);
        var helpers = require(45);

        defaults._set('line', {
            showLines: true,
            spanGaps: false,

            hover: {
                mode: 'label'
            },

            scales: {
                xAxes: [{
                    type: 'category',
                    id: 'x-axis-0'
                }],
                yAxes: [{
                    type: 'linear',
                    id: 'y-axis-0'
                }]
            }
        });

        module.exports = function(Chart) {

            function lineEnabled(dataset, options) {
                return helpers.valueOrDefault(dataset.showLine, options.showLines);
            }

            Chart.controllers.line = Chart.DatasetController.extend({

                datasetElementType: elements.Line,

                dataElementType: elements.Point,

                update: function(reset) {
                    var me = this;
                    var meta = me.getMeta();
                    var line = meta.dataset;
                    var points = meta.data || [];
                    var options = me.chart.options;
                    var lineElementOptions = options.elements.line;
                    var scale = me.getScaleForId(meta.yAxisID);
                    var i, ilen, custom;
                    var dataset = me.getDataset();
                    var showLine = lineEnabled(dataset, options);

                    // Update Line
                    if (showLine) {
                        custom = line.custom || {};

                        // Compatibility: If the properties are defined with only the old name, use those values
                        if ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {
                            dataset.lineTension = dataset.tension;
                        }

                        // Utility
                        line._scale = scale;
                        line._datasetIndex = me.index;
                        // Data
                        line._children = points;
                        // Model
                        line._model = {
                            // Appearance
                            // The default behavior of lines is to break at null values, according
                            // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158
                            // This option gives lines the ability to span gaps
                            spanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,
                            tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),
                            backgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),
                            borderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),
                            borderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),
                            borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),
                            borderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),
                            borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),
                            borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),
                            fill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),
                            steppedLine: custom.steppedLine ? custom.steppedLine : helpers.valueOrDefault(dataset.steppedLine, lineElementOptions.stepped),
                            cubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.valueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode),
                        };

                        line.pivot();
                    }

                    // Update Points
                    for (i = 0, ilen = points.length; i < ilen; ++i) {
                        me.updateElement(points[i], i, reset);
                    }

                    if (showLine && line._model.tension !== 0) {
                        me.updateBezierControlPoints();
                    }

                    // Now pivot the point for animation
                    for (i = 0, ilen = points.length; i < ilen; ++i) {
                        points[i].pivot();
                    }
                },

                getPointBackgroundColor: function(point, index) {
                    var backgroundColor = this.chart.options.elements.point.backgroundColor;
                    var dataset = this.getDataset();
                    var custom = point.custom || {};

                    if (custom.backgroundColor) {
                        backgroundColor = custom.backgroundColor;
                    } else if (dataset.pointBackgroundColor) {
                        backgroundColor = helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);
                    } else if (dataset.backgroundColor) {
                        backgroundColor = dataset.backgroundColor;
                    }

                    return backgroundColor;
                },

                getPointBorderColor: function(point, index) {
                    var borderColor = this.chart.options.elements.point.borderColor;
                    var dataset = this.getDataset();
                    var custom = point.custom || {};

                    if (custom.borderColor) {
                        borderColor = custom.borderColor;
                    } else if (dataset.pointBorderColor) {
                        borderColor = helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);
                    } else if (dataset.borderColor) {
                        borderColor = dataset.borderColor;
                    }

                    return borderColor;
                },

                getPointBorderWidth: function(point, index) {
                    var borderWidth = this.chart.options.elements.point.borderWidth;
                    var dataset = this.getDataset();
                    var custom = point.custom || {};

                    if (!isNaN(custom.borderWidth)) {
                        borderWidth = custom.borderWidth;
                    } else if (!isNaN(dataset.pointBorderWidth) || helpers.isArray(dataset.pointBorderWidth)) {
                        borderWidth = helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);
                    } else if (!isNaN(dataset.borderWidth)) {
                        borderWidth = dataset.borderWidth;
                    }

                    return borderWidth;
                },

                updateElement: function(point, index, reset) {
                    var me = this;
                    var meta = me.getMeta();
                    var custom = point.custom || {};
                    var dataset = me.getDataset();
                    var datasetIndex = me.index;
                    var value = dataset.data[index];
                    var yScale = me.getScaleForId(meta.yAxisID);
                    var xScale = me.getScaleForId(meta.xAxisID);
                    var pointOptions = me.chart.options.elements.point;
                    var x, y;

                    // Compatibility: If the properties are defined with only the old name, use those values
                    if ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {
                        dataset.pointRadius = dataset.radius;
                    }
                    if ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {
                        dataset.pointHitRadius = dataset.hitRadius;
                    }

                    x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);
                    y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);

                    // Utility
                    point._xScale = xScale;
                    point._yScale = yScale;
                    point._datasetIndex = datasetIndex;
                    point._index = index;

                    // Desired view properties
                    point._model = {
                        x: x,
                        y: y,
                        skip: custom.skip || isNaN(x) || isNaN(y),
                        // Appearance
                        radius: custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),
                        pointStyle: custom.pointStyle || helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),
                        backgroundColor: me.getPointBackgroundColor(point, index),
                        borderColor: me.getPointBorderColor(point, index),
                        borderWidth: me.getPointBorderWidth(point, index),
                        tension: meta.dataset._model ? meta.dataset._model.tension : 0,
                        steppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,
                        // Tooltip
                        hitRadius: custom.hitRadius || helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)
                    };
                },

                calculatePointY: function(value, index, datasetIndex) {
                    var me = this;
                    var chart = me.chart;
                    var meta = me.getMeta();
                    var yScale = me.getScaleForId(meta.yAxisID);
                    var sumPos = 0;
                    var sumNeg = 0;
                    var i, ds, dsMeta;

                    if (yScale.options.stacked) {
                        for (i = 0; i < datasetIndex; i++) {
                            ds = chart.data.datasets[i];
                            dsMeta = chart.getDatasetMeta(i);
                            if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {
                                var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));
                                if (stackedRightValue < 0) {
                                    sumNeg += stackedRightValue || 0;
                                } else {
                                    sumPos += stackedRightValue || 0;
                                }
                            }
                        }

                        var rightValue = Number(yScale.getRightValue(value));
                        if (rightValue < 0) {
                            return yScale.getPixelForValue(sumNeg + rightValue);
                        }
                        return yScale.getPixelForValue(sumPos + rightValue);
                    }

                    return yScale.getPixelForValue(value);
                },

                updateBezierControlPoints: function() {
                    var me = this;
                    var meta = me.getMeta();
                    var area = me.chart.chartArea;
                    var points = (meta.data || []);
                    var i, ilen, point, model, controlPoints;

                    // Only consider points that are drawn in case the spanGaps option is used
                    if (meta.dataset._model.spanGaps) {
                        points = points.filter(function(pt) {
                            return !pt._model.skip;
                        });
                    }

                    function capControlPoint(pt, min, max) {
                        return Math.max(Math.min(pt, max), min);
                    }

                    if (meta.dataset._model.cubicInterpolationMode === 'monotone') {
                        helpers.splineCurveMonotone(points);
                    } else {
                        for (i = 0, ilen = points.length; i < ilen; ++i) {
                            point = points[i];
                            model = point._model;
                            controlPoints = helpers.splineCurve(
                                helpers.previousItem(points, i)._model,
                                model,
                                helpers.nextItem(points, i)._model,
                                meta.dataset._model.tension
                            );
                            model.controlPointPreviousX = controlPoints.previous.x;
                            model.controlPointPreviousY = controlPoints.previous.y;
                            model.controlPointNextX = controlPoints.next.x;
                            model.controlPointNextY = controlPoints.next.y;
                        }
                    }

                    if (me.chart.options.elements.line.capBezierPoints) {
                        for (i = 0, ilen = points.length; i < ilen; ++i) {
                            model = points[i]._model;
                            model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);
                            model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);
                            model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);
                            model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);
                        }
                    }
                },

                draw: function() {
                    var me = this;
                    var chart = me.chart;
                    var meta = me.getMeta();
                    var points = meta.data || [];
                    var area = chart.chartArea;
                    var ilen = points.length;
                    var i = 0;

                    helpers.canvas.clipArea(chart.ctx, area);

                    if (lineEnabled(me.getDataset(), chart.options)) {
                        meta.dataset.draw();
                    }

                    helpers.canvas.unclipArea(chart.ctx);

                    // Draw the points
                    for (; i < ilen; ++i) {
                        points[i].draw(area);
                    }
                },

                setHoverStyle: function(point) {
                    // Point
                    var dataset = this.chart.data.datasets[point._datasetIndex];
                    var index = point._index;
                    var custom = point.custom || {};
                    var model = point._model;

                    model.radius = custom.hoverRadius || helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);
                    model.backgroundColor = custom.hoverBackgroundColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));
                    model.borderColor = custom.hoverBorderColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));
                    model.borderWidth = custom.hoverBorderWidth || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);
                },

                removeHoverStyle: function(point) {
                    var me = this;
                    var dataset = me.chart.data.datasets[point._datasetIndex];
                    var index = point._index;
                    var custom = point.custom || {};
                    var model = point._model;

                    // Compatibility: If the properties are defined with only the old name, use those values
                    if ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {
                        dataset.pointRadius = dataset.radius;
                    }

                    model.radius = custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, me.chart.options.elements.point.radius);
                    model.backgroundColor = me.getPointBackgroundColor(point, index);
                    model.borderColor = me.getPointBorderColor(point, index);
                    model.borderWidth = me.getPointBorderWidth(point, index);
                }
            });
        };

    },{"25":25,"40":40,"45":45}],19:[function(require,module,exports){
        'use strict';

        var defaults = require(25);
        var elements = require(40);
        var helpers = require(45);

        defaults._set('polarArea', {
            scale: {
                type: 'radialLinear',
                angleLines: {
                    display: false
                },
                gridLines: {
                    circular: true
                },
                pointLabels: {
                    display: false
                },
                ticks: {
                    beginAtZero: true
                }
            },

            // Boolean - Whether to animate the rotation of the chart
            animation: {
                animateRotate: true,
                animateScale: true
            },

            startAngle: -0.5 * Math.PI,
            legendCallback: function(chart) {
                var text = [];
                text.push('<ul class="' + chart.id + '-legend">');

                var data = chart.data;
                var datasets = data.datasets;
                var labels = data.labels;

                if (datasets.length) {
                    for (var i = 0; i < datasets[0].data.length; ++i) {
                        text.push('<li><span style="background-color:' + datasets[0].backgroundColor[i] + '"></span>');
                        if (labels[i]) {
                            text.push(labels[i]);
                        }
                        text.push('</li>');
                    }
                }

                text.push('</ul>');
                return text.join('');
            },
            legend: {
                labels: {
                    generateLabels: function(chart) {
                        var data = chart.data;
                        if (data.labels.length && data.datasets.length) {
                            return data.labels.map(function(label, i) {
                                var meta = chart.getDatasetMeta(0);
                                var ds = data.datasets[0];
                                var arc = meta.data[i];
                                var custom = arc.custom || {};
                                var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;
                                var arcOpts = chart.options.elements.arc;
                                var fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);
                                var stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);
                                var bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);

                                return {
                                    text: label,
                                    fillStyle: fill,
                                    strokeStyle: stroke,
                                    lineWidth: bw,
                                    hidden: isNaN(ds.data[i]) || meta.data[i].hidden,

                                    // Extra data used for toggling the correct item
                                    index: i
                                };
                            });
                        }
                        return [];
                    }
                },

                onClick: function(e, legendItem) {
                    var index = legendItem.index;
                    var chart = this.chart;
                    var i, ilen, meta;

                    for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {
                        meta = chart.getDatasetMeta(i);
                        meta.data[index].hidden = !meta.data[index].hidden;
                    }

                    chart.update();
                }
            },

            // Need to override these to give a nice default
            tooltips: {
                callbacks: {
                    title: function() {
                        return '';
                    },
                    label: function(item, data) {
                        return data.labels[item.index] + ': ' + item.yLabel;
                    }
                }
            }
        });

        module.exports = function(Chart) {

            Chart.controllers.polarArea = Chart.DatasetController.extend({

                dataElementType: elements.Arc,

                linkScales: helpers.noop,

                update: function(reset) {
                    var me = this;
                    var chart = me.chart;
                    var chartArea = chart.chartArea;
                    var meta = me.getMeta();
                    var opts = chart.options;
                    var arcOpts = opts.elements.arc;
                    var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);
                    chart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);
                    chart.innerRadius = Math.max(opts.cutoutPercentage ? (chart.outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);
                    chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();

                    me.outerRadius = chart.outerRadius - (chart.radiusLength * me.index);
                    me.innerRadius = me.outerRadius - chart.radiusLength;

                    meta.count = me.countVisibleElements();

                    helpers.each(meta.data, function(arc, index) {
                        me.updateElement(arc, index, reset);
                    });
                },

                updateElement: function(arc, index, reset) {
                    var me = this;
                    var chart = me.chart;
                    var dataset = me.getDataset();
                    var opts = chart.options;
                    var animationOpts = opts.animation;
                    var scale = chart.scale;
                    var labels = chart.data.labels;

                    var circumference = me.calculateCircumference(dataset.data[index]);
                    var centerX = scale.xCenter;
                    var centerY = scale.yCenter;

                    // If there is NaN data before us, we need to calculate the starting angle correctly.
                    // We could be way more efficient here, but its unlikely that the polar area chart will have a lot of data
                    var visibleCount = 0;
                    var meta = me.getMeta();
                    for (var i = 0; i < index; ++i) {
                        if (!isNaN(dataset.data[i]) && !meta.data[i].hidden) {
                            ++visibleCount;
                        }
                    }

                    // var negHalfPI = -0.5 * Math.PI;
                    var datasetStartAngle = opts.startAngle;
                    var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);
                    var startAngle = datasetStartAngle + (circumference * visibleCount);
                    var endAngle = startAngle + (arc.hidden ? 0 : circumference);

                    var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);

                    helpers.extend(arc, {
                        // Utility
                        _datasetIndex: me.index,
                        _index: index,
                        _scale: scale,

                        // Desired view properties
                        _model: {
                            x: centerX,
                            y: centerY,
                            innerRadius: 0,
                            outerRadius: reset ? resetRadius : distance,
                            startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,
                            endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,
                            label: helpers.valueAtIndexOrDefault(labels, index, labels[index])
                        }
                    });

                    // Apply border and fill style
                    me.removeHoverStyle(arc);

                    arc.pivot();
                },

                removeHoverStyle: function(arc) {
                    Chart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);
                },

                countVisibleElements: function() {
                    var dataset = this.getDataset();
                    var meta = this.getMeta();
                    var count = 0;

                    helpers.each(meta.data, function(element, index) {
                        if (!isNaN(dataset.data[index]) && !element.hidden) {
                            count++;
                        }
                    });

                    return count;
                },

                calculateCircumference: function(value) {
                    var count = this.getMeta().count;
                    if (count > 0 && !isNaN(value)) {
                        return (2 * Math.PI) / count;
                    }
                    return 0;
                }
            });
        };

    },{"25":25,"40":40,"45":45}],20:[function(require,module,exports){
        'use strict';

        var defaults = require(25);
        var elements = require(40);
        var helpers = require(45);

        defaults._set('radar', {
            scale: {
                type: 'radialLinear'
            },
            elements: {
                line: {
                    tension: 0 // no bezier in radar
                }
            }
        });

        module.exports = function(Chart) {

            Chart.controllers.radar = Chart.DatasetController.extend({

                datasetElementType: elements.Line,

                dataElementType: elements.Point,

                linkScales: helpers.noop,

                update: function(reset) {
                    var me = this;
                    var meta = me.getMeta();
                    var line = meta.dataset;
                    var points = meta.data;
                    var custom = line.custom || {};
                    var dataset = me.getDataset();
                    var lineElementOptions = me.chart.options.elements.line;
                    var scale = me.chart.scale;

                    // Compatibility: If the properties are defined with only the old name, use those values
                    if ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {
                        dataset.lineTension = dataset.tension;
                    }

                    helpers.extend(meta.dataset, {
                        // Utility
                        _datasetIndex: me.index,
                        _scale: scale,
                        // Data
                        _children: points,
                        _loop: true,
                        // Model
                        _model: {
                            // Appearance
                            tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),
                            backgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),
                            borderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),
                            borderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),
                            fill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),
                            borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),
                            borderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),
                            borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),
                            borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),
                        }
                    });

                    meta.dataset.pivot();

                    // Update Points
                    helpers.each(points, function(point, index) {
                        me.updateElement(point, index, reset);
                    }, me);

                    // Update bezier control points
                    me.updateBezierControlPoints();
                },
                updateElement: function(point, index, reset) {
                    var me = this;
                    var custom = point.custom || {};
                    var dataset = me.getDataset();
                    var scale = me.chart.scale;
                    var pointElementOptions = me.chart.options.elements.point;
                    var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);

                    // Compatibility: If the properties are defined with only the old name, use those values
                    if ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {
                        dataset.pointRadius = dataset.radius;
                    }
                    if ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {
                        dataset.pointHitRadius = dataset.hitRadius;
                    }

                    helpers.extend(point, {
                        // Utility
                        _datasetIndex: me.index,
                        _index: index,
                        _scale: scale,

                        // Desired view properties
                        _model: {
                            x: reset ? scale.xCenter : pointPosition.x, // value not used in dataset scale, but we want a consistent API between scales
                            y: reset ? scale.yCenter : pointPosition.y,

                            // Appearance
                            tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, me.chart.options.elements.line.tension),
                            radius: custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),
                            backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),
                            borderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),
                            borderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),
                            pointStyle: custom.pointStyle ? custom.pointStyle : helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),

                            // Tooltip
                            hitRadius: custom.hitRadius ? custom.hitRadius : helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointElementOptions.hitRadius)
                        }
                    });

                    point._model.skip = custom.skip ? custom.skip : (isNaN(point._model.x) || isNaN(point._model.y));
                },
                updateBezierControlPoints: function() {
                    var chartArea = this.chart.chartArea;
                    var meta = this.getMeta();

                    helpers.each(meta.data, function(point, index) {
                        var model = point._model;
                        var controlPoints = helpers.splineCurve(
                            helpers.previousItem(meta.data, index, true)._model,
                            model,
                            helpers.nextItem(meta.data, index, true)._model,
                            model.tension
                        );

                        // Prevent the bezier going outside of the bounds of the graph
                        model.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);
                        model.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);

                        model.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);
                        model.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top);

                        // Now pivot the point for animation
                        point.pivot();
                    });
                },

                setHoverStyle: function(point) {
                    // Point
                    var dataset = this.chart.data.datasets[point._datasetIndex];
                    var custom = point.custom || {};
                    var index = point._index;
                    var model = point._model;

                    model.radius = custom.hoverRadius ? custom.hoverRadius : helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);
                    model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));
                    model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));
                    model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);
                },

                removeHoverStyle: function(point) {
                    var dataset = this.chart.data.datasets[point._datasetIndex];
                    var custom = point.custom || {};
                    var index = point._index;
                    var model = point._model;
                    var pointElementOptions = this.chart.options.elements.point;

                    model.radius = custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius);
                    model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor);
                    model.borderColor = custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor);
                    model.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth);
                }
            });
        };

    },{"25":25,"40":40,"45":45}],21:[function(require,module,exports){
        'use strict';

        var defaults = require(25);

        defaults._set('scatter', {
            hover: {
                mode: 'single'
            },

            scales: {
                xAxes: [{
                    id: 'x-axis-1',    // need an ID so datasets can reference the scale
                    type: 'linear',    // scatter should not use a category axis
                    position: 'bottom'
                }],
                yAxes: [{
                    id: 'y-axis-1',
                    type: 'linear',
                    position: 'left'
                }]
            },

            showLines: false,

            tooltips: {
                callbacks: {
                    title: function() {
                        return '';     // doesn't make sense for scatter since data are formatted as a point
                    },
                    label: function(item) {
                        return '(' + item.xLabel + ', ' + item.yLabel + ')';
                    }
                }
            }
        });

        module.exports = function(Chart) {

            // Scatter charts use line controllers
            Chart.controllers.scatter = Chart.controllers.line;

        };

    },{"25":25}],22:[function(require,module,exports){
        /* global window: false */
        'use strict';

        var defaults = require(25);
        var Element = require(26);
        var helpers = require(45);

        defaults._set('global', {
            animation: {
                duration: 1000,
                easing: 'easeOutQuart',
                onProgress: helpers.noop,
                onComplete: helpers.noop
            }
        });

        module.exports = function(Chart) {

            Chart.Animation = Element.extend({
                chart: null, // the animation associated chart instance
                currentStep: 0, // the current animation step
                numSteps: 60, // default number of steps
                easing: '', // the easing to use for this animation
                render: null, // render function used by the animation service

                onAnimationProgress: null, // user specified callback to fire on each step of the animation
                onAnimationComplete: null, // user specified callback to fire when the animation finishes
            });

            Chart.animationService = {
                frameDuration: 17,
                animations: [],
                dropFrames: 0,
                request: null,

                /**
                 * @param {Chart} chart - The chart to animate.
                 * @param {Chart.Animation} animation - The animation that we will animate.
                 * @param {Number} duration - The animation duration in ms.
                 * @param {Boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions
                 */
                addAnimation: function(chart, animation, duration, lazy) {
                    var animations = this.animations;
                    var i, ilen;

                    animation.chart = chart;

                    if (!lazy) {
                        chart.animating = true;
                    }

                    for (i = 0, ilen = animations.length; i < ilen; ++i) {
                        if (animations[i].chart === chart) {
                            animations[i] = animation;
                            return;
                        }
                    }

                    animations.push(animation);

                    // If there are no animations queued, manually kickstart a digest, for lack of a better word
                    if (animations.length === 1) {
                        this.requestAnimationFrame();
                    }
                },

                cancelAnimation: function(chart) {
                    var index = helpers.findIndex(this.animations, function(animation) {
                        return animation.chart === chart;
                    });

                    if (index !== -1) {
                        this.animations.splice(index, 1);
                        chart.animating = false;
                    }
                },

                requestAnimationFrame: function() {
                    var me = this;
                    if (me.request === null) {
                        // Skip animation frame requests until the active one is executed.
                        // This can happen when processing mouse events, e.g. 'mousemove'
                        // and 'mouseout' events will trigger multiple renders.
                        me.request = helpers.requestAnimFrame.call(window, function() {
                            me.request = null;
                            me.startDigest();
                        });
                    }
                },

                /**
                 * @private
                 */
                startDigest: function() {
                    var me = this;
                    var startTime = Date.now();
                    var framesToDrop = 0;

                    if (me.dropFrames > 1) {
                        framesToDrop = Math.floor(me.dropFrames);
                        me.dropFrames = me.dropFrames % 1;
                    }

                    me.advance(1 + framesToDrop);

                    var endTime = Date.now();

                    me.dropFrames += (endTime - startTime) / me.frameDuration;

                    // Do we have more stuff to animate?
                    if (me.animations.length > 0) {
                        me.requestAnimationFrame();
                    }
                },

                /**
                 * @private
                 */
                advance: function(count) {
                    var animations = this.animations;
                    var animation, chart;
                    var i = 0;

                    while (i < animations.length) {
                        animation = animations[i];
                        chart = animation.chart;

                        animation.currentStep = (animation.currentStep || 0) + count;
                        animation.currentStep = Math.min(animation.currentStep, animation.numSteps);

                        helpers.callback(animation.render, [chart, animation], chart);
                        helpers.callback(animation.onAnimationProgress, [animation], chart);

                        if (animation.currentStep >= animation.numSteps) {
                            helpers.callback(animation.onAnimationComplete, [animation], chart);
                            chart.animating = false;
                            animations.splice(i, 1);
                        } else {
                            ++i;
                        }
                    }
                }
            };

            /**
             * Provided for backward compatibility, use Chart.Animation instead
             * @prop Chart.Animation#animationObject
             * @deprecated since version 2.6.0
             * @todo remove at version 3
             */
            Object.defineProperty(Chart.Animation.prototype, 'animationObject', {
                get: function() {
                    return this;
                }
            });

            /**
             * Provided for backward compatibility, use Chart.Animation#chart instead
             * @prop Chart.Animation#chartInstance
             * @deprecated since version 2.6.0
             * @todo remove at version 3
             */
            Object.defineProperty(Chart.Animation.prototype, 'chartInstance', {
                get: function() {
                    return this.chart;
                },
                set: function(value) {
                    this.chart = value;
                }
            });

        };

    },{"25":25,"26":26,"45":45}],23:[function(require,module,exports){
        'use strict';

        var defaults = require(25);
        var helpers = require(45);
        var Interaction = require(28);
        var platform = require(48);

        module.exports = function(Chart) {
            var plugins = Chart.plugins;

            // Create a dictionary of chart types, to allow for extension of existing types
            Chart.types = {};

            // Store a reference to each instance - allowing us to globally resize chart instances on window resize.
            // Destroy method on the chart will remove the instance of the chart from this reference.
            Chart.instances = {};

            // Controllers available for dataset visualization eg. bar, line, slice, etc.
            Chart.controllers = {};

            /**
             * Initializes the given config with global and chart default values.
             */
            function initConfig(config) {
                config = config || {};

                // Do NOT use configMerge() for the data object because this method merges arrays
                // and so would change references to labels and datasets, preventing data updates.
                var data = config.data = config.data || {};
                data.datasets = data.datasets || [];
                data.labels = data.labels || [];

                config.options = helpers.configMerge(
                    defaults.global,
                    defaults[config.type],
                    config.options || {});

                return config;
            }

            /**
             * Updates the config of the chart
             * @param chart {Chart} chart to update the options for
             */
            function updateConfig(chart) {
                var newOptions = chart.options;

                // Update Scale(s) with options
                if (newOptions.scale) {
                    chart.scale.options = newOptions.scale;
                } else if (newOptions.scales) {
                    newOptions.scales.xAxes.concat(newOptions.scales.yAxes).forEach(function(scaleOptions) {
                        chart.scales[scaleOptions.id].options = scaleOptions;
                    });
                }

                // Tooltip
                chart.tooltip._options = newOptions.tooltips;
            }

            function positionIsHorizontal(position) {
                return position === 'top' || position === 'bottom';
            }

            helpers.extend(Chart.prototype, /** @lends Chart */ {
                /**
                 * @private
                 */
                construct: function(item, config) {
                    var me = this;

                    config = initConfig(config);

                    var context = platform.acquireContext(item, config);
                    var canvas = context && context.canvas;
                    var height = canvas && canvas.height;
                    var width = canvas && canvas.width;

                    me.id = helpers.uid();
                    me.ctx = context;
                    me.canvas = canvas;
                    me.config = config;
                    me.width = width;
                    me.height = height;
                    me.aspectRatio = height ? width / height : null;
                    me.options = config.options;
                    me._bufferedRender = false;

                    /**
                     * Provided for backward compatibility, Chart and Chart.Controller have been merged,
                     * the "instance" still need to be defined since it might be called from plugins.
                     * @prop Chart#chart
                     * @deprecated since version 2.6.0
                     * @todo remove at version 3
                     * @private
                     */
                    me.chart = me;
                    me.controller = me; // chart.chart.controller #inception

                    // Add the chart instance to the global namespace
                    Chart.instances[me.id] = me;

                    // Define alias to the config data: `chart.data === chart.config.data`
                    Object.defineProperty(me, 'data', {
                        get: function() {
                            return me.config.data;
                        },
                        set: function(value) {
                            me.config.data = value;
                        }
                    });

                    if (!context || !canvas) {
                        // The given item is not a compatible context2d element, let's return before finalizing
                        // the chart initialization but after setting basic chart / controller properties that
                        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);
                        // https://github.com/chartjs/Chart.js/issues/2807
                        console.error("Failed to create chart: can't acquire context from the given item");
                        return;
                    }

                    me.initialize();
                    me.update();
                },

                /**
                 * @private
                 */
                initialize: function() {
                    var me = this;

                    // Before init plugin notification
                    plugins.notify(me, 'beforeInit');

                    helpers.retinaScale(me, me.options.devicePixelRatio);

                    me.bindEvents();

                    if (me.options.responsive) {
                        // Initial resize before chart draws (must be silent to preserve initial animations).
                        me.resize(true);
                    }

                    // Make sure scales have IDs and are built before we build any controllers.
                    me.ensureScalesHaveIDs();
                    me.buildScales();
                    me.initToolTip();

                    // After init plugin notification
                    plugins.notify(me, 'afterInit');

                    return me;
                },

                clear: function() {
                    helpers.canvas.clear(this);
                    return this;
                },

                stop: function() {
                    // Stops any current animation loop occurring
                    Chart.animationService.cancelAnimation(this);
                    return this;
                },

                resize: function(silent) {
                    var me = this;
                    var options = me.options;
                    var canvas = me.canvas;
                    var aspectRatio = (options.maintainAspectRatio && me.aspectRatio) || null;

                    // the canvas render width and height will be casted to integers so make sure that
                    // the canvas display style uses the same integer values to avoid blurring effect.

                    // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collased
                    var newWidth = Math.max(0, Math.floor(helpers.getMaximumWidth(canvas)));
                    var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas)));

                    if (me.width === newWidth && me.height === newHeight) {
                        return;
                    }

                    canvas.width = me.width = newWidth;
                    canvas.height = me.height = newHeight;
                    canvas.style.width = newWidth + 'px';
                    canvas.style.height = newHeight + 'px';

                    helpers.retinaScale(me, options.devicePixelRatio);

                    if (!silent) {
                        // Notify any plugins about the resize
                        var newSize = {width: newWidth, height: newHeight};
                        plugins.notify(me, 'resize', [newSize]);

                        // Notify of resize
                        if (me.options.onResize) {
                            me.options.onResize(me, newSize);
                        }

                        me.stop();
                        me.update(me.options.responsiveAnimationDuration);
                    }
                },

                ensureScalesHaveIDs: function() {
                    var options = this.options;
                    var scalesOptions = options.scales || {};
                    var scaleOptions = options.scale;

                    helpers.each(scalesOptions.xAxes, function(xAxisOptions, index) {
                        xAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);
                    });

                    helpers.each(scalesOptions.yAxes, function(yAxisOptions, index) {
                        yAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);
                    });

                    if (scaleOptions) {
                        scaleOptions.id = scaleOptions.id || 'scale';
                    }
                },

                /**
                 * Builds a map of scale ID to scale object for future lookup.
                 */
                buildScales: function() {
                    var me = this;
                    var options = me.options;
                    var scales = me.scales = {};
                    var items = [];

                    if (options.scales) {
                        items = items.concat(
                            (options.scales.xAxes || []).map(function(xAxisOptions) {
                                return {options: xAxisOptions, dtype: 'category', dposition: 'bottom'};
                            }),
                            (options.scales.yAxes || []).map(function(yAxisOptions) {
                                return {options: yAxisOptions, dtype: 'linear', dposition: 'left'};
                            })
                        );
                    }

                    if (options.scale) {
                        items.push({
                            options: options.scale,
                            dtype: 'radialLinear',
                            isDefault: true,
                            dposition: 'chartArea'
                        });
                    }

                    helpers.each(items, function(item) {
                        var scaleOptions = item.options;
                        var scaleType = helpers.valueOrDefault(scaleOptions.type, item.dtype);
                        var scaleClass = Chart.scaleService.getScaleConstructor(scaleType);
                        if (!scaleClass) {
                            return;
                        }

                        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {
                            scaleOptions.position = item.dposition;
                        }

                        var scale = new scaleClass({
                            id: scaleOptions.id,
                            options: scaleOptions,
                            ctx: me.ctx,
                            chart: me
                        });

                        scales[scale.id] = scale;
                        scale.mergeTicksOptions();

                        // TODO(SB): I think we should be able to remove this custom case (options.scale)
                        // and consider it as a regular scale part of the "scales"" map only! This would
                        // make the logic easier and remove some useless? custom code.
                        if (item.isDefault) {
                            me.scale = scale;
                        }
                    });

                    Chart.scaleService.addScalesToLayout(this);
                },

                buildOrUpdateControllers: function() {
                    var me = this;
                    var types = [];
                    var newControllers = [];

                    helpers.each(me.data.datasets, function(dataset, datasetIndex) {
                        var meta = me.getDatasetMeta(datasetIndex);
                        var type = dataset.type || me.config.type;

                        if (meta.type && meta.type !== type) {
                            me.destroyDatasetMeta(datasetIndex);
                            meta = me.getDatasetMeta(datasetIndex);
                        }
                        meta.type = type;

                        types.push(meta.type);

                        if (meta.controller) {
                            meta.controller.updateIndex(datasetIndex);
                        } else {
                            var ControllerClass = Chart.controllers[meta.type];
                            if (ControllerClass === undefined) {
                                throw new Error('"' + meta.type + '" is not a chart type.');
                            }

                            meta.controller = new ControllerClass(me, datasetIndex);
                            newControllers.push(meta.controller);
                        }
                    }, me);

                    return newControllers;
                },

                /**
                 * Reset the elements of all datasets
                 * @private
                 */
                resetElements: function() {
                    var me = this;
                    helpers.each(me.data.datasets, function(dataset, datasetIndex) {
                        me.getDatasetMeta(datasetIndex).controller.reset();
                    }, me);
                },

                /**
                 * Resets the chart back to it's state before the initial animation
                 */
                reset: function() {
                    this.resetElements();
                    this.tooltip.initialize();
                },

                update: function(config) {
                    var me = this;

                    if (!config || typeof config !== 'object') {
                        // backwards compatibility
                        config = {
                            duration: config,
                            lazy: arguments[1]
                        };
                    }

                    updateConfig(me);

                    if (plugins.notify(me, 'beforeUpdate') === false) {
                        return;
                    }

                    // In case the entire data object changed
                    me.tooltip._data = me.data;

                    // Make sure dataset controllers are updated and new controllers are reset
                    var newControllers = me.buildOrUpdateControllers();

                    // Make sure all dataset controllers have correct meta data counts
                    helpers.each(me.data.datasets, function(dataset, datasetIndex) {
                        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();
                    }, me);

                    me.updateLayout();

                    // Can only reset the new controllers after the scales have been updated
                    helpers.each(newControllers, function(controller) {
                        controller.reset();
                    });

                    me.updateDatasets();

                    // Need to reset tooltip in case it is displayed with elements that are removed
                    // after update.
                    me.tooltip.initialize();

                    // Last active contains items that were previously in the tooltip.
                    // When we reset the tooltip, we need to clear it
                    me.lastActive = [];

                    // Do this before render so that any plugins that need final scale updates can use it
                    plugins.notify(me, 'afterUpdate');

                    if (me._bufferedRender) {
                        me._bufferedRequest = {
                            duration: config.duration,
                            easing: config.easing,
                            lazy: config.lazy
                        };
                    } else {
                        me.render(config);
                    }
                },

                /**
                 * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`
                 * hook, in which case, plugins will not be called on `afterLayout`.
                 * @private
                 */
                updateLayout: function() {
                    var me = this;

                    if (plugins.notify(me, 'beforeLayout') === false) {
                        return;
                    }

                    Chart.layoutService.update(this, this.width, this.height);

                    /**
                     * Provided for backward compatibility, use `afterLayout` instead.
                     * @method IPlugin#afterScaleUpdate
                     * @deprecated since version 2.5.0
                     * @todo remove at version 3
                     * @private
                     */
                    plugins.notify(me, 'afterScaleUpdate');
                    plugins.notify(me, 'afterLayout');
                },

                /**
                 * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`
                 * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.
                 * @private
                 */
                updateDatasets: function() {
                    var me = this;

                    if (plugins.notify(me, 'beforeDatasetsUpdate') === false) {
                        return;
                    }

                    for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {
                        me.updateDataset(i);
                    }

                    plugins.notify(me, 'afterDatasetsUpdate');
                },

                /**
                 * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`
                 * hook, in which case, plugins will not be called on `afterDatasetUpdate`.
                 * @private
                 */
                updateDataset: function(index) {
                    var me = this;
                    var meta = me.getDatasetMeta(index);
                    var args = {
                        meta: meta,
                        index: index
                    };

                    if (plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {
                        return;
                    }

                    meta.controller.update();

                    plugins.notify(me, 'afterDatasetUpdate', [args]);
                },

                render: function(config) {
                    var me = this;

                    if (!config || typeof config !== 'object') {
                        // backwards compatibility
                        config = {
                            duration: config,
                            lazy: arguments[1]
                        };
                    }

                    var duration = config.duration;
                    var lazy = config.lazy;

                    if (plugins.notify(me, 'beforeRender') === false) {
                        return;
                    }

                    var animationOptions = me.options.animation;
                    var onComplete = function(animation) {
                        plugins.notify(me, 'afterRender');
                        helpers.callback(animationOptions && animationOptions.onComplete, [animation], me);
                    };

                    if (animationOptions && ((typeof duration !== 'undefined' && duration !== 0) || (typeof duration === 'undefined' && animationOptions.duration !== 0))) {
                        var animation = new Chart.Animation({
                            numSteps: (duration || animationOptions.duration) / 16.66, // 60 fps
                            easing: config.easing || animationOptions.easing,

                            render: function(chart, animationObject) {
                                var easingFunction = helpers.easing.effects[animationObject.easing];
                                var currentStep = animationObject.currentStep;
                                var stepDecimal = currentStep / animationObject.numSteps;

                                chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);
                            },

                            onAnimationProgress: animationOptions.onProgress,
                            onAnimationComplete: onComplete
                        });

                        Chart.animationService.addAnimation(me, animation, duration, lazy);
                    } else {
                        me.draw();

                        // See https://github.com/chartjs/Chart.js/issues/3781
                        onComplete(new Chart.Animation({numSteps: 0, chart: me}));
                    }

                    return me;
                },

                draw: function(easingValue) {
                    var me = this;

                    me.clear();

                    if (helpers.isNullOrUndef(easingValue)) {
                        easingValue = 1;
                    }

                    me.transition(easingValue);

                    if (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {
                        return;
                    }

                    // Draw all the scales
                    helpers.each(me.boxes, function(box) {
                        box.draw(me.chartArea);
                    }, me);

                    if (me.scale) {
                        me.scale.draw();
                    }

                    me.drawDatasets(easingValue);
                    me._drawTooltip(easingValue);

                    plugins.notify(me, 'afterDraw', [easingValue]);
                },

                /**
                 * @private
                 */
                transition: function(easingValue) {
                    var me = this;

                    for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {
                        if (me.isDatasetVisible(i)) {
                            me.getDatasetMeta(i).controller.transition(easingValue);
                        }
                    }

                    me.tooltip.transition(easingValue);
                },

                /**
                 * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`
                 * hook, in which case, plugins will not be called on `afterDatasetsDraw`.
                 * @private
                 */
                drawDatasets: function(easingValue) {
                    var me = this;

                    if (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {
                        return;
                    }

                    // Draw datasets reversed to support proper line stacking
                    for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {
                        if (me.isDatasetVisible(i)) {
                            me.drawDataset(i, easingValue);
                        }
                    }

                    plugins.notify(me, 'afterDatasetsDraw', [easingValue]);
                },

                /**
                 * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`
                 * hook, in which case, plugins will not be called on `afterDatasetDraw`.
                 * @private
                 */
                drawDataset: function(index, easingValue) {
                    var me = this;
                    var meta = me.getDatasetMeta(index);
                    var args = {
                        meta: meta,
                        index: index,
                        easingValue: easingValue
                    };

                    if (plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {
                        return;
                    }

                    meta.controller.draw(easingValue);

                    plugins.notify(me, 'afterDatasetDraw', [args]);
                },

                /**
                 * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`
                 * hook, in which case, plugins will not be called on `afterTooltipDraw`.
                 * @private
                 */
                _drawTooltip: function(easingValue) {
                    var me = this;
                    var tooltip = me.tooltip;
                    var args = {
                        tooltip: tooltip,
                        easingValue: easingValue
                    };

                    if (plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {
                        return;
                    }

                    tooltip.draw();

                    plugins.notify(me, 'afterTooltipDraw', [args]);
                },

                // Get the single element that was clicked on
                // @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw
                getElementAtEvent: function(e) {
                    return Interaction.modes.single(this, e);
                },

                getElementsAtEvent: function(e) {
                    return Interaction.modes.label(this, e, {intersect: true});
                },

                getElementsAtXAxis: function(e) {
                    return Interaction.modes['x-axis'](this, e, {intersect: true});
                },

                getElementsAtEventForMode: function(e, mode, options) {
                    var method = Interaction.modes[mode];
                    if (typeof method === 'function') {
                        return method(this, e, options);
                    }

                    return [];
                },

                getDatasetAtEvent: function(e) {
                    return Interaction.modes.dataset(this, e, {intersect: true});
                },

                getDatasetMeta: function(datasetIndex) {
                    var me = this;
                    var dataset = me.data.datasets[datasetIndex];
                    if (!dataset._meta) {
                        dataset._meta = {};
                    }

                    var meta = dataset._meta[me.id];
                    if (!meta) {
                        meta = dataset._meta[me.id] = {
                            type: null,
                            data: [],
                            dataset: null,
                            controller: null,
                            hidden: null,			// See isDatasetVisible() comment
                            xAxisID: null,
                            yAxisID: null
                        };
                    }

                    return meta;
                },

                getVisibleDatasetCount: function() {
                    var count = 0;
                    for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {
                        if (this.isDatasetVisible(i)) {
                            count++;
                        }
                    }
                    return count;
                },

                isDatasetVisible: function(datasetIndex) {
                    var meta = this.getDatasetMeta(datasetIndex);

                    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,
                    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.
                    return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;
                },

                generateLegend: function() {
                    return this.options.legendCallback(this);
                },

                /**
                 * @private
                 */
                destroyDatasetMeta: function(datasetIndex) {
                    var id = this.id;
                    var dataset = this.data.datasets[datasetIndex];
                    var meta = dataset._meta && dataset._meta[id];

                    if (meta) {
                        meta.controller.destroy();
                        delete dataset._meta[id];
                    }
                },

                destroy: function() {
                    var me = this;
                    var canvas = me.canvas;
                    var i, ilen;

                    me.stop();

                    // dataset controllers need to cleanup associated data
                    for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {
                        me.destroyDatasetMeta(i);
                    }

                    if (canvas) {
                        me.unbindEvents();
                        helpers.canvas.clear(me);
                        platform.releaseContext(me.ctx);
                        me.canvas = null;
                        me.ctx = null;
                    }

                    plugins.notify(me, 'destroy');

                    delete Chart.instances[me.id];
                },

                toBase64Image: function() {
                    return this.canvas.toDataURL.apply(this.canvas, arguments);
                },

                initToolTip: function() {
                    var me = this;
                    me.tooltip = new Chart.Tooltip({
                        _chart: me,
                        _chartInstance: me, // deprecated, backward compatibility
                        _data: me.data,
                        _options: me.options.tooltips
                    }, me);
                },

                /**
                 * @private
                 */
                bindEvents: function() {
                    var me = this;
                    var listeners = me._listeners = {};
                    var listener = function() {
                        me.eventHandler.apply(me, arguments);
                    };

                    helpers.each(me.options.events, function(type) {
                        platform.addEventListener(me, type, listener);
                        listeners[type] = listener;
                    });

                    // Elements used to detect size change should not be injected for non responsive charts.
                    // See https://github.com/chartjs/Chart.js/issues/2210
                    if (me.options.responsive) {
                        listener = function() {
                            me.resize();
                        };

                        platform.addEventListener(me, 'resize', listener);
                        listeners.resize = listener;
                    }
                },

                /**
                 * @private
                 */
                unbindEvents: function() {
                    var me = this;
                    var listeners = me._listeners;
                    if (!listeners) {
                        return;
                    }

                    delete me._listeners;
                    helpers.each(listeners, function(listener, type) {
                        platform.removeEventListener(me, type, listener);
                    });
                },

                updateHoverStyle: function(elements, mode, enabled) {
                    var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';
                    var element, i, ilen;

                    for (i = 0, ilen = elements.length; i < ilen; ++i) {
                        element = elements[i];
                        if (element) {
                            this.getDatasetMeta(element._datasetIndex).controller[method](element);
                        }
                    }
                },

                /**
                 * @private
                 */
                eventHandler: function(e) {
                    var me = this;
                    var tooltip = me.tooltip;

                    if (plugins.notify(me, 'beforeEvent', [e]) === false) {
                        return;
                    }

                    // Buffer any update calls so that renders do not occur
                    me._bufferedRender = true;
                    me._bufferedRequest = null;

                    var changed = me.handleEvent(e);
                    changed |= tooltip && tooltip.handleEvent(e);

                    plugins.notify(me, 'afterEvent', [e]);

                    var bufferedRequest = me._bufferedRequest;
                    if (bufferedRequest) {
                        // If we have an update that was triggered, we need to do a normal render
                        me.render(bufferedRequest);
                    } else if (changed && !me.animating) {
                        // If entering, leaving, or changing elements, animate the change via pivot
                        me.stop();

                        // We only need to render at this point. Updating will cause scales to be
                        // recomputed generating flicker & using more memory than necessary.
                        me.render(me.options.hover.animationDuration, true);
                    }

                    me._bufferedRender = false;
                    me._bufferedRequest = null;

                    return me;
                },

                /**
                 * Handle an event
                 * @private
                 * @param {IEvent} event the event to handle
                 * @return {Boolean} true if the chart needs to re-render
                 */
                handleEvent: function(e) {
                    var me = this;
                    var options = me.options || {};
                    var hoverOptions = options.hover;
                    var changed = false;

                    me.lastActive = me.lastActive || [];

                    // Find Active Elements for hover and tooltips
                    if (e.type === 'mouseout') {
                        me.active = [];
                    } else {
                        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);
                    }

                    // Invoke onHover hook
                    // Need to call with native event here to not break backwards compatibility
                    helpers.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);

                    if (e.type === 'mouseup' || e.type === 'click') {
                        if (options.onClick) {
                            // Use e.native here for backwards compatibility
                            options.onClick.call(me, e.native, me.active);
                        }
                    }

                    // Remove styling for last active (even if it may still be active)
                    if (me.lastActive.length) {
                        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);
                    }

                    // Built in hover styling
                    if (me.active.length && hoverOptions.mode) {
                        me.updateHoverStyle(me.active, hoverOptions.mode, true);
                    }

                    changed = !helpers.arrayEquals(me.active, me.lastActive);

                    // Remember Last Actives
                    me.lastActive = me.active;

                    return changed;
                }
            });

            /**
             * Provided for backward compatibility, use Chart instead.
             * @class Chart.Controller
             * @deprecated since version 2.6.0
             * @todo remove at version 3
             * @private
             */
            Chart.Controller = Chart;
        };

    },{"25":25,"28":28,"45":45,"48":48}],24:[function(require,module,exports){
        'use strict';

        var helpers = require(45);

        module.exports = function(Chart) {

            var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];

            /**
             * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',
             * 'unshift') and notify the listener AFTER the array has been altered. Listeners are
             * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.
             */
            function listenArrayEvents(array, listener) {
                if (array._chartjs) {
                    array._chartjs.listeners.push(listener);
                    return;
                }

                Object.defineProperty(array, '_chartjs', {
                    configurable: true,
                    enumerable: false,
                    value: {
                        listeners: [listener]
                    }
                });

                arrayEvents.forEach(function(key) {
                    var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);
                    var base = array[key];

                    Object.defineProperty(array, key, {
                        configurable: true,
                        enumerable: false,
                        value: function() {
                            var args = Array.prototype.slice.call(arguments);
                            var res = base.apply(this, args);

                            helpers.each(array._chartjs.listeners, function(object) {
                                if (typeof object[method] === 'function') {
                                    object[method].apply(object, args);
                                }
                            });

                            return res;
                        }
                    });
                });
            }

            /**
             * Removes the given array event listener and cleanup extra attached properties (such as
             * the _chartjs stub and overridden methods) if array doesn't have any more listeners.
             */
            function unlistenArrayEvents(array, listener) {
                var stub = array._chartjs;
                if (!stub) {
                    return;
                }

                var listeners = stub.listeners;
                var index = listeners.indexOf(listener);
                if (index !== -1) {
                    listeners.splice(index, 1);
                }

                if (listeners.length > 0) {
                    return;
                }

                arrayEvents.forEach(function(key) {
                    delete array[key];
                });

                delete array._chartjs;
            }

            // Base class for all dataset controllers (line, bar, etc)
            Chart.DatasetController = function(chart, datasetIndex) {
                this.initialize(chart, datasetIndex);
            };

            helpers.extend(Chart.DatasetController.prototype, {

                /**
                 * Element type used to generate a meta dataset (e.g. Chart.element.Line).
                 * @type {Chart.core.element}
                 */
                datasetElementType: null,

                /**
                 * Element type used to generate a meta data (e.g. Chart.element.Point).
                 * @type {Chart.core.element}
                 */
                dataElementType: null,

                initialize: function(chart, datasetIndex) {
                    var me = this;
                    me.chart = chart;
                    me.index = datasetIndex;
                    me.linkScales();
                    me.addElements();
                },

                updateIndex: function(datasetIndex) {
                    this.index = datasetIndex;
                },

                linkScales: function() {
                    var me = this;
                    var meta = me.getMeta();
                    var dataset = me.getDataset();

                    if (meta.xAxisID === null) {
                        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;
                    }
                    if (meta.yAxisID === null) {
                        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;
                    }
                },

                getDataset: function() {
                    return this.chart.data.datasets[this.index];
                },

                getMeta: function() {
                    return this.chart.getDatasetMeta(this.index);
                },

                getScaleForId: function(scaleID) {
                    return this.chart.scales[scaleID];
                },

                reset: function() {
                    this.update(true);
                },

                /**
                 * @private
                 */
                destroy: function() {
                    if (this._data) {
                        unlistenArrayEvents(this._data, this);
                    }
                },

                createMetaDataset: function() {
                    var me = this;
                    var type = me.datasetElementType;
                    return type && new type({
                        _chart: me.chart,
                        _datasetIndex: me.index
                    });
                },

                createMetaData: function(index) {
                    var me = this;
                    var type = me.dataElementType;
                    return type && new type({
                        _chart: me.chart,
                        _datasetIndex: me.index,
                        _index: index
                    });
                },

                addElements: function() {
                    var me = this;
                    var meta = me.getMeta();
                    var data = me.getDataset().data || [];
                    var metaData = meta.data;
                    var i, ilen;

                    for (i = 0, ilen = data.length; i < ilen; ++i) {
                        metaData[i] = metaData[i] || me.createMetaData(i);
                    }

                    meta.dataset = meta.dataset || me.createMetaDataset();
                },

                addElementAndReset: function(index) {
                    var element = this.createMetaData(index);
                    this.getMeta().data.splice(index, 0, element);
                    this.updateElement(element, index, true);
                },

                buildOrUpdateElements: function() {
                    var me = this;
                    var dataset = me.getDataset();
                    var data = dataset.data || (dataset.data = []);

                    // In order to correctly handle data addition/deletion animation (an thus simulate
                    // real-time charts), we need to monitor these data modifications and synchronize
                    // the internal meta data accordingly.
                    if (me._data !== data) {
                        if (me._data) {
                            // This case happens when the user replaced the data array instance.
                            unlistenArrayEvents(me._data, me);
                        }

                        listenArrayEvents(data, me);
                        me._data = data;
                    }

                    // Re-sync meta data in case the user replaced the data array or if we missed
                    // any updates and so make sure that we handle number of datapoints changing.
                    me.resyncElements();
                },

                update: helpers.noop,

                transition: function(easingValue) {
                    var meta = this.getMeta();
                    var elements = meta.data || [];
                    var ilen = elements.length;
                    var i = 0;

                    for (; i < ilen; ++i) {
                        elements[i].transition(easingValue);
                    }

                    if (meta.dataset) {
                        meta.dataset.transition(easingValue);
                    }
                },

                draw: function() {
                    var meta = this.getMeta();
                    var elements = meta.data || [];
                    var ilen = elements.length;
                    var i = 0;

                    if (meta.dataset) {
                        meta.dataset.draw();
                    }

                    for (; i < ilen; ++i) {
                        elements[i].draw();
                    }
                },

                removeHoverStyle: function(element, elementOpts) {
                    var dataset = this.chart.data.datasets[element._datasetIndex];
                    var index = element._index;
                    var custom = element.custom || {};
                    var valueOrDefault = helpers.valueAtIndexOrDefault;
                    var model = element._model;

                    model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);
                    model.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);
                    model.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);
                },

                setHoverStyle: function(element) {
                    var dataset = this.chart.data.datasets[element._datasetIndex];
                    var index = element._index;
                    var custom = element.custom || {};
                    var valueOrDefault = helpers.valueAtIndexOrDefault;
                    var getHoverColor = helpers.getHoverColor;
                    var model = element._model;

                    model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));
                    model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));
                    model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);
                },

                /**
                 * @private
                 */
                resyncElements: function() {
                    var me = this;
                    var meta = me.getMeta();
                    var data = me.getDataset().data;
                    var numMeta = meta.data.length;
                    var numData = data.length;

                    if (numData < numMeta) {
                        meta.data.splice(numData, numMeta - numData);
                    } else if (numData > numMeta) {
                        me.insertElements(numMeta, numData - numMeta);
                    }
                },

                /**
                 * @private
                 */
                insertElements: function(start, count) {
                    for (var i = 0; i < count; ++i) {
                        this.addElementAndReset(start + i);
                    }
                },

                /**
                 * @private
                 */
                onDataPush: function() {
                    this.insertElements(this.getDataset().data.length - 1, arguments.length);
                },

                /**
                 * @private
                 */
                onDataPop: function() {
                    this.getMeta().data.pop();
                },

                /**
                 * @private
                 */
                onDataShift: function() {
                    this.getMeta().data.shift();
                },

                /**
                 * @private
                 */
                onDataSplice: function(start, count) {
                    this.getMeta().data.splice(start, count);
                    this.insertElements(start, arguments.length - 2);
                },

                /**
                 * @private
                 */
                onDataUnshift: function() {
                    this.insertElements(0, arguments.length);
                }
            });

            Chart.DatasetController.extend = helpers.inherits;
        };

    },{"45":45}],25:[function(require,module,exports){
        'use strict';

        var helpers = require(45);

        module.exports = {
            /**
             * @private
             */
            _set: function(scope, values) {
                return helpers.merge(this[scope] || (this[scope] = {}), values);
            }
        };

    },{"45":45}],26:[function(require,module,exports){
        'use strict';

        var color = require(3);
        var helpers = require(45);

        function interpolate(start, view, model, ease) {
            var keys = Object.keys(model);
            var i, ilen, key, actual, origin, target, type, c0, c1;

            for (i = 0, ilen = keys.length; i < ilen; ++i) {
                key = keys[i];

                target = model[key];

                // if a value is added to the model after pivot() has been called, the view
                // doesn't contain it, so let's initialize the view to the target value.
                if (!view.hasOwnProperty(key)) {
                    view[key] = target;
                }

                actual = view[key];

                if (actual === target || key[0] === '_') {
                    continue;
                }

                if (!start.hasOwnProperty(key)) {
                    start[key] = actual;
                }

                origin = start[key];

                type = typeof target;

                if (type === typeof origin) {
                    if (type === 'string') {
                        c0 = color(origin);
                        if (c0.valid) {
                            c1 = color(target);
                            if (c1.valid) {
                                view[key] = c1.mix(c0, ease).rgbString();
                                continue;
                            }
                        }
                    } else if (type === 'number' && isFinite(origin) && isFinite(target)) {
                        view[key] = origin + (target - origin) * ease;
                        continue;
                    }
                }

                view[key] = target;
            }
        }

        var Element = function(configuration) {
            helpers.extend(this, configuration);
            this.initialize.apply(this, arguments);
        };

        helpers.extend(Element.prototype, {

            initialize: function() {
                this.hidden = false;
            },

            pivot: function() {
                var me = this;
                if (!me._view) {
                    me._view = helpers.clone(me._model);
                }
                me._start = {};
                return me;
            },

            transition: function(ease) {
                var me = this;
                var model = me._model;
                var start = me._start;
                var view = me._view;

                // No animation -> No Transition
                if (!model || ease === 1) {
                    me._view = model;
                    me._start = null;
                    return me;
                }

                if (!view) {
                    view = me._view = {};
                }

                if (!start) {
                    start = me._start = {};
                }

                interpolate(start, view, model, ease);

                return me;
            },

            tooltipPosition: function() {
                return {
                    x: this._model.x,
                    y: this._model.y
                };
            },

            hasValue: function() {
                return helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);
            }
        });

        Element.extend = helpers.inherits;

        module.exports = Element;

    },{"3":3,"45":45}],27:[function(require,module,exports){
        /* global window: false */
        /* global document: false */
        'use strict';

        var color = require(3);
        var defaults = require(25);
        var helpers = require(45);

        module.exports = function(Chart) {

            // -- Basic js utility methods

            helpers.configMerge = function(/* objects ... */) {
                return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {
                    merger: function(key, target, source, options) {
                        var tval = target[key] || {};
                        var sval = source[key];

                        if (key === 'scales') {
                            // scale config merging is complex. Add our own function here for that
                            target[key] = helpers.scaleMerge(tval, sval);
                        } else if (key === 'scale') {
                            // used in polar area & radar charts since there is only one scale
                            target[key] = helpers.merge(tval, [Chart.scaleService.getScaleDefaults(sval.type), sval]);
                        } else {
                            helpers._merger(key, target, source, options);
                        }
                    }
                });
            };

            helpers.scaleMerge = function(/* objects ... */) {
                return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {
                    merger: function(key, target, source, options) {
                        if (key === 'xAxes' || key === 'yAxes') {
                            var slen = source[key].length;
                            var i, type, scale;

                            if (!target[key]) {
                                target[key] = [];
                            }

                            for (i = 0; i < slen; ++i) {
                                scale = source[key][i];
                                type = helpers.valueOrDefault(scale.type, key === 'xAxes' ? 'category' : 'linear');

                                if (i >= target[key].length) {
                                    target[key].push({});
                                }

                                if (!target[key][i].type || (scale.type && scale.type !== target[key][i].type)) {
                                    // new/untyped scale or type changed: let's apply the new defaults
                                    // then merge source scale to correctly overwrite the defaults.
                                    helpers.merge(target[key][i], [Chart.scaleService.getScaleDefaults(type), scale]);
                                } else {
                                    // scales type are the same
                                    helpers.merge(target[key][i], scale);
                                }
                            }
                        } else {
                            helpers._merger(key, target, source, options);
                        }
                    }
                });
            };

            helpers.where = function(collection, filterCallback) {
                if (helpers.isArray(collection) && Array.prototype.filter) {
                    return collection.filter(filterCallback);
                }
                var filtered = [];

                helpers.each(collection, function(item) {
                    if (filterCallback(item)) {
                        filtered.push(item);
                    }
                });

                return filtered;
            };
            helpers.findIndex = Array.prototype.findIndex ?
                function(array, callback, scope) {
                    return array.findIndex(callback, scope);
                } :
                function(array, callback, scope) {
                    scope = scope === undefined ? array : scope;
                    for (var i = 0, ilen = array.length; i < ilen; ++i) {
                        if (callback.call(scope, array[i], i, array)) {
                            return i;
                        }
                    }
                    return -1;
                };
            helpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {
                // Default to start of the array
                if (helpers.isNullOrUndef(startIndex)) {
                    startIndex = -1;
                }
                for (var i = startIndex + 1; i < arrayToSearch.length; i++) {
                    var currentItem = arrayToSearch[i];
                    if (filterCallback(currentItem)) {
                        return currentItem;
                    }
                }
            };
            helpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {
                // Default to end of the array
                if (helpers.isNullOrUndef(startIndex)) {
                    startIndex = arrayToSearch.length;
                }
                for (var i = startIndex - 1; i >= 0; i--) {
                    var currentItem = arrayToSearch[i];
                    if (filterCallback(currentItem)) {
                        return currentItem;
                    }
                }
            };

            // -- Math methods
            helpers.isNumber = function(n) {
                return !isNaN(parseFloat(n)) && isFinite(n);
            };
            helpers.almostEquals = function(x, y, epsilon) {
                return Math.abs(x - y) < epsilon;
            };
            helpers.almostWhole = function(x, epsilon) {
                var rounded = Math.round(x);
                return (((rounded - epsilon) < x) && ((rounded + epsilon) > x));
            };
            helpers.max = function(array) {
                return array.reduce(function(max, value) {
                    if (!isNaN(value)) {
                        return Math.max(max, value);
                    }
                    return max;
                }, Number.NEGATIVE_INFINITY);
            };
            helpers.min = function(array) {
                return array.reduce(function(min, value) {
                    if (!isNaN(value)) {
                        return Math.min(min, value);
                    }
                    return min;
                }, Number.POSITIVE_INFINITY);
            };
            helpers.sign = Math.sign ?
                function(x) {
                    return Math.sign(x);
                } :
                function(x) {
                    x = +x; // convert to a number
                    if (x === 0 || isNaN(x)) {
                        return x;
                    }
                    return x > 0 ? 1 : -1;
                };
            helpers.log10 = Math.log10 ?
                function(x) {
                    return Math.log10(x);
                } :
                function(x) {
                    return Math.log(x) / Math.LN10;
                };
            helpers.toRadians = function(degrees) {
                return degrees * (Math.PI / 180);
            };
            helpers.toDegrees = function(radians) {
                return radians * (180 / Math.PI);
            };
            // Gets the angle from vertical upright to the point about a centre.
            helpers.getAngleFromPoint = function(centrePoint, anglePoint) {
                var distanceFromXCenter = anglePoint.x - centrePoint.x;
                var distanceFromYCenter = anglePoint.y - centrePoint.y;
                var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);

                var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);

                if (angle < (-0.5 * Math.PI)) {
                    angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]
                }

                return {
                    angle: angle,
                    distance: radialDistanceFromCenter
                };
            };
            helpers.distanceBetweenPoints = function(pt1, pt2) {
                return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));
            };
            helpers.aliasPixel = function(pixelWidth) {
                return (pixelWidth % 2 === 0) ? 0 : 0.5;
            };
            helpers.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {
                // Props to Rob Spencer at scaled innovation for his post on splining between points
                // http://scaledinnovation.com/analytics/splines/aboutSplines.html

                // This function must also respect "skipped" points

                var previous = firstPoint.skip ? middlePoint : firstPoint;
                var current = middlePoint;
                var next = afterPoint.skip ? middlePoint : afterPoint;

                var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));
                var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));

                var s01 = d01 / (d01 + d12);
                var s12 = d12 / (d01 + d12);

                // If all points are the same, s01 & s02 will be inf
                s01 = isNaN(s01) ? 0 : s01;
                s12 = isNaN(s12) ? 0 : s12;

                var fa = t * s01; // scaling factor for triangle Ta
                var fb = t * s12;

                return {
                    previous: {
                        x: current.x - fa * (next.x - previous.x),
                        y: current.y - fa * (next.y - previous.y)
                    },
                    next: {
                        x: current.x + fb * (next.x - previous.x),
                        y: current.y + fb * (next.y - previous.y)
                    }
                };
            };
            helpers.EPSILON = Number.EPSILON || 1e-14;
            helpers.splineCurveMonotone = function(points) {
                // This function calculates Bézier control points in a similar way than |splineCurve|,
                // but preserves monotonicity of the provided data and ensures no local extremums are added
                // between the dataset discrete points due to the interpolation.
                // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation

                var pointsWithTangents = (points || []).map(function(point) {
                    return {
                        model: point._model,
                        deltaK: 0,
                        mK: 0
                    };
                });

                // Calculate slopes (deltaK) and initialize tangents (mK)
                var pointsLen = pointsWithTangents.length;
                var i, pointBefore, pointCurrent, pointAfter;
                for (i = 0; i < pointsLen; ++i) {
                    pointCurrent = pointsWithTangents[i];
                    if (pointCurrent.model.skip) {
                        continue;
                    }

                    pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;
                    pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;
                    if (pointAfter && !pointAfter.model.skip) {
                        var slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);

                        // In the case of two points that appear at the same x pixel, slopeDeltaX is 0
                        pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;
                    }

                    if (!pointBefore || pointBefore.model.skip) {
                        pointCurrent.mK = pointCurrent.deltaK;
                    } else if (!pointAfter || pointAfter.model.skip) {
                        pointCurrent.mK = pointBefore.deltaK;
                    } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {
                        pointCurrent.mK = 0;
                    } else {
                        pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;
                    }
                }

                // Adjust tangents to ensure monotonic properties
                var alphaK, betaK, tauK, squaredMagnitude;
                for (i = 0; i < pointsLen - 1; ++i) {
                    pointCurrent = pointsWithTangents[i];
                    pointAfter = pointsWithTangents[i + 1];
                    if (pointCurrent.model.skip || pointAfter.model.skip) {
                        continue;
                    }

                    if (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {
                        pointCurrent.mK = pointAfter.mK = 0;
                        continue;
                    }

                    alphaK = pointCurrent.mK / pointCurrent.deltaK;
                    betaK = pointAfter.mK / pointCurrent.deltaK;
                    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);
                    if (squaredMagnitude <= 9) {
                        continue;
                    }

                    tauK = 3 / Math.sqrt(squaredMagnitude);
                    pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;
                    pointAfter.mK = betaK * tauK * pointCurrent.deltaK;
                }

                // Compute control points
                var deltaX;
                for (i = 0; i < pointsLen; ++i) {
                    pointCurrent = pointsWithTangents[i];
                    if (pointCurrent.model.skip) {
                        continue;
                    }

                    pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;
                    pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;
                    if (pointBefore && !pointBefore.model.skip) {
                        deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;
                        pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;
                        pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;
                    }
                    if (pointAfter && !pointAfter.model.skip) {
                        deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;
                        pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;
                        pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;
                    }
                }
            };
            helpers.nextItem = function(collection, index, loop) {
                if (loop) {
                    return index >= collection.length - 1 ? collection[0] : collection[index + 1];
                }
                return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];
            };
            helpers.previousItem = function(collection, index, loop) {
                if (loop) {
                    return index <= 0 ? collection[collection.length - 1] : collection[index - 1];
                }
                return index <= 0 ? collection[0] : collection[index - 1];
            };
            // Implementation of the nice number algorithm used in determining where axis labels will go
            helpers.niceNum = function(range, round) {
                var exponent = Math.floor(helpers.log10(range));
                var fraction = range / Math.pow(10, exponent);
                var niceFraction;

                if (round) {
                    if (fraction < 1.5) {
                        niceFraction = 1;
                    } else if (fraction < 3) {
                        niceFraction = 2;
                    } else if (fraction < 7) {
                        niceFraction = 5;
                    } else {
                        niceFraction = 10;
                    }
                } else if (fraction <= 1.0) {
                    niceFraction = 1;
                } else if (fraction <= 2) {
                    niceFraction = 2;
                } else if (fraction <= 5) {
                    niceFraction = 5;
                } else {
                    niceFraction = 10;
                }

                return niceFraction * Math.pow(10, exponent);
            };
            // Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/
            helpers.requestAnimFrame = (function() {
                if (typeof window === 'undefined') {
                    return function(callback) {
                        callback();
                    };
                }
                return window.requestAnimationFrame ||
                    window.webkitRequestAnimationFrame ||
                    window.mozRequestAnimationFrame ||
                    window.oRequestAnimationFrame ||
                    window.msRequestAnimationFrame ||
                    function(callback) {
                        return window.setTimeout(callback, 1000 / 60);
                    };
            }());
            // -- DOM methods
            helpers.getRelativePosition = function(evt, chart) {
                var mouseX, mouseY;
                var e = evt.originalEvent || evt;
                var canvas = evt.currentTarget || evt.srcElement;
                var boundingRect = canvas.getBoundingClientRect();

                var touches = e.touches;
                if (touches && touches.length > 0) {
                    mouseX = touches[0].clientX;
                    mouseY = touches[0].clientY;

                } else {
                    mouseX = e.clientX;
                    mouseY = e.clientY;
                }

                // Scale mouse coordinates into canvas coordinates
                // by following the pattern laid out by 'jerryj' in the comments of
                // http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/
                var paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));
                var paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));
                var paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));
                var paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));
                var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;
                var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;

                // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However
                // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here
                mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);
                mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);

                return {
                    x: mouseX,
                    y: mouseY
                };

            };

            // Private helper function to convert max-width/max-height values that may be percentages into a number
            function parseMaxStyle(styleValue, node, parentProperty) {
                var valueInPixels;
                if (typeof styleValue === 'string') {
                    valueInPixels = parseInt(styleValue, 10);

                    if (styleValue.indexOf('%') !== -1) {
                        // percentage * size in dimension
                        valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];
                    }
                } else {
                    valueInPixels = styleValue;
                }

                return valueInPixels;
            }

            /**
             * Returns if the given value contains an effective constraint.
             * @private
             */
            function isConstrainedValue(value) {
                return value !== undefined && value !== null && value !== 'none';
            }

            // Private helper to get a constraint dimension
            // @param domNode : the node to check the constraint on
            // @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)
            // @param percentageProperty : property of parent to use when calculating width as a percentage
            // @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser
            function getConstraintDimension(domNode, maxStyle, percentageProperty) {
                var view = document.defaultView;
                var parentNode = domNode.parentNode;
                var constrainedNode = view.getComputedStyle(domNode)[maxStyle];
                var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];
                var hasCNode = isConstrainedValue(constrainedNode);
                var hasCContainer = isConstrainedValue(constrainedContainer);
                var infinity = Number.POSITIVE_INFINITY;

                if (hasCNode || hasCContainer) {
                    return Math.min(
                        hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,
                        hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);
                }

                return 'none';
            }
            // returns Number or undefined if no constraint
            helpers.getConstraintWidth = function(domNode) {
                return getConstraintDimension(domNode, 'max-width', 'clientWidth');
            };
            // returns Number or undefined if no constraint
            helpers.getConstraintHeight = function(domNode) {
                return getConstraintDimension(domNode, 'max-height', 'clientHeight');
            };
            helpers.getMaximumWidth = function(domNode) {
                var container = domNode.parentNode;
                if (!container) {
                    return domNode.clientWidth;
                }

                var paddingLeft = parseInt(helpers.getStyle(container, 'padding-left'), 10);
                var paddingRight = parseInt(helpers.getStyle(container, 'padding-right'), 10);
                var w = container.clientWidth - paddingLeft - paddingRight;
                var cw = helpers.getConstraintWidth(domNode);
                return isNaN(cw) ? w : Math.min(w, cw);
            };
            helpers.getMaximumHeight = function(domNode) {
                var container = domNode.parentNode;
                if (!container) {
                    return domNode.clientHeight;
                }

                var paddingTop = parseInt(helpers.getStyle(container, 'padding-top'), 10);
                var paddingBottom = parseInt(helpers.getStyle(container, 'padding-bottom'), 10);
                var h = container.clientHeight - paddingTop - paddingBottom;
                var ch = helpers.getConstraintHeight(domNode);
                return isNaN(ch) ? h : Math.min(h, ch);
            };
            helpers.getStyle = function(el, property) {
                return el.currentStyle ?
                    el.currentStyle[property] :
                    document.defaultView.getComputedStyle(el, null).getPropertyValue(property);
            };
            helpers.retinaScale = function(chart, forceRatio) {
                var pixelRatio = chart.currentDevicePixelRatio = forceRatio || window.devicePixelRatio || 1;
                if (pixelRatio === 1) {
                    return;
                }

                var canvas = chart.canvas;
                var height = chart.height;
                var width = chart.width;

                canvas.height = height * pixelRatio;
                canvas.width = width * pixelRatio;
                chart.ctx.scale(pixelRatio, pixelRatio);

                // If no style has been set on the canvas, the render size is used as display size,
                // making the chart visually bigger, so let's enforce it to the "correct" values.
                // See https://github.com/chartjs/Chart.js/issues/3575
                canvas.style.height = height + 'px';
                canvas.style.width = width + 'px';
            };
            // -- Canvas methods
            helpers.fontString = function(pixelSize, fontStyle, fontFamily) {
                return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;
            };
            helpers.longestText = function(ctx, font, arrayOfThings, cache) {
                cache = cache || {};
                var data = cache.data = cache.data || {};
                var gc = cache.garbageCollect = cache.garbageCollect || [];

                if (cache.font !== font) {
                    data = cache.data = {};
                    gc = cache.garbageCollect = [];
                    cache.font = font;
                }

                ctx.font = font;
                var longest = 0;
                helpers.each(arrayOfThings, function(thing) {
                    // Undefined strings and arrays should not be measured
                    if (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {
                        longest = helpers.measureText(ctx, data, gc, longest, thing);
                    } else if (helpers.isArray(thing)) {
                        // if it is an array lets measure each element
                        // to do maybe simplify this function a bit so we can do this more recursively?
                        helpers.each(thing, function(nestedThing) {
                            // Undefined strings and arrays should not be measured
                            if (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {
                                longest = helpers.measureText(ctx, data, gc, longest, nestedThing);
                            }
                        });
                    }
                });

                var gcLen = gc.length / 2;
                if (gcLen > arrayOfThings.length) {
                    for (var i = 0; i < gcLen; i++) {
                        delete data[gc[i]];
                    }
                    gc.splice(0, gcLen);
                }
                return longest;
            };
            helpers.measureText = function(ctx, data, gc, longest, string) {
                var textWidth = data[string];
                if (!textWidth) {
                    textWidth = data[string] = ctx.measureText(string).width;
                    gc.push(string);
                }
                if (textWidth > longest) {
                    longest = textWidth;
                }
                return longest;
            };
            helpers.numberOfLabelLines = function(arrayOfThings) {
                var numberOfLines = 1;
                helpers.each(arrayOfThings, function(thing) {
                    if (helpers.isArray(thing)) {
                        if (thing.length > numberOfLines) {
                            numberOfLines = thing.length;
                        }
                    }
                });
                return numberOfLines;
            };

            helpers.color = !color ?
                function(value) {
                    console.error('Color.js not found!');
                    return value;
                } :
                function(value) {
                    /* global CanvasGradient */
                    if (value instanceof CanvasGradient) {
                        value = defaults.global.defaultColor;
                    }

                    return color(value);
                };

            helpers.getHoverColor = function(colorValue) {
                /* global CanvasPattern */
                return (colorValue instanceof CanvasPattern) ?
                    colorValue :
                    helpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();
            };
        };

    },{"25":25,"3":3,"45":45}],28:[function(require,module,exports){
        'use strict';

        var helpers = require(45);

        /**
         * Helper function to get relative position for an event
         * @param {Event|IEvent} event - The event to get the position for
         * @param {Chart} chart - The chart
         * @returns {Point} the event position
         */
        function getRelativePosition(e, chart) {
            if (e.native) {
                return {
                    x: e.x,
                    y: e.y
                };
            }

            return helpers.getRelativePosition(e, chart);
        }

        /**
         * Helper function to traverse all of the visible elements in the chart
         * @param chart {chart} the chart
         * @param handler {Function} the callback to execute for each visible item
         */
        function parseVisibleItems(chart, handler) {
            var datasets = chart.data.datasets;
            var meta, i, j, ilen, jlen;

            for (i = 0, ilen = datasets.length; i < ilen; ++i) {
                if (!chart.isDatasetVisible(i)) {
                    continue;
                }

                meta = chart.getDatasetMeta(i);
                for (j = 0, jlen = meta.data.length; j < jlen; ++j) {
                    var element = meta.data[j];
                    if (!element._view.skip) {
                        handler(element);
                    }
                }
            }
        }

        /**
         * Helper function to get the items that intersect the event position
         * @param items {ChartElement[]} elements to filter
         * @param position {Point} the point to be nearest to
         * @return {ChartElement[]} the nearest items
         */
        function getIntersectItems(chart, position) {
            var elements = [];

            parseVisibleItems(chart, function(element) {
                if (element.inRange(position.x, position.y)) {
                    elements.push(element);
                }
            });

            return elements;
        }

        /**
         * Helper function to get the items nearest to the event position considering all visible items in teh chart
         * @param chart {Chart} the chart to look at elements from
         * @param position {Point} the point to be nearest to
         * @param intersect {Boolean} if true, only consider items that intersect the position
         * @param distanceMetric {Function} function to provide the distance between points
         * @return {ChartElement[]} the nearest items
         */
        function getNearestItems(chart, position, intersect, distanceMetric) {
            var minDistance = Number.POSITIVE_INFINITY;
            var nearestItems = [];

            parseVisibleItems(chart, function(element) {
                if (intersect && !element.inRange(position.x, position.y)) {
                    return;
                }

                var center = element.getCenterPoint();
                var distance = distanceMetric(position, center);

                if (distance < minDistance) {
                    nearestItems = [element];
                    minDistance = distance;
                } else if (distance === minDistance) {
                    // Can have multiple items at the same distance in which case we sort by size
                    nearestItems.push(element);
                }
            });

            return nearestItems;
        }

        /**
         * Get a distance metric function for two points based on the
         * axis mode setting
         * @param {String} axis the axis mode. x|y|xy
         */
        function getDistanceMetricForAxis(axis) {
            var useX = axis.indexOf('x') !== -1;
            var useY = axis.indexOf('y') !== -1;

            return function(pt1, pt2) {
                var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;
                var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;
                return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));
            };
        }

        function indexMode(chart, e, options) {
            var position = getRelativePosition(e, chart);
            // Default axis for index mode is 'x' to match old behaviour
            options.axis = options.axis || 'x';
            var distanceMetric = getDistanceMetricForAxis(options.axis);
            var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);
            var elements = [];

            if (!items.length) {
                return [];
            }

            chart.data.datasets.forEach(function(dataset, datasetIndex) {
                if (chart.isDatasetVisible(datasetIndex)) {
                    var meta = chart.getDatasetMeta(datasetIndex);
                    var element = meta.data[items[0]._index];

                    // don't count items that are skipped (null data)
                    if (element && !element._view.skip) {
                        elements.push(element);
                    }
                }
            });

            return elements;
        }

        /**
         * @interface IInteractionOptions
         */
        /**
         * If true, only consider items that intersect the point
         * @name IInterfaceOptions#boolean
         * @type Boolean
         */

        /**
         * Contains interaction related functions
         * @namespace Chart.Interaction
         */
        module.exports = {
            // Helper function for different modes
            modes: {
                single: function(chart, e) {
                    var position = getRelativePosition(e, chart);
                    var elements = [];

                    parseVisibleItems(chart, function(element) {
                        if (element.inRange(position.x, position.y)) {
                            elements.push(element);
                            return elements;
                        }
                    });

                    return elements.slice(0, 1);
                },

                /**
                 * @function Chart.Interaction.modes.label
                 * @deprecated since version 2.4.0
                 * @todo remove at version 3
                 * @private
                 */
                label: indexMode,

                /**
                 * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something
                 * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item
                 * @function Chart.Interaction.modes.index
                 * @since v2.4.0
                 * @param chart {chart} the chart we are returning items from
                 * @param e {Event} the event we are find things at
                 * @param options {IInteractionOptions} options to use during interaction
                 * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned
                 */
                index: indexMode,

                /**
                 * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something
                 * If the options.intersect is false, we find the nearest item and return the items in that dataset
                 * @function Chart.Interaction.modes.dataset
                 * @param chart {chart} the chart we are returning items from
                 * @param e {Event} the event we are find things at
                 * @param options {IInteractionOptions} options to use during interaction
                 * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned
                 */
                dataset: function(chart, e, options) {
                    var position = getRelativePosition(e, chart);
                    options.axis = options.axis || 'xy';
                    var distanceMetric = getDistanceMetricForAxis(options.axis);
                    var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);

                    if (items.length > 0) {
                        items = chart.getDatasetMeta(items[0]._datasetIndex).data;
                    }

                    return items;
                },

                /**
                 * @function Chart.Interaction.modes.x-axis
                 * @deprecated since version 2.4.0. Use index mode and intersect == true
                 * @todo remove at version 3
                 * @private
                 */
                'x-axis': function(chart, e) {
                    return indexMode(chart, e, {intersect: false});
                },

                /**
                 * Point mode returns all elements that hit test based on the event position
                 * of the event
                 * @function Chart.Interaction.modes.intersect
                 * @param chart {chart} the chart we are returning items from
                 * @param e {Event} the event we are find things at
                 * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned
                 */
                point: function(chart, e) {
                    var position = getRelativePosition(e, chart);
                    return getIntersectItems(chart, position);
                },

                /**
                 * nearest mode returns the element closest to the point
                 * @function Chart.Interaction.modes.intersect
                 * @param chart {chart} the chart we are returning items from
                 * @param e {Event} the event we are find things at
                 * @param options {IInteractionOptions} options to use
                 * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned
                 */
                nearest: function(chart, e, options) {
                    var position = getRelativePosition(e, chart);
                    options.axis = options.axis || 'xy';
                    var distanceMetric = getDistanceMetricForAxis(options.axis);
                    var nearestItems = getNearestItems(chart, position, options.intersect, distanceMetric);

                    // We have multiple items at the same distance from the event. Now sort by smallest
                    if (nearestItems.length > 1) {
                        nearestItems.sort(function(a, b) {
                            var sizeA = a.getArea();
                            var sizeB = b.getArea();
                            var ret = sizeA - sizeB;

                            if (ret === 0) {
                                // if equal sort by dataset index
                                ret = a._datasetIndex - b._datasetIndex;
                            }

                            return ret;
                        });
                    }

                    // Return only 1 item
                    return nearestItems.slice(0, 1);
                },

                /**
                 * x mode returns the elements that hit-test at the current x coordinate
                 * @function Chart.Interaction.modes.x
                 * @param chart {chart} the chart we are returning items from
                 * @param e {Event} the event we are find things at
                 * @param options {IInteractionOptions} options to use
                 * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned
                 */
                x: function(chart, e, options) {
                    var position = getRelativePosition(e, chart);
                    var items = [];
                    var intersectsItem = false;

                    parseVisibleItems(chart, function(element) {
                        if (element.inXRange(position.x)) {
                            items.push(element);
                        }

                        if (element.inRange(position.x, position.y)) {
                            intersectsItem = true;
                        }
                    });

                    // If we want to trigger on an intersect and we don't have any items
                    // that intersect the position, return nothing
                    if (options.intersect && !intersectsItem) {
                        items = [];
                    }
                    return items;
                },

                /**
                 * y mode returns the elements that hit-test at the current y coordinate
                 * @function Chart.Interaction.modes.y
                 * @param chart {chart} the chart we are returning items from
                 * @param e {Event} the event we are find things at
                 * @param options {IInteractionOptions} options to use
                 * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned
                 */
                y: function(chart, e, options) {
                    var position = getRelativePosition(e, chart);
                    var items = [];
                    var intersectsItem = false;

                    parseVisibleItems(chart, function(element) {
                        if (element.inYRange(position.y)) {
                            items.push(element);
                        }

                        if (element.inRange(position.x, position.y)) {
                            intersectsItem = true;
                        }
                    });

                    // If we want to trigger on an intersect and we don't have any items
                    // that intersect the position, return nothing
                    if (options.intersect && !intersectsItem) {
                        items = [];
                    }
                    return items;
                }
            }
        };

    },{"45":45}],29:[function(require,module,exports){
        'use strict';

        var defaults = require(25);

        defaults._set('global', {
            responsive: true,
            responsiveAnimationDuration: 0,
            maintainAspectRatio: true,
            events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],
            hover: {
                onHover: null,
                mode: 'nearest',
                intersect: true,
                animationDuration: 400
            },
            onClick: null,
            defaultColor: 'rgba(0,0,0,0.1)',
            defaultFontColor: '#666',
            defaultFontFamily: "'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",
            defaultFontSize: 12,
            defaultFontStyle: 'normal',
            showLines: true,

            // Element defaults defined in element extensions
            elements: {},

            // Layout options such as padding
            layout: {
                padding: {
                    top: 0,
                    right: 0,
                    bottom: 0,
                    left: 0
                }
            }
        });

        module.exports = function() {

            // Occupy the global variable of Chart, and create a simple base class
            var Chart = function(item, config) {
                this.construct(item, config);
                return this;
            };

            Chart.Chart = Chart;

            return Chart;
        };

    },{"25":25}],30:[function(require,module,exports){
        'use strict';

        var helpers = require(45);

        module.exports = function(Chart) {

            function filterByPosition(array, position) {
                return helpers.where(array, function(v) {
                    return v.position === position;
                });
            }

            function sortByWeight(array, reverse) {
                array.forEach(function(v, i) {
                    v._tmpIndex_ = i;
                    return v;
                });
                array.sort(function(a, b) {
                    var v0 = reverse ? b : a;
                    var v1 = reverse ? a : b;
                    return v0.weight === v1.weight ?
                        v0._tmpIndex_ - v1._tmpIndex_ :
                        v0.weight - v1.weight;
                });
                array.forEach(function(v) {
                    delete v._tmpIndex_;
                });
            }

            /**
             * @interface ILayoutItem
             * @prop {String} position - The position of the item in the chart layout. Possible values are
             * 'left', 'top', 'right', 'bottom', and 'chartArea'
             * @prop {Number} weight - The weight used to sort the item. Higher weights are further away from the chart area
             * @prop {Boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down
             * @prop {Function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)
             * @prop {Function} update - Takes two parameters: width and height. Returns size of item
             * @prop {Function} getPadding -  Returns an object with padding on the edges
             * @prop {Number} width - Width of item. Must be valid after update()
             * @prop {Number} height - Height of item. Must be valid after update()
             * @prop {Number} left - Left edge of the item. Set by layout system and cannot be used in update
             * @prop {Number} top - Top edge of the item. Set by layout system and cannot be used in update
             * @prop {Number} right - Right edge of the item. Set by layout system and cannot be used in update
             * @prop {Number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update
             */

            // The layout service is very self explanatory.  It's responsible for the layout within a chart.
            // Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need
            // It is this service's responsibility of carrying out that layout.
            Chart.layoutService = {
                defaults: {},

                /**
                 * Register a box to a chart.
                 * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.
                 * @param {Chart} chart - the chart to use
                 * @param {ILayoutItem} item - the item to add to be layed out
                 */
                addBox: function(chart, item) {
                    if (!chart.boxes) {
                        chart.boxes = [];
                    }

                    // initialize item with default values
                    item.fullWidth = item.fullWidth || false;
                    item.position = item.position || 'top';
                    item.weight = item.weight || 0;

                    chart.boxes.push(item);
                },

                /**
                 * Remove a layoutItem from a chart
                 * @param {Chart} chart - the chart to remove the box from
                 * @param {Object} layoutItem - the item to remove from the layout
                 */
                removeBox: function(chart, layoutItem) {
                    var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;
                    if (index !== -1) {
                        chart.boxes.splice(index, 1);
                    }
                },

                /**
                 * Sets (or updates) options on the given `item`.
                 * @param {Chart} chart - the chart in which the item lives (or will be added to)
                 * @param {Object} item - the item to configure with the given options
                 * @param {Object} options - the new item options.
                 */
                configure: function(chart, item, options) {
                    var props = ['fullWidth', 'position', 'weight'];
                    var ilen = props.length;
                    var i = 0;
                    var prop;

                    for (; i < ilen; ++i) {
                        prop = props[i];
                        if (options.hasOwnProperty(prop)) {
                            item[prop] = options[prop];
                        }
                    }
                },

                /**
                 * Fits boxes of the given chart into the given size by having each box measure itself
                 * then running a fitting algorithm
                 * @param {Chart} chart - the chart
                 * @param {Number} width - the width to fit into
                 * @param {Number} height - the height to fit into
                 */
                update: function(chart, width, height) {
                    if (!chart) {
                        return;
                    }

                    var layoutOptions = chart.options.layout || {};
                    var padding = helpers.options.toPadding(layoutOptions.padding);
                    var leftPadding = padding.left;
                    var rightPadding = padding.right;
                    var topPadding = padding.top;
                    var bottomPadding = padding.bottom;

                    var leftBoxes = filterByPosition(chart.boxes, 'left');
                    var rightBoxes = filterByPosition(chart.boxes, 'right');
                    var topBoxes = filterByPosition(chart.boxes, 'top');
                    var bottomBoxes = filterByPosition(chart.boxes, 'bottom');
                    var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea');

                    // Sort boxes by weight. A higher weight is further away from the chart area
                    sortByWeight(leftBoxes, true);
                    sortByWeight(rightBoxes, false);
                    sortByWeight(topBoxes, true);
                    sortByWeight(bottomBoxes, false);

                    // Essentially we now have any number of boxes on each of the 4 sides.
                    // Our canvas looks like the following.
                    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and
                    // B1 is the bottom axis
                    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays
                    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,
                    // an error will be thrown.
                    //
                    // |----------------------------------------------------|
                    // |                  T1 (Full Width)                   |
                    // |----------------------------------------------------|
                    // |    |    |                 T2                  |    |
                    // |    |----|-------------------------------------|----|
                    // |    |    | C1 |                           | C2 |    |
                    // |    |    |----|                           |----|    |
                    // |    |    |                                     |    |
                    // | L1 | L2 |           ChartArea (C0)            | R1 |
                    // |    |    |                                     |    |
                    // |    |    |----|                           |----|    |
                    // |    |    | C3 |                           | C4 |    |
                    // |    |----|-------------------------------------|----|
                    // |    |    |                 B1                  |    |
                    // |----------------------------------------------------|
                    // |                  B2 (Full Width)                   |
                    // |----------------------------------------------------|
                    //
                    // What we do to find the best sizing, we do the following
                    // 1. Determine the minimum size of the chart area.
                    // 2. Split the remaining width equally between each vertical axis
                    // 3. Split the remaining height equally between each horizontal axis
                    // 4. Give each layout the maximum size it can be. The layout will return it's minimum size
                    // 5. Adjust the sizes of each axis based on it's minimum reported size.
                    // 6. Refit each axis
                    // 7. Position each axis in the final location
                    // 8. Tell the chart the final location of the chart area
                    // 9. Tell any axes that overlay the chart area the positions of the chart area

                    // Step 1
                    var chartWidth = width - leftPadding - rightPadding;
                    var chartHeight = height - topPadding - bottomPadding;
                    var chartAreaWidth = chartWidth / 2; // min 50%
                    var chartAreaHeight = chartHeight / 2; // min 50%

                    // Step 2
                    var verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length);

                    // Step 3
                    var horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length);

                    // Step 4
                    var maxChartAreaWidth = chartWidth;
                    var maxChartAreaHeight = chartHeight;
                    var minBoxSizes = [];

                    function getMinimumBoxSize(box) {
                        var minSize;
                        var isHorizontal = box.isHorizontal();

                        if (isHorizontal) {
                            minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);
                            maxChartAreaHeight -= minSize.height;
                        } else {
                            minSize = box.update(verticalBoxWidth, chartAreaHeight);
                            maxChartAreaWidth -= minSize.width;
                        }

                        minBoxSizes.push({
                            horizontal: isHorizontal,
                            minSize: minSize,
                            box: box,
                        });
                    }

                    helpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize);

                    // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)
                    var maxHorizontalLeftPadding = 0;
                    var maxHorizontalRightPadding = 0;
                    var maxVerticalTopPadding = 0;
                    var maxVerticalBottomPadding = 0;

                    helpers.each(topBoxes.concat(bottomBoxes), function(horizontalBox) {
                        if (horizontalBox.getPadding) {
                            var boxPadding = horizontalBox.getPadding();
                            maxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);
                            maxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);
                        }
                    });

                    helpers.each(leftBoxes.concat(rightBoxes), function(verticalBox) {
                        if (verticalBox.getPadding) {
                            var boxPadding = verticalBox.getPadding();
                            maxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);
                            maxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);
                        }
                    });

                    // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could
                    // be if the axes are drawn at their minimum sizes.
                    // Steps 5 & 6
                    var totalLeftBoxesWidth = leftPadding;
                    var totalRightBoxesWidth = rightPadding;
                    var totalTopBoxesHeight = topPadding;
                    var totalBottomBoxesHeight = bottomPadding;

                    // Function to fit a box
                    function fitBox(box) {
                        var minBoxSize = helpers.findNextWhere(minBoxSizes, function(minBox) {
                            return minBox.box === box;
                        });

                        if (minBoxSize) {
                            if (box.isHorizontal()) {
                                var scaleMargin = {
                                    left: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),
                                    right: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),
                                    top: 0,
                                    bottom: 0
                                };

                                // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends
                                // on the margin. Sometimes they need to increase in size slightly
                                box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);
                            } else {
                                box.update(minBoxSize.minSize.width, maxChartAreaHeight);
                            }
                        }
                    }

                    // Update, and calculate the left and right margins for the horizontal boxes
                    helpers.each(leftBoxes.concat(rightBoxes), fitBox);

                    helpers.each(leftBoxes, function(box) {
                        totalLeftBoxesWidth += box.width;
                    });

                    helpers.each(rightBoxes, function(box) {
                        totalRightBoxesWidth += box.width;
                    });

                    // Set the Left and Right margins for the horizontal boxes
                    helpers.each(topBoxes.concat(bottomBoxes), fitBox);

                    // Figure out how much margin is on the top and bottom of the vertical boxes
                    helpers.each(topBoxes, function(box) {
                        totalTopBoxesHeight += box.height;
                    });

                    helpers.each(bottomBoxes, function(box) {
                        totalBottomBoxesHeight += box.height;
                    });

                    function finalFitVerticalBox(box) {
                        var minBoxSize = helpers.findNextWhere(minBoxSizes, function(minSize) {
                            return minSize.box === box;
                        });

                        var scaleMargin = {
                            left: 0,
                            right: 0,
                            top: totalTopBoxesHeight,
                            bottom: totalBottomBoxesHeight
                        };

                        if (minBoxSize) {
                            box.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);
                        }
                    }

                    // Let the left layout know the final margin
                    helpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox);

                    // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)
                    totalLeftBoxesWidth = leftPadding;
                    totalRightBoxesWidth = rightPadding;
                    totalTopBoxesHeight = topPadding;
                    totalBottomBoxesHeight = bottomPadding;

                    helpers.each(leftBoxes, function(box) {
                        totalLeftBoxesWidth += box.width;
                    });

                    helpers.each(rightBoxes, function(box) {
                        totalRightBoxesWidth += box.width;
                    });

                    helpers.each(topBoxes, function(box) {
                        totalTopBoxesHeight += box.height;
                    });
                    helpers.each(bottomBoxes, function(box) {
                        totalBottomBoxesHeight += box.height;
                    });

                    // We may be adding some padding to account for rotated x axis labels
                    var leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);
                    totalLeftBoxesWidth += leftPaddingAddition;
                    totalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);

                    var topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);
                    totalTopBoxesHeight += topPaddingAddition;
                    totalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0);

                    // Figure out if our chart area changed. This would occur if the dataset layout label rotation
                    // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do
                    // without calling `fit` again
                    var newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;
                    var newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;

                    if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {
                        helpers.each(leftBoxes, function(box) {
                            box.height = newMaxChartAreaHeight;
                        });

                        helpers.each(rightBoxes, function(box) {
                            box.height = newMaxChartAreaHeight;
                        });

                        helpers.each(topBoxes, function(box) {
                            if (!box.fullWidth) {
                                box.width = newMaxChartAreaWidth;
                            }
                        });

                        helpers.each(bottomBoxes, function(box) {
                            if (!box.fullWidth) {
                                box.width = newMaxChartAreaWidth;
                            }
                        });

                        maxChartAreaHeight = newMaxChartAreaHeight;
                        maxChartAreaWidth = newMaxChartAreaWidth;
                    }

                    // Step 7 - Position the boxes
                    var left = leftPadding + leftPaddingAddition;
                    var top = topPadding + topPaddingAddition;

                    function placeBox(box) {
                        if (box.isHorizontal()) {
                            box.left = box.fullWidth ? leftPadding : totalLeftBoxesWidth;
                            box.right = box.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;
                            box.top = top;
                            box.bottom = top + box.height;

                            // Move to next point
                            top = box.bottom;

                        } else {

                            box.left = left;
                            box.right = left + box.width;
                            box.top = totalTopBoxesHeight;
                            box.bottom = totalTopBoxesHeight + maxChartAreaHeight;

                            // Move to next point
                            left = box.right;
                        }
                    }

                    helpers.each(leftBoxes.concat(topBoxes), placeBox);

                    // Account for chart width and height
                    left += maxChartAreaWidth;
                    top += maxChartAreaHeight;

                    helpers.each(rightBoxes, placeBox);
                    helpers.each(bottomBoxes, placeBox);

                    // Step 8
                    chart.chartArea = {
                        left: totalLeftBoxesWidth,
                        top: totalTopBoxesHeight,
                        right: totalLeftBoxesWidth + maxChartAreaWidth,
                        bottom: totalTopBoxesHeight + maxChartAreaHeight
                    };

                    // Step 9
                    helpers.each(chartAreaBoxes, function(box) {
                        box.left = chart.chartArea.left;
                        box.top = chart.chartArea.top;
                        box.right = chart.chartArea.right;
                        box.bottom = chart.chartArea.bottom;

                        box.update(maxChartAreaWidth, maxChartAreaHeight);
                    });
                }
            };
        };

    },{"45":45}],31:[function(require,module,exports){
        'use strict';

        var defaults = require(25);
        var Element = require(26);
        var helpers = require(45);

        defaults._set('global', {
            plugins: {}
        });

        module.exports = function(Chart) {

            /**
             * The plugin service singleton
             * @namespace Chart.plugins
             * @since 2.1.0
             */
            Chart.plugins = {
                /**
                 * Globally registered plugins.
                 * @private
                 */
                _plugins: [],

                /**
                 * This identifier is used to invalidate the descriptors cache attached to each chart
                 * when a global plugin is registered or unregistered. In this case, the cache ID is
                 * incremented and descriptors are regenerated during following API calls.
                 * @private
                 */
                _cacheId: 0,

                /**
                 * Registers the given plugin(s) if not already registered.
                 * @param {Array|Object} plugins plugin instance(s).
                 */
                register: function(plugins) {
                    var p = this._plugins;
                    ([]).concat(plugins).forEach(function(plugin) {
                        if (p.indexOf(plugin) === -1) {
                            p.push(plugin);
                        }
                    });

                    this._cacheId++;
                },

                /**
                 * Unregisters the given plugin(s) only if registered.
                 * @param {Array|Object} plugins plugin instance(s).
                 */
                unregister: function(plugins) {
                    var p = this._plugins;
                    ([]).concat(plugins).forEach(function(plugin) {
                        var idx = p.indexOf(plugin);
                        if (idx !== -1) {
                            p.splice(idx, 1);
                        }
                    });

                    this._cacheId++;
                },

                /**
                 * Remove all registered plugins.
                 * @since 2.1.5
                 */
                clear: function() {
                    this._plugins = [];
                    this._cacheId++;
                },

                /**
                 * Returns the number of registered plugins?
                 * @returns {Number}
                 * @since 2.1.5
                 */
                count: function() {
                    return this._plugins.length;
                },

                /**
                 * Returns all registered plugin instances.
                 * @returns {Array} array of plugin objects.
                 * @since 2.1.5
                 */
                getAll: function() {
                    return this._plugins;
                },

                /**
                 * Calls enabled plugins for `chart` on the specified hook and with the given args.
                 * This method immediately returns as soon as a plugin explicitly returns false. The
                 * returned value can be used, for instance, to interrupt the current action.
                 * @param {Object} chart - The chart instance for which plugins should be called.
                 * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').
                 * @param {Array} [args] - Extra arguments to apply to the hook call.
                 * @returns {Boolean} false if any of the plugins return false, else returns true.
                 */
                notify: function(chart, hook, args) {
                    var descriptors = this.descriptors(chart);
                    var ilen = descriptors.length;
                    var i, descriptor, plugin, params, method;

                    for (i = 0; i < ilen; ++i) {
                        descriptor = descriptors[i];
                        plugin = descriptor.plugin;
                        method = plugin[hook];
                        if (typeof method === 'function') {
                            params = [chart].concat(args || []);
                            params.push(descriptor.options);
                            if (method.apply(plugin, params) === false) {
                                return false;
                            }
                        }
                    }

                    return true;
                },

                /**
                 * Returns descriptors of enabled plugins for the given chart.
                 * @returns {Array} [{ plugin, options }]
                 * @private
                 */
                descriptors: function(chart) {
                    var cache = chart._plugins || (chart._plugins = {});
                    if (cache.id === this._cacheId) {
                        return cache.descriptors;
                    }

                    var plugins = [];
                    var descriptors = [];
                    var config = (chart && chart.config) || {};
                    var options = (config.options && config.options.plugins) || {};

                    this._plugins.concat(config.plugins || []).forEach(function(plugin) {
                        var idx = plugins.indexOf(plugin);
                        if (idx !== -1) {
                            return;
                        }

                        var id = plugin.id;
                        var opts = options[id];
                        if (opts === false) {
                            return;
                        }

                        if (opts === true) {
                            opts = helpers.clone(defaults.global.plugins[id]);
                        }

                        plugins.push(plugin);
                        descriptors.push({
                            plugin: plugin,
                            options: opts || {}
                        });
                    });

                    cache.descriptors = descriptors;
                    cache.id = this._cacheId;
                    return descriptors;
                }
            };

            /**
             * Plugin extension hooks.
             * @interface IPlugin
             * @since 2.1.0
             */
            /**
             * @method IPlugin#beforeInit
             * @desc Called before initializing `chart`.
             * @param {Chart.Controller} chart - The chart instance.
             * @param {Object} options - The plugin options.
             */
            /**
             * @method IPlugin#afterInit
             * @desc Called after `chart` has been initialized and before the first update.
             * @param {Chart.Controller} chart - The chart instance.
             * @param {Object} options - The plugin options.
             */
            /**
             * @method IPlugin#beforeUpdate
             * @desc Called before updating `chart`. If any plugin returns `false`, the update
             * is cancelled (and thus subsequent render(s)) until another `update` is triggered.
             * @param {Chart.Controller} chart - The chart instance.
             * @param {Object} options - The plugin options.
             * @returns {Boolean} `false` to cancel the chart update.
             */
            /**
             * @method IPlugin#afterUpdate
             * @desc Called after `chart` has been updated and before rendering. Note that this
             * hook will not be called if the chart update has been previously cancelled.
             * @param {Chart.Controller} chart - The chart instance.
             * @param {Object} options - The plugin options.
             */
            /**
             * @method IPlugin#beforeDatasetsUpdate
             * @desc Called before updating the `chart` datasets. If any plugin returns `false`,
             * the datasets update is cancelled until another `update` is triggered.
             * @param {Chart.Controller} chart - The chart instance.
             * @param {Object} options - The plugin options.
             * @returns {Boolean} false to cancel the datasets update.
             * @since version 2.1.5
             */
            /**
             * @method IPlugin#afterDatasetsUpdate
             * @desc Called after the `chart` datasets have been updated. Note that this hook
             * will not be called if the datasets update has been previously cancelled.
             * @param {Chart.Controller} chart - The chart instance.
             * @param {Object} options - The plugin options.
             * @since version 2.1.5
             */
            /**
             * @method IPlugin#beforeDatasetUpdate
             * @desc Called before updating the `chart` dataset at the given `args.index`. If any plugin
             * returns `false`, the datasets update is cancelled until another `update` is triggered.
             * @param {Chart} chart - The chart instance.
             * @param {Object} args - The call arguments.
             * @param {Number} args.index - The dataset index.
             * @param {Object} args.meta - The dataset metadata.
             * @param {Object} options - The plugin options.
             * @returns {Boolean} `false` to cancel the chart datasets drawing.
             */
            /**
             * @method IPlugin#afterDatasetUpdate
             * @desc Called after the `chart` datasets at the given `args.index` has been updated. Note
             * that this hook will not be called if the datasets update has been previously cancelled.
             * @param {Chart} chart - The chart instance.
             * @param {Object} args - The call arguments.
             * @param {Number} args.index - The dataset index.
             * @param {Object} args.meta - The dataset metadata.
             * @param {Object} options - The plugin options.
             */
            /**
             * @method IPlugin#beforeLayout
             * @desc Called before laying out `chart`. If any plugin returns `false`,
             * the layout update is cancelled until another `update` is triggered.
             * @param {Chart.Controller} chart - The chart instance.
             * @param {Object} options - The plugin options.
             * @returns {Boolean} `false` to cancel the chart layout.
             */
            /**
             * @method IPlugin#afterLayout
             * @desc Called after the `chart` has been layed out. Note that this hook will not
             * be called if the layout update has been previously cancelled.
             * @param {Chart.Controller} chart - The chart instance.
             * @param {Object} options - The plugin options.
             */
            /**
             * @method IPlugin#beforeRender
             * @desc Called before rendering `chart`. If any plugin returns `false`,
             * the rendering is cancelled until another `render` is triggered.
             * @param {Chart.Controller} chart - The chart instance.
             * @param {Object} options - The plugin options.
             * @returns {Boolean} `false` to cancel the chart rendering.
             */
            /**
             * @method IPlugin#afterRender
             * @desc Called after the `chart` has been fully rendered (and animation completed). Note
             * that this hook will not be called if the rendering has been previously cancelled.
             * @param {Chart.Controller} chart - The chart instance.
             * @param {Object} options - The plugin options.
             */
            /**
             * @method IPlugin#beforeDraw
             * @desc Called before drawing `chart` at every animation frame specified by the given
             * easing value. If any plugin returns `false`, the frame drawing is cancelled until
             * another `render` is triggered.
             * @param {Chart.Controller} chart - The chart instance.
             * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.
             * @param {Object} options - The plugin options.
             * @returns {Boolean} `false` to cancel the chart drawing.
             */
            /**
             * @method IPlugin#afterDraw
             * @desc Called after the `chart` has been drawn for the specific easing value. Note
             * that this hook will not be called if the drawing has been previously cancelled.
             * @param {Chart.Controller} chart - The chart instance.
             * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.
             * @param {Object} options - The plugin options.
             */
            /**
             * @method IPlugin#beforeDatasetsDraw
             * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,
             * the datasets drawing is cancelled until another `render` is triggered.
             * @param {Chart.Controller} chart - The chart instance.
             * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.
             * @param {Object} options - The plugin options.
             * @returns {Boolean} `false` to cancel the chart datasets drawing.
             */
            /**
             * @method IPlugin#afterDatasetsDraw
             * @desc Called after the `chart` datasets have been drawn. Note that this hook
             * will not be called if the datasets drawing has been previously cancelled.
             * @param {Chart.Controller} chart - The chart instance.
             * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.
             * @param {Object} options - The plugin options.
             */
            /**
             * @method IPlugin#beforeDatasetDraw
             * @desc Called before drawing the `chart` dataset at the given `args.index` (datasets
             * are drawn in the reverse order). If any plugin returns `false`, the datasets drawing
             * is cancelled until another `render` is triggered.
             * @param {Chart} chart - The chart instance.
             * @param {Object} args - The call arguments.
             * @param {Number} args.index - The dataset index.
             * @param {Object} args.meta - The dataset metadata.
             * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.
             * @param {Object} options - The plugin options.
             * @returns {Boolean} `false` to cancel the chart datasets drawing.
             */
            /**
             * @method IPlugin#afterDatasetDraw
             * @desc Called after the `chart` datasets at the given `args.index` have been drawn
             * (datasets are drawn in the reverse order). Note that this hook will not be called
             * if the datasets drawing has been previously cancelled.
             * @param {Chart} chart - The chart instance.
             * @param {Object} args - The call arguments.
             * @param {Number} args.index - The dataset index.
             * @param {Object} args.meta - The dataset metadata.
             * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.
             * @param {Object} options - The plugin options.
             */
            /**
             * @method IPlugin#beforeTooltipDraw
             * @desc Called before drawing the `tooltip`. If any plugin returns `false`,
             * the tooltip drawing is cancelled until another `render` is triggered.
             * @param {Chart} chart - The chart instance.
             * @param {Object} args - The call arguments.
             * @param {Object} args.tooltip - The tooltip.
             * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.
             * @param {Object} options - The plugin options.
             * @returns {Boolean} `false` to cancel the chart tooltip drawing.
             */
            /**
             * @method IPlugin#afterTooltipDraw
             * @desc Called after drawing the `tooltip`. Note that this hook will not
             * be called if the tooltip drawing has been previously cancelled.
             * @param {Chart} chart - The chart instance.
             * @param {Object} args - The call arguments.
             * @param {Object} args.tooltip - The tooltip.
             * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.
             * @param {Object} options - The plugin options.
             */
            /**
             * @method IPlugin#beforeEvent
             * @desc Called before processing the specified `event`. If any plugin returns `false`,
             * the event will be discarded.
             * @param {Chart.Controller} chart - The chart instance.
             * @param {IEvent} event - The event object.
             * @param {Object} options - The plugin options.
             */
            /**
             * @method IPlugin#afterEvent
             * @desc Called after the `event` has been consumed. Note that this hook
             * will not be called if the `event` has been previously discarded.
             * @param {Chart.Controller} chart - The chart instance.
             * @param {IEvent} event - The event object.
             * @param {Object} options - The plugin options.
             */
            /**
             * @method IPlugin#resize
             * @desc Called after the chart as been resized.
             * @param {Chart.Controller} chart - The chart instance.
             * @param {Number} size - The new canvas display size (eq. canvas.style width & height).
             * @param {Object} options - The plugin options.
             */
            /**
             * @method IPlugin#destroy
             * @desc Called after the chart as been destroyed.
             * @param {Chart.Controller} chart - The chart instance.
             * @param {Object} options - The plugin options.
             */

            /**
             * Provided for backward compatibility, use Chart.plugins instead
             * @namespace Chart.pluginService
             * @deprecated since version 2.1.5
             * @todo remove at version 3
             * @private
             */
            Chart.pluginService = Chart.plugins;

            /**
             * Provided for backward compatibility, inheriting from Chart.PlugingBase has no
             * effect, instead simply create/register plugins via plain JavaScript objects.
             * @interface Chart.PluginBase
             * @deprecated since version 2.5.0
             * @todo remove at version 3
             * @private
             */
            Chart.PluginBase = Element.extend({});
        };

    },{"25":25,"26":26,"45":45}],32:[function(require,module,exports){
        'use strict';

        var defaults = require(25);
        var Element = require(26);
        var helpers = require(45);
        var Ticks = require(34);

        defaults._set('scale', {
            display: true,
            position: 'left',
            offset: false,

            // grid line settings
            gridLines: {
                display: true,
                color: 'rgba(0, 0, 0, 0.1)',
                lineWidth: 1,
                drawBorder: true,
                drawOnChartArea: true,
                drawTicks: true,
                tickMarkLength: 10,
                zeroLineWidth: 1,
                zeroLineColor: 'rgba(0,0,0,0.25)',
                zeroLineBorderDash: [],
                zeroLineBorderDashOffset: 0.0,
                offsetGridLines: false,
                borderDash: [],
                borderDashOffset: 0.0
            },

            // scale label
            scaleLabel: {
                // display property
                display: false,

                // actual label
                labelString: '',

                // line height
                lineHeight: 1.2,

                // top/bottom padding
                padding: {
                    top: 4,
                    bottom: 4
                }
            },

            // label settings
            ticks: {
                beginAtZero: false,
                minRotation: 0,
                maxRotation: 50,
                mirror: false,
                padding: 0,
                reverse: false,
                display: true,
                autoSkip: true,
                autoSkipPadding: 0,
                labelOffset: 0,
                // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.
                callback: Ticks.formatters.values,
                minor: {},
                major: {}
            }
        });

        function labelsFromTicks(ticks) {
            var labels = [];
            var i, ilen;

            for (i = 0, ilen = ticks.length; i < ilen; ++i) {
                labels.push(ticks[i].label);
            }

            return labels;
        }

        function getLineValue(scale, index, offsetGridLines) {
            var lineValue = scale.getPixelForTick(index);

            if (offsetGridLines) {
                if (index === 0) {
                    lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;
                } else {
                    lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;
                }
            }
            return lineValue;
        }

        module.exports = function(Chart) {

            function computeTextSize(context, tick, font) {
                return helpers.isArray(tick) ?
                    helpers.longestText(context, font, tick) :
                    context.measureText(tick).width;
            }

            function parseFontOptions(options) {
                var valueOrDefault = helpers.valueOrDefault;
                var globalDefaults = defaults.global;
                var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);
                var style = valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);
                var family = valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);

                return {
                    size: size,
                    style: style,
                    family: family,
                    font: helpers.fontString(size, style, family)
                };
            }

            function parseLineHeight(options) {
                return helpers.options.toLineHeight(
                    helpers.valueOrDefault(options.lineHeight, 1.2),
                    helpers.valueOrDefault(options.fontSize, defaults.global.defaultFontSize));
            }

            Chart.Scale = Element.extend({
                /**
                 * Get the padding needed for the scale
                 * @method getPadding
                 * @private
                 * @returns {Padding} the necessary padding
                 */
                getPadding: function() {
                    var me = this;
                    return {
                        left: me.paddingLeft || 0,
                        top: me.paddingTop || 0,
                        right: me.paddingRight || 0,
                        bottom: me.paddingBottom || 0
                    };
                },

                /**
                 * Returns the scale tick objects ({label, major})
                 * @since 2.7
                 */
                getTicks: function() {
                    return this._ticks;
                },

                // These methods are ordered by lifecyle. Utilities then follow.
                // Any function defined here is inherited by all scale types.
                // Any function can be extended by the scale type

                mergeTicksOptions: function() {
                    var ticks = this.options.ticks;
                    if (ticks.minor === false) {
                        ticks.minor = {
                            display: false
                        };
                    }
                    if (ticks.major === false) {
                        ticks.major = {
                            display: false
                        };
                    }
                    for (var key in ticks) {
                        if (key !== 'major' && key !== 'minor') {
                            if (typeof ticks.minor[key] === 'undefined') {
                                ticks.minor[key] = ticks[key];
                            }
                            if (typeof ticks.major[key] === 'undefined') {
                                ticks.major[key] = ticks[key];
                            }
                        }
                    }
                },
                beforeUpdate: function() {
                    helpers.callback(this.options.beforeUpdate, [this]);
                },
                update: function(maxWidth, maxHeight, margins) {
                    var me = this;
                    var i, ilen, labels, label, ticks, tick;

                    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)
                    me.beforeUpdate();

                    // Absorb the master measurements
                    me.maxWidth = maxWidth;
                    me.maxHeight = maxHeight;
                    me.margins = helpers.extend({
                        left: 0,
                        right: 0,
                        top: 0,
                        bottom: 0
                    }, margins);
                    me.longestTextCache = me.longestTextCache || {};

                    // Dimensions
                    me.beforeSetDimensions();
                    me.setDimensions();
                    me.afterSetDimensions();

                    // Data min/max
                    me.beforeDataLimits();
                    me.determineDataLimits();
                    me.afterDataLimits();

                    // Ticks - `this.ticks` is now DEPRECATED!
                    // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member
                    // and must not be accessed directly from outside this class. `this.ticks` being
                    // around for long time and not marked as private, we can't change its structure
                    // without unexpected breaking changes. If you need to access the scale ticks,
                    // use scale.getTicks() instead.

                    me.beforeBuildTicks();

                    // New implementations should return an array of objects but for BACKWARD COMPAT,
                    // we still support no return (`this.ticks` internally set by calling this method).
                    ticks = me.buildTicks() || [];

                    me.afterBuildTicks();

                    me.beforeTickToLabelConversion();

                    // New implementations should return the formatted tick labels but for BACKWARD
                    // COMPAT, we still support no return (`this.ticks` internally changed by calling
                    // this method and supposed to contain only string values).
                    labels = me.convertTicksToLabels(ticks) || me.ticks;

                    me.afterTickToLabelConversion();

                    me.ticks = labels;   // BACKWARD COMPATIBILITY

                    // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!

                    // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)
                    for (i = 0, ilen = labels.length; i < ilen; ++i) {
                        label = labels[i];
                        tick = ticks[i];
                        if (!tick) {
                            ticks.push(tick = {
                                label: label,
                                major: false
                            });
                        } else {
                            tick.label = label;
                        }
                    }

                    me._ticks = ticks;

                    // Tick Rotation
                    me.beforeCalculateTickRotation();
                    me.calculateTickRotation();
                    me.afterCalculateTickRotation();
                    // Fit
                    me.beforeFit();
                    me.fit();
                    me.afterFit();
                    //
                    me.afterUpdate();

                    return me.minSize;

                },
                afterUpdate: function() {
                    helpers.callback(this.options.afterUpdate, [this]);
                },

                //

                beforeSetDimensions: function() {
                    helpers.callback(this.options.beforeSetDimensions, [this]);
                },
                setDimensions: function() {
                    var me = this;
                    // Set the unconstrained dimension before label rotation
                    if (me.isHorizontal()) {
                        // Reset position before calculating rotation
                        me.width = me.maxWidth;
                        me.left = 0;
                        me.right = me.width;
                    } else {
                        me.height = me.maxHeight;

                        // Reset position before calculating rotation
                        me.top = 0;
                        me.bottom = me.height;
                    }

                    // Reset padding
                    me.paddingLeft = 0;
                    me.paddingTop = 0;
                    me.paddingRight = 0;
                    me.paddingBottom = 0;
                },
                afterSetDimensions: function() {
                    helpers.callback(this.options.afterSetDimensions, [this]);
                },

                // Data limits
                beforeDataLimits: function() {
                    helpers.callback(this.options.beforeDataLimits, [this]);
                },
                determineDataLimits: helpers.noop,
                afterDataLimits: function() {
                    helpers.callback(this.options.afterDataLimits, [this]);
                },

                //
                beforeBuildTicks: function() {
                    helpers.callback(this.options.beforeBuildTicks, [this]);
                },
                buildTicks: helpers.noop,
                afterBuildTicks: function() {
                    helpers.callback(this.options.afterBuildTicks, [this]);
                },

                beforeTickToLabelConversion: function() {
                    helpers.callback(this.options.beforeTickToLabelConversion, [this]);
                },
                convertTicksToLabels: function() {
                    var me = this;
                    // Convert ticks to strings
                    var tickOpts = me.options.ticks;
                    me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);
                },
                afterTickToLabelConversion: function() {
                    helpers.callback(this.options.afterTickToLabelConversion, [this]);
                },

                //

                beforeCalculateTickRotation: function() {
                    helpers.callback(this.options.beforeCalculateTickRotation, [this]);
                },
                calculateTickRotation: function() {
                    var me = this;
                    var context = me.ctx;
                    var tickOpts = me.options.ticks;
                    var labels = labelsFromTicks(me._ticks);

                    // Get the width of each grid by calculating the difference
                    // between x offsets between 0 and 1.
                    var tickFont = parseFontOptions(tickOpts);
                    context.font = tickFont.font;

                    var labelRotation = tickOpts.minRotation || 0;

                    if (labels.length && me.options.display && me.isHorizontal()) {
                        var originalLabelWidth = helpers.longestText(context, tickFont.font, labels, me.longestTextCache);
                        var labelWidth = originalLabelWidth;
                        var cosRotation, sinRotation;

                        // Allow 3 pixels x2 padding either side for label readability
                        var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;

                        // Max label rotation can be set or default to 90 - also act as a loop counter
                        while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {
                            var angleRadians = helpers.toRadians(labelRotation);
                            cosRotation = Math.cos(angleRadians);
                            sinRotation = Math.sin(angleRadians);

                            if (sinRotation * originalLabelWidth > me.maxHeight) {
                                // go back one step
                                labelRotation--;
                                break;
                            }

                            labelRotation++;
                            labelWidth = cosRotation * originalLabelWidth;
                        }
                    }

                    me.labelRotation = labelRotation;
                },
                afterCalculateTickRotation: function() {
                    helpers.callback(this.options.afterCalculateTickRotation, [this]);
                },

                //

                beforeFit: function() {
                    helpers.callback(this.options.beforeFit, [this]);
                },
                fit: function() {
                    var me = this;
                    // Reset
                    var minSize = me.minSize = {
                        width: 0,
                        height: 0
                    };

                    var labels = labelsFromTicks(me._ticks);

                    var opts = me.options;
                    var tickOpts = opts.ticks;
                    var scaleLabelOpts = opts.scaleLabel;
                    var gridLineOpts = opts.gridLines;
                    var display = opts.display;
                    var isHorizontal = me.isHorizontal();

                    var tickFont = parseFontOptions(tickOpts);
                    var tickMarkLength = opts.gridLines.tickMarkLength;

                    // Width
                    if (isHorizontal) {
                        // subtract the margins to line up with the chartArea if we are a full width scale
                        minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;
                    } else {
                        minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;
                    }

                    // height
                    if (isHorizontal) {
                        minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;
                    } else {
                        minSize.height = me.maxHeight; // fill all the height
                    }

                    // Are we showing a title for the scale?
                    if (scaleLabelOpts.display && display) {
                        var scaleLabelLineHeight = parseLineHeight(scaleLabelOpts);
                        var scaleLabelPadding = helpers.options.toPadding(scaleLabelOpts.padding);
                        var deltaHeight = scaleLabelLineHeight + scaleLabelPadding.height;

                        if (isHorizontal) {
                            minSize.height += deltaHeight;
                        } else {
                            minSize.width += deltaHeight;
                        }
                    }

                    // Don't bother fitting the ticks if we are not showing them
                    if (tickOpts.display && display) {
                        var largestTextWidth = helpers.longestText(me.ctx, tickFont.font, labels, me.longestTextCache);
                        var tallestLabelHeightInLines = helpers.numberOfLabelLines(labels);
                        var lineSpace = tickFont.size * 0.5;
                        var tickPadding = me.options.ticks.padding;

                        if (isHorizontal) {
                            // A horizontal axis is more constrained by the height.
                            me.longestLabelWidth = largestTextWidth;

                            var angleRadians = helpers.toRadians(me.labelRotation);
                            var cosRotation = Math.cos(angleRadians);
                            var sinRotation = Math.sin(angleRadians);

                            // TODO - improve this calculation
                            var labelHeight = (sinRotation * largestTextWidth)
                                + (tickFont.size * tallestLabelHeightInLines)
                                + (lineSpace * (tallestLabelHeightInLines - 1))
                                + lineSpace; // padding

                            minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);

                            me.ctx.font = tickFont.font;
                            var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.font);
                            var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.font);

                            // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned
                            // which means that the right padding is dominated by the font height
                            if (me.labelRotation !== 0) {
                                me.paddingLeft = opts.position === 'bottom' ? (cosRotation * firstLabelWidth) + 3 : (cosRotation * lineSpace) + 3; // add 3 px to move away from canvas edges
                                me.paddingRight = opts.position === 'bottom' ? (cosRotation * lineSpace) + 3 : (cosRotation * lastLabelWidth) + 3;
                            } else {
                                me.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges
                                me.paddingRight = lastLabelWidth / 2 + 3;
                            }
                        } else {
                            // A vertical axis is more constrained by the width. Labels are the
                            // dominant factor here, so get that length first and account for padding
                            if (tickOpts.mirror) {
                                largestTextWidth = 0;
                            } else {
                                // use lineSpace for consistency with horizontal axis
                                // tickPadding is not implemented for horizontal
                                largestTextWidth += tickPadding + lineSpace;
                            }

                            minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);

                            me.paddingTop = tickFont.size / 2;
                            me.paddingBottom = tickFont.size / 2;
                        }
                    }

                    me.handleMargins();

                    me.width = minSize.width;
                    me.height = minSize.height;
                },

                /**
                 * Handle margins and padding interactions
                 * @private
                 */
                handleMargins: function() {
                    var me = this;
                    if (me.margins) {
                        me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);
                        me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);
                        me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);
                        me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);
                    }
                },

                afterFit: function() {
                    helpers.callback(this.options.afterFit, [this]);
                },

                // Shared Methods
                isHorizontal: function() {
                    return this.options.position === 'top' || this.options.position === 'bottom';
                },
                isFullWidth: function() {
                    return (this.options.fullWidth);
                },

                // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not
                getRightValue: function(rawValue) {
                    // Null and undefined values first
                    if (helpers.isNullOrUndef(rawValue)) {
                        return NaN;
                    }
                    // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values
                    if (typeof rawValue === 'number' && !isFinite(rawValue)) {
                        return NaN;
                    }
                    // If it is in fact an object, dive in one more level
                    if (rawValue) {
                        if (this.isHorizontal()) {
                            if (rawValue.x !== undefined) {
                                return this.getRightValue(rawValue.x);
                            }
                        } else if (rawValue.y !== undefined) {
                            return this.getRightValue(rawValue.y);
                        }
                    }

                    // Value is good, return it
                    return rawValue;
                },

                /**
                 * Used to get the value to display in the tooltip for the data at the given index
                 * @param index
                 * @param datasetIndex
                 */
                getLabelForIndex: helpers.noop,

                /**
                 * Returns the location of the given data point. Value can either be an index or a numerical value
                 * The coordinate (0, 0) is at the upper-left corner of the canvas
                 * @param value
                 * @param index
                 * @param datasetIndex
                 */
                getPixelForValue: helpers.noop,

                /**
                 * Used to get the data value from a given pixel. This is the inverse of getPixelForValue
                 * The coordinate (0, 0) is at the upper-left corner of the canvas
                 * @param pixel
                 */
                getValueForPixel: helpers.noop,

                /**
                 * Returns the location of the tick at the given index
                 * The coordinate (0, 0) is at the upper-left corner of the canvas
                 */
                getPixelForTick: function(index) {
                    var me = this;
                    var offset = me.options.offset;
                    if (me.isHorizontal()) {
                        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);
                        var tickWidth = innerWidth / Math.max((me._ticks.length - (offset ? 0 : 1)), 1);
                        var pixel = (tickWidth * index) + me.paddingLeft;

                        if (offset) {
                            pixel += tickWidth / 2;
                        }

                        var finalVal = me.left + Math.round(pixel);
                        finalVal += me.isFullWidth() ? me.margins.left : 0;
                        return finalVal;
                    }
                    var innerHeight = me.height - (me.paddingTop + me.paddingBottom);
                    return me.top + (index * (innerHeight / (me._ticks.length - 1)));
                },

                /**
                 * Utility for getting the pixel location of a percentage of scale
                 * The coordinate (0, 0) is at the upper-left corner of the canvas
                 */
                getPixelForDecimal: function(decimal) {
                    var me = this;
                    if (me.isHorizontal()) {
                        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);
                        var valueOffset = (innerWidth * decimal) + me.paddingLeft;

                        var finalVal = me.left + Math.round(valueOffset);
                        finalVal += me.isFullWidth() ? me.margins.left : 0;
                        return finalVal;
                    }
                    return me.top + (decimal * me.height);
                },

                /**
                 * Returns the pixel for the minimum chart value
                 * The coordinate (0, 0) is at the upper-left corner of the canvas
                 */
                getBasePixel: function() {
                    return this.getPixelForValue(this.getBaseValue());
                },

                getBaseValue: function() {
                    var me = this;
                    var min = me.min;
                    var max = me.max;

                    return me.beginAtZero ? 0 :
                        min < 0 && max < 0 ? max :
                            min > 0 && max > 0 ? min :
                                0;
                },

                /**
                 * Returns a subset of ticks to be plotted to avoid overlapping labels.
                 * @private
                 */
                _autoSkip: function(ticks) {
                    var skipRatio;
                    var me = this;
                    var isHorizontal = me.isHorizontal();
                    var optionTicks = me.options.ticks.minor;
                    var tickCount = ticks.length;
                    var labelRotationRadians = helpers.toRadians(me.labelRotation);
                    var cosRotation = Math.cos(labelRotationRadians);
                    var longestRotatedLabel = me.longestLabelWidth * cosRotation;
                    var result = [];
                    var i, tick, shouldSkip;

                    // figure out the maximum number of gridlines to show
                    var maxTicks;
                    if (optionTicks.maxTicksLimit) {
                        maxTicks = optionTicks.maxTicksLimit;
                    }

                    if (isHorizontal) {
                        skipRatio = false;

                        if ((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount > (me.width - (me.paddingLeft + me.paddingRight))) {
                            skipRatio = 1 + Math.floor(((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount) / (me.width - (me.paddingLeft + me.paddingRight)));
                        }

                        // if they defined a max number of optionTicks,
                        // increase skipRatio until that number is met
                        if (maxTicks && tickCount > maxTicks) {
                            skipRatio = Math.max(skipRatio, Math.floor(tickCount / maxTicks));
                        }
                    }

                    for (i = 0; i < tickCount; i++) {
                        tick = ticks[i];

                        // Since we always show the last tick,we need may need to hide the last shown one before
                        shouldSkip = (skipRatio > 1 && i % skipRatio > 0) || (i % skipRatio === 0 && i + skipRatio >= tickCount);
                        if (shouldSkip && i !== tickCount - 1) {
                            // leave tick in place but make sure it's not displayed (#4635)
                            delete tick.label;
                        }
                        result.push(tick);
                    }
                    return result;
                },

                // Actually draw the scale on the canvas
                // @param {rectangle} chartArea : the area of the chart to draw full grid lines on
                draw: function(chartArea) {
                    var me = this;
                    var options = me.options;
                    if (!options.display) {
                        return;
                    }

                    var context = me.ctx;
                    var globalDefaults = defaults.global;
                    var optionTicks = options.ticks.minor;
                    var optionMajorTicks = options.ticks.major || optionTicks;
                    var gridLines = options.gridLines;
                    var scaleLabel = options.scaleLabel;

                    var isRotated = me.labelRotation !== 0;
                    var isHorizontal = me.isHorizontal();

                    var ticks = optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();
                    var tickFontColor = helpers.valueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);
                    var tickFont = parseFontOptions(optionTicks);
                    var majorTickFontColor = helpers.valueOrDefault(optionMajorTicks.fontColor, globalDefaults.defaultFontColor);
                    var majorTickFont = parseFontOptions(optionMajorTicks);

                    var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;

                    var scaleLabelFontColor = helpers.valueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);
                    var scaleLabelFont = parseFontOptions(scaleLabel);
                    var scaleLabelPadding = helpers.options.toPadding(scaleLabel.padding);
                    var labelRotationRadians = helpers.toRadians(me.labelRotation);

                    var itemsToDraw = [];

                    var xTickStart = options.position === 'right' ? me.left : me.right - tl;
                    var xTickEnd = options.position === 'right' ? me.left + tl : me.right;
                    var yTickStart = options.position === 'bottom' ? me.top : me.bottom - tl;
                    var yTickEnd = options.position === 'bottom' ? me.top + tl : me.bottom;

                    helpers.each(ticks, function(tick, index) {
                        // autoskipper skipped this tick (#4635)
                        if (helpers.isNullOrUndef(tick.label)) {
                            return;
                        }

                        var label = tick.label;
                        var lineWidth, lineColor, borderDash, borderDashOffset;
                        if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {
                            // Draw the first index specially
                            lineWidth = gridLines.zeroLineWidth;
                            lineColor = gridLines.zeroLineColor;
                            borderDash = gridLines.zeroLineBorderDash;
                            borderDashOffset = gridLines.zeroLineBorderDashOffset;
                        } else {
                            lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, index);
                            lineColor = helpers.valueAtIndexOrDefault(gridLines.color, index);
                            borderDash = helpers.valueOrDefault(gridLines.borderDash, globalDefaults.borderDash);
                            borderDashOffset = helpers.valueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);
                        }

                        // Common properties
                        var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;
                        var textAlign = 'middle';
                        var textBaseline = 'middle';
                        var tickPadding = optionTicks.padding;

                        if (isHorizontal) {
                            var labelYOffset = tl + tickPadding;

                            if (options.position === 'bottom') {
                                // bottom
                                textBaseline = !isRotated ? 'top' : 'middle';
                                textAlign = !isRotated ? 'center' : 'right';
                                labelY = me.top + labelYOffset;
                            } else {
                                // top
                                textBaseline = !isRotated ? 'bottom' : 'middle';
                                textAlign = !isRotated ? 'center' : 'left';
                                labelY = me.bottom - labelYOffset;
                            }

                            var xLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);
                            if (xLineValue < me.left) {
                                lineColor = 'rgba(0,0,0,0)';
                            }
                            xLineValue += helpers.aliasPixel(lineWidth);

                            labelX = me.getPixelForTick(index) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)

                            tx1 = tx2 = x1 = x2 = xLineValue;
                            ty1 = yTickStart;
                            ty2 = yTickEnd;
                            y1 = chartArea.top;
                            y2 = chartArea.bottom;
                        } else {
                            var isLeft = options.position === 'left';
                            var labelXOffset;

                            if (optionTicks.mirror) {
                                textAlign = isLeft ? 'left' : 'right';
                                labelXOffset = tickPadding;
                            } else {
                                textAlign = isLeft ? 'right' : 'left';
                                labelXOffset = tl + tickPadding;
                            }

                            labelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;

                            var yLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);
                            if (yLineValue < me.top) {
                                lineColor = 'rgba(0,0,0,0)';
                            }
                            yLineValue += helpers.aliasPixel(lineWidth);

                            labelY = me.getPixelForTick(index) + optionTicks.labelOffset;

                            tx1 = xTickStart;
                            tx2 = xTickEnd;
                            x1 = chartArea.left;
                            x2 = chartArea.right;
                            ty1 = ty2 = y1 = y2 = yLineValue;
                        }

                        itemsToDraw.push({
                            tx1: tx1,
                            ty1: ty1,
                            tx2: tx2,
                            ty2: ty2,
                            x1: x1,
                            y1: y1,
                            x2: x2,
                            y2: y2,
                            labelX: labelX,
                            labelY: labelY,
                            glWidth: lineWidth,
                            glColor: lineColor,
                            glBorderDash: borderDash,
                            glBorderDashOffset: borderDashOffset,
                            rotation: -1 * labelRotationRadians,
                            label: label,
                            major: tick.major,
                            textBaseline: textBaseline,
                            textAlign: textAlign
                        });
                    });

                    // Draw all of the tick labels, tick marks, and grid lines at the correct places
                    helpers.each(itemsToDraw, function(itemToDraw) {
                        if (gridLines.display) {
                            context.save();
                            context.lineWidth = itemToDraw.glWidth;
                            context.strokeStyle = itemToDraw.glColor;
                            if (context.setLineDash) {
                                context.setLineDash(itemToDraw.glBorderDash);
                                context.lineDashOffset = itemToDraw.glBorderDashOffset;
                            }

                            context.beginPath();

                            if (gridLines.drawTicks) {
                                context.moveTo(itemToDraw.tx1, itemToDraw.ty1);
                                context.lineTo(itemToDraw.tx2, itemToDraw.ty2);
                            }

                            if (gridLines.drawOnChartArea) {
                                context.moveTo(itemToDraw.x1, itemToDraw.y1);
                                context.lineTo(itemToDraw.x2, itemToDraw.y2);
                            }

                            context.stroke();
                            context.restore();
                        }

                        if (optionTicks.display) {
                            // Make sure we draw text in the correct color and font
                            context.save();
                            context.translate(itemToDraw.labelX, itemToDraw.labelY);
                            context.rotate(itemToDraw.rotation);
                            context.font = itemToDraw.major ? majorTickFont.font : tickFont.font;
                            context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;
                            context.textBaseline = itemToDraw.textBaseline;
                            context.textAlign = itemToDraw.textAlign;

                            var label = itemToDraw.label;
                            if (helpers.isArray(label)) {
                                for (var i = 0, y = 0; i < label.length; ++i) {
                                    // We just make sure the multiline element is a string here..
                                    context.fillText('' + label[i], 0, y);
                                    // apply same lineSpacing as calculated @ L#320
                                    y += (tickFont.size * 1.5);
                                }
                            } else {
                                context.fillText(label, 0, 0);
                            }
                            context.restore();
                        }
                    });

                    if (scaleLabel.display) {
                        // Draw the scale label
                        var scaleLabelX;
                        var scaleLabelY;
                        var rotation = 0;
                        var halfLineHeight = parseLineHeight(scaleLabel) / 2;

                        if (isHorizontal) {
                            scaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width
                            scaleLabelY = options.position === 'bottom'
                                ? me.bottom - halfLineHeight - scaleLabelPadding.bottom
                                : me.top + halfLineHeight + scaleLabelPadding.top;
                        } else {
                            var isLeft = options.position === 'left';
                            scaleLabelX = isLeft
                                ? me.left + halfLineHeight + scaleLabelPadding.top
                                : me.right - halfLineHeight - scaleLabelPadding.top;
                            scaleLabelY = me.top + ((me.bottom - me.top) / 2);
                            rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;
                        }

                        context.save();
                        context.translate(scaleLabelX, scaleLabelY);
                        context.rotate(rotation);
                        context.textAlign = 'center';
                        context.textBaseline = 'middle';
                        context.fillStyle = scaleLabelFontColor; // render in correct colour
                        context.font = scaleLabelFont.font;
                        context.fillText(scaleLabel.labelString, 0, 0);
                        context.restore();
                    }

                    if (gridLines.drawBorder) {
                        // Draw the line at the edge of the axis
                        context.lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, 0);
                        context.strokeStyle = helpers.valueAtIndexOrDefault(gridLines.color, 0);
                        var x1 = me.left;
                        var x2 = me.right;
                        var y1 = me.top;
                        var y2 = me.bottom;

                        var aliasPixel = helpers.aliasPixel(context.lineWidth);
                        if (isHorizontal) {
                            y1 = y2 = options.position === 'top' ? me.bottom : me.top;
                            y1 += aliasPixel;
                            y2 += aliasPixel;
                        } else {
                            x1 = x2 = options.position === 'left' ? me.right : me.left;
                            x1 += aliasPixel;
                            x2 += aliasPixel;
                        }

                        context.beginPath();
                        context.moveTo(x1, y1);
                        context.lineTo(x2, y2);
                        context.stroke();
                    }
                }
            });
        };

    },{"25":25,"26":26,"34":34,"45":45}],33:[function(require,module,exports){
        'use strict';

        var defaults = require(25);
        var helpers = require(45);

        module.exports = function(Chart) {

            Chart.scaleService = {
                // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then
                // use the new chart options to grab the correct scale
                constructors: {},
                // Use a registration function so that we can move to an ES6 map when we no longer need to support
                // old browsers

                // Scale config defaults
                defaults: {},
                registerScaleType: function(type, scaleConstructor, scaleDefaults) {
                    this.constructors[type] = scaleConstructor;
                    this.defaults[type] = helpers.clone(scaleDefaults);
                },
                getScaleConstructor: function(type) {
                    return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;
                },
                getScaleDefaults: function(type) {
                    // Return the scale defaults merged with the global settings so that we always use the latest ones
                    return this.defaults.hasOwnProperty(type) ? helpers.merge({}, [defaults.scale, this.defaults[type]]) : {};
                },
                updateScaleDefaults: function(type, additions) {
                    var me = this;
                    if (me.defaults.hasOwnProperty(type)) {
                        me.defaults[type] = helpers.extend(me.defaults[type], additions);
                    }
                },
                addScalesToLayout: function(chart) {
                    // Adds each scale to the chart.boxes array to be sized accordingly
                    helpers.each(chart.scales, function(scale) {
                        // Set ILayoutItem parameters for backwards compatibility
                        scale.fullWidth = scale.options.fullWidth;
                        scale.position = scale.options.position;
                        scale.weight = scale.options.weight;
                        Chart.layoutService.addBox(chart, scale);
                    });
                }
            };
        };

    },{"25":25,"45":45}],34:[function(require,module,exports){
        'use strict';

        var helpers = require(45);

        /**
         * Namespace to hold static tick generation functions
         * @namespace Chart.Ticks
         */
        module.exports = {
            /**
             * Namespace to hold generators for different types of ticks
             * @namespace Chart.Ticks.generators
             */
            generators: {
                /**
                 * Interface for the options provided to the numeric tick generator
                 * @interface INumericTickGenerationOptions
                 */
                /**
                 * The maximum number of ticks to display
                 * @name INumericTickGenerationOptions#maxTicks
                 * @type Number
                 */
                /**
                 * The distance between each tick.
                 * @name INumericTickGenerationOptions#stepSize
                 * @type Number
                 * @optional
                 */
                /**
                 * Forced minimum for the ticks. If not specified, the minimum of the data range is used to calculate the tick minimum
                 * @name INumericTickGenerationOptions#min
                 * @type Number
                 * @optional
                 */
                /**
                 * The maximum value of the ticks. If not specified, the maximum of the data range is used to calculate the tick maximum
                 * @name INumericTickGenerationOptions#max
                 * @type Number
                 * @optional
                 */

                /**
                 * Generate a set of linear ticks
                 * @method Chart.Ticks.generators.linear
                 * @param generationOptions {INumericTickGenerationOptions} the options used to generate the ticks
                 * @param dataRange {IRange} the range of the data
                 * @returns {Array<Number>} array of tick values
                 */
                linear: function(generationOptions, dataRange) {
                    var ticks = [];
                    // To get a "nice" value for the tick spacing, we will use the appropriately named
                    // "nice number" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks
                    // for details.

                    var spacing;
                    if (generationOptions.stepSize && generationOptions.stepSize > 0) {
                        spacing = generationOptions.stepSize;
                    } else {
                        var niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);
                        spacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);
                    }
                    var niceMin = Math.floor(dataRange.min / spacing) * spacing;
                    var niceMax = Math.ceil(dataRange.max / spacing) * spacing;

                    // If min, max and stepSize is set and they make an evenly spaced scale use it.
                    if (generationOptions.min && generationOptions.max && generationOptions.stepSize) {
                        // If very close to our whole number, use it.
                        if (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {
                            niceMin = generationOptions.min;
                            niceMax = generationOptions.max;
                        }
                    }

                    var numSpaces = (niceMax - niceMin) / spacing;
                    // If very close to our rounded value, use it.
                    if (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {
                        numSpaces = Math.round(numSpaces);
                    } else {
                        numSpaces = Math.ceil(numSpaces);
                    }

                    // Put the values into the ticks array
                    ticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);
                    for (var j = 1; j < numSpaces; ++j) {
                        ticks.push(niceMin + (j * spacing));
                    }
                    ticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);

                    return ticks;
                },

                /**
                 * Generate a set of logarithmic ticks
                 * @method Chart.Ticks.generators.logarithmic
                 * @param generationOptions {INumericTickGenerationOptions} the options used to generate the ticks
                 * @param dataRange {IRange} the range of the data
                 * @returns {Array<Number>} array of tick values
                 */
                logarithmic: function(generationOptions, dataRange) {
                    var ticks = [];
                    var valueOrDefault = helpers.valueOrDefault;

                    // Figure out what the max number of ticks we can support it is based on the size of
                    // the axis area. For now, we say that the minimum tick spacing in pixels must be 50
                    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on
                    // the graph
                    var tickVal = valueOrDefault(generationOptions.min, Math.pow(10, Math.floor(helpers.log10(dataRange.min))));

                    var endExp = Math.floor(helpers.log10(dataRange.max));
                    var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));
                    var exp, significand;

                    if (tickVal === 0) {
                        exp = Math.floor(helpers.log10(dataRange.minNotZero));
                        significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));

                        ticks.push(tickVal);
                        tickVal = significand * Math.pow(10, exp);
                    } else {
                        exp = Math.floor(helpers.log10(tickVal));
                        significand = Math.floor(tickVal / Math.pow(10, exp));
                    }

                    do {
                        ticks.push(tickVal);

                        ++significand;
                        if (significand === 10) {
                            significand = 1;
                            ++exp;
                        }

                        tickVal = significand * Math.pow(10, exp);
                    } while (exp < endExp || (exp === endExp && significand < endSignificand));

                    var lastTick = valueOrDefault(generationOptions.max, tickVal);
                    ticks.push(lastTick);

                    return ticks;
                }
            },

            /**
             * Namespace to hold formatters for different types of ticks
             * @namespace Chart.Ticks.formatters
             */
            formatters: {
                /**
                 * Formatter for value labels
                 * @method Chart.Ticks.formatters.values
                 * @param value the value to display
                 * @return {String|Array} the label to display
                 */
                values: function(value) {
                    return helpers.isArray(value) ? value : '' + value;
                },

                /**
                 * Formatter for linear numeric ticks
                 * @method Chart.Ticks.formatters.linear
                 * @param tickValue {Number} the value to be formatted
                 * @param index {Number} the position of the tickValue parameter in the ticks array
                 * @param ticks {Array<Number>} the list of ticks being converted
                 * @return {String} string representation of the tickValue parameter
                 */
                linear: function(tickValue, index, ticks) {
                    // If we have lots of ticks, don't use the ones
                    var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];

                    // If we have a number like 2.5 as the delta, figure out how many decimal places we need
                    if (Math.abs(delta) > 1) {
                        if (tickValue !== Math.floor(tickValue)) {
                            // not an integer
                            delta = tickValue - Math.floor(tickValue);
                        }
                    }

                    var logDelta = helpers.log10(Math.abs(delta));
                    var tickString = '';

                    if (tickValue !== 0) {
                        var numDecimal = -1 * Math.floor(logDelta);
                        numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places
                        tickString = tickValue.toFixed(numDecimal);
                    } else {
                        tickString = '0'; // never show decimal places for 0
                    }

                    return tickString;
                },

                logarithmic: function(tickValue, index, ticks) {
                    var remain = tickValue / (Math.pow(10, Math.floor(helpers.log10(tickValue))));

                    if (tickValue === 0) {
                        return '0';
                    } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {
                        return tickValue.toExponential();
                    }
                    return '';
                }
            }
        };

    },{"45":45}],35:[function(require,module,exports){
        'use strict';

        var defaults = require(25);
        var Element = require(26);
        var helpers = require(45);

        defaults._set('global', {
            tooltips: {
                enabled: true,
                custom: null,
                mode: 'nearest',
                position: 'average',
                intersect: true,
                backgroundColor: 'rgba(0,0,0,0.8)',
                titleFontStyle: 'bold',
                titleSpacing: 2,
                titleMarginBottom: 6,
                titleFontColor: '#fff',
                titleAlign: 'left',
                bodySpacing: 2,
                bodyFontColor: '#fff',
                bodyAlign: 'left',
                footerFontStyle: 'bold',
                footerSpacing: 2,
                footerMarginTop: 6,
                footerFontColor: '#fff',
                footerAlign: 'left',
                yPadding: 6,
                xPadding: 6,
                caretPadding: 2,
                caretSize: 5,
                cornerRadius: 6,
                multiKeyBackground: '#fff',
                displayColors: true,
                borderColor: 'rgba(0,0,0,0)',
                borderWidth: 0,
                callbacks: {
                    // Args are: (tooltipItems, data)
                    beforeTitle: helpers.noop,
                    title: function(tooltipItems, data) {
                        // Pick first xLabel for now
                        var title = '';
                        var labels = data.labels;
                        var labelCount = labels ? labels.length : 0;

                        if (tooltipItems.length > 0) {
                            var item = tooltipItems[0];

                            if (item.xLabel) {
                                title = item.xLabel;
                            } else if (labelCount > 0 && item.index < labelCount) {
                                title = labels[item.index];
                            }
                        }

                        return title;
                    },
                    afterTitle: helpers.noop,

                    // Args are: (tooltipItems, data)
                    beforeBody: helpers.noop,

                    // Args are: (tooltipItem, data)
                    beforeLabel: helpers.noop,
                    label: function(tooltipItem, data) {
                        var label = data.datasets[tooltipItem.datasetIndex].label || '';

                        if (label) {
                            label += ': ';
                        }
                        label += tooltipItem.yLabel;
                        return label;
                    },
                    labelColor: function(tooltipItem, chart) {
                        var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);
                        var activeElement = meta.data[tooltipItem.index];
                        var view = activeElement._view;
                        return {
                            borderColor: view.borderColor,
                            backgroundColor: view.backgroundColor
                        };
                    },
                    labelTextColor: function() {
                        return this._options.bodyFontColor;
                    },
                    afterLabel: helpers.noop,

                    // Args are: (tooltipItems, data)
                    afterBody: helpers.noop,

                    // Args are: (tooltipItems, data)
                    beforeFooter: helpers.noop,
                    footer: helpers.noop,
                    afterFooter: helpers.noop
                }
            }
        });

        module.exports = function(Chart) {

            /**
             * Helper method to merge the opacity into a color
             */
            function mergeOpacity(colorString, opacity) {
                var color = helpers.color(colorString);
                return color.alpha(opacity * color.alpha()).rgbaString();
            }

            // Helper to push or concat based on if the 2nd parameter is an array or not
            function pushOrConcat(base, toPush) {
                if (toPush) {
                    if (helpers.isArray(toPush)) {
                        // base = base.concat(toPush);
                        Array.prototype.push.apply(base, toPush);
                    } else {
                        base.push(toPush);
                    }
                }

                return base;
            }

            // Private helper to create a tooltip item model
            // @param element : the chart element (point, arc, bar) to create the tooltip item for
            // @return : new tooltip item
            function createTooltipItem(element) {
                var xScale = element._xScale;
                var yScale = element._yScale || element._scale; // handle radar || polarArea charts
                var index = element._index;
                var datasetIndex = element._datasetIndex;

                return {
                    xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',
                    yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',
                    index: index,
                    datasetIndex: datasetIndex,
                    x: element._model.x,
                    y: element._model.y
                };
            }

            /**
             * Helper to get the reset model for the tooltip
             * @param tooltipOpts {Object} the tooltip options
             */
            function getBaseModel(tooltipOpts) {
                var globalDefaults = defaults.global;
                var valueOrDefault = helpers.valueOrDefault;

                return {
                    // Positioning
                    xPadding: tooltipOpts.xPadding,
                    yPadding: tooltipOpts.yPadding,
                    xAlign: tooltipOpts.xAlign,
                    yAlign: tooltipOpts.yAlign,

                    // Body
                    bodyFontColor: tooltipOpts.bodyFontColor,
                    _bodyFontFamily: valueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),
                    _bodyFontStyle: valueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),
                    _bodyAlign: tooltipOpts.bodyAlign,
                    bodyFontSize: valueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),
                    bodySpacing: tooltipOpts.bodySpacing,

                    // Title
                    titleFontColor: tooltipOpts.titleFontColor,
                    _titleFontFamily: valueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),
                    _titleFontStyle: valueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),
                    titleFontSize: valueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),
                    _titleAlign: tooltipOpts.titleAlign,
                    titleSpacing: tooltipOpts.titleSpacing,
                    titleMarginBottom: tooltipOpts.titleMarginBottom,

                    // Footer
                    footerFontColor: tooltipOpts.footerFontColor,
                    _footerFontFamily: valueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),
                    _footerFontStyle: valueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),
                    footerFontSize: valueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),
                    _footerAlign: tooltipOpts.footerAlign,
                    footerSpacing: tooltipOpts.footerSpacing,
                    footerMarginTop: tooltipOpts.footerMarginTop,

                    // Appearance
                    caretSize: tooltipOpts.caretSize,
                    cornerRadius: tooltipOpts.cornerRadius,
                    backgroundColor: tooltipOpts.backgroundColor,
                    opacity: 0,
                    legendColorBackground: tooltipOpts.multiKeyBackground,
                    displayColors: tooltipOpts.displayColors,
                    borderColor: tooltipOpts.borderColor,
                    borderWidth: tooltipOpts.borderWidth
                };
            }

            /**
             * Get the size of the tooltip
             */
            function getTooltipSize(tooltip, model) {
                var ctx = tooltip._chart.ctx;

                var height = model.yPadding * 2; // Tooltip Padding
                var width = 0;

                // Count of all lines in the body
                var body = model.body;
                var combinedBodyLength = body.reduce(function(count, bodyItem) {
                    return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;
                }, 0);
                combinedBodyLength += model.beforeBody.length + model.afterBody.length;

                var titleLineCount = model.title.length;
                var footerLineCount = model.footer.length;
                var titleFontSize = model.titleFontSize;
                var bodyFontSize = model.bodyFontSize;
                var footerFontSize = model.footerFontSize;

                height += titleLineCount * titleFontSize; // Title Lines
                height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing
                height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin
                height += combinedBodyLength * bodyFontSize; // Body Lines
                height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing
                height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin
                height += footerLineCount * (footerFontSize); // Footer Lines
                height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing

                // Title width
                var widthPadding = 0;
                var maxLineWidth = function(line) {
                    width = Math.max(width, ctx.measureText(line).width + widthPadding);
                };

                ctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);
                helpers.each(model.title, maxLineWidth);

                // Body width
                ctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);
                helpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth);

                // Body lines may include some extra width due to the color box
                widthPadding = model.displayColors ? (bodyFontSize + 2) : 0;
                helpers.each(body, function(bodyItem) {
                    helpers.each(bodyItem.before, maxLineWidth);
                    helpers.each(bodyItem.lines, maxLineWidth);
                    helpers.each(bodyItem.after, maxLineWidth);
                });

                // Reset back to 0
                widthPadding = 0;

                // Footer width
                ctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);
                helpers.each(model.footer, maxLineWidth);

                // Add padding
                width += 2 * model.xPadding;

                return {
                    width: width,
                    height: height
                };
            }

            /**
             * Helper to get the alignment of a tooltip given the size
             */
            function determineAlignment(tooltip, size) {
                var model = tooltip._model;
                var chart = tooltip._chart;
                var chartArea = tooltip._chart.chartArea;
                var xAlign = 'center';
                var yAlign = 'center';

                if (model.y < size.height) {
                    yAlign = 'top';
                } else if (model.y > (chart.height - size.height)) {
                    yAlign = 'bottom';
                }

                var lf, rf; // functions to determine left, right alignment
                var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart
                var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges
                var midX = (chartArea.left + chartArea.right) / 2;
                var midY = (chartArea.top + chartArea.bottom) / 2;

                if (yAlign === 'center') {
                    lf = function(x) {
                        return x <= midX;
                    };
                    rf = function(x) {
                        return x > midX;
                    };
                } else {
                    lf = function(x) {
                        return x <= (size.width / 2);
                    };
                    rf = function(x) {
                        return x >= (chart.width - (size.width / 2));
                    };
                }

                olf = function(x) {
                    return x + size.width > chart.width;
                };
                orf = function(x) {
                    return x - size.width < 0;
                };
                yf = function(y) {
                    return y <= midY ? 'top' : 'bottom';
                };

                if (lf(model.x)) {
                    xAlign = 'left';

                    // Is tooltip too wide and goes over the right side of the chart.?
                    if (olf(model.x)) {
                        xAlign = 'center';
                        yAlign = yf(model.y);
                    }
                } else if (rf(model.x)) {
                    xAlign = 'right';

                    // Is tooltip too wide and goes outside left edge of canvas?
                    if (orf(model.x)) {
                        xAlign = 'center';
                        yAlign = yf(model.y);
                    }
                }

                var opts = tooltip._options;
                return {
                    xAlign: opts.xAlign ? opts.xAlign : xAlign,
                    yAlign: opts.yAlign ? opts.yAlign : yAlign
                };
            }

            /**
             * @Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment
             */
            function getBackgroundPoint(vm, size, alignment) {
                // Background Position
                var x = vm.x;
                var y = vm.y;

                var caretSize = vm.caretSize;
                var caretPadding = vm.caretPadding;
                var cornerRadius = vm.cornerRadius;
                var xAlign = alignment.xAlign;
                var yAlign = alignment.yAlign;
                var paddingAndSize = caretSize + caretPadding;
                var radiusAndPadding = cornerRadius + caretPadding;

                if (xAlign === 'right') {
                    x -= size.width;
                } else if (xAlign === 'center') {
                    x -= (size.width / 2);
                }

                if (yAlign === 'top') {
                    y += paddingAndSize;
                } else if (yAlign === 'bottom') {
                    y -= size.height + paddingAndSize;
                } else {
                    y -= (size.height / 2);
                }

                if (yAlign === 'center') {
                    if (xAlign === 'left') {
                        x += paddingAndSize;
                    } else if (xAlign === 'right') {
                        x -= paddingAndSize;
                    }
                } else if (xAlign === 'left') {
                    x -= radiusAndPadding;
                } else if (xAlign === 'right') {
                    x += radiusAndPadding;
                }

                return {
                    x: x,
                    y: y
                };
            }

            Chart.Tooltip = Element.extend({
                initialize: function() {
                    this._model = getBaseModel(this._options);
                    this._lastActive = [];
                },

                // Get the title
                // Args are: (tooltipItem, data)
                getTitle: function() {
                    var me = this;
                    var opts = me._options;
                    var callbacks = opts.callbacks;

                    var beforeTitle = callbacks.beforeTitle.apply(me, arguments);
                    var title = callbacks.title.apply(me, arguments);
                    var afterTitle = callbacks.afterTitle.apply(me, arguments);

                    var lines = [];
                    lines = pushOrConcat(lines, beforeTitle);
                    lines = pushOrConcat(lines, title);
                    lines = pushOrConcat(lines, afterTitle);

                    return lines;
                },

                // Args are: (tooltipItem, data)
                getBeforeBody: function() {
                    var lines = this._options.callbacks.beforeBody.apply(this, arguments);
                    return helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];
                },

                // Args are: (tooltipItem, data)
                getBody: function(tooltipItems, data) {
                    var me = this;
                    var callbacks = me._options.callbacks;
                    var bodyItems = [];

                    helpers.each(tooltipItems, function(tooltipItem) {
                        var bodyItem = {
                            before: [],
                            lines: [],
                            after: []
                        };
                        pushOrConcat(bodyItem.before, callbacks.beforeLabel.call(me, tooltipItem, data));
                        pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));
                        pushOrConcat(bodyItem.after, callbacks.afterLabel.call(me, tooltipItem, data));

                        bodyItems.push(bodyItem);
                    });

                    return bodyItems;
                },

                // Args are: (tooltipItem, data)
                getAfterBody: function() {
                    var lines = this._options.callbacks.afterBody.apply(this, arguments);
                    return helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];
                },

                // Get the footer and beforeFooter and afterFooter lines
                // Args are: (tooltipItem, data)
                getFooter: function() {
                    var me = this;
                    var callbacks = me._options.callbacks;

                    var beforeFooter = callbacks.beforeFooter.apply(me, arguments);
                    var footer = callbacks.footer.apply(me, arguments);
                    var afterFooter = callbacks.afterFooter.apply(me, arguments);

                    var lines = [];
                    lines = pushOrConcat(lines, beforeFooter);
                    lines = pushOrConcat(lines, footer);
                    lines = pushOrConcat(lines, afterFooter);

                    return lines;
                },

                update: function(changed) {
                    var me = this;
                    var opts = me._options;

                    // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition
                    // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time
                    // which breaks any animations.
                    var existingModel = me._model;
                    var model = me._model = getBaseModel(opts);
                    var active = me._active;

                    var data = me._data;

                    // In the case where active.length === 0 we need to keep these at existing values for good animations
                    var alignment = {
                        xAlign: existingModel.xAlign,
                        yAlign: existingModel.yAlign
                    };
                    var backgroundPoint = {
                        x: existingModel.x,
                        y: existingModel.y
                    };
                    var tooltipSize = {
                        width: existingModel.width,
                        height: existingModel.height
                    };
                    var tooltipPosition = {
                        x: existingModel.caretX,
                        y: existingModel.caretY
                    };

                    var i, len;

                    if (active.length) {
                        model.opacity = 1;

                        var labelColors = [];
                        var labelTextColors = [];
                        tooltipPosition = Chart.Tooltip.positioners[opts.position].call(me, active, me._eventPosition);

                        var tooltipItems = [];
                        for (i = 0, len = active.length; i < len; ++i) {
                            tooltipItems.push(createTooltipItem(active[i]));
                        }

                        // If the user provided a filter function, use it to modify the tooltip items
                        if (opts.filter) {
                            tooltipItems = tooltipItems.filter(function(a) {
                                return opts.filter(a, data);
                            });
                        }

                        // If the user provided a sorting function, use it to modify the tooltip items
                        if (opts.itemSort) {
                            tooltipItems = tooltipItems.sort(function(a, b) {
                                return opts.itemSort(a, b, data);
                            });
                        }

                        // Determine colors for boxes
                        helpers.each(tooltipItems, function(tooltipItem) {
                            labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));
                            labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));
                        });


                        // Build the Text Lines
                        model.title = me.getTitle(tooltipItems, data);
                        model.beforeBody = me.getBeforeBody(tooltipItems, data);
                        model.body = me.getBody(tooltipItems, data);
                        model.afterBody = me.getAfterBody(tooltipItems, data);
                        model.footer = me.getFooter(tooltipItems, data);

                        // Initial positioning and colors
                        model.x = Math.round(tooltipPosition.x);
                        model.y = Math.round(tooltipPosition.y);
                        model.caretPadding = opts.caretPadding;
                        model.labelColors = labelColors;
                        model.labelTextColors = labelTextColors;

                        // data points
                        model.dataPoints = tooltipItems;

                        // We need to determine alignment of the tooltip
                        tooltipSize = getTooltipSize(this, model);
                        alignment = determineAlignment(this, tooltipSize);
                        // Final Size and Position
                        backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment);
                    } else {
                        model.opacity = 0;
                    }

                    model.xAlign = alignment.xAlign;
                    model.yAlign = alignment.yAlign;
                    model.x = backgroundPoint.x;
                    model.y = backgroundPoint.y;
                    model.width = tooltipSize.width;
                    model.height = tooltipSize.height;

                    // Point where the caret on the tooltip points to
                    model.caretX = tooltipPosition.x;
                    model.caretY = tooltipPosition.y;

                    me._model = model;

                    if (changed && opts.custom) {
                        opts.custom.call(me, model);
                    }

                    return me;
                },
                drawCaret: function(tooltipPoint, size) {
                    var ctx = this._chart.ctx;
                    var vm = this._view;
                    var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);

                    ctx.lineTo(caretPosition.x1, caretPosition.y1);
                    ctx.lineTo(caretPosition.x2, caretPosition.y2);
                    ctx.lineTo(caretPosition.x3, caretPosition.y3);
                },
                getCaretPosition: function(tooltipPoint, size, vm) {
                    var x1, x2, x3, y1, y2, y3;
                    var caretSize = vm.caretSize;
                    var cornerRadius = vm.cornerRadius;
                    var xAlign = vm.xAlign;
                    var yAlign = vm.yAlign;
                    var ptX = tooltipPoint.x;
                    var ptY = tooltipPoint.y;
                    var width = size.width;
                    var height = size.height;

                    if (yAlign === 'center') {
                        y2 = ptY + (height / 2);

                        if (xAlign === 'left') {
                            x1 = ptX;
                            x2 = x1 - caretSize;
                            x3 = x1;

                            y1 = y2 + caretSize;
                            y3 = y2 - caretSize;
                        } else {
                            x1 = ptX + width;
                            x2 = x1 + caretSize;
                            x3 = x1;

                            y1 = y2 - caretSize;
                            y3 = y2 + caretSize;
                        }
                    } else {
                        if (xAlign === 'left') {
                            x2 = ptX + cornerRadius + (caretSize);
                            x1 = x2 - caretSize;
                            x3 = x2 + caretSize;
                        } else if (xAlign === 'right') {
                            x2 = ptX + width - cornerRadius - caretSize;
                            x1 = x2 - caretSize;
                            x3 = x2 + caretSize;
                        } else {
                            x2 = ptX + (width / 2);
                            x1 = x2 - caretSize;
                            x3 = x2 + caretSize;
                        }
                        if (yAlign === 'top') {
                            y1 = ptY;
                            y2 = y1 - caretSize;
                            y3 = y1;
                        } else {
                            y1 = ptY + height;
                            y2 = y1 + caretSize;
                            y3 = y1;
                            // invert drawing order
                            var tmp = x3;
                            x3 = x1;
                            x1 = tmp;
                        }
                    }
                    return {x1: x1, x2: x2, x3: x3, y1: y1, y2: y2, y3: y3};
                },
                drawTitle: function(pt, vm, ctx, opacity) {
                    var title = vm.title;

                    if (title.length) {
                        ctx.textAlign = vm._titleAlign;
                        ctx.textBaseline = 'top';

                        var titleFontSize = vm.titleFontSize;
                        var titleSpacing = vm.titleSpacing;

                        ctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);
                        ctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);

                        var i, len;
                        for (i = 0, len = title.length; i < len; ++i) {
                            ctx.fillText(title[i], pt.x, pt.y);
                            pt.y += titleFontSize + titleSpacing; // Line Height and spacing

                            if (i + 1 === title.length) {
                                pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing
                            }
                        }
                    }
                },
                drawBody: function(pt, vm, ctx, opacity) {
                    var bodyFontSize = vm.bodyFontSize;
                    var bodySpacing = vm.bodySpacing;
                    var body = vm.body;

                    ctx.textAlign = vm._bodyAlign;
                    ctx.textBaseline = 'top';
                    ctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);

                    // Before Body
                    var xLinePadding = 0;
                    var fillLineOfText = function(line) {
                        ctx.fillText(line, pt.x + xLinePadding, pt.y);
                        pt.y += bodyFontSize + bodySpacing;
                    };

                    // Before body lines
                    ctx.fillStyle = mergeOpacity(vm.bodyFontColor, opacity);
                    helpers.each(vm.beforeBody, fillLineOfText);

                    var drawColorBoxes = vm.displayColors;
                    xLinePadding = drawColorBoxes ? (bodyFontSize + 2) : 0;

                    // Draw body lines now
                    helpers.each(body, function(bodyItem, i) {
                        var textColor = mergeOpacity(vm.labelTextColors[i], opacity);
                        ctx.fillStyle = textColor;
                        helpers.each(bodyItem.before, fillLineOfText);

                        helpers.each(bodyItem.lines, function(line) {
                            // Draw Legend-like boxes if needed
                            if (drawColorBoxes) {
                                // Fill a white rect so that colours merge nicely if the opacity is < 1
                                ctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);
                                ctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize);

                                // Border
                                ctx.lineWidth = 1;
                                ctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);
                                ctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize);

                                // Inner square
                                ctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);
                                ctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);
                                ctx.fillStyle = textColor;
                            }

                            fillLineOfText(line);
                        });

                        helpers.each(bodyItem.after, fillLineOfText);
                    });

                    // Reset back to 0 for after body
                    xLinePadding = 0;

                    // After body lines
                    helpers.each(vm.afterBody, fillLineOfText);
                    pt.y -= bodySpacing; // Remove last body spacing
                },
                drawFooter: function(pt, vm, ctx, opacity) {
                    var footer = vm.footer;

                    if (footer.length) {
                        pt.y += vm.footerMarginTop;

                        ctx.textAlign = vm._footerAlign;
                        ctx.textBaseline = 'top';

                        ctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);
                        ctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);

                        helpers.each(footer, function(line) {
                            ctx.fillText(line, pt.x, pt.y);
                            pt.y += vm.footerFontSize + vm.footerSpacing;
                        });
                    }
                },
                drawBackground: function(pt, vm, ctx, tooltipSize, opacity) {
                    ctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);
                    ctx.strokeStyle = mergeOpacity(vm.borderColor, opacity);
                    ctx.lineWidth = vm.borderWidth;
                    var xAlign = vm.xAlign;
                    var yAlign = vm.yAlign;
                    var x = pt.x;
                    var y = pt.y;
                    var width = tooltipSize.width;
                    var height = tooltipSize.height;
                    var radius = vm.cornerRadius;

                    ctx.beginPath();
                    ctx.moveTo(x + radius, y);
                    if (yAlign === 'top') {
                        this.drawCaret(pt, tooltipSize);
                    }
                    ctx.lineTo(x + width - radius, y);
                    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);
                    if (yAlign === 'center' && xAlign === 'right') {
                        this.drawCaret(pt, tooltipSize);
                    }
                    ctx.lineTo(x + width, y + height - radius);
                    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);
                    if (yAlign === 'bottom') {
                        this.drawCaret(pt, tooltipSize);
                    }
                    ctx.lineTo(x + radius, y + height);
                    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);
                    if (yAlign === 'center' && xAlign === 'left') {
                        this.drawCaret(pt, tooltipSize);
                    }
                    ctx.lineTo(x, y + radius);
                    ctx.quadraticCurveTo(x, y, x + radius, y);
                    ctx.closePath();

                    ctx.fill();

                    if (vm.borderWidth > 0) {
                        ctx.stroke();
                    }
                },
                draw: function() {
                    var ctx = this._chart.ctx;
                    var vm = this._view;

                    if (vm.opacity === 0) {
                        return;
                    }

                    var tooltipSize = {
                        width: vm.width,
                        height: vm.height
                    };
                    var pt = {
                        x: vm.x,
                        y: vm.y
                    };

                    // IE11/Edge does not like very small opacities, so snap to 0
                    var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;

                    // Truthy/falsey value for empty tooltip
                    var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;

                    if (this._options.enabled && hasTooltipContent) {
                        // Draw Background
                        this.drawBackground(pt, vm, ctx, tooltipSize, opacity);

                        // Draw Title, Body, and Footer
                        pt.x += vm.xPadding;
                        pt.y += vm.yPadding;

                        // Titles
                        this.drawTitle(pt, vm, ctx, opacity);

                        // Body
                        this.drawBody(pt, vm, ctx, opacity);

                        // Footer
                        this.drawFooter(pt, vm, ctx, opacity);
                    }
                },

                /**
                 * Handle an event
                 * @private
                 * @param {IEvent} event - The event to handle
                 * @returns {Boolean} true if the tooltip changed
                 */
                handleEvent: function(e) {
                    var me = this;
                    var options = me._options;
                    var changed = false;

                    me._lastActive = me._lastActive || [];

                    // Find Active Elements for tooltips
                    if (e.type === 'mouseout') {
                        me._active = [];
                    } else {
                        me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);
                    }

                    // Remember Last Actives
                    changed = !helpers.arrayEquals(me._active, me._lastActive);

                    // If tooltip didn't change, do not handle the target event
                    if (!changed) {
                        return false;
                    }

                    me._lastActive = me._active;

                    if (options.enabled || options.custom) {
                        me._eventPosition = {
                            x: e.x,
                            y: e.y
                        };

                        var model = me._model;
                        me.update(true);
                        me.pivot();

                        // See if our tooltip position changed
                        changed |= (model.x !== me._model.x) || (model.y !== me._model.y);
                    }

                    return changed;
                }
            });

            /**
             * @namespace Chart.Tooltip.positioners
             */
            Chart.Tooltip.positioners = {
                /**
                 * Average mode places the tooltip at the average position of the elements shown
                 * @function Chart.Tooltip.positioners.average
                 * @param elements {ChartElement[]} the elements being displayed in the tooltip
                 * @returns {Point} tooltip position
                 */
                average: function(elements) {
                    if (!elements.length) {
                        return false;
                    }

                    var i, len;
                    var x = 0;
                    var y = 0;
                    var count = 0;

                    for (i = 0, len = elements.length; i < len; ++i) {
                        var el = elements[i];
                        if (el && el.hasValue()) {
                            var pos = el.tooltipPosition();
                            x += pos.x;
                            y += pos.y;
                            ++count;
                        }
                    }

                    return {
                        x: Math.round(x / count),
                        y: Math.round(y / count)
                    };
                },

                /**
                 * Gets the tooltip position nearest of the item nearest to the event position
                 * @function Chart.Tooltip.positioners.nearest
                 * @param elements {Chart.Element[]} the tooltip elements
                 * @param eventPosition {Point} the position of the event in canvas coordinates
                 * @returns {Point} the tooltip position
                 */
                nearest: function(elements, eventPosition) {
                    var x = eventPosition.x;
                    var y = eventPosition.y;
                    var minDistance = Number.POSITIVE_INFINITY;
                    var i, len, nearestElement;

                    for (i = 0, len = elements.length; i < len; ++i) {
                        var el = elements[i];
                        if (el && el.hasValue()) {
                            var center = el.getCenterPoint();
                            var d = helpers.distanceBetweenPoints(eventPosition, center);

                            if (d < minDistance) {
                                minDistance = d;
                                nearestElement = el;
                            }
                        }
                    }

                    if (nearestElement) {
                        var tp = nearestElement.tooltipPosition();
                        x = tp.x;
                        y = tp.y;
                    }

                    return {
                        x: x,
                        y: y
                    };
                }
            };
        };

    },{"25":25,"26":26,"45":45}],36:[function(require,module,exports){
        'use strict';

        var defaults = require(25);
        var Element = require(26);
        var helpers = require(45);

        defaults._set('global', {
            elements: {
                arc: {
                    backgroundColor: defaults.global.defaultColor,
                    borderColor: '#fff',
                    borderWidth: 2
                }
            }
        });

        module.exports = Element.extend({
            inLabelRange: function(mouseX) {
                var vm = this._view;

                if (vm) {
                    return (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));
                }
                return false;
            },

            inRange: function(chartX, chartY) {
                var vm = this._view;

                if (vm) {
                    var pointRelativePosition = helpers.getAngleFromPoint(vm, {x: chartX, y: chartY});
                    var	angle = pointRelativePosition.angle;
                    var distance = pointRelativePosition.distance;

                    // Sanitise angle range
                    var startAngle = vm.startAngle;
                    var endAngle = vm.endAngle;
                    while (endAngle < startAngle) {
                        endAngle += 2.0 * Math.PI;
                    }
                    while (angle > endAngle) {
                        angle -= 2.0 * Math.PI;
                    }
                    while (angle < startAngle) {
                        angle += 2.0 * Math.PI;
                    }

                    // Check if within the range of the open/close angle
                    var betweenAngles = (angle >= startAngle && angle <= endAngle);
                    var withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);

                    return (betweenAngles && withinRadius);
                }
                return false;
            },

            getCenterPoint: function() {
                var vm = this._view;
                var halfAngle = (vm.startAngle + vm.endAngle) / 2;
                var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;
                return {
                    x: vm.x + Math.cos(halfAngle) * halfRadius,
                    y: vm.y + Math.sin(halfAngle) * halfRadius
                };
            },

            getArea: function() {
                var vm = this._view;
                return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));
            },

            tooltipPosition: function() {
                var vm = this._view;
                var centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2);
                var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;

                return {
                    x: vm.x + (Math.cos(centreAngle) * rangeFromCentre),
                    y: vm.y + (Math.sin(centreAngle) * rangeFromCentre)
                };
            },

            draw: function() {
                var ctx = this._chart.ctx;
                var vm = this._view;
                var sA = vm.startAngle;
                var eA = vm.endAngle;

                ctx.beginPath();

                ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);
                ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);

                ctx.closePath();
                ctx.strokeStyle = vm.borderColor;
                ctx.lineWidth = vm.borderWidth;

                ctx.fillStyle = vm.backgroundColor;

                ctx.fill();
                ctx.lineJoin = 'bevel';

                if (vm.borderWidth) {
                    ctx.stroke();
                }
            }
        });

    },{"25":25,"26":26,"45":45}],37:[function(require,module,exports){
        'use strict';

        var defaults = require(25);
        var Element = require(26);
        var helpers = require(45);

        var globalDefaults = defaults.global;

        defaults._set('global', {
            elements: {
                line: {
                    tension: 0.4,
                    backgroundColor: globalDefaults.defaultColor,
                    borderWidth: 3,
                    borderColor: globalDefaults.defaultColor,
                    borderCapStyle: 'butt',
                    borderDash: [],
                    borderDashOffset: 0.0,
                    borderJoinStyle: 'miter',
                    capBezierPoints: true,
                    fill: true, // do we fill in the area between the line and its base axis
                }
            }
        });

        module.exports = Element.extend({
            draw: function() {
                var me = this;
                var vm = me._view;
                var ctx = me._chart.ctx;
                var spanGaps = vm.spanGaps;
                var points = me._children.slice(); // clone array
                var globalOptionLineElements = globalDefaults.elements.line;
                var lastDrawnIndex = -1;
                var index, current, previous, currentVM;

                // If we are looping, adding the first point again
                if (me._loop && points.length) {
                    points.push(points[0]);
                }

                ctx.save();

                // Stroke Line Options
                ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;

                // IE 9 and 10 do not support line dash
                if (ctx.setLineDash) {
                    ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);
                }

                ctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;
                ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;
                ctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;
                ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;

                // Stroke Line
                ctx.beginPath();
                lastDrawnIndex = -1;

                for (index = 0; index < points.length; ++index) {
                    current = points[index];
                    previous = helpers.previousItem(points, index);
                    currentVM = current._view;

                    // First point moves to it's starting position no matter what
                    if (index === 0) {
                        if (!currentVM.skip) {
                            ctx.moveTo(currentVM.x, currentVM.y);
                            lastDrawnIndex = index;
                        }
                    } else {
                        previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];

                        if (!currentVM.skip) {
                            if ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {
                                // There was a gap and this is the first point after the gap
                                ctx.moveTo(currentVM.x, currentVM.y);
                            } else {
                                // Line to next point
                                helpers.canvas.lineTo(ctx, previous._view, current._view);
                            }
                            lastDrawnIndex = index;
                        }
                    }
                }

                ctx.stroke();
                ctx.restore();
            }
        });

    },{"25":25,"26":26,"45":45}],38:[function(require,module,exports){
        'use strict';

        var defaults = require(25);
        var Element = require(26);
        var helpers = require(45);

        var defaultColor = defaults.global.defaultColor;

        defaults._set('global', {
            elements: {
                point: {
                    radius: 3,
                    pointStyle: 'circle',
                    backgroundColor: defaultColor,
                    borderColor: defaultColor,
                    borderWidth: 1,
                    // Hover
                    hitRadius: 1,
                    hoverRadius: 4,
                    hoverBorderWidth: 1
                }
            }
        });

        function xRange(mouseX) {
            var vm = this._view;
            return vm ? (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hitRadius, 2)) : false;
        }

        function yRange(mouseY) {
            var vm = this._view;
            return vm ? (Math.pow(mouseY - vm.y, 2) < Math.pow(vm.radius + vm.hitRadius, 2)) : false;
        }

        module.exports = Element.extend({
            inRange: function(mouseX, mouseY) {
                var vm = this._view;
                return vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;
            },

            inLabelRange: xRange,
            inXRange: xRange,
            inYRange: yRange,

            getCenterPoint: function() {
                var vm = this._view;
                return {
                    x: vm.x,
                    y: vm.y
                };
            },

            getArea: function() {
                return Math.PI * Math.pow(this._view.radius, 2);
            },

            tooltipPosition: function() {
                var vm = this._view;
                return {
                    x: vm.x,
                    y: vm.y,
                    padding: vm.radius + vm.borderWidth
                };
            },

            draw: function(chartArea) {
                var vm = this._view;
                var model = this._model;
                var ctx = this._chart.ctx;
                var pointStyle = vm.pointStyle;
                var radius = vm.radius;
                var x = vm.x;
                var y = vm.y;
                var color = helpers.color;
                var errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)
                var ratio = 0;

                if (vm.skip) {
                    return;
                }

                ctx.strokeStyle = vm.borderColor || defaultColor;
                ctx.lineWidth = helpers.valueOrDefault(vm.borderWidth, defaults.global.elements.point.borderWidth);
                ctx.fillStyle = vm.backgroundColor || defaultColor;

                // Cliping for Points.
                // going out from inner charArea?
                if ((chartArea !== undefined) && ((model.x < chartArea.left) || (chartArea.right * errMargin < model.x) || (model.y < chartArea.top) || (chartArea.bottom * errMargin < model.y))) {
                    // Point fade out
                    if (model.x < chartArea.left) {
                        ratio = (x - model.x) / (chartArea.left - model.x);
                    } else if (chartArea.right * errMargin < model.x) {
                        ratio = (model.x - x) / (model.x - chartArea.right);
                    } else if (model.y < chartArea.top) {
                        ratio = (y - model.y) / (chartArea.top - model.y);
                    } else if (chartArea.bottom * errMargin < model.y) {
                        ratio = (model.y - y) / (model.y - chartArea.bottom);
                    }
                    ratio = Math.round(ratio * 100) / 100;
                    ctx.strokeStyle = color(ctx.strokeStyle).alpha(ratio).rgbString();
                    ctx.fillStyle = color(ctx.fillStyle).alpha(ratio).rgbString();
                }

                helpers.canvas.drawPoint(ctx, pointStyle, radius, x, y);
            }
        });

    },{"25":25,"26":26,"45":45}],39:[function(require,module,exports){
        'use strict';

        var defaults = require(25);
        var Element = require(26);

        defaults._set('global', {
            elements: {
                rectangle: {
                    backgroundColor: defaults.global.defaultColor,
                    borderColor: defaults.global.defaultColor,
                    borderSkipped: 'bottom',
                    borderWidth: 0
                }
            }
        });

        function isVertical(bar) {
            return bar._view.width !== undefined;
        }

        /**
         * Helper function to get the bounds of the bar regardless of the orientation
         * @param bar {Chart.Element.Rectangle} the bar
         * @return {Bounds} bounds of the bar
         * @private
         */
        function getBarBounds(bar) {
            var vm = bar._view;
            var x1, x2, y1, y2;

            if (isVertical(bar)) {
                // vertical
                var halfWidth = vm.width / 2;
                x1 = vm.x - halfWidth;
                x2 = vm.x + halfWidth;
                y1 = Math.min(vm.y, vm.base);
                y2 = Math.max(vm.y, vm.base);
            } else {
                // horizontal bar
                var halfHeight = vm.height / 2;
                x1 = Math.min(vm.x, vm.base);
                x2 = Math.max(vm.x, vm.base);
                y1 = vm.y - halfHeight;
                y2 = vm.y + halfHeight;
            }

            return {
                left: x1,
                top: y1,
                right: x2,
                bottom: y2
            };
        }

        module.exports = Element.extend({
            draw: function() {
                var ctx = this._chart.ctx;
                var vm = this._view;
                var left, right, top, bottom, signX, signY, borderSkipped;
                var borderWidth = vm.borderWidth;

                if (!vm.horizontal) {
                    // bar
                    left = vm.x - vm.width / 2;
                    right = vm.x + vm.width / 2;
                    top = vm.y;
                    bottom = vm.base;
                    signX = 1;
                    signY = bottom > top ? 1 : -1;
                    borderSkipped = vm.borderSkipped || 'bottom';
                } else {
                    // horizontal bar
                    left = vm.base;
                    right = vm.x;
                    top = vm.y - vm.height / 2;
                    bottom = vm.y + vm.height / 2;
                    signX = right > left ? 1 : -1;
                    signY = 1;
                    borderSkipped = vm.borderSkipped || 'left';
                }

                // Canvas doesn't allow us to stroke inside the width so we can
                // adjust the sizes to fit if we're setting a stroke on the line
                if (borderWidth) {
                    // borderWidth shold be less than bar width and bar height.
                    var barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));
                    borderWidth = borderWidth > barSize ? barSize : borderWidth;
                    var halfStroke = borderWidth / 2;
                    // Adjust borderWidth when bar top position is near vm.base(zero).
                    var borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);
                    var borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);
                    var borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);
                    var borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);
                    // not become a vertical line?
                    if (borderLeft !== borderRight) {
                        top = borderTop;
                        bottom = borderBottom;
                    }
                    // not become a horizontal line?
                    if (borderTop !== borderBottom) {
                        left = borderLeft;
                        right = borderRight;
                    }
                }

                ctx.beginPath();
                ctx.fillStyle = vm.backgroundColor;
                ctx.strokeStyle = vm.borderColor;
                ctx.lineWidth = borderWidth;

                // Corner points, from bottom-left to bottom-right clockwise
                // | 1 2 |
                // | 0 3 |
                var corners = [
                    [left, bottom],
                    [left, top],
                    [right, top],
                    [right, bottom]
                ];

                // Find first (starting) corner with fallback to 'bottom'
                var borders = ['bottom', 'left', 'top', 'right'];
                var startCorner = borders.indexOf(borderSkipped, 0);
                if (startCorner === -1) {
                    startCorner = 0;
                }

                function cornerAt(index) {
                    return corners[(startCorner + index) % 4];
                }

                // Draw rectangle from 'startCorner'
                var corner = cornerAt(0);
                ctx.moveTo(corner[0], corner[1]);

                for (var i = 1; i < 4; i++) {
                    corner = cornerAt(i);
                    ctx.lineTo(corner[0], corner[1]);
                }

                ctx.fill();
                if (borderWidth) {
                    ctx.stroke();
                }
            },

            height: function() {
                var vm = this._view;
                return vm.base - vm.y;
            },

            inRange: function(mouseX, mouseY) {
                var inRange = false;

                if (this._view) {
                    var bounds = getBarBounds(this);
                    inRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;
                }

                return inRange;
            },

            inLabelRange: function(mouseX, mouseY) {
                var me = this;
                if (!me._view) {
                    return false;
                }

                var inRange = false;
                var bounds = getBarBounds(me);

                if (isVertical(me)) {
                    inRange = mouseX >= bounds.left && mouseX <= bounds.right;
                } else {
                    inRange = mouseY >= bounds.top && mouseY <= bounds.bottom;
                }

                return inRange;
            },

            inXRange: function(mouseX) {
                var bounds = getBarBounds(this);
                return mouseX >= bounds.left && mouseX <= bounds.right;
            },

            inYRange: function(mouseY) {
                var bounds = getBarBounds(this);
                return mouseY >= bounds.top && mouseY <= bounds.bottom;
            },

            getCenterPoint: function() {
                var vm = this._view;
                var x, y;
                if (isVertical(this)) {
                    x = vm.x;
                    y = (vm.y + vm.base) / 2;
                } else {
                    x = (vm.x + vm.base) / 2;
                    y = vm.y;
                }

                return {x: x, y: y};
            },

            getArea: function() {
                var vm = this._view;
                return vm.width * Math.abs(vm.y - vm.base);
            },

            tooltipPosition: function() {
                var vm = this._view;
                return {
                    x: vm.x,
                    y: vm.y
                };
            }
        });

    },{"25":25,"26":26}],40:[function(require,module,exports){
        'use strict';

        module.exports = {};
        module.exports.Arc = require(36);
        module.exports.Line = require(37);
        module.exports.Point = require(38);
        module.exports.Rectangle = require(39);

    },{"36":36,"37":37,"38":38,"39":39}],41:[function(require,module,exports){
        'use strict';

        var helpers = require(42);

        /**
         * @namespace Chart.helpers.canvas
         */
        var exports = module.exports = {
            /**
             * Clears the entire canvas associated to the given `chart`.
             * @param {Chart} chart - The chart for which to clear the canvas.
             */
            clear: function(chart) {
                chart.ctx.clearRect(0, 0, chart.width, chart.height);
            },

            /**
             * Creates a "path" for a rectangle with rounded corners at position (x, y) with a
             * given size (width, height) and the same `radius` for all corners.
             * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.
             * @param {Number} x - The x axis of the coordinate for the rectangle starting point.
             * @param {Number} y - The y axis of the coordinate for the rectangle starting point.
             * @param {Number} width - The rectangle's width.
             * @param {Number} height - The rectangle's height.
             * @param {Number} radius - The rounded amount (in pixels) for the four corners.
             * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?
             */
            roundedRect: function(ctx, x, y, width, height, radius) {
                if (radius) {
                    var rx = Math.min(radius, width / 2);
                    var ry = Math.min(radius, height / 2);

                    ctx.moveTo(x + rx, y);
                    ctx.lineTo(x + width - rx, y);
                    ctx.quadraticCurveTo(x + width, y, x + width, y + ry);
                    ctx.lineTo(x + width, y + height - ry);
                    ctx.quadraticCurveTo(x + width, y + height, x + width - rx, y + height);
                    ctx.lineTo(x + rx, y + height);
                    ctx.quadraticCurveTo(x, y + height, x, y + height - ry);
                    ctx.lineTo(x, y + ry);
                    ctx.quadraticCurveTo(x, y, x + rx, y);
                } else {
                    ctx.rect(x, y, width, height);
                }
            },

            drawPoint: function(ctx, style, radius, x, y) {
                var type, edgeLength, xOffset, yOffset, height, size;

                if (style && typeof style === 'object') {
                    type = style.toString();
                    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {
                        ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);
                        return;
                    }
                }

                if (isNaN(radius) || radius <= 0) {
                    return;
                }

                switch (style) {
                    // Default includes circle
                    default:
                        ctx.beginPath();
                        ctx.arc(x, y, radius, 0, Math.PI * 2);
                        ctx.closePath();
                        ctx.fill();
                        break;
                    case 'triangle':
                        ctx.beginPath();
                        edgeLength = 3 * radius / Math.sqrt(3);
                        height = edgeLength * Math.sqrt(3) / 2;
                        ctx.moveTo(x - edgeLength / 2, y + height / 3);
                        ctx.lineTo(x + edgeLength / 2, y + height / 3);
                        ctx.lineTo(x, y - 2 * height / 3);
                        ctx.closePath();
                        ctx.fill();
                        break;
                    case 'rect':
                        size = 1 / Math.SQRT2 * radius;
                        ctx.beginPath();
                        ctx.fillRect(x - size, y - size, 2 * size, 2 * size);
                        ctx.strokeRect(x - size, y - size, 2 * size, 2 * size);
                        break;
                    case 'rectRounded':
                        var offset = radius / Math.SQRT2;
                        var leftX = x - offset;
                        var topY = y - offset;
                        var sideSize = Math.SQRT2 * radius;
                        ctx.beginPath();
                        this.roundedRect(ctx, leftX, topY, sideSize, sideSize, radius / 2);
                        ctx.closePath();
                        ctx.fill();
                        break;
                    case 'rectRot':
                        size = 1 / Math.SQRT2 * radius;
                        ctx.beginPath();
                        ctx.moveTo(x - size, y);
                        ctx.lineTo(x, y + size);
                        ctx.lineTo(x + size, y);
                        ctx.lineTo(x, y - size);
                        ctx.closePath();
                        ctx.fill();
                        break;
                    case 'cross':
                        ctx.beginPath();
                        ctx.moveTo(x, y + radius);
                        ctx.lineTo(x, y - radius);
                        ctx.moveTo(x - radius, y);
                        ctx.lineTo(x + radius, y);
                        ctx.closePath();
                        break;
                    case 'crossRot':
                        ctx.beginPath();
                        xOffset = Math.cos(Math.PI / 4) * radius;
                        yOffset = Math.sin(Math.PI / 4) * radius;
                        ctx.moveTo(x - xOffset, y - yOffset);
                        ctx.lineTo(x + xOffset, y + yOffset);
                        ctx.moveTo(x - xOffset, y + yOffset);
                        ctx.lineTo(x + xOffset, y - yOffset);
                        ctx.closePath();
                        break;
                    case 'star':
                        ctx.beginPath();
                        ctx.moveTo(x, y + radius);
                        ctx.lineTo(x, y - radius);
                        ctx.moveTo(x - radius, y);
                        ctx.lineTo(x + radius, y);
                        xOffset = Math.cos(Math.PI / 4) * radius;
                        yOffset = Math.sin(Math.PI / 4) * radius;
                        ctx.moveTo(x - xOffset, y - yOffset);
                        ctx.lineTo(x + xOffset, y + yOffset);
                        ctx.moveTo(x - xOffset, y + yOffset);
                        ctx.lineTo(x + xOffset, y - yOffset);
                        ctx.closePath();
                        break;
                    case 'line':
                        ctx.beginPath();
                        ctx.moveTo(x - radius, y);
                        ctx.lineTo(x + radius, y);
                        ctx.closePath();
                        break;
                    case 'dash':
                        ctx.beginPath();
                        ctx.moveTo(x, y);
                        ctx.lineTo(x + radius, y);
                        ctx.closePath();
                        break;
                }

                ctx.stroke();
            },

            clipArea: function(ctx, area) {
                ctx.save();
                ctx.beginPath();
                ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);
                ctx.clip();
            },

            unclipArea: function(ctx) {
                ctx.restore();
            },

            lineTo: function(ctx, previous, target, flip) {
                if (target.steppedLine) {
                    if ((target.steppedLine === 'after' && !flip) || (target.steppedLine !== 'after' && flip)) {
                        ctx.lineTo(previous.x, target.y);
                    } else {
                        ctx.lineTo(target.x, previous.y);
                    }
                    ctx.lineTo(target.x, target.y);
                    return;
                }

                if (!target.tension) {
                    ctx.lineTo(target.x, target.y);
                    return;
                }

                ctx.bezierCurveTo(
                    flip ? previous.controlPointPreviousX : previous.controlPointNextX,
                    flip ? previous.controlPointPreviousY : previous.controlPointNextY,
                    flip ? target.controlPointNextX : target.controlPointPreviousX,
                    flip ? target.controlPointNextY : target.controlPointPreviousY,
                    target.x,
                    target.y);
            }
        };

// DEPRECATIONS

        /**
         * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.
         * @namespace Chart.helpers.clear
         * @deprecated since version 2.7.0
         * @todo remove at version 3
         * @private
         */
        helpers.clear = exports.clear;

        /**
         * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.
         * @namespace Chart.helpers.drawRoundedRectangle
         * @deprecated since version 2.7.0
         * @todo remove at version 3
         * @private
         */
        helpers.drawRoundedRectangle = function(ctx) {
            ctx.beginPath();
            exports.roundedRect.apply(exports, arguments);
            ctx.closePath();
        };

    },{"42":42}],42:[function(require,module,exports){
        'use strict';

        /**
         * @namespace Chart.helpers
         */
        var helpers = {
            /**
             * An empty function that can be used, for example, for optional callback.
             */
            noop: function() {},

            /**
             * Returns a unique id, sequentially generated from a global variable.
             * @returns {Number}
             * @function
             */
            uid: (function() {
                var id = 0;
                return function() {
                    return id++;
                };
            }()),

            /**
             * Returns true if `value` is neither null nor undefined, else returns false.
             * @param {*} value - The value to test.
             * @returns {Boolean}
             * @since 2.7.0
             */
            isNullOrUndef: function(value) {
                return value === null || typeof value === 'undefined';
            },

            /**
             * Returns true if `value` is an array, else returns false.
             * @param {*} value - The value to test.
             * @returns {Boolean}
             * @function
             */
            isArray: Array.isArray ? Array.isArray : function(value) {
                return Object.prototype.toString.call(value) === '[object Array]';
            },

            /**
             * Returns true if `value` is an object (excluding null), else returns false.
             * @param {*} value - The value to test.
             * @returns {Boolean}
             * @since 2.7.0
             */
            isObject: function(value) {
                return value !== null && Object.prototype.toString.call(value) === '[object Object]';
            },

            /**
             * Returns `value` if defined, else returns `defaultValue`.
             * @param {*} value - The value to return if defined.
             * @param {*} defaultValue - The value to return if `value` is undefined.
             * @returns {*}
             */
            valueOrDefault: function(value, defaultValue) {
                return typeof value === 'undefined' ? defaultValue : value;
            },

            /**
             * Returns value at the given `index` in array if defined, else returns `defaultValue`.
             * @param {Array} value - The array to lookup for value at `index`.
             * @param {Number} index - The index in `value` to lookup for value.
             * @param {*} defaultValue - The value to return if `value[index]` is undefined.
             * @returns {*}
             */
            valueAtIndexOrDefault: function(value, index, defaultValue) {
                return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);
            },

            /**
             * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the
             * value returned by `fn`. If `fn` is not a function, this method returns undefined.
             * @param {Function} fn - The function to call.
             * @param {Array|undefined|null} args - The arguments with which `fn` should be called.
             * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.
             * @returns {*}
             */
            callback: function(fn, args, thisArg) {
                if (fn && typeof fn.call === 'function') {
                    return fn.apply(thisArg, args);
                }
            },

            /**
             * Note(SB) for performance sake, this method should only be used when loopable type
             * is unknown or in none intensive code (not called often and small loopable). Else
             * it's preferable to use a regular for() loop and save extra function calls.
             * @param {Object|Array} loopable - The object or array to be iterated.
             * @param {Function} fn - The function to call for each item.
             * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.
             * @param {Boolean} [reverse] - If true, iterates backward on the loopable.
             */
            each: function(loopable, fn, thisArg, reverse) {
                var i, len, keys;
                if (helpers.isArray(loopable)) {
                    len = loopable.length;
                    if (reverse) {
                        for (i = len - 1; i >= 0; i--) {
                            fn.call(thisArg, loopable[i], i);
                        }
                    } else {
                        for (i = 0; i < len; i++) {
                            fn.call(thisArg, loopable[i], i);
                        }
                    }
                } else if (helpers.isObject(loopable)) {
                    keys = Object.keys(loopable);
                    len = keys.length;
                    for (i = 0; i < len; i++) {
                        fn.call(thisArg, loopable[keys[i]], keys[i]);
                    }
                }
            },

            /**
             * Returns true if the `a0` and `a1` arrays have the same content, else returns false.
             * @see http://stackoverflow.com/a/14853974
             * @param {Array} a0 - The array to compare
             * @param {Array} a1 - The array to compare
             * @returns {Boolean}
             */
            arrayEquals: function(a0, a1) {
                var i, ilen, v0, v1;

                if (!a0 || !a1 || a0.length !== a1.length) {
                    return false;
                }

                for (i = 0, ilen = a0.length; i < ilen; ++i) {
                    v0 = a0[i];
                    v1 = a1[i];

                    if (v0 instanceof Array && v1 instanceof Array) {
                        if (!helpers.arrayEquals(v0, v1)) {
                            return false;
                        }
                    } else if (v0 !== v1) {
                        // NOTE: two different object instances will never be equal: {x:20} != {x:20}
                        return false;
                    }
                }

                return true;
            },

            /**
             * Returns a deep copy of `source` without keeping references on objects and arrays.
             * @param {*} source - The value to clone.
             * @returns {*}
             */
            clone: function(source) {
                if (helpers.isArray(source)) {
                    return source.map(helpers.clone);
                }

                if (helpers.isObject(source)) {
                    var target = {};
                    var keys = Object.keys(source);
                    var klen = keys.length;
                    var k = 0;

                    for (; k < klen; ++k) {
                        target[keys[k]] = helpers.clone(source[keys[k]]);
                    }

                    return target;
                }

                return source;
            },

            /**
             * The default merger when Chart.helpers.merge is called without merger option.
             * Note(SB): this method is also used by configMerge and scaleMerge as fallback.
             * @private
             */
            _merger: function(key, target, source, options) {
                var tval = target[key];
                var sval = source[key];

                if (helpers.isObject(tval) && helpers.isObject(sval)) {
                    helpers.merge(tval, sval, options);
                } else {
                    target[key] = helpers.clone(sval);
                }
            },

            /**
             * Merges source[key] in target[key] only if target[key] is undefined.
             * @private
             */
            _mergerIf: function(key, target, source) {
                var tval = target[key];
                var sval = source[key];

                if (helpers.isObject(tval) && helpers.isObject(sval)) {
                    helpers.mergeIf(tval, sval);
                } else if (!target.hasOwnProperty(key)) {
                    target[key] = helpers.clone(sval);
                }
            },

            /**
             * Recursively deep copies `source` properties into `target` with the given `options`.
             * IMPORTANT: `target` is not cloned and will be updated with `source` properties.
             * @param {Object} target - The target object in which all sources are merged into.
             * @param {Object|Array(Object)} source - Object(s) to merge into `target`.
             * @param {Object} [options] - Merging options:
             * @param {Function} [options.merger] - The merge method (key, target, source, options)
             * @returns {Object} The `target` object.
             */
            merge: function(target, source, options) {
                var sources = helpers.isArray(source) ? source : [source];
                var ilen = sources.length;
                var merge, i, keys, klen, k;

                if (!helpers.isObject(target)) {
                    return target;
                }

                options = options || {};
                merge = options.merger || helpers._merger;

                for (i = 0; i < ilen; ++i) {
                    source = sources[i];
                    if (!helpers.isObject(source)) {
                        continue;
                    }

                    keys = Object.keys(source);
                    for (k = 0, klen = keys.length; k < klen; ++k) {
                        merge(keys[k], target, source, options);
                    }
                }

                return target;
            },

            /**
             * Recursively deep copies `source` properties into `target` *only* if not defined in target.
             * IMPORTANT: `target` is not cloned and will be updated with `source` properties.
             * @param {Object} target - The target object in which all sources are merged into.
             * @param {Object|Array(Object)} source - Object(s) to merge into `target`.
             * @returns {Object} The `target` object.
             */
            mergeIf: function(target, source) {
                return helpers.merge(target, source, {merger: helpers._mergerIf});
            },

            /**
             * Applies the contents of two or more objects together into the first object.
             * @param {Object} target - The target object in which all objects are merged into.
             * @param {Object} arg1 - Object containing additional properties to merge in target.
             * @param {Object} argN - Additional objects containing properties to merge in target.
             * @returns {Object} The `target` object.
             */
            extend: function(target) {
                var setFn = function(value, key) {
                    target[key] = value;
                };
                for (var i = 1, ilen = arguments.length; i < ilen; ++i) {
                    helpers.each(arguments[i], setFn);
                }
                return target;
            },

            /**
             * Basic javascript inheritance based on the model created in Backbone.js
             */
            inherits: function(extensions) {
                var me = this;
                var ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {
                    return me.apply(this, arguments);
                };

                var Surrogate = function() {
                    this.constructor = ChartElement;
                };

                Surrogate.prototype = me.prototype;
                ChartElement.prototype = new Surrogate();
                ChartElement.extend = helpers.inherits;

                if (extensions) {
                    helpers.extend(ChartElement.prototype, extensions);
                }

                ChartElement.__super__ = me.prototype;
                return ChartElement;
            }
        };

        module.exports = helpers;

// DEPRECATIONS

        /**
         * Provided for backward compatibility, use Chart.helpers.callback instead.
         * @function Chart.helpers.callCallback
         * @deprecated since version 2.6.0
         * @todo remove at version 3
         * @private
         */
        helpers.callCallback = helpers.callback;

        /**
         * Provided for backward compatibility, use Array.prototype.indexOf instead.
         * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+
         * @function Chart.helpers.indexOf
         * @deprecated since version 2.7.0
         * @todo remove at version 3
         * @private
         */
        helpers.indexOf = function(array, item, fromIndex) {
            return Array.prototype.indexOf.call(array, item, fromIndex);
        };

        /**
         * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.
         * @function Chart.helpers.getValueOrDefault
         * @deprecated since version 2.7.0
         * @todo remove at version 3
         * @private
         */
        helpers.getValueOrDefault = helpers.valueOrDefault;

        /**
         * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.
         * @function Chart.helpers.getValueAtIndexOrDefault
         * @deprecated since version 2.7.0
         * @todo remove at version 3
         * @private
         */
        helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;

    },{}],43:[function(require,module,exports){
        'use strict';

        var helpers = require(42);

        /**
         * Easing functions adapted from Robert Penner's easing equations.
         * @namespace Chart.helpers.easingEffects
         * @see http://www.robertpenner.com/easing/
         */
        var effects = {
            linear: function(t) {
                return t;
            },

            easeInQuad: function(t) {
                return t * t;
            },

            easeOutQuad: function(t) {
                return -t * (t - 2);
            },

            easeInOutQuad: function(t) {
                if ((t /= 0.5) < 1) {
                    return 0.5 * t * t;
                }
                return -0.5 * ((--t) * (t - 2) - 1);
            },

            easeInCubic: function(t) {
                return t * t * t;
            },

            easeOutCubic: function(t) {
                return (t = t - 1) * t * t + 1;
            },

            easeInOutCubic: function(t) {
                if ((t /= 0.5) < 1) {
                    return 0.5 * t * t * t;
                }
                return 0.5 * ((t -= 2) * t * t + 2);
            },

            easeInQuart: function(t) {
                return t * t * t * t;
            },

            easeOutQuart: function(t) {
                return -((t = t - 1) * t * t * t - 1);
            },

            easeInOutQuart: function(t) {
                if ((t /= 0.5) < 1) {
                    return 0.5 * t * t * t * t;
                }
                return -0.5 * ((t -= 2) * t * t * t - 2);
            },

            easeInQuint: function(t) {
                return t * t * t * t * t;
            },

            easeOutQuint: function(t) {
                return (t = t - 1) * t * t * t * t + 1;
            },

            easeInOutQuint: function(t) {
                if ((t /= 0.5) < 1) {
                    return 0.5 * t * t * t * t * t;
                }
                return 0.5 * ((t -= 2) * t * t * t * t + 2);
            },

            easeInSine: function(t) {
                return -Math.cos(t * (Math.PI / 2)) + 1;
            },

            easeOutSine: function(t) {
                return Math.sin(t * (Math.PI / 2));
            },

            easeInOutSine: function(t) {
                return -0.5 * (Math.cos(Math.PI * t) - 1);
            },

            easeInExpo: function(t) {
                return (t === 0) ? 0 : Math.pow(2, 10 * (t - 1));
            },

            easeOutExpo: function(t) {
                return (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1;
            },

            easeInOutExpo: function(t) {
                if (t === 0) {
                    return 0;
                }
                if (t === 1) {
                    return 1;
                }
                if ((t /= 0.5) < 1) {
                    return 0.5 * Math.pow(2, 10 * (t - 1));
                }
                return 0.5 * (-Math.pow(2, -10 * --t) + 2);
            },

            easeInCirc: function(t) {
                if (t >= 1) {
                    return t;
                }
                return -(Math.sqrt(1 - t * t) - 1);
            },

            easeOutCirc: function(t) {
                return Math.sqrt(1 - (t = t - 1) * t);
            },

            easeInOutCirc: function(t) {
                if ((t /= 0.5) < 1) {
                    return -0.5 * (Math.sqrt(1 - t * t) - 1);
                }
                return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);
            },

            easeInElastic: function(t) {
                var s = 1.70158;
                var p = 0;
                var a = 1;
                if (t === 0) {
                    return 0;
                }
                if (t === 1) {
                    return 1;
                }
                if (!p) {
                    p = 0.3;
                }
                if (a < 1) {
                    a = 1;
                    s = p / 4;
                } else {
                    s = p / (2 * Math.PI) * Math.asin(1 / a);
                }
                return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));
            },

            easeOutElastic: function(t) {
                var s = 1.70158;
                var p = 0;
                var a = 1;
                if (t === 0) {
                    return 0;
                }
                if (t === 1) {
                    return 1;
                }
                if (!p) {
                    p = 0.3;
                }
                if (a < 1) {
                    a = 1;
                    s = p / 4;
                } else {
                    s = p / (2 * Math.PI) * Math.asin(1 / a);
                }
                return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;
            },

            easeInOutElastic: function(t) {
                var s = 1.70158;
                var p = 0;
                var a = 1;
                if (t === 0) {
                    return 0;
                }
                if ((t /= 0.5) === 2) {
                    return 1;
                }
                if (!p) {
                    p = 0.45;
                }
                if (a < 1) {
                    a = 1;
                    s = p / 4;
                } else {
                    s = p / (2 * Math.PI) * Math.asin(1 / a);
                }
                if (t < 1) {
                    return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));
                }
                return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;
            },
            easeInBack: function(t) {
                var s = 1.70158;
                return t * t * ((s + 1) * t - s);
            },

            easeOutBack: function(t) {
                var s = 1.70158;
                return (t = t - 1) * t * ((s + 1) * t + s) + 1;
            },

            easeInOutBack: function(t) {
                var s = 1.70158;
                if ((t /= 0.5) < 1) {
                    return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));
                }
                return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);
            },

            easeInBounce: function(t) {
                return 1 - effects.easeOutBounce(1 - t);
            },

            easeOutBounce: function(t) {
                if (t < (1 / 2.75)) {
                    return 7.5625 * t * t;
                }
                if (t < (2 / 2.75)) {
                    return 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;
                }
                if (t < (2.5 / 2.75)) {
                    return 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;
                }
                return 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;
            },

            easeInOutBounce: function(t) {
                if (t < 0.5) {
                    return effects.easeInBounce(t * 2) * 0.5;
                }
                return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;
            }
        };

        module.exports = {
            effects: effects
        };

// DEPRECATIONS

        /**
         * Provided for backward compatibility, use Chart.helpers.easing.effects instead.
         * @function Chart.helpers.easingEffects
         * @deprecated since version 2.7.0
         * @todo remove at version 3
         * @private
         */
        helpers.easingEffects = effects;

    },{"42":42}],44:[function(require,module,exports){
        'use strict';

        var helpers = require(42);

        /**
         * @alias Chart.helpers.options
         * @namespace
         */
        module.exports = {
            /**
             * Converts the given line height `value` in pixels for a specific font `size`.
             * @param {Number|String} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').
             * @param {Number} size - The font size (in pixels) used to resolve relative `value`.
             * @returns {Number} The effective line height in pixels (size * 1.2 if value is invalid).
             * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height
             * @since 2.7.0
             */
            toLineHeight: function(value, size) {
                var matches = ('' + value).match(/^(normal|(\d+(?:\.\d+)?)(px|em|%)?)$/);
                if (!matches || matches[1] === 'normal') {
                    return size * 1.2;
                }

                value = +matches[2];

                switch (matches[3]) {
                    case 'px':
                        return value;
                    case '%':
                        value /= 100;
                        break;
                    default:
                        break;
                }

                return size * value;
            },

            /**
             * Converts the given value into a padding object with pre-computed width/height.
             * @param {Number|Object} value - If a number, set the value to all TRBL component,
             *  else, if and object, use defined properties and sets undefined ones to 0.
             * @returns {Object} The padding values (top, right, bottom, left, width, height)
             * @since 2.7.0
             */
            toPadding: function(value) {
                var t, r, b, l;

                if (helpers.isObject(value)) {
                    t = +value.top || 0;
                    r = +value.right || 0;
                    b = +value.bottom || 0;
                    l = +value.left || 0;
                } else {
                    t = r = b = l = +value || 0;
                }

                return {
                    top: t,
                    right: r,
                    bottom: b,
                    left: l,
                    height: t + b,
                    width: l + r
                };
            },

            /**
             * Evaluates the given `inputs` sequentially and returns the first defined value.
             * @param {Array[]} inputs - An array of values, falling back to the last value.
             * @param {Object} [context] - If defined and the current value is a function, the value
             * is called with `context` as first argument and the result becomes the new input.
             * @param {Number} [index] - If defined and the current value is an array, the value
             * at `index` become the new input.
             * @since 2.7.0
             */
            resolve: function(inputs, context, index) {
                var i, ilen, value;

                for (i = 0, ilen = inputs.length; i < ilen; ++i) {
                    value = inputs[i];
                    if (value === undefined) {
                        continue;
                    }
                    if (context !== undefined && typeof value === 'function') {
                        value = value(context);
                    }
                    if (index !== undefined && helpers.isArray(value)) {
                        value = value[index];
                    }
                    if (value !== undefined) {
                        return value;
                    }
                }
            }
        };

    },{"42":42}],45:[function(require,module,exports){
        'use strict';

        module.exports = require(42);
        module.exports.easing = require(43);
        module.exports.canvas = require(41);
        module.exports.options = require(44);

    },{"41":41,"42":42,"43":43,"44":44}],46:[function(require,module,exports){
        /**
         * Platform fallback implementation (minimal).
         * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939
         */

        module.exports = {
            acquireContext: function(item) {
                if (item && item.canvas) {
                    // Support for any object associated to a canvas (including a context2d)
                    item = item.canvas;
                }

                return item && item.getContext('2d') || null;
            }
        };

    },{}],47:[function(require,module,exports){
        /**
         * Chart.Platform implementation for targeting a web browser
         */

        'use strict';

        var helpers = require(45);

        var EXPANDO_KEY = '$chartjs';
        var CSS_PREFIX = 'chartjs-';
        var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';
        var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';
        var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];

        /**
         * DOM event types -> Chart.js event types.
         * Note: only events with different types are mapped.
         * @see https://developer.mozilla.org/en-US/docs/Web/Events
         */
        var EVENT_TYPES = {
            touchstart: 'mousedown',
            touchmove: 'mousemove',
            touchend: 'mouseup',
            pointerenter: 'mouseenter',
            pointerdown: 'mousedown',
            pointermove: 'mousemove',
            pointerup: 'mouseup',
            pointerleave: 'mouseout',
            pointerout: 'mouseout'
        };

        /**
         * The "used" size is the final value of a dimension property after all calculations have
         * been performed. This method uses the computed style of `element` but returns undefined
         * if the computed style is not expressed in pixels. That can happen in some cases where
         * `element` has a size relative to its parent and this last one is not yet displayed,
         * for example because of `display: none` on a parent node.
         * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value
         * @returns {Number} Size in pixels or undefined if unknown.
         */
        function readUsedSize(element, property) {
            var value = helpers.getStyle(element, property);
            var matches = value && value.match(/^(\d+)(\.\d+)?px$/);
            return matches ? Number(matches[1]) : undefined;
        }

        /**
         * Initializes the canvas style and render size without modifying the canvas display size,
         * since responsiveness is handled by the controller.resize() method. The config is used
         * to determine the aspect ratio to apply in case no explicit height has been specified.
         */
        function initCanvas(canvas, config) {
            var style = canvas.style;

            // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it
            // returns null or '' if no explicit value has been set to the canvas attribute.
            var renderHeight = canvas.getAttribute('height');
            var renderWidth = canvas.getAttribute('width');

            // Chart.js modifies some canvas values that we want to restore on destroy
            canvas[EXPANDO_KEY] = {
                initial: {
                    height: renderHeight,
                    width: renderWidth,
                    style: {
                        display: style.display,
                        height: style.height,
                        width: style.width
                    }
                }
            };

            // Force canvas to display as block to avoid extra space caused by inline
            // elements, which would interfere with the responsive resize process.
            // https://github.com/chartjs/Chart.js/issues/2538
            style.display = style.display || 'block';

            if (renderWidth === null || renderWidth === '') {
                var displayWidth = readUsedSize(canvas, 'width');
                if (displayWidth !== undefined) {
                    canvas.width = displayWidth;
                }
            }

            if (renderHeight === null || renderHeight === '') {
                if (canvas.style.height === '') {
                    // If no explicit render height and style height, let's apply the aspect ratio,
                    // which one can be specified by the user but also by charts as default option
                    // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.
                    canvas.height = canvas.width / (config.options.aspectRatio || 2);
                } else {
                    var displayHeight = readUsedSize(canvas, 'height');
                    if (displayWidth !== undefined) {
                        canvas.height = displayHeight;
                    }
                }
            }

            return canvas;
        }

        /**
         * Detects support for options object argument in addEventListener.
         * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support
         * @private
         */
        var supportsEventListenerOptions = (function() {
            var supports = false;
            try {
                var options = Object.defineProperty({}, 'passive', {
                    get: function() {
                        supports = true;
                    }
                });
                window.addEventListener('e', null, options);
            } catch (e) {
                // continue regardless of error
            }
            return supports;
        }());

// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.
// https://github.com/chartjs/Chart.js/issues/4287
        var eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;

        function addEventListener(node, type, listener) {
            node.addEventListener(type, listener, eventListenerOptions);
        }

        function removeEventListener(node, type, listener) {
            node.removeEventListener(type, listener, eventListenerOptions);
        }

        function createEvent(type, chart, x, y, nativeEvent) {
            return {
                type: type,
                chart: chart,
                native: nativeEvent || null,
                x: x !== undefined ? x : null,
                y: y !== undefined ? y : null,
            };
        }

        function fromNativeEvent(event, chart) {
            var type = EVENT_TYPES[event.type] || event.type;
            var pos = helpers.getRelativePosition(event, chart);
            return createEvent(type, chart, pos.x, pos.y, event);
        }

        function throttled(fn, thisArg) {
            var ticking = false;
            var args = [];

            return function() {
                args = Array.prototype.slice.call(arguments);
                thisArg = thisArg || this;

                if (!ticking) {
                    ticking = true;
                    helpers.requestAnimFrame.call(window, function() {
                        ticking = false;
                        fn.apply(thisArg, args);
                    });
                }
            };
        }

// Implementation based on https://github.com/marcj/css-element-queries
        function createResizer(handler) {
            var resizer = document.createElement('div');
            var cls = CSS_PREFIX + 'size-monitor';
            var maxSize = 1000000;
            var style =
                'position:absolute;' +
                'left:0;' +
                'top:0;' +
                'right:0;' +
                'bottom:0;' +
                'overflow:hidden;' +
                'pointer-events:none;' +
                'visibility:hidden;' +
                'z-index:-1;';

            resizer.style.cssText = style;
            resizer.className = cls;
            resizer.innerHTML =
                '<div class="' + cls + '-expand" style="' + style + '">' +
                '<div style="' +
                'position:absolute;' +
                'width:' + maxSize + 'px;' +
                'height:' + maxSize + 'px;' +
                'left:0;' +
                'top:0">' +
                '</div>' +
                '</div>' +
                '<div class="' + cls + '-shrink" style="' + style + '">' +
                '<div style="' +
                'position:absolute;' +
                'width:200%;' +
                'height:200%;' +
                'left:0; ' +
                'top:0">' +
                '</div>' +
                '</div>';

            var expand = resizer.childNodes[0];
            var shrink = resizer.childNodes[1];

            resizer._reset = function() {
                expand.scrollLeft = maxSize;
                expand.scrollTop = maxSize;
                shrink.scrollLeft = maxSize;
                shrink.scrollTop = maxSize;
            };
            var onScroll = function() {
                resizer._reset();
                handler();
            };

            addEventListener(expand, 'scroll', onScroll.bind(expand, 'expand'));
            addEventListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));

            return resizer;
        }

// https://davidwalsh.name/detect-node-insertion
        function watchForRender(node, handler) {
            var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});
            var proxy = expando.renderProxy = function(e) {
                if (e.animationName === CSS_RENDER_ANIMATION) {
                    handler();
                }
            };

            helpers.each(ANIMATION_START_EVENTS, function(type) {
                addEventListener(node, type, proxy);
            });

            // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class
            // is removed then added back immediately (same animation frame?). Accessing the
            // `offsetParent` property will force a reflow and re-evaluate the CSS animation.
            // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics
            // https://github.com/chartjs/Chart.js/issues/4737
            expando.reflow = !!node.offsetParent;

            node.classList.add(CSS_RENDER_MONITOR);
        }

        function unwatchForRender(node) {
            var expando = node[EXPANDO_KEY] || {};
            var proxy = expando.renderProxy;

            if (proxy) {
                helpers.each(ANIMATION_START_EVENTS, function(type) {
                    removeEventListener(node, type, proxy);
                });

                delete expando.renderProxy;
            }

            node.classList.remove(CSS_RENDER_MONITOR);
        }

        function addResizeListener(node, listener, chart) {
            var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});

            // Let's keep track of this added resizer and thus avoid DOM query when removing it.
            var resizer = expando.resizer = createResizer(throttled(function() {
                if (expando.resizer) {
                    return listener(createEvent('resize', chart));
                }
            }));

            // The resizer needs to be attached to the node parent, so we first need to be
            // sure that `node` is attached to the DOM before injecting the resizer element.
            watchForRender(node, function() {
                if (expando.resizer) {
                    var container = node.parentNode;
                    if (container && container !== resizer.parentNode) {
                        container.insertBefore(resizer, container.firstChild);
                    }

                    // The container size might have changed, let's reset the resizer state.
                    resizer._reset();
                }
            });
        }

        function removeResizeListener(node) {
            var expando = node[EXPANDO_KEY] || {};
            var resizer = expando.resizer;

            delete expando.resizer;
            unwatchForRender(node);

            if (resizer && resizer.parentNode) {
                resizer.parentNode.removeChild(resizer);
            }
        }

        function injectCSS(platform, css) {
            // http://stackoverflow.com/q/3922139
            var style = platform._style || document.createElement('style');
            if (!platform._style) {
                platform._style = style;
                css = '/* Chart.js */\n' + css;
                style.setAttribute('type', 'text/css');
                document.getElementsByTagName('head')[0].appendChild(style);
            }

            style.appendChild(document.createTextNode(css));
        }

        module.exports = {
            /**
             * This property holds whether this platform is enabled for the current environment.
             * Currently used by platform.js to select the proper implementation.
             * @private
             */
            _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',

            initialize: function() {
                var keyframes = 'from{opacity:0.99}to{opacity:1}';

                injectCSS(this,
                    // DOM rendering detection
                    // https://davidwalsh.name/detect-node-insertion
                    '@-webkit-keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +
                    '@keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +
                    '.' + CSS_RENDER_MONITOR + '{' +
                    '-webkit-animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +
                    'animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +
                    '}'
                );
            },

            acquireContext: function(item, config) {
                if (typeof item === 'string') {
                    item = document.getElementById(item);
                } else if (item.length) {
                    // Support for array based queries (such as jQuery)
                    item = item[0];
                }

                if (item && item.canvas) {
                    // Support for any object associated to a canvas (including a context2d)
                    item = item.canvas;
                }

                // To prevent canvas fingerprinting, some add-ons undefine the getContext
                // method, for example: https://github.com/kkapsner/CanvasBlocker
                // https://github.com/chartjs/Chart.js/issues/2807
                var context = item && item.getContext && item.getContext('2d');

                // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is
                // inside an iframe or when running in a protected environment. We could guess the
                // types from their toString() value but let's keep things flexible and assume it's
                // a sufficient condition if the item has a context2D which has item as `canvas`.
                // https://github.com/chartjs/Chart.js/issues/3887
                // https://github.com/chartjs/Chart.js/issues/4102
                // https://github.com/chartjs/Chart.js/issues/4152
                if (context && context.canvas === item) {
                    initCanvas(item, config);
                    return context;
                }

                return null;
            },

            releaseContext: function(context) {
                var canvas = context.canvas;
                if (!canvas[EXPANDO_KEY]) {
                    return;
                }

                var initial = canvas[EXPANDO_KEY].initial;
                ['height', 'width'].forEach(function(prop) {
                    var value = initial[prop];
                    if (helpers.isNullOrUndef(value)) {
                        canvas.removeAttribute(prop);
                    } else {
                        canvas.setAttribute(prop, value);
                    }
                });

                helpers.each(initial.style || {}, function(value, key) {
                    canvas.style[key] = value;
                });

                // The canvas render size might have been changed (and thus the state stack discarded),
                // we can't use save() and restore() to restore the initial state. So make sure that at
                // least the canvas context is reset to the default state by setting the canvas width.
                // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html
                canvas.width = canvas.width;

                delete canvas[EXPANDO_KEY];
            },

            addEventListener: function(chart, type, listener) {
                var canvas = chart.canvas;
                if (type === 'resize') {
                    // Note: the resize event is not supported on all browsers.
                    addResizeListener(canvas, listener, chart);
                    return;
                }

                var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});
                var proxies = expando.proxies || (expando.proxies = {});
                var proxy = proxies[chart.id + '_' + type] = function(event) {
                    listener(fromNativeEvent(event, chart));
                };

                addEventListener(canvas, type, proxy);
            },

            removeEventListener: function(chart, type, listener) {
                var canvas = chart.canvas;
                if (type === 'resize') {
                    // Note: the resize event is not supported on all browsers.
                    removeResizeListener(canvas, listener);
                    return;
                }

                var expando = listener[EXPANDO_KEY] || {};
                var proxies = expando.proxies || {};
                var proxy = proxies[chart.id + '_' + type];
                if (!proxy) {
                    return;
                }

                removeEventListener(canvas, type, proxy);
            }
        };

// DEPRECATIONS

        /**
         * Provided for backward compatibility, use EventTarget.addEventListener instead.
         * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+
         * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener
         * @function Chart.helpers.addEvent
         * @deprecated since version 2.7.0
         * @todo remove at version 3
         * @private
         */
        helpers.addEvent = addEventListener;

        /**
         * Provided for backward compatibility, use EventTarget.removeEventListener instead.
         * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+
         * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener
         * @function Chart.helpers.removeEvent
         * @deprecated since version 2.7.0
         * @todo remove at version 3
         * @private
         */
        helpers.removeEvent = removeEventListener;

    },{"45":45}],48:[function(require,module,exports){
        'use strict';

        var helpers = require(45);
        var basic = require(46);
        var dom = require(47);

// @TODO Make possible to select another platform at build time.
        var implementation = dom._enabled ? dom : basic;

        /**
         * @namespace Chart.platform
         * @see https://chartjs.gitbooks.io/proposals/content/Platform.html
         * @since 2.4.0
         */
        module.exports = helpers.extend({
            /**
             * @since 2.7.0
             */
            initialize: function() {},

            /**
             * Called at chart construction time, returns a context2d instance implementing
             * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.
             * @param {*} item - The native item from which to acquire context (platform specific)
             * @param {Object} options - The chart options
             * @returns {CanvasRenderingContext2D} context2d instance
             */
            acquireContext: function() {},

            /**
             * Called at chart destruction time, releases any resources associated to the context
             * previously returned by the acquireContext() method.
             * @param {CanvasRenderingContext2D} context - The context2d instance
             * @returns {Boolean} true if the method succeeded, else false
             */
            releaseContext: function() {},

            /**
             * Registers the specified listener on the given chart.
             * @param {Chart} chart - Chart from which to listen for event
             * @param {String} type - The ({@link IEvent}) type to listen for
             * @param {Function} listener - Receives a notification (an object that implements
             * the {@link IEvent} interface) when an event of the specified type occurs.
             */
            addEventListener: function() {},

            /**
             * Removes the specified listener previously registered with addEventListener.
             * @param {Chart} chart -Chart from which to remove the listener
             * @param {String} type - The ({@link IEvent}) type to remove
             * @param {Function} listener - The listener function to remove from the event target.
             */
            removeEventListener: function() {}

        }, implementation);

        /**
         * @interface IPlatform
         * Allows abstracting platform dependencies away from the chart
         * @borrows Chart.platform.acquireContext as acquireContext
         * @borrows Chart.platform.releaseContext as releaseContext
         * @borrows Chart.platform.addEventListener as addEventListener
         * @borrows Chart.platform.removeEventListener as removeEventListener
         */

        /**
         * @interface IEvent
         * @prop {String} type - The event type name, possible values are:
         * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',
         * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'
         * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')
         * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)
         * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)
         */

    },{"45":45,"46":46,"47":47}],49:[function(require,module,exports){
        /**
         * Plugin based on discussion from the following Chart.js issues:
         * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569
         * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897
         */

        'use strict';

        var defaults = require(25);
        var elements = require(40);
        var helpers = require(45);

        defaults._set('global', {
            plugins: {
                filler: {
                    propagate: true
                }
            }
        });

        module.exports = function() {

            var mappers = {
                dataset: function(source) {
                    var index = source.fill;
                    var chart = source.chart;
                    var meta = chart.getDatasetMeta(index);
                    var visible = meta && chart.isDatasetVisible(index);
                    var points = (visible && meta.dataset._children) || [];
                    var length = points.length || 0;

                    return !length ? null : function(point, i) {
                        return (i < length && points[i]._view) || null;
                    };
                },

                boundary: function(source) {
                    var boundary = source.boundary;
                    var x = boundary ? boundary.x : null;
                    var y = boundary ? boundary.y : null;

                    return function(point) {
                        return {
                            x: x === null ? point.x : x,
                            y: y === null ? point.y : y,
                        };
                    };
                }
            };

            // @todo if (fill[0] === '#')
            function decodeFill(el, index, count) {
                var model = el._model || {};
                var fill = model.fill;
                var target;

                if (fill === undefined) {
                    fill = !!model.backgroundColor;
                }

                if (fill === false || fill === null) {
                    return false;
                }

                if (fill === true) {
                    return 'origin';
                }

                target = parseFloat(fill, 10);
                if (isFinite(target) && Math.floor(target) === target) {
                    if (fill[0] === '-' || fill[0] === '+') {
                        target = index + target;
                    }

                    if (target === index || target < 0 || target >= count) {
                        return false;
                    }

                    return target;
                }

                switch (fill) {
                    // compatibility
                    case 'bottom':
                        return 'start';
                    case 'top':
                        return 'end';
                    case 'zero':
                        return 'origin';
                    // supported boundaries
                    case 'origin':
                    case 'start':
                    case 'end':
                        return fill;
                    // invalid fill values
                    default:
                        return false;
                }
            }

            function computeBoundary(source) {
                var model = source.el._model || {};
                var scale = source.el._scale || {};
                var fill = source.fill;
                var target = null;
                var horizontal;

                if (isFinite(fill)) {
                    return null;
                }

                // Backward compatibility: until v3, we still need to support boundary values set on
                // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and
                // controllers might still use it (e.g. the Smith chart).

                if (fill === 'start') {
                    target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;
                } else if (fill === 'end') {
                    target = model.scaleTop === undefined ? scale.top : model.scaleTop;
                } else if (model.scaleZero !== undefined) {
                    target = model.scaleZero;
                } else if (scale.getBasePosition) {
                    target = scale.getBasePosition();
                } else if (scale.getBasePixel) {
                    target = scale.getBasePixel();
                }

                if (target !== undefined && target !== null) {
                    if (target.x !== undefined && target.y !== undefined) {
                        return target;
                    }

                    if (typeof target === 'number' && isFinite(target)) {
                        horizontal = scale.isHorizontal();
                        return {
                            x: horizontal ? target : null,
                            y: horizontal ? null : target
                        };
                    }
                }

                return null;
            }

            function resolveTarget(sources, index, propagate) {
                var source = sources[index];
                var fill = source.fill;
                var visited = [index];
                var target;

                if (!propagate) {
                    return fill;
                }

                while (fill !== false && visited.indexOf(fill) === -1) {
                    if (!isFinite(fill)) {
                        return fill;
                    }

                    target = sources[fill];
                    if (!target) {
                        return false;
                    }

                    if (target.visible) {
                        return fill;
                    }

                    visited.push(fill);
                    fill = target.fill;
                }

                return false;
            }

            function createMapper(source) {
                var fill = source.fill;
                var type = 'dataset';

                if (fill === false) {
                    return null;
                }

                if (!isFinite(fill)) {
                    type = 'boundary';
                }

                return mappers[type](source);
            }

            function isDrawable(point) {
                return point && !point.skip;
            }

            function drawArea(ctx, curve0, curve1, len0, len1) {
                var i;

                if (!len0 || !len1) {
                    return;
                }

                // building first area curve (normal)
                ctx.moveTo(curve0[0].x, curve0[0].y);
                for (i = 1; i < len0; ++i) {
                    helpers.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);
                }

                // joining the two area curves
                ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y);

                // building opposite area curve (reverse)
                for (i = len1 - 1; i > 0; --i) {
                    helpers.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);
                }
            }

            function doFill(ctx, points, mapper, view, color, loop) {
                var count = points.length;
                var span = view.spanGaps;
                var curve0 = [];
                var curve1 = [];
                var len0 = 0;
                var len1 = 0;
                var i, ilen, index, p0, p1, d0, d1;

                ctx.beginPath();

                for (i = 0, ilen = (count + !!loop); i < ilen; ++i) {
                    index = i % count;
                    p0 = points[index]._view;
                    p1 = mapper(p0, index, view);
                    d0 = isDrawable(p0);
                    d1 = isDrawable(p1);

                    if (d0 && d1) {
                        len0 = curve0.push(p0);
                        len1 = curve1.push(p1);
                    } else if (len0 && len1) {
                        if (!span) {
                            drawArea(ctx, curve0, curve1, len0, len1);
                            len0 = len1 = 0;
                            curve0 = [];
                            curve1 = [];
                        } else {
                            if (d0) {
                                curve0.push(p0);
                            }
                            if (d1) {
                                curve1.push(p1);
                            }
                        }
                    }
                }

                drawArea(ctx, curve0, curve1, len0, len1);

                ctx.closePath();
                ctx.fillStyle = color;
                ctx.fill();
            }

            return {
                id: 'filler',

                afterDatasetsUpdate: function(chart, options) {
                    var count = (chart.data.datasets || []).length;
                    var propagate = options.propagate;
                    var sources = [];
                    var meta, i, el, source;

                    for (i = 0; i < count; ++i) {
                        meta = chart.getDatasetMeta(i);
                        el = meta.dataset;
                        source = null;

                        if (el && el._model && el instanceof elements.Line) {
                            source = {
                                visible: chart.isDatasetVisible(i),
                                fill: decodeFill(el, i, count),
                                chart: chart,
                                el: el
                            };
                        }

                        meta.$filler = source;
                        sources.push(source);
                    }

                    for (i = 0; i < count; ++i) {
                        source = sources[i];
                        if (!source) {
                            continue;
                        }

                        source.fill = resolveTarget(sources, i, propagate);
                        source.boundary = computeBoundary(source);
                        source.mapper = createMapper(source);
                    }
                },

                beforeDatasetDraw: function(chart, args) {
                    var meta = args.meta.$filler;
                    if (!meta) {
                        return;
                    }

                    var ctx = chart.ctx;
                    var el = meta.el;
                    var view = el._view;
                    var points = el._children || [];
                    var mapper = meta.mapper;
                    var color = view.backgroundColor || defaults.global.defaultColor;

                    if (mapper && color && points.length) {
                        helpers.canvas.clipArea(ctx, chart.chartArea);
                        doFill(ctx, points, mapper, view, color, el._loop);
                        helpers.canvas.unclipArea(ctx);
                    }
                }
            };
        };

    },{"25":25,"40":40,"45":45}],50:[function(require,module,exports){
        'use strict';

        var defaults = require(25);
        var Element = require(26);
        var helpers = require(45);

        defaults._set('global', {
            legend: {
                display: true,
                position: 'top',
                fullWidth: true,
                reverse: false,
                weight: 1000,

                // a callback that will handle
                onClick: function(e, legendItem) {
                    var index = legendItem.datasetIndex;
                    var ci = this.chart;
                    var meta = ci.getDatasetMeta(index);

                    // See controller.isDatasetVisible comment
                    meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null;

                    // We hid a dataset ... rerender the chart
                    ci.update();
                },

                onHover: null,

                labels: {
                    boxWidth: 40,
                    padding: 10,
                    // Generates labels shown in the legend
                    // Valid properties to return:
                    // text : text to display
                    // fillStyle : fill of coloured box
                    // strokeStyle: stroke of coloured box
                    // hidden : if this legend item refers to a hidden item
                    // lineCap : cap style for line
                    // lineDash
                    // lineDashOffset :
                    // lineJoin :
                    // lineWidth :
                    generateLabels: function(chart) {
                        var data = chart.data;
                        return helpers.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {
                            return {
                                text: dataset.label,
                                fillStyle: (!helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),
                                hidden: !chart.isDatasetVisible(i),
                                lineCap: dataset.borderCapStyle,
                                lineDash: dataset.borderDash,
                                lineDashOffset: dataset.borderDashOffset,
                                lineJoin: dataset.borderJoinStyle,
                                lineWidth: dataset.borderWidth,
                                strokeStyle: dataset.borderColor,
                                pointStyle: dataset.pointStyle,

                                // Below is extra data used for toggling the datasets
                                datasetIndex: i
                            };
                        }, this) : [];
                    }
                }
            },

            legendCallback: function(chart) {
                var text = [];
                text.push('<ul class="' + chart.id + '-legend">');
                for (var i = 0; i < chart.data.datasets.length; i++) {
                    text.push('<li><span style="background-color:' + chart.data.datasets[i].backgroundColor + '"></span>');
                    if (chart.data.datasets[i].label) {
                        text.push(chart.data.datasets[i].label);
                    }
                    text.push('</li>');
                }
                text.push('</ul>');
                return text.join('');
            }
        });

        module.exports = function(Chart) {

            var layout = Chart.layoutService;
            var noop = helpers.noop;

            /**
             * Helper function to get the box width based on the usePointStyle option
             * @param labelopts {Object} the label options on the legend
             * @param fontSize {Number} the label font size
             * @return {Number} width of the color box area
             */
            function getBoxWidth(labelOpts, fontSize) {
                return labelOpts.usePointStyle ?
                    fontSize * Math.SQRT2 :
                    labelOpts.boxWidth;
            }

            Chart.Legend = Element.extend({

                initialize: function(config) {
                    helpers.extend(this, config);

                    // Contains hit boxes for each dataset (in dataset order)
                    this.legendHitBoxes = [];

                    // Are we in doughnut mode which has a different data type
                    this.doughnutMode = false;
                },

                // These methods are ordered by lifecycle. Utilities then follow.
                // Any function defined here is inherited by all legend types.
                // Any function can be extended by the legend type

                beforeUpdate: noop,
                update: function(maxWidth, maxHeight, margins) {
                    var me = this;

                    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)
                    me.beforeUpdate();

                    // Absorb the master measurements
                    me.maxWidth = maxWidth;
                    me.maxHeight = maxHeight;
                    me.margins = margins;

                    // Dimensions
                    me.beforeSetDimensions();
                    me.setDimensions();
                    me.afterSetDimensions();
                    // Labels
                    me.beforeBuildLabels();
                    me.buildLabels();
                    me.afterBuildLabels();

                    // Fit
                    me.beforeFit();
                    me.fit();
                    me.afterFit();
                    //
                    me.afterUpdate();

                    return me.minSize;
                },
                afterUpdate: noop,

                //

                beforeSetDimensions: noop,
                setDimensions: function() {
                    var me = this;
                    // Set the unconstrained dimension before label rotation
                    if (me.isHorizontal()) {
                        // Reset position before calculating rotation
                        me.width = me.maxWidth;
                        me.left = 0;
                        me.right = me.width;
                    } else {
                        me.height = me.maxHeight;

                        // Reset position before calculating rotation
                        me.top = 0;
                        me.bottom = me.height;
                    }

                    // Reset padding
                    me.paddingLeft = 0;
                    me.paddingTop = 0;
                    me.paddingRight = 0;
                    me.paddingBottom = 0;

                    // Reset minSize
                    me.minSize = {
                        width: 0,
                        height: 0
                    };
                },
                afterSetDimensions: noop,

                //

                beforeBuildLabels: noop,
                buildLabels: function() {
                    var me = this;
                    var labelOpts = me.options.labels || {};
                    var legendItems = helpers.callback(labelOpts.generateLabels, [me.chart], me) || [];

                    if (labelOpts.filter) {
                        legendItems = legendItems.filter(function(item) {
                            return labelOpts.filter(item, me.chart.data);
                        });
                    }

                    if (me.options.reverse) {
                        legendItems.reverse();
                    }

                    me.legendItems = legendItems;
                },
                afterBuildLabels: noop,

                //

                beforeFit: noop,
                fit: function() {
                    var me = this;
                    var opts = me.options;
                    var labelOpts = opts.labels;
                    var display = opts.display;

                    var ctx = me.ctx;

                    var globalDefault = defaults.global;
                    var valueOrDefault = helpers.valueOrDefault;
                    var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);
                    var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);
                    var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);
                    var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);

                    // Reset hit boxes
                    var hitboxes = me.legendHitBoxes = [];

                    var minSize = me.minSize;
                    var isHorizontal = me.isHorizontal();

                    if (isHorizontal) {
                        minSize.width = me.maxWidth; // fill all the width
                        minSize.height = display ? 10 : 0;
                    } else {
                        minSize.width = display ? 10 : 0;
                        minSize.height = me.maxHeight; // fill all the height
                    }

                    // Increase sizes here
                    if (display) {
                        ctx.font = labelFont;

                        if (isHorizontal) {
                            // Labels

                            // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one
                            var lineWidths = me.lineWidths = [0];
                            var totalHeight = me.legendItems.length ? fontSize + (labelOpts.padding) : 0;

                            ctx.textAlign = 'left';
                            ctx.textBaseline = 'top';

                            helpers.each(me.legendItems, function(legendItem, i) {
                                var boxWidth = getBoxWidth(labelOpts, fontSize);
                                var width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;

                                if (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {
                                    totalHeight += fontSize + (labelOpts.padding);
                                    lineWidths[lineWidths.length] = me.left;
                                }

                                // Store the hitbox width and height here. Final position will be updated in `draw`
                                hitboxes[i] = {
                                    left: 0,
                                    top: 0,
                                    width: width,
                                    height: fontSize
                                };

                                lineWidths[lineWidths.length - 1] += width + labelOpts.padding;
                            });

                            minSize.height += totalHeight;

                        } else {
                            var vPadding = labelOpts.padding;
                            var columnWidths = me.columnWidths = [];
                            var totalWidth = labelOpts.padding;
                            var currentColWidth = 0;
                            var currentColHeight = 0;
                            var itemHeight = fontSize + vPadding;

                            helpers.each(me.legendItems, function(legendItem, i) {
                                var boxWidth = getBoxWidth(labelOpts, fontSize);
                                var itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;

                                // If too tall, go to new column
                                if (currentColHeight + itemHeight > minSize.height) {
                                    totalWidth += currentColWidth + labelOpts.padding;
                                    columnWidths.push(currentColWidth); // previous column width

                                    currentColWidth = 0;
                                    currentColHeight = 0;
                                }

                                // Get max width
                                currentColWidth = Math.max(currentColWidth, itemWidth);
                                currentColHeight += itemHeight;

                                // Store the hitbox width and height here. Final position will be updated in `draw`
                                hitboxes[i] = {
                                    left: 0,
                                    top: 0,
                                    width: itemWidth,
                                    height: fontSize
                                };
                            });

                            totalWidth += currentColWidth;
                            columnWidths.push(currentColWidth);
                            minSize.width += totalWidth;
                        }
                    }

                    me.width = minSize.width;
                    me.height = minSize.height;
                },
                afterFit: noop,

                // Shared Methods
                isHorizontal: function() {
                    return this.options.position === 'top' || this.options.position === 'bottom';
                },

                // Actually draw the legend on the canvas
                draw: function() {
                    var me = this;
                    var opts = me.options;
                    var labelOpts = opts.labels;
                    var globalDefault = defaults.global;
                    var lineDefault = globalDefault.elements.line;
                    var legendWidth = me.width;
                    var lineWidths = me.lineWidths;

                    if (opts.display) {
                        var ctx = me.ctx;
                        var valueOrDefault = helpers.valueOrDefault;
                        var fontColor = valueOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor);
                        var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);
                        var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);
                        var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);
                        var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);
                        var cursor;

                        // Canvas setup
                        ctx.textAlign = 'left';
                        ctx.textBaseline = 'middle';
                        ctx.lineWidth = 0.5;
                        ctx.strokeStyle = fontColor; // for strikethrough effect
                        ctx.fillStyle = fontColor; // render in correct colour
                        ctx.font = labelFont;

                        var boxWidth = getBoxWidth(labelOpts, fontSize);
                        var hitboxes = me.legendHitBoxes;

                        // current position
                        var drawLegendBox = function(x, y, legendItem) {
                            if (isNaN(boxWidth) || boxWidth <= 0) {
                                return;
                            }

                            // Set the ctx for the box
                            ctx.save();

                            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, globalDefault.defaultColor);
                            ctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);
                            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);
                            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);
                            ctx.lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);
                            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);
                            var isLineWidthZero = (valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0);

                            if (ctx.setLineDash) {
                                // IE 9 and 10 do not support line dash
                                ctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));
                            }

                            if (opts.labels && opts.labels.usePointStyle) {
                                // Recalculate x and y for drawPoint() because its expecting
                                // x and y to be center of figure (instead of top left)
                                var radius = fontSize * Math.SQRT2 / 2;
                                var offSet = radius / Math.SQRT2;
                                var centerX = x + offSet;
                                var centerY = y + offSet;

                                // Draw pointStyle as legend symbol
                                helpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);
                            } else {
                                // Draw box as legend symbol
                                if (!isLineWidthZero) {
                                    ctx.strokeRect(x, y, boxWidth, fontSize);
                                }
                                ctx.fillRect(x, y, boxWidth, fontSize);
                            }

                            ctx.restore();
                        };
                        var fillText = function(x, y, legendItem, textWidth) {
                            var halfFontSize = fontSize / 2;
                            var xLeft = boxWidth + halfFontSize + x;
                            var yMiddle = y + halfFontSize;

                            ctx.fillText(legendItem.text, xLeft, yMiddle);

                            if (legendItem.hidden) {
                                // Strikethrough the text if hidden
                                ctx.beginPath();
                                ctx.lineWidth = 2;
                                ctx.moveTo(xLeft, yMiddle);
                                ctx.lineTo(xLeft + textWidth, yMiddle);
                                ctx.stroke();
                            }
                        };

                        // Horizontal
                        var isHorizontal = me.isHorizontal();
                        if (isHorizontal) {
                            cursor = {
                                x: me.left + ((legendWidth - lineWidths[0]) / 2),
                                y: me.top + labelOpts.padding,
                                line: 0
                            };
                        } else {
                            cursor = {
                                x: me.left + labelOpts.padding,
                                y: me.top + labelOpts.padding,
                                line: 0
                            };
                        }

                        var itemHeight = fontSize + labelOpts.padding;
                        helpers.each(me.legendItems, function(legendItem, i) {
                            var textWidth = ctx.measureText(legendItem.text).width;
                            var width = boxWidth + (fontSize / 2) + textWidth;
                            var x = cursor.x;
                            var y = cursor.y;

                            if (isHorizontal) {
                                if (x + width >= legendWidth) {
                                    y = cursor.y += itemHeight;
                                    cursor.line++;
                                    x = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2);
                                }
                            } else if (y + itemHeight > me.bottom) {
                                x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;
                                y = cursor.y = me.top + labelOpts.padding;
                                cursor.line++;
                            }

                            drawLegendBox(x, y, legendItem);

                            hitboxes[i].left = x;
                            hitboxes[i].top = y;

                            // Fill the actual label
                            fillText(x, y, legendItem, textWidth);

                            if (isHorizontal) {
                                cursor.x += width + (labelOpts.padding);
                            } else {
                                cursor.y += itemHeight;
                            }

                        });
                    }
                },

                /**
                 * Handle an event
                 * @private
                 * @param {IEvent} event - The event to handle
                 * @return {Boolean} true if a change occured
                 */
                handleEvent: function(e) {
                    var me = this;
                    var opts = me.options;
                    var type = e.type === 'mouseup' ? 'click' : e.type;
                    var changed = false;

                    if (type === 'mousemove') {
                        if (!opts.onHover) {
                            return;
                        }
                    } else if (type === 'click') {
                        if (!opts.onClick) {
                            return;
                        }
                    } else {
                        return;
                    }

                    // Chart event already has relative position in it
                    var x = e.x;
                    var y = e.y;

                    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {
                        // See if we are touching one of the dataset boxes
                        var lh = me.legendHitBoxes;
                        for (var i = 0; i < lh.length; ++i) {
                            var hitBox = lh[i];

                            if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {
                                // Touching an element
                                if (type === 'click') {
                                    // use e.native for backwards compatibility
                                    opts.onClick.call(me, e.native, me.legendItems[i]);
                                    changed = true;
                                    break;
                                } else if (type === 'mousemove') {
                                    // use e.native for backwards compatibility
                                    opts.onHover.call(me, e.native, me.legendItems[i]);
                                    changed = true;
                                    break;
                                }
                            }
                        }
                    }

                    return changed;
                }
            });

            function createNewLegendAndAttach(chart, legendOpts) {
                var legend = new Chart.Legend({
                    ctx: chart.ctx,
                    options: legendOpts,
                    chart: chart
                });

                layout.configure(chart, legend, legendOpts);
                layout.addBox(chart, legend);
                chart.legend = legend;
            }

            return {
                id: 'legend',

                beforeInit: function(chart) {
                    var legendOpts = chart.options.legend;

                    if (legendOpts) {
                        createNewLegendAndAttach(chart, legendOpts);
                    }
                },

                beforeUpdate: function(chart) {
                    var legendOpts = chart.options.legend;
                    var legend = chart.legend;

                    if (legendOpts) {
                        helpers.mergeIf(legendOpts, defaults.global.legend);

                        if (legend) {
                            layout.configure(chart, legend, legendOpts);
                            legend.options = legendOpts;
                        } else {
                            createNewLegendAndAttach(chart, legendOpts);
                        }
                    } else if (legend) {
                        layout.removeBox(chart, legend);
                        delete chart.legend;
                    }
                },

                afterEvent: function(chart, e) {
                    var legend = chart.legend;
                    if (legend) {
                        legend.handleEvent(e);
                    }
                }
            };
        };

    },{"25":25,"26":26,"45":45}],51:[function(require,module,exports){
        'use strict';

        var defaults = require(25);
        var Element = require(26);
        var helpers = require(45);

        defaults._set('global', {
            title: {
                display: false,
                fontStyle: 'bold',
                fullWidth: true,
                lineHeight: 1.2,
                padding: 10,
                position: 'top',
                text: '',
                weight: 2000         // by default greater than legend (1000) to be above
            }
        });

        module.exports = function(Chart) {

            var layout = Chart.layoutService;
            var noop = helpers.noop;

            Chart.Title = Element.extend({
                initialize: function(config) {
                    var me = this;
                    helpers.extend(me, config);

                    // Contains hit boxes for each dataset (in dataset order)
                    me.legendHitBoxes = [];
                },

                // These methods are ordered by lifecycle. Utilities then follow.

                beforeUpdate: noop,
                update: function(maxWidth, maxHeight, margins) {
                    var me = this;

                    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)
                    me.beforeUpdate();

                    // Absorb the master measurements
                    me.maxWidth = maxWidth;
                    me.maxHeight = maxHeight;
                    me.margins = margins;

                    // Dimensions
                    me.beforeSetDimensions();
                    me.setDimensions();
                    me.afterSetDimensions();
                    // Labels
                    me.beforeBuildLabels();
                    me.buildLabels();
                    me.afterBuildLabels();

                    // Fit
                    me.beforeFit();
                    me.fit();
                    me.afterFit();
                    //
                    me.afterUpdate();

                    return me.minSize;

                },
                afterUpdate: noop,

                //

                beforeSetDimensions: noop,
                setDimensions: function() {
                    var me = this;
                    // Set the unconstrained dimension before label rotation
                    if (me.isHorizontal()) {
                        // Reset position before calculating rotation
                        me.width = me.maxWidth;
                        me.left = 0;
                        me.right = me.width;
                    } else {
                        me.height = me.maxHeight;

                        // Reset position before calculating rotation
                        me.top = 0;
                        me.bottom = me.height;
                    }

                    // Reset padding
                    me.paddingLeft = 0;
                    me.paddingTop = 0;
                    me.paddingRight = 0;
                    me.paddingBottom = 0;

                    // Reset minSize
                    me.minSize = {
                        width: 0,
                        height: 0
                    };
                },
                afterSetDimensions: noop,

                //

                beforeBuildLabels: noop,
                buildLabels: noop,
                afterBuildLabels: noop,

                //

                beforeFit: noop,
                fit: function() {
                    var me = this;
                    var valueOrDefault = helpers.valueOrDefault;
                    var opts = me.options;
                    var display = opts.display;
                    var fontSize = valueOrDefault(opts.fontSize, defaults.global.defaultFontSize);
                    var minSize = me.minSize;
                    var lineCount = helpers.isArray(opts.text) ? opts.text.length : 1;
                    var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);
                    var textSize = display ? (lineCount * lineHeight) + (opts.padding * 2) : 0;

                    if (me.isHorizontal()) {
                        minSize.width = me.maxWidth; // fill all the width
                        minSize.height = textSize;
                    } else {
                        minSize.width = textSize;
                        minSize.height = me.maxHeight; // fill all the height
                    }

                    me.width = minSize.width;
                    me.height = minSize.height;

                },
                afterFit: noop,

                // Shared Methods
                isHorizontal: function() {
                    var pos = this.options.position;
                    return pos === 'top' || pos === 'bottom';
                },

                // Actually draw the title block on the canvas
                draw: function() {
                    var me = this;
                    var ctx = me.ctx;
                    var valueOrDefault = helpers.valueOrDefault;
                    var opts = me.options;
                    var globalDefaults = defaults.global;

                    if (opts.display) {
                        var fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize);
                        var fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle);
                        var fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily);
                        var titleFont = helpers.fontString(fontSize, fontStyle, fontFamily);
                        var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);
                        var offset = lineHeight / 2 + opts.padding;
                        var rotation = 0;
                        var top = me.top;
                        var left = me.left;
                        var bottom = me.bottom;
                        var right = me.right;
                        var maxWidth, titleX, titleY;

                        ctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour
                        ctx.font = titleFont;

                        // Horizontal
                        if (me.isHorizontal()) {
                            titleX = left + ((right - left) / 2); // midpoint of the width
                            titleY = top + offset;
                            maxWidth = right - left;
                        } else {
                            titleX = opts.position === 'left' ? left + offset : right - offset;
                            titleY = top + ((bottom - top) / 2);
                            maxWidth = bottom - top;
                            rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);
                        }

                        ctx.save();
                        ctx.translate(titleX, titleY);
                        ctx.rotate(rotation);
                        ctx.textAlign = 'center';
                        ctx.textBaseline = 'middle';

                        var text = opts.text;
                        if (helpers.isArray(text)) {
                            var y = 0;
                            for (var i = 0; i < text.length; ++i) {
                                ctx.fillText(text[i], 0, y, maxWidth);
                                y += lineHeight;
                            }
                        } else {
                            ctx.fillText(text, 0, 0, maxWidth);
                        }

                        ctx.restore();
                    }
                }
            });

            function createNewTitleBlockAndAttach(chart, titleOpts) {
                var title = new Chart.Title({
                    ctx: chart.ctx,
                    options: titleOpts,
                    chart: chart
                });

                layout.configure(chart, title, titleOpts);
                layout.addBox(chart, title);
                chart.titleBlock = title;
            }

            return {
                id: 'title',

                beforeInit: function(chart) {
                    var titleOpts = chart.options.title;

                    if (titleOpts) {
                        createNewTitleBlockAndAttach(chart, titleOpts);
                    }
                },

                beforeUpdate: function(chart) {
                    var titleOpts = chart.options.title;
                    var titleBlock = chart.titleBlock;

                    if (titleOpts) {
                        helpers.mergeIf(titleOpts, defaults.global.title);

                        if (titleBlock) {
                            layout.configure(chart, titleBlock, titleOpts);
                            titleBlock.options = titleOpts;
                        } else {
                            createNewTitleBlockAndAttach(chart, titleOpts);
                        }
                    } else if (titleBlock) {
                        Chart.layoutService.removeBox(chart, titleBlock);
                        delete chart.titleBlock;
                    }
                }
            };
        };

    },{"25":25,"26":26,"45":45}],52:[function(require,module,exports){
        'use strict';

        module.exports = function(Chart) {

            // Default config for a category scale
            var defaultConfig = {
                position: 'bottom'
            };

            var DatasetScale = Chart.Scale.extend({
                /**
                 * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those
                 * else fall back to data.labels
                 * @private
                 */
                getLabels: function() {
                    var data = this.chart.data;
                    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;
                },

                determineDataLimits: function() {
                    var me = this;
                    var labels = me.getLabels();
                    me.minIndex = 0;
                    me.maxIndex = labels.length - 1;
                    var findIndex;

                    if (me.options.ticks.min !== undefined) {
                        // user specified min value
                        findIndex = labels.indexOf(me.options.ticks.min);
                        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;
                    }

                    if (me.options.ticks.max !== undefined) {
                        // user specified max value
                        findIndex = labels.indexOf(me.options.ticks.max);
                        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;
                    }

                    me.min = labels[me.minIndex];
                    me.max = labels[me.maxIndex];
                },

                buildTicks: function() {
                    var me = this;
                    var labels = me.getLabels();
                    // If we are viewing some subset of labels, slice the original array
                    me.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);
                },

                getLabelForIndex: function(index, datasetIndex) {
                    var me = this;
                    var data = me.chart.data;
                    var isHorizontal = me.isHorizontal();

                    if (data.yLabels && !isHorizontal) {
                        return me.getRightValue(data.datasets[datasetIndex].data[index]);
                    }
                    return me.ticks[index - me.minIndex];
                },

                // Used to get data value locations.  Value can either be an index or a numerical value
                getPixelForValue: function(value, index) {
                    var me = this;
                    var offset = me.options.offset;
                    // 1 is added because we need the length but we have the indexes
                    var offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1)), 1);

                    // If value is a data object, then index is the index in the data array,
                    // not the index of the scale. We need to change that.
                    var valueCategory;
                    if (value !== undefined && value !== null) {
                        valueCategory = me.isHorizontal() ? value.x : value.y;
                    }
                    if (valueCategory !== undefined || (value !== undefined && isNaN(index))) {
                        var labels = me.getLabels();
                        value = valueCategory || value;
                        var idx = labels.indexOf(value);
                        index = idx !== -1 ? idx : index;
                    }

                    if (me.isHorizontal()) {
                        var valueWidth = me.width / offsetAmt;
                        var widthOffset = (valueWidth * (index - me.minIndex));

                        if (offset) {
                            widthOffset += (valueWidth / 2);
                        }

                        return me.left + Math.round(widthOffset);
                    }
                    var valueHeight = me.height / offsetAmt;
                    var heightOffset = (valueHeight * (index - me.minIndex));

                    if (offset) {
                        heightOffset += (valueHeight / 2);
                    }

                    return me.top + Math.round(heightOffset);
                },
                getPixelForTick: function(index) {
                    return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);
                },
                getValueForPixel: function(pixel) {
                    var me = this;
                    var offset = me.options.offset;
                    var value;
                    var offsetAmt = Math.max((me._ticks.length - (offset ? 0 : 1)), 1);
                    var horz = me.isHorizontal();
                    var valueDimension = (horz ? me.width : me.height) / offsetAmt;

                    pixel -= horz ? me.left : me.top;

                    if (offset) {
                        pixel -= (valueDimension / 2);
                    }

                    if (pixel <= 0) {
                        value = 0;
                    } else {
                        value = Math.round(pixel / valueDimension);
                    }

                    return value + me.minIndex;
                },
                getBasePixel: function() {
                    return this.bottom;
                }
            });

            Chart.scaleService.registerScaleType('category', DatasetScale, defaultConfig);

        };

    },{}],53:[function(require,module,exports){
        'use strict';

        var defaults = require(25);
        var helpers = require(45);
        var Ticks = require(34);

        module.exports = function(Chart) {

            var defaultConfig = {
                position: 'left',
                ticks: {
                    callback: Ticks.formatters.linear
                }
            };

            var LinearScale = Chart.LinearScaleBase.extend({

                determineDataLimits: function() {
                    var me = this;
                    var opts = me.options;
                    var chart = me.chart;
                    var data = chart.data;
                    var datasets = data.datasets;
                    var isHorizontal = me.isHorizontal();
                    var DEFAULT_MIN = 0;
                    var DEFAULT_MAX = 1;

                    function IDMatches(meta) {
                        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;
                    }

                    // First Calculate the range
                    me.min = null;
                    me.max = null;

                    var hasStacks = opts.stacked;
                    if (hasStacks === undefined) {
                        helpers.each(datasets, function(dataset, datasetIndex) {
                            if (hasStacks) {
                                return;
                            }

                            var meta = chart.getDatasetMeta(datasetIndex);
                            if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&
                                meta.stack !== undefined) {
                                hasStacks = true;
                            }
                        });
                    }

                    if (opts.stacked || hasStacks) {
                        var valuesPerStack = {};

                        helpers.each(datasets, function(dataset, datasetIndex) {
                            var meta = chart.getDatasetMeta(datasetIndex);
                            var key = [
                                meta.type,
                                // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined
                                ((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),
                                meta.stack
                            ].join('.');

                            if (valuesPerStack[key] === undefined) {
                                valuesPerStack[key] = {
                                    positiveValues: [],
                                    negativeValues: []
                                };
                            }

                            // Store these per type
                            var positiveValues = valuesPerStack[key].positiveValues;
                            var negativeValues = valuesPerStack[key].negativeValues;

                            if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {
                                helpers.each(dataset.data, function(rawValue, index) {
                                    var value = +me.getRightValue(rawValue);
                                    if (isNaN(value) || meta.data[index].hidden) {
                                        return;
                                    }

                                    positiveValues[index] = positiveValues[index] || 0;
                                    negativeValues[index] = negativeValues[index] || 0;

                                    if (opts.relativePoints) {
                                        positiveValues[index] = 100;
                                    } else if (value < 0) {
                                        negativeValues[index] += value;
                                    } else {
                                        positiveValues[index] += value;
                                    }
                                });
                            }
                        });

                        helpers.each(valuesPerStack, function(valuesForType) {
                            var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);
                            var minVal = helpers.min(values);
                            var maxVal = helpers.max(values);
                            me.min = me.min === null ? minVal : Math.min(me.min, minVal);
                            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);
                        });

                    } else {
                        helpers.each(datasets, function(dataset, datasetIndex) {
                            var meta = chart.getDatasetMeta(datasetIndex);
                            if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {
                                helpers.each(dataset.data, function(rawValue, index) {
                                    var value = +me.getRightValue(rawValue);
                                    if (isNaN(value) || meta.data[index].hidden) {
                                        return;
                                    }

                                    if (me.min === null) {
                                        me.min = value;
                                    } else if (value < me.min) {
                                        me.min = value;
                                    }

                                    if (me.max === null) {
                                        me.max = value;
                                    } else if (value > me.max) {
                                        me.max = value;
                                    }
                                });
                            }
                        });
                    }

                    me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;
                    me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX;

                    // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero
                    this.handleTickRangeOptions();
                },
                getTickLimit: function() {
                    var maxTicks;
                    var me = this;
                    var tickOpts = me.options.ticks;

                    if (me.isHorizontal()) {
                        maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));
                    } else {
                        // The factor of 2 used to scale the font size has been experimentally determined.
                        var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, defaults.global.defaultFontSize);
                        maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));
                    }

                    return maxTicks;
                },
                // Called after the ticks are built. We need
                handleDirectionalChanges: function() {
                    if (!this.isHorizontal()) {
                        // We are in a vertical orientation. The top value is the highest. So reverse the array
                        this.ticks.reverse();
                    }
                },
                getLabelForIndex: function(index, datasetIndex) {
                    return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);
                },
                // Utils
                getPixelForValue: function(value) {
                    // This must be called after fit has been run so that
                    // this.left, this.top, this.right, and this.bottom have been defined
                    var me = this;
                    var start = me.start;

                    var rightValue = +me.getRightValue(value);
                    var pixel;
                    var range = me.end - start;

                    if (me.isHorizontal()) {
                        pixel = me.left + (me.width / range * (rightValue - start));
                        return Math.round(pixel);
                    }

                    pixel = me.bottom - (me.height / range * (rightValue - start));
                    return Math.round(pixel);
                },
                getValueForPixel: function(pixel) {
                    var me = this;
                    var isHorizontal = me.isHorizontal();
                    var innerDimension = isHorizontal ? me.width : me.height;
                    var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;
                    return me.start + ((me.end - me.start) * offset);
                },
                getPixelForTick: function(index) {
                    return this.getPixelForValue(this.ticksAsNumbers[index]);
                }
            });
            Chart.scaleService.registerScaleType('linear', LinearScale, defaultConfig);

        };

    },{"25":25,"34":34,"45":45}],54:[function(require,module,exports){
        'use strict';

        var helpers = require(45);
        var Ticks = require(34);

        module.exports = function(Chart) {

            var noop = helpers.noop;

            Chart.LinearScaleBase = Chart.Scale.extend({
                getRightValue: function(value) {
                    if (typeof value === 'string') {
                        return +value;
                    }
                    return Chart.Scale.prototype.getRightValue.call(this, value);
                },

                handleTickRangeOptions: function() {
                    var me = this;
                    var opts = me.options;
                    var tickOpts = opts.ticks;

                    // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,
                    // do nothing since that would make the chart weird. If the user really wants a weird chart
                    // axis, they can manually override it
                    if (tickOpts.beginAtZero) {
                        var minSign = helpers.sign(me.min);
                        var maxSign = helpers.sign(me.max);

                        if (minSign < 0 && maxSign < 0) {
                            // move the top up to 0
                            me.max = 0;
                        } else if (minSign > 0 && maxSign > 0) {
                            // move the bottom down to 0
                            me.min = 0;
                        }
                    }

                    var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;
                    var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;

                    if (tickOpts.min !== undefined) {
                        me.min = tickOpts.min;
                    } else if (tickOpts.suggestedMin !== undefined) {
                        if (me.min === null) {
                            me.min = tickOpts.suggestedMin;
                        } else {
                            me.min = Math.min(me.min, tickOpts.suggestedMin);
                        }
                    }

                    if (tickOpts.max !== undefined) {
                        me.max = tickOpts.max;
                    } else if (tickOpts.suggestedMax !== undefined) {
                        if (me.max === null) {
                            me.max = tickOpts.suggestedMax;
                        } else {
                            me.max = Math.max(me.max, tickOpts.suggestedMax);
                        }
                    }

                    if (setMin !== setMax) {
                        // We set the min or the max but not both.
                        // So ensure that our range is good
                        // Inverted or 0 length range can happen when
                        // ticks.min is set, and no datasets are visible
                        if (me.min >= me.max) {
                            if (setMin) {
                                me.max = me.min + 1;
                            } else {
                                me.min = me.max - 1;
                            }
                        }
                    }

                    if (me.min === me.max) {
                        me.max++;

                        if (!tickOpts.beginAtZero) {
                            me.min--;
                        }
                    }
                },
                getTickLimit: noop,
                handleDirectionalChanges: noop,

                buildTicks: function() {
                    var me = this;
                    var opts = me.options;
                    var tickOpts = opts.ticks;

                    // Figure out what the max number of ticks we can support it is based on the size of
                    // the axis area. For now, we say that the minimum tick spacing in pixels must be 50
                    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on
                    // the graph. Make sure we always have at least 2 ticks
                    var maxTicks = me.getTickLimit();
                    maxTicks = Math.max(2, maxTicks);

                    var numericGeneratorOptions = {
                        maxTicks: maxTicks,
                        min: tickOpts.min,
                        max: tickOpts.max,
                        stepSize: helpers.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)
                    };
                    var ticks = me.ticks = Ticks.generators.linear(numericGeneratorOptions, me);

                    me.handleDirectionalChanges();

                    // At this point, we need to update our max and min given the tick values since we have expanded the
                    // range of the scale
                    me.max = helpers.max(ticks);
                    me.min = helpers.min(ticks);

                    if (tickOpts.reverse) {
                        ticks.reverse();

                        me.start = me.max;
                        me.end = me.min;
                    } else {
                        me.start = me.min;
                        me.end = me.max;
                    }
                },
                convertTicksToLabels: function() {
                    var me = this;
                    me.ticksAsNumbers = me.ticks.slice();
                    me.zeroLineIndex = me.ticks.indexOf(0);

                    Chart.Scale.prototype.convertTicksToLabels.call(me);
                }
            });
        };

    },{"34":34,"45":45}],55:[function(require,module,exports){
        'use strict';

        var helpers = require(45);
        var Ticks = require(34);

        module.exports = function(Chart) {

            var defaultConfig = {
                position: 'left',

                // label settings
                ticks: {
                    callback: Ticks.formatters.logarithmic
                }
            };

            var LogarithmicScale = Chart.Scale.extend({
                determineDataLimits: function() {
                    var me = this;
                    var opts = me.options;
                    var tickOpts = opts.ticks;
                    var chart = me.chart;
                    var data = chart.data;
                    var datasets = data.datasets;
                    var valueOrDefault = helpers.valueOrDefault;
                    var isHorizontal = me.isHorizontal();
                    function IDMatches(meta) {
                        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;
                    }

                    // Calculate Range
                    me.min = null;
                    me.max = null;
                    me.minNotZero = null;

                    var hasStacks = opts.stacked;
                    if (hasStacks === undefined) {
                        helpers.each(datasets, function(dataset, datasetIndex) {
                            if (hasStacks) {
                                return;
                            }

                            var meta = chart.getDatasetMeta(datasetIndex);
                            if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&
                                meta.stack !== undefined) {
                                hasStacks = true;
                            }
                        });
                    }

                    if (opts.stacked || hasStacks) {
                        var valuesPerStack = {};

                        helpers.each(datasets, function(dataset, datasetIndex) {
                            var meta = chart.getDatasetMeta(datasetIndex);
                            var key = [
                                meta.type,
                                // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined
                                ((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),
                                meta.stack
                            ].join('.');

                            if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {
                                if (valuesPerStack[key] === undefined) {
                                    valuesPerStack[key] = [];
                                }

                                helpers.each(dataset.data, function(rawValue, index) {
                                    var values = valuesPerStack[key];
                                    var value = +me.getRightValue(rawValue);
                                    if (isNaN(value) || meta.data[index].hidden) {
                                        return;
                                    }

                                    values[index] = values[index] || 0;

                                    if (opts.relativePoints) {
                                        values[index] = 100;
                                    } else {
                                        // Don't need to split positive and negative since the log scale can't handle a 0 crossing
                                        values[index] += value;
                                    }
                                });
                            }
                        });

                        helpers.each(valuesPerStack, function(valuesForType) {
                            var minVal = helpers.min(valuesForType);
                            var maxVal = helpers.max(valuesForType);
                            me.min = me.min === null ? minVal : Math.min(me.min, minVal);
                            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);
                        });

                    } else {
                        helpers.each(datasets, function(dataset, datasetIndex) {
                            var meta = chart.getDatasetMeta(datasetIndex);
                            if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {
                                helpers.each(dataset.data, function(rawValue, index) {
                                    var value = +me.getRightValue(rawValue);
                                    if (isNaN(value) || meta.data[index].hidden) {
                                        return;
                                    }

                                    if (me.min === null) {
                                        me.min = value;
                                    } else if (value < me.min) {
                                        me.min = value;
                                    }

                                    if (me.max === null) {
                                        me.max = value;
                                    } else if (value > me.max) {
                                        me.max = value;
                                    }

                                    if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {
                                        me.minNotZero = value;
                                    }
                                });
                            }
                        });
                    }

                    me.min = valueOrDefault(tickOpts.min, me.min);
                    me.max = valueOrDefault(tickOpts.max, me.max);

                    if (me.min === me.max) {
                        if (me.min !== 0 && me.min !== null) {
                            me.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);
                            me.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1);
                        } else {
                            me.min = 1;
                            me.max = 10;
                        }
                    }
                },
                buildTicks: function() {
                    var me = this;
                    var opts = me.options;
                    var tickOpts = opts.ticks;

                    var generationOptions = {
                        min: tickOpts.min,
                        max: tickOpts.max
                    };
                    var ticks = me.ticks = Ticks.generators.logarithmic(generationOptions, me);

                    if (!me.isHorizontal()) {
                        // We are in a vertical orientation. The top value is the highest. So reverse the array
                        ticks.reverse();
                    }

                    // At this point, we need to update our max and min given the tick values since we have expanded the
                    // range of the scale
                    me.max = helpers.max(ticks);
                    me.min = helpers.min(ticks);

                    if (tickOpts.reverse) {
                        ticks.reverse();

                        me.start = me.max;
                        me.end = me.min;
                    } else {
                        me.start = me.min;
                        me.end = me.max;
                    }
                },
                convertTicksToLabels: function() {
                    this.tickValues = this.ticks.slice();

                    Chart.Scale.prototype.convertTicksToLabels.call(this);
                },
                // Get the correct tooltip label
                getLabelForIndex: function(index, datasetIndex) {
                    return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);
                },
                getPixelForTick: function(index) {
                    return this.getPixelForValue(this.tickValues[index]);
                },
                getPixelForValue: function(value) {
                    var me = this;
                    var start = me.start;
                    var newVal = +me.getRightValue(value);
                    var opts = me.options;
                    var tickOpts = opts.ticks;
                    var innerDimension, pixel, range;

                    if (me.isHorizontal()) {
                        range = helpers.log10(me.end) - helpers.log10(start); // todo: if start === 0
                        if (newVal === 0) {
                            pixel = me.left;
                        } else {
                            innerDimension = me.width;
                            pixel = me.left + (innerDimension / range * (helpers.log10(newVal) - helpers.log10(start)));
                        }
                    } else {
                        // Bottom - top since pixels increase downward on a screen
                        innerDimension = me.height;
                        if (start === 0 && !tickOpts.reverse) {
                            range = helpers.log10(me.end) - helpers.log10(me.minNotZero);
                            if (newVal === start) {
                                pixel = me.bottom;
                            } else if (newVal === me.minNotZero) {
                                pixel = me.bottom - innerDimension * 0.02;
                            } else {
                                pixel = me.bottom - innerDimension * 0.02 - (innerDimension * 0.98 / range * (helpers.log10(newVal) - helpers.log10(me.minNotZero)));
                            }
                        } else if (me.end === 0 && tickOpts.reverse) {
                            range = helpers.log10(me.start) - helpers.log10(me.minNotZero);
                            if (newVal === me.end) {
                                pixel = me.top;
                            } else if (newVal === me.minNotZero) {
                                pixel = me.top + innerDimension * 0.02;
                            } else {
                                pixel = me.top + innerDimension * 0.02 + (innerDimension * 0.98 / range * (helpers.log10(newVal) - helpers.log10(me.minNotZero)));
                            }
                        } else if (newVal === 0) {
                            pixel = tickOpts.reverse ? me.top : me.bottom;
                        } else {
                            range = helpers.log10(me.end) - helpers.log10(start);
                            innerDimension = me.height;
                            pixel = me.bottom - (innerDimension / range * (helpers.log10(newVal) - helpers.log10(start)));
                        }
                    }
                    return pixel;
                },
                getValueForPixel: function(pixel) {
                    var me = this;
                    var range = helpers.log10(me.end) - helpers.log10(me.start);
                    var value, innerDimension;

                    if (me.isHorizontal()) {
                        innerDimension = me.width;
                        value = me.start * Math.pow(10, (pixel - me.left) * range / innerDimension);
                    } else { // todo: if start === 0
                        innerDimension = me.height;
                        value = Math.pow(10, (me.bottom - pixel) * range / innerDimension) / me.start;
                    }
                    return value;
                }
            });
            Chart.scaleService.registerScaleType('logarithmic', LogarithmicScale, defaultConfig);

        };

    },{"34":34,"45":45}],56:[function(require,module,exports){
        'use strict';

        var defaults = require(25);
        var helpers = require(45);
        var Ticks = require(34);

        module.exports = function(Chart) {

            var globalDefaults = defaults.global;

            var defaultConfig = {
                display: true,

                // Boolean - Whether to animate scaling the chart from the centre
                animate: true,
                position: 'chartArea',

                angleLines: {
                    display: true,
                    color: 'rgba(0, 0, 0, 0.1)',
                    lineWidth: 1
                },

                gridLines: {
                    circular: false
                },

                // label settings
                ticks: {
                    // Boolean - Show a backdrop to the scale label
                    showLabelBackdrop: true,

                    // String - The colour of the label backdrop
                    backdropColor: 'rgba(255,255,255,0.75)',

                    // Number - The backdrop padding above & below the label in pixels
                    backdropPaddingY: 2,

                    // Number - The backdrop padding to the side of the label in pixels
                    backdropPaddingX: 2,

                    callback: Ticks.formatters.linear
                },

                pointLabels: {
                    // Boolean - if true, show point labels
                    display: true,

                    // Number - Point label font size in pixels
                    fontSize: 10,

                    // Function - Used to convert point labels
                    callback: function(label) {
                        return label;
                    }
                }
            };

            function getValueCount(scale) {
                var opts = scale.options;
                return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;
            }

            function getPointLabelFontOptions(scale) {
                var pointLabelOptions = scale.options.pointLabels;
                var fontSize = helpers.valueOrDefault(pointLabelOptions.fontSize, globalDefaults.defaultFontSize);
                var fontStyle = helpers.valueOrDefault(pointLabelOptions.fontStyle, globalDefaults.defaultFontStyle);
                var fontFamily = helpers.valueOrDefault(pointLabelOptions.fontFamily, globalDefaults.defaultFontFamily);
                var font = helpers.fontString(fontSize, fontStyle, fontFamily);

                return {
                    size: fontSize,
                    style: fontStyle,
                    family: fontFamily,
                    font: font
                };
            }

            function measureLabelSize(ctx, fontSize, label) {
                if (helpers.isArray(label)) {
                    return {
                        w: helpers.longestText(ctx, ctx.font, label),
                        h: (label.length * fontSize) + ((label.length - 1) * 1.5 * fontSize)
                    };
                }

                return {
                    w: ctx.measureText(label).width,
                    h: fontSize
                };
            }

            function determineLimits(angle, pos, size, min, max) {
                if (angle === min || angle === max) {
                    return {
                        start: pos - (size / 2),
                        end: pos + (size / 2)
                    };
                } else if (angle < min || angle > max) {
                    return {
                        start: pos - size - 5,
                        end: pos
                    };
                }

                return {
                    start: pos,
                    end: pos + size + 5
                };
            }

            /**
             * Helper function to fit a radial linear scale with point labels
             */
            function fitWithPointLabels(scale) {
                /*
		 * Right, this is really confusing and there is a lot of maths going on here
		 * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9
		 *
		 * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif
		 *
		 * Solution:
		 *
		 * We assume the radius of the polygon is half the size of the canvas at first
		 * at each index we check if the text overlaps.
		 *
		 * Where it does, we store that angle and that index.
		 *
		 * After finding the largest index and angle we calculate how much we need to remove
		 * from the shape radius to move the point inwards by that x.
		 *
		 * We average the left and right distances to get the maximum shape radius that can fit in the box
		 * along with labels.
		 *
		 * Once we have that, we can find the centre point for the chart, by taking the x text protrusion
		 * on each side, removing that from the size, halving it and adding the left x protrusion width.
		 *
		 * This will mean we have a shape fitted to the canvas, as large as it can be with the labels
		 * and position it in the most space efficient manner
		 *
		 * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif
		 */

                var plFont = getPointLabelFontOptions(scale);

                // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.
                // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points
                var largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);
                var furthestLimits = {
                    r: scale.width,
                    l: 0,
                    t: scale.height,
                    b: 0
                };
                var furthestAngles = {};
                var i, textSize, pointPosition;

                scale.ctx.font = plFont.font;
                scale._pointLabelSizes = [];

                var valueCount = getValueCount(scale);
                for (i = 0; i < valueCount; i++) {
                    pointPosition = scale.getPointPosition(i, largestPossibleRadius);
                    textSize = measureLabelSize(scale.ctx, plFont.size, scale.pointLabels[i] || '');
                    scale._pointLabelSizes[i] = textSize;

                    // Add quarter circle to make degree 0 mean top of circle
                    var angleRadians = scale.getIndexAngle(i);
                    var angle = helpers.toDegrees(angleRadians) % 360;
                    var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);
                    var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);

                    if (hLimits.start < furthestLimits.l) {
                        furthestLimits.l = hLimits.start;
                        furthestAngles.l = angleRadians;
                    }

                    if (hLimits.end > furthestLimits.r) {
                        furthestLimits.r = hLimits.end;
                        furthestAngles.r = angleRadians;
                    }

                    if (vLimits.start < furthestLimits.t) {
                        furthestLimits.t = vLimits.start;
                        furthestAngles.t = angleRadians;
                    }

                    if (vLimits.end > furthestLimits.b) {
                        furthestLimits.b = vLimits.end;
                        furthestAngles.b = angleRadians;
                    }
                }

                scale.setReductions(largestPossibleRadius, furthestLimits, furthestAngles);
            }

            /**
             * Helper function to fit a radial linear scale with no point labels
             */
            function fit(scale) {
                var largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);
                scale.drawingArea = Math.round(largestPossibleRadius);
                scale.setCenterPoint(0, 0, 0, 0);
            }

            function getTextAlignForAngle(angle) {
                if (angle === 0 || angle === 180) {
                    return 'center';
                } else if (angle < 180) {
                    return 'left';
                }

                return 'right';
            }

            function fillText(ctx, text, position, fontSize) {
                if (helpers.isArray(text)) {
                    var y = position.y;
                    var spacing = 1.5 * fontSize;

                    for (var i = 0; i < text.length; ++i) {
                        ctx.fillText(text[i], position.x, y);
                        y += spacing;
                    }
                } else {
                    ctx.fillText(text, position.x, position.y);
                }
            }

            function adjustPointPositionForLabelHeight(angle, textSize, position) {
                if (angle === 90 || angle === 270) {
                    position.y -= (textSize.h / 2);
                } else if (angle > 270 || angle < 90) {
                    position.y -= textSize.h;
                }
            }

            function drawPointLabels(scale) {
                var ctx = scale.ctx;
                var valueOrDefault = helpers.valueOrDefault;
                var opts = scale.options;
                var angleLineOpts = opts.angleLines;
                var pointLabelOpts = opts.pointLabels;

                ctx.lineWidth = angleLineOpts.lineWidth;
                ctx.strokeStyle = angleLineOpts.color;

                var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);

                // Point Label Font
                var plFont = getPointLabelFontOptions(scale);

                ctx.textBaseline = 'top';

                for (var i = getValueCount(scale) - 1; i >= 0; i--) {
                    if (angleLineOpts.display) {
                        var outerPosition = scale.getPointPosition(i, outerDistance);
                        ctx.beginPath();
                        ctx.moveTo(scale.xCenter, scale.yCenter);
                        ctx.lineTo(outerPosition.x, outerPosition.y);
                        ctx.stroke();
                        ctx.closePath();
                    }

                    if (pointLabelOpts.display) {
                        // Extra 3px out for some label spacing
                        var pointLabelPosition = scale.getPointPosition(i, outerDistance + 5);

                        // Keep this in loop since we may support array properties here
                        var pointLabelFontColor = valueOrDefault(pointLabelOpts.fontColor, globalDefaults.defaultFontColor);
                        ctx.font = plFont.font;
                        ctx.fillStyle = pointLabelFontColor;

                        var angleRadians = scale.getIndexAngle(i);
                        var angle = helpers.toDegrees(angleRadians);
                        ctx.textAlign = getTextAlignForAngle(angle);
                        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);
                        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.size);
                    }
                }
            }

            function drawRadiusLine(scale, gridLineOpts, radius, index) {
                var ctx = scale.ctx;
                ctx.strokeStyle = helpers.valueAtIndexOrDefault(gridLineOpts.color, index - 1);
                ctx.lineWidth = helpers.valueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);

                if (scale.options.gridLines.circular) {
                    // Draw circular arcs between the points
                    ctx.beginPath();
                    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);
                    ctx.closePath();
                    ctx.stroke();
                } else {
                    // Draw straight lines connecting each index
                    var valueCount = getValueCount(scale);

                    if (valueCount === 0) {
                        return;
                    }

                    ctx.beginPath();
                    var pointPosition = scale.getPointPosition(0, radius);
                    ctx.moveTo(pointPosition.x, pointPosition.y);

                    for (var i = 1; i < valueCount; i++) {
                        pointPosition = scale.getPointPosition(i, radius);
                        ctx.lineTo(pointPosition.x, pointPosition.y);
                    }

                    ctx.closePath();
                    ctx.stroke();
                }
            }

            function numberOrZero(param) {
                return helpers.isNumber(param) ? param : 0;
            }

            var LinearRadialScale = Chart.LinearScaleBase.extend({
                setDimensions: function() {
                    var me = this;
                    var opts = me.options;
                    var tickOpts = opts.ticks;
                    // Set the unconstrained dimension before label rotation
                    me.width = me.maxWidth;
                    me.height = me.maxHeight;
                    me.xCenter = Math.round(me.width / 2);
                    me.yCenter = Math.round(me.height / 2);

                    var minSize = helpers.min([me.height, me.width]);
                    var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);
                    me.drawingArea = opts.display ? (minSize / 2) - (tickFontSize / 2 + tickOpts.backdropPaddingY) : (minSize / 2);
                },
                determineDataLimits: function() {
                    var me = this;
                    var chart = me.chart;
                    var min = Number.POSITIVE_INFINITY;
                    var max = Number.NEGATIVE_INFINITY;

                    helpers.each(chart.data.datasets, function(dataset, datasetIndex) {
                        if (chart.isDatasetVisible(datasetIndex)) {
                            var meta = chart.getDatasetMeta(datasetIndex);

                            helpers.each(dataset.data, function(rawValue, index) {
                                var value = +me.getRightValue(rawValue);
                                if (isNaN(value) || meta.data[index].hidden) {
                                    return;
                                }

                                min = Math.min(value, min);
                                max = Math.max(value, max);
                            });
                        }
                    });

                    me.min = (min === Number.POSITIVE_INFINITY ? 0 : min);
                    me.max = (max === Number.NEGATIVE_INFINITY ? 0 : max);

                    // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero
                    me.handleTickRangeOptions();
                },
                getTickLimit: function() {
                    var tickOpts = this.options.ticks;
                    var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);
                    return Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));
                },
                convertTicksToLabels: function() {
                    var me = this;

                    Chart.LinearScaleBase.prototype.convertTicksToLabels.call(me);

                    // Point labels
                    me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);
                },
                getLabelForIndex: function(index, datasetIndex) {
                    return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);
                },
                fit: function() {
                    if (this.options.pointLabels.display) {
                        fitWithPointLabels(this);
                    } else {
                        fit(this);
                    }
                },
                /**
                 * Set radius reductions and determine new radius and center point
                 * @private
                 */
                setReductions: function(largestPossibleRadius, furthestLimits, furthestAngles) {
                    var me = this;
                    var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);
                    var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);
                    var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);
                    var radiusReductionBottom = -Math.max(furthestLimits.b - me.height, 0) / Math.cos(furthestAngles.b);

                    radiusReductionLeft = numberOrZero(radiusReductionLeft);
                    radiusReductionRight = numberOrZero(radiusReductionRight);
                    radiusReductionTop = numberOrZero(radiusReductionTop);
                    radiusReductionBottom = numberOrZero(radiusReductionBottom);

                    me.drawingArea = Math.min(
                        Math.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),
                        Math.round(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));
                    me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);
                },
                setCenterPoint: function(leftMovement, rightMovement, topMovement, bottomMovement) {
                    var me = this;
                    var maxRight = me.width - rightMovement - me.drawingArea;
                    var maxLeft = leftMovement + me.drawingArea;
                    var maxTop = topMovement + me.drawingArea;
                    var maxBottom = me.height - bottomMovement - me.drawingArea;

                    me.xCenter = Math.round(((maxLeft + maxRight) / 2) + me.left);
                    me.yCenter = Math.round(((maxTop + maxBottom) / 2) + me.top);
                },

                getIndexAngle: function(index) {
                    var angleMultiplier = (Math.PI * 2) / getValueCount(this);
                    var startAngle = this.chart.options && this.chart.options.startAngle ?
                        this.chart.options.startAngle :
                        0;

                    var startAngleRadians = startAngle * Math.PI * 2 / 360;

                    // Start from the top instead of right, so remove a quarter of the circle
                    return index * angleMultiplier + startAngleRadians;
                },
                getDistanceFromCenterForValue: function(value) {
                    var me = this;

                    if (value === null) {
                        return 0; // null always in center
                    }

                    // Take into account half font size + the yPadding of the top value
                    var scalingFactor = me.drawingArea / (me.max - me.min);
                    if (me.options.ticks.reverse) {
                        return (me.max - value) * scalingFactor;
                    }
                    return (value - me.min) * scalingFactor;
                },
                getPointPosition: function(index, distanceFromCenter) {
                    var me = this;
                    var thisAngle = me.getIndexAngle(index) - (Math.PI / 2);
                    return {
                        x: Math.round(Math.cos(thisAngle) * distanceFromCenter) + me.xCenter,
                        y: Math.round(Math.sin(thisAngle) * distanceFromCenter) + me.yCenter
                    };
                },
                getPointPositionForValue: function(index, value) {
                    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));
                },

                getBasePosition: function() {
                    var me = this;
                    var min = me.min;
                    var max = me.max;

                    return me.getPointPositionForValue(0,
                        me.beginAtZero ? 0 :
                            min < 0 && max < 0 ? max :
                                min > 0 && max > 0 ? min :
                                    0);
                },

                draw: function() {
                    var me = this;
                    var opts = me.options;
                    var gridLineOpts = opts.gridLines;
                    var tickOpts = opts.ticks;
                    var valueOrDefault = helpers.valueOrDefault;

                    if (opts.display) {
                        var ctx = me.ctx;
                        var startAngle = this.getIndexAngle(0);

                        // Tick Font
                        var tickFontSize = valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);
                        var tickFontStyle = valueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);
                        var tickFontFamily = valueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);
                        var tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);

                        helpers.each(me.ticks, function(label, index) {
                            // Don't draw a centre value (if it is minimum)
                            if (index > 0 || tickOpts.reverse) {
                                var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);

                                // Draw circular lines around the scale
                                if (gridLineOpts.display && index !== 0) {
                                    drawRadiusLine(me, gridLineOpts, yCenterOffset, index);
                                }

                                if (tickOpts.display) {
                                    var tickFontColor = valueOrDefault(tickOpts.fontColor, globalDefaults.defaultFontColor);
                                    ctx.font = tickLabelFont;

                                    ctx.save();
                                    ctx.translate(me.xCenter, me.yCenter);
                                    ctx.rotate(startAngle);

                                    if (tickOpts.showLabelBackdrop) {
                                        var labelWidth = ctx.measureText(label).width;
                                        ctx.fillStyle = tickOpts.backdropColor;
                                        ctx.fillRect(
                                            -labelWidth / 2 - tickOpts.backdropPaddingX,
                                            -yCenterOffset - tickFontSize / 2 - tickOpts.backdropPaddingY,
                                            labelWidth + tickOpts.backdropPaddingX * 2,
                                            tickFontSize + tickOpts.backdropPaddingY * 2
                                        );
                                    }

                                    ctx.textAlign = 'center';
                                    ctx.textBaseline = 'middle';
                                    ctx.fillStyle = tickFontColor;
                                    ctx.fillText(label, 0, -yCenterOffset);
                                    ctx.restore();
                                }
                            }
                        });

                        if (opts.angleLines.display || opts.pointLabels.display) {
                            drawPointLabels(me);
                        }
                    }
                }
            });
            Chart.scaleService.registerScaleType('radialLinear', LinearRadialScale, defaultConfig);

        };

    },{"25":25,"34":34,"45":45}],57:[function(require,module,exports){
        /* global window: false */
        'use strict';

        var moment = require(1);
        moment = typeof moment === 'function' ? moment : window.moment;

        var defaults = require(25);
        var helpers = require(45);

// Integer constants are from the ES6 spec.
        var MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;
        var MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;

        var INTERVALS = {
            millisecond: {
                common: true,
                size: 1,
                steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]
            },
            second: {
                common: true,
                size: 1000,
                steps: [1, 2, 5, 10, 30]
            },
            minute: {
                common: true,
                size: 60000,
                steps: [1, 2, 5, 10, 30]
            },
            hour: {
                common: true,
                size: 3600000,
                steps: [1, 2, 3, 6, 12]
            },
            day: {
                common: true,
                size: 86400000,
                steps: [1, 2, 5]
            },
            week: {
                common: false,
                size: 604800000,
                steps: [1, 2, 3, 4]
            },
            month: {
                common: true,
                size: 2.628e9,
                steps: [1, 2, 3]
            },
            quarter: {
                common: false,
                size: 7.884e9,
                steps: [1, 2, 3, 4]
            },
            year: {
                common: true,
                size: 3.154e10
            }
        };

        var UNITS = Object.keys(INTERVALS);

        function sorter(a, b) {
            return a - b;
        }

        function arrayUnique(items) {
            var hash = {};
            var out = [];
            var i, ilen, item;

            for (i = 0, ilen = items.length; i < ilen; ++i) {
                item = items[i];
                if (!hash[item]) {
                    hash[item] = true;
                    out.push(item);
                }
            }

            return out;
        }

        /**
         * Returns an array of {time, pos} objects used to interpolate a specific `time` or position
         * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is
         * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other
         * extremity (left + width or top + height). Note that it would be more optimized to directly
         * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need
         * to create the lookup table. The table ALWAYS contains at least two items: min and max.
         *
         * @param {Number[]} timestamps - timestamps sorted from lowest to highest.
         * @param {String} distribution - If 'linear', timestamps will be spread linearly along the min
         * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.
         * If 'series', timestamps will be positioned at the same distance from each other. In this
         * case, only timestamps that break the time linearity are registered, meaning that in the
         * best case, all timestamps are linear, the table contains only min and max.
         */
        function buildLookupTable(timestamps, min, max, distribution) {
            if (distribution === 'linear' || !timestamps.length) {
                return [
                    {time: min, pos: 0},
                    {time: max, pos: 1}
                ];
            }

            var table = [];
            var items = [min];
            var i, ilen, prev, curr, next;

            for (i = 0, ilen = timestamps.length; i < ilen; ++i) {
                curr = timestamps[i];
                if (curr > min && curr < max) {
                    items.push(curr);
                }
            }

            items.push(max);

            for (i = 0, ilen = items.length; i < ilen; ++i) {
                next = items[i + 1];
                prev = items[i - 1];
                curr = items[i];

                // only add points that breaks the scale linearity
                if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {
                    table.push({time: curr, pos: i / (ilen - 1)});
                }
            }

            return table;
        }

// @see adapted from http://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/
        function lookup(table, key, value) {
            var lo = 0;
            var hi = table.length - 1;
            var mid, i0, i1;

            while (lo >= 0 && lo <= hi) {
                mid = (lo + hi) >> 1;
                i0 = table[mid - 1] || null;
                i1 = table[mid];

                if (!i0) {
                    // given value is outside table (before first item)
                    return {lo: null, hi: i1};
                } else if (i1[key] < value) {
                    lo = mid + 1;
                } else if (i0[key] > value) {
                    hi = mid - 1;
                } else {
                    return {lo: i0, hi: i1};
                }
            }

            // given value is outside table (after last item)
            return {lo: i1, hi: null};
        }

        /**
         * Linearly interpolates the given source `value` using the table items `skey` values and
         * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')
         * returns the position for a timestamp equal to 42. If value is out of bounds, values at
         * index [0, 1] or [n - 1, n] are used for the interpolation.
         */
        function interpolate(table, skey, sval, tkey) {
            var range = lookup(table, skey, sval);

            // Note: the lookup table ALWAYS contains at least 2 items (min and max)
            var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;
            var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;

            var span = next[skey] - prev[skey];
            var ratio = span ? (sval - prev[skey]) / span : 0;
            var offset = (next[tkey] - prev[tkey]) * ratio;

            return prev[tkey] + offset;
        }

        /**
         * Convert the given value to a moment object using the given time options.
         * @see http://momentjs.com/docs/#/parsing/
         */
        function momentify(value, options) {
            var parser = options.parser;
            var format = options.parser || options.format;

            if (typeof parser === 'function') {
                return parser(value);
            }

            if (typeof value === 'string' && typeof format === 'string') {
                return moment(value, format);
            }

            if (!(value instanceof moment)) {
                value = moment(value);
            }

            if (value.isValid()) {
                return value;
            }

            // Labels are in an incompatible moment format and no `parser` has been provided.
            // The user might still use the deprecated `format` option to convert his inputs.
            if (typeof format === 'function') {
                return format(value);
            }

            return value;
        }

        function parse(input, scale) {
            if (helpers.isNullOrUndef(input)) {
                return null;
            }

            var options = scale.options.time;
            var value = momentify(scale.getRightValue(input), options);
            if (!value.isValid()) {
                return null;
            }

            if (options.round) {
                value.startOf(options.round);
            }

            return value.valueOf();
        }

        /**
         * Returns the number of unit to skip to be able to display up to `capacity` number of ticks
         * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.
         */
        function determineStepSize(min, max, unit, capacity) {
            var range = max - min;
            var interval = INTERVALS[unit];
            var milliseconds = interval.size;
            var steps = interval.steps;
            var i, ilen, factor;

            if (!steps) {
                return Math.ceil(range / ((capacity || 1) * milliseconds));
            }

            for (i = 0, ilen = steps.length; i < ilen; ++i) {
                factor = steps[i];
                if (Math.ceil(range / (milliseconds * factor)) <= capacity) {
                    break;
                }
            }

            return factor;
        }

        /**
         * Figures out what unit results in an appropriate number of auto-generated ticks
         */
        function determineUnitForAutoTicks(minUnit, min, max, capacity) {
            var ilen = UNITS.length;
            var i, interval, factor;

            for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {
                interval = INTERVALS[UNITS[i]];
                factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;

                if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {
                    return UNITS[i];
                }
            }

            return UNITS[ilen - 1];
        }

        /**
         * Figures out what unit to format a set of ticks with
         */
        function determineUnitForFormatting(ticks, minUnit, min, max) {
            var duration = moment.duration(moment(max).diff(moment(min)));
            var ilen = UNITS.length;
            var i, unit;

            for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {
                unit = UNITS[i];
                if (INTERVALS[unit].common && duration.as(unit) >= ticks.length) {
                    return unit;
                }
            }

            return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];
        }

        function determineMajorUnit(unit) {
            for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {
                if (INTERVALS[UNITS[i]].common) {
                    return UNITS[i];
                }
            }
        }

        /**
         * Generates a maximum of `capacity` timestamps between min and max, rounded to the
         * `minor` unit, aligned on the `major` unit and using the given scale time `options`.
         * Important: this method can return ticks outside the min and max range, it's the
         * responsibility of the calling code to clamp values if needed.
         */
        function generate(min, max, capacity, options) {
            var timeOpts = options.time;
            var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);
            var major = determineMajorUnit(minor);
            var stepSize = helpers.valueOrDefault(timeOpts.stepSize, timeOpts.unitStepSize);
            var weekday = minor === 'week' ? timeOpts.isoWeekday : false;
            var majorTicksEnabled = options.ticks.major.enabled;
            var interval = INTERVALS[minor];
            var first = moment(min);
            var last = moment(max);
            var ticks = [];
            var time;

            if (!stepSize) {
                stepSize = determineStepSize(min, max, minor, capacity);
            }

            // For 'week' unit, handle the first day of week option
            if (weekday) {
                first = first.isoWeekday(weekday);
                last = last.isoWeekday(weekday);
            }

            // Align first/last ticks on unit
            first = first.startOf(weekday ? 'day' : minor);
            last = last.startOf(weekday ? 'day' : minor);

            // Make sure that the last tick include max
            if (last < max) {
                last.add(1, minor);
            }

            time = moment(first);

            if (majorTicksEnabled && major && !weekday && !timeOpts.round) {
                // Align the first tick on the previous `minor` unit aligned on the `major` unit:
                // we first aligned time on the previous `major` unit then add the number of full
                // stepSize there is between first and the previous major time.
                time.startOf(major);
                time.add(~~((first - time) / (interval.size * stepSize)) * stepSize, minor);
            }

            for (; time < last; time.add(stepSize, minor)) {
                ticks.push(+time);
            }

            ticks.push(+time);

            return ticks;
        }

        /**
         * Returns the right and left offsets from edges in the form of {left, right}.
         * Offsets are added when the `offset` option is true.
         */
        function computeOffsets(table, ticks, min, max, options) {
            var left = 0;
            var right = 0;
            var upper, lower;

            if (options.offset && ticks.length) {
                if (!options.time.min) {
                    upper = ticks.length > 1 ? ticks[1] : max;
                    lower = ticks[0];
                    left = (
                        interpolate(table, 'time', upper, 'pos') -
                        interpolate(table, 'time', lower, 'pos')
                    ) / 2;
                }
                if (!options.time.max) {
                    upper = ticks[ticks.length - 1];
                    lower = ticks.length > 1 ? ticks[ticks.length - 2] : min;
                    right = (
                        interpolate(table, 'time', upper, 'pos') -
                        interpolate(table, 'time', lower, 'pos')
                    ) / 2;
                }
            }

            return {left: left, right: right};
        }

        function ticksFromTimestamps(values, majorUnit) {
            var ticks = [];
            var i, ilen, value, major;

            for (i = 0, ilen = values.length; i < ilen; ++i) {
                value = values[i];
                major = majorUnit ? value === +moment(value).startOf(majorUnit) : false;

                ticks.push({
                    value: value,
                    major: major
                });
            }

            return ticks;
        }

        module.exports = function(Chart) {

            var defaultConfig = {
                position: 'bottom',

                /**
                 * Data distribution along the scale:
                 * - 'linear': data are spread according to their time (distances can vary),
                 * - 'series': data are spread at the same distance from each other.
                 * @see https://github.com/chartjs/Chart.js/pull/4507
                 * @since 2.7.0
                 */
                distribution: 'linear',

                /**
                 * Scale boundary strategy (bypassed by min/max time options)
                 * - `data`: make sure data are fully visible, ticks outside are removed
                 * - `ticks`: make sure ticks are fully visible, data outside are truncated
                 * @see https://github.com/chartjs/Chart.js/pull/4556
                 * @since 2.7.0
                 */
                bounds: 'data',

                time: {
                    parser: false, // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment
                    format: false, // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/
                    unit: false, // false == automatic or override with week, month, year, etc.
                    round: false, // none, or override with week, month, year, etc.
                    displayFormat: false, // DEPRECATED
                    isoWeekday: false, // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/
                    minUnit: 'millisecond',

                    // defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/
                    displayFormats: {
                        millisecond: 'h:mm:ss.SSS a', // 11:20:01.123 AM,
                        second: 'h:mm:ss a', // 11:20:01 AM
                        minute: 'h:mm a', // 11:20 AM
                        hour: 'hA', // 5PM
                        day: 'MMM D', // Sep 4
                        week: 'll', // Week 46, or maybe "[W]WW - YYYY" ?
                        month: 'MMM YYYY', // Sept 2015
                        quarter: '[Q]Q - YYYY', // Q3
                        year: 'YYYY' // 2015
                    },
                },
                ticks: {
                    autoSkip: false,

                    /**
                     * Ticks generation input values:
                     * - 'auto': generates "optimal" ticks based on scale size and time options.
                     * - 'data': generates ticks from data (including labels from data {t|x|y} objects).
                     * - 'labels': generates ticks from user given `data.labels` values ONLY.
                     * @see https://github.com/chartjs/Chart.js/pull/4507
                     * @since 2.7.0
                     */
                    source: 'auto',

                    major: {
                        enabled: false
                    }
                }
            };

            var TimeScale = Chart.Scale.extend({
                initialize: function() {
                    if (!moment) {
                        throw new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');
                    }

                    this.mergeTicksOptions();

                    Chart.Scale.prototype.initialize.call(this);
                },

                update: function() {
                    var me = this;
                    var options = me.options;

                    // DEPRECATIONS: output a message only one time per update
                    if (options.time && options.time.format) {
                        console.warn('options.time.format is deprecated and replaced by options.time.parser.');
                    }

                    return Chart.Scale.prototype.update.apply(me, arguments);
                },

                /**
                 * Allows data to be referenced via 't' attribute
                 */
                getRightValue: function(rawValue) {
                    if (rawValue && rawValue.t !== undefined) {
                        rawValue = rawValue.t;
                    }
                    return Chart.Scale.prototype.getRightValue.call(this, rawValue);
                },

                determineDataLimits: function() {
                    var me = this;
                    var chart = me.chart;
                    var timeOpts = me.options.time;
                    var min = MAX_INTEGER;
                    var max = MIN_INTEGER;
                    var timestamps = [];
                    var datasets = [];
                    var labels = [];
                    var i, j, ilen, jlen, data, timestamp;

                    // Convert labels to timestamps
                    for (i = 0, ilen = chart.data.labels.length; i < ilen; ++i) {
                        labels.push(parse(chart.data.labels[i], me));
                    }

                    // Convert data to timestamps
                    for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {
                        if (chart.isDatasetVisible(i)) {
                            data = chart.data.datasets[i].data;

                            // Let's consider that all data have the same format.
                            if (helpers.isObject(data[0])) {
                                datasets[i] = [];

                                for (j = 0, jlen = data.length; j < jlen; ++j) {
                                    timestamp = parse(data[j], me);
                                    timestamps.push(timestamp);
                                    datasets[i][j] = timestamp;
                                }
                            } else {
                                timestamps.push.apply(timestamps, labels);
                                datasets[i] = labels.slice(0);
                            }
                        } else {
                            datasets[i] = [];
                        }
                    }

                    if (labels.length) {
                        // Sort labels **after** data have been converted
                        labels = arrayUnique(labels).sort(sorter);
                        min = Math.min(min, labels[0]);
                        max = Math.max(max, labels[labels.length - 1]);
                    }

                    if (timestamps.length) {
                        timestamps = arrayUnique(timestamps).sort(sorter);
                        min = Math.min(min, timestamps[0]);
                        max = Math.max(max, timestamps[timestamps.length - 1]);
                    }

                    min = parse(timeOpts.min, me) || min;
                    max = parse(timeOpts.max, me) || max;

                    // In case there is no valid min/max, let's use today limits
                    min = min === MAX_INTEGER ? +moment().startOf('day') : min;
                    max = max === MIN_INTEGER ? +moment().endOf('day') + 1 : max;

                    // Make sure that max is strictly higher than min (required by the lookup table)
                    me.min = Math.min(min, max);
                    me.max = Math.max(min + 1, max);

                    // PRIVATE
                    me._horizontal = me.isHorizontal();
                    me._table = [];
                    me._timestamps = {
                        data: timestamps,
                        datasets: datasets,
                        labels: labels
                    };
                },

                buildTicks: function() {
                    var me = this;
                    var min = me.min;
                    var max = me.max;
                    var options = me.options;
                    var timeOpts = options.time;
                    var timestamps = [];
                    var ticks = [];
                    var i, ilen, timestamp;

                    switch (options.ticks.source) {
                        case 'data':
                            timestamps = me._timestamps.data;
                            break;
                        case 'labels':
                            timestamps = me._timestamps.labels;
                            break;
                        case 'auto':
                        default:
                            timestamps = generate(min, max, me.getLabelCapacity(min), options);
                    }

                    if (options.bounds === 'ticks' && timestamps.length) {
                        min = timestamps[0];
                        max = timestamps[timestamps.length - 1];
                    }

                    // Enforce limits with user min/max options
                    min = parse(timeOpts.min, me) || min;
                    max = parse(timeOpts.max, me) || max;

                    // Remove ticks outside the min/max range
                    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {
                        timestamp = timestamps[i];
                        if (timestamp >= min && timestamp <= max) {
                            ticks.push(timestamp);
                        }
                    }

                    me.min = min;
                    me.max = max;

                    // PRIVATE
                    me._unit = timeOpts.unit || determineUnitForFormatting(ticks, timeOpts.minUnit, me.min, me.max);
                    me._majorUnit = determineMajorUnit(me._unit);
                    me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);
                    me._offsets = computeOffsets(me._table, ticks, min, max, options);

                    return ticksFromTimestamps(ticks, me._majorUnit);
                },

                getLabelForIndex: function(index, datasetIndex) {
                    var me = this;
                    var data = me.chart.data;
                    var timeOpts = me.options.time;
                    var label = data.labels && index < data.labels.length ? data.labels[index] : '';
                    var value = data.datasets[datasetIndex].data[index];

                    if (helpers.isObject(value)) {
                        label = me.getRightValue(value);
                    }
                    if (timeOpts.tooltipFormat) {
                        label = momentify(label, timeOpts).format(timeOpts.tooltipFormat);
                    }

                    return label;
                },

                /**
                 * Function to format an individual tick mark
                 * @private
                 */
                tickFormatFunction: function(tick, index, ticks, formatOverride) {
                    var me = this;
                    var options = me.options;
                    var time = tick.valueOf();
                    var formats = options.time.displayFormats;
                    var minorFormat = formats[me._unit];
                    var majorUnit = me._majorUnit;
                    var majorFormat = formats[majorUnit];
                    var majorTime = tick.clone().startOf(majorUnit).valueOf();
                    var majorTickOpts = options.ticks.major;
                    var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;
                    var label = tick.format(formatOverride ? formatOverride : major ? majorFormat : minorFormat);
                    var tickOpts = major ? majorTickOpts : options.ticks.minor;
                    var formatter = helpers.valueOrDefault(tickOpts.callback, tickOpts.userCallback);

                    return formatter ? formatter(label, index, ticks) : label;
                },

                convertTicksToLabels: function(ticks) {
                    var labels = [];
                    var i, ilen;

                    for (i = 0, ilen = ticks.length; i < ilen; ++i) {
                        labels.push(this.tickFormatFunction(moment(ticks[i].value), i, ticks));
                    }

                    return labels;
                },

                /**
                 * @private
                 */
                getPixelForOffset: function(time) {
                    var me = this;
                    var size = me._horizontal ? me.width : me.height;
                    var start = me._horizontal ? me.left : me.top;
                    var pos = interpolate(me._table, 'time', time, 'pos');

                    return start + size * (me._offsets.left + pos) / (me._offsets.left + 1 + me._offsets.right);
                },

                getPixelForValue: function(value, index, datasetIndex) {
                    var me = this;
                    var time = null;

                    if (index !== undefined && datasetIndex !== undefined) {
                        time = me._timestamps.datasets[datasetIndex][index];
                    }

                    if (time === null) {
                        time = parse(value, me);
                    }

                    if (time !== null) {
                        return me.getPixelForOffset(time);
                    }
                },

                getPixelForTick: function(index) {
                    var ticks = this.getTicks();
                    return index >= 0 && index < ticks.length ?
                        this.getPixelForOffset(ticks[index].value) :
                        null;
                },

                getValueForPixel: function(pixel) {
                    var me = this;
                    var size = me._horizontal ? me.width : me.height;
                    var start = me._horizontal ? me.left : me.top;
                    var pos = (size ? (pixel - start) / size : 0) * (me._offsets.left + 1 + me._offsets.left) - me._offsets.right;
                    var time = interpolate(me._table, 'pos', pos, 'time');

                    return moment(time);
                },

                /**
                 * Crude approximation of what the label width might be
                 * @private
                 */
                getLabelWidth: function(label) {
                    var me = this;
                    var ticksOpts = me.options.ticks;
                    var tickLabelWidth = me.ctx.measureText(label).width;
                    var angle = helpers.toRadians(ticksOpts.maxRotation);
                    var cosRotation = Math.cos(angle);
                    var sinRotation = Math.sin(angle);
                    var tickFontSize = helpers.valueOrDefault(ticksOpts.fontSize, defaults.global.defaultFontSize);

                    return (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation);
                },

                /**
                 * @private
                 */
                getLabelCapacity: function(exampleTime) {
                    var me = this;

                    var formatOverride = me.options.time.displayFormats.millisecond;	// Pick the longest format for guestimation

                    var exampleLabel = me.tickFormatFunction(moment(exampleTime), 0, [], formatOverride);
                    var tickLabelWidth = me.getLabelWidth(exampleLabel);
                    var innerWidth = me.isHorizontal() ? me.width : me.height;

                    return Math.floor(innerWidth / tickLabelWidth);
                }
            });

            Chart.scaleService.registerScaleType('time', TimeScale, defaultConfig);
        };

    },{"1":1,"25":25,"45":45}]},{},[7])(7)
});

/*!
 * ApexCharts v3.6.12
 * (c) 2018-2019 Juned Chhipa
 * Released under the MIT License.
 */
!function (t, e) {
    "object" == typeof exports && "undefined" != typeof module ? module.exports = e() : "function" == typeof define && define.amd ? define(e) : (t = t || self).ApexCharts = e()
}(this, function () {
    "use strict";

    function t(e) {
        return (t = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (t) {
            return typeof t
        } : function (t) {
            return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
        })(e)
    }

    function e(t, e) {
        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
    }

    function i(t, e) {
        for (var i = 0; i < e.length; i++) {
            var s = e[i];
            s.enumerable = s.enumerable || !1, s.configurable = !0, "value" in s && (s.writable = !0), Object.defineProperty(t, s.key, s)
        }
    }

    function s(t, e, s) {
        return e && i(t.prototype, e), s && i(t, s), t
    }

    function a(t, e, i) {
        return e in t ? Object.defineProperty(t, e, {
            value: i,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : t[e] = i, t
    }

    function n(t) {
        for (var e = 1; e < arguments.length; e++) {
            var i = null != arguments[e] ? arguments[e] : {}, s = Object.keys(i);
            "function" == typeof Object.getOwnPropertySymbols && (s = s.concat(Object.getOwnPropertySymbols(i).filter(function (t) {
                return Object.getOwnPropertyDescriptor(i, t).enumerable
            }))), s.forEach(function (e) {
                a(t, e, i[e])
            })
        }
        return t
    }

    function r(t, e) {
        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
        t.prototype = Object.create(e && e.prototype, {
            constructor: {
                value: t,
                writable: !0,
                configurable: !0
            }
        }), e && l(t, e)
    }

    function o(t) {
        return (o = Object.setPrototypeOf ? Object.getPrototypeOf : function (t) {
            return t.__proto__ || Object.getPrototypeOf(t)
        })(t)
    }

    function l(t, e) {
        return (l = Object.setPrototypeOf || function (t, e) {
            return t.__proto__ = e, t
        })(t, e)
    }

    function h(t, e) {
        return !e || "object" != typeof e && "function" != typeof e ? function (t) {
            if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return t
        }(t) : e
    }

    function c(t) {
        return function (t) {
            if (Array.isArray(t)) {
                for (var e = 0, i = new Array(t.length); e < t.length; e++) i[e] = t[e];
                return i
            }
        }(t) || function (t) {
            if (Symbol.iterator in Object(t) || "[object Arguments]" === Object.prototype.toString.call(t)) return Array.from(t)
        }(t) || function () {
            throw new TypeError("Invalid attempt to spread non-iterable instance")
        }()
    }

    var d = function () {
        function i() {
            e(this, i)
        }

        return s(i, [{
            key: "shadeRGBColor", value: function (t, e) {
                var i = e.split(","), s = t < 0 ? 0 : 255, a = t < 0 ? -1 * t : t, n = parseInt(i[0].slice(4)),
                    r = parseInt(i[1]), o = parseInt(i[2]);
                return "rgb(" + (Math.round((s - n) * a) + n) + "," + (Math.round((s - r) * a) + r) + "," + (Math.round((s - o) * a) + o) + ")"
            }
        }, {
            key: "shadeHexColor", value: function (t, e) {
                var i = parseInt(e.slice(1), 16), s = t < 0 ? 0 : 255, a = t < 0 ? -1 * t : t, n = i >> 16,
                    r = i >> 8 & 255, o = 255 & i;
                return "#" + (16777216 + 65536 * (Math.round((s - n) * a) + n) + 256 * (Math.round((s - r) * a) + r) + (Math.round((s - o) * a) + o)).toString(16).slice(1)
            }
        }, {
            key: "shadeColor", value: function (t, e) {
                return e.length > 7 ? this.shadeRGBColor(t, e) : this.shadeHexColor(t, e)
            }
        }], [{
            key: "bind", value: function (t, e) {
                return function () {
                    return t.apply(e, arguments)
                }
            }
        }, {
            key: "isObject", value: function (e) {
                return e && "object" === t(e) && !Array.isArray(e) && null != e
            }
        }, {
            key: "listToArray", value: function (t) {
                var e, i = [];
                for (e = 0; e < t.length; e++) i[e] = t[e];
                return i
            }
        }, {
            key: "extend", value: function (t, e) {
                var i = this;
                "function" != typeof Object.assign && (Object.assign = function (t) {
                    if (null == t) throw new TypeError("Cannot convert undefined or null to object");
                    for (var e = Object(t), i = 1; i < arguments.length; i++) {
                        var s = arguments[i];
                        if (null != s) for (var a in s) s.hasOwnProperty(a) && (e[a] = s[a])
                    }
                    return e
                });
                var s = Object.assign({}, t);
                return this.isObject(t) && this.isObject(e) && Object.keys(e).forEach(function (n) {
                    i.isObject(e[n]) && n in t ? s[n] = i.extend(t[n], e[n]) : Object.assign(s, a({}, n, e[n]))
                }), s
            }
        }, {
            key: "extendArray", value: function (t, e) {
                var s = [];
                return t.map(function (t) {
                    s.push(i.extend(e, t))
                }), t = s
            }
        }, {
            key: "monthMod", value: function (t) {
                return t % 12
            }
        }, {
            key: "addProps", value: function (t, e, i) {
                "string" == typeof e && (e = e.split(".")), t[e[0]] = t[e[0]] || {};
                var s = t[e[0]];
                return e.length > 1 ? (e.shift(), this.addProps(s, e, i)) : t[e[0]] = i, t
            }
        }, {
            key: "clone", value: function (e) {
                if ("[object Array]" === Object.prototype.toString.call(e)) {
                    for (var i = [], s = 0; s < e.length; s++) i[s] = this.clone(e[s]);
                    return i
                }
                if ("object" === t(e)) {
                    var a = {};
                    for (var n in e) e.hasOwnProperty(n) && (a[n] = this.clone(e[n]));
                    return a
                }
                return e
            }
        }, {
            key: "log10", value: function (t) {
                return Math.log(t) / Math.LN10
            }
        }, {
            key: "roundToBase10", value: function (t) {
                return Math.pow(10, Math.floor(Math.log10(t)))
            }
        }, {
            key: "roundToBase", value: function (t, e) {
                return Math.pow(e, Math.floor(Math.log(t) / Math.log(e)))
            }
        }, {
            key: "parseNumber", value: function (t) {
                return null === t ? t : parseFloat(t)
            }
        }, {
            key: "noExponents", value: function (t) {
                var e = String(t).split(/[eE]/);
                if (1 == e.length) return e[0];
                var i = "", s = t < 0 ? "-" : "", a = e[0].replace(".", ""), n = Number(e[1]) + 1;
                if (n < 0) {
                    for (i = s + "0."; n++;) i += "0";
                    return i + a.replace(/^\-/, "")
                }
                for (n -= a.length; n--;) i += "0";
                return a + i
            }
        }, {
            key: "getDimensions", value: function (t) {
                var e = getComputedStyle(t), i = [], s = t.clientHeight, a = t.clientWidth;
                return s -= parseFloat(e.paddingTop) + parseFloat(e.paddingBottom), a -= parseFloat(e.paddingLeft) + parseFloat(e.paddingRight), i.push(a), i.push(s), i
            }
        }, {
            key: "getBoundingClientRect", value: function (t) {
                var e = t.getBoundingClientRect();
                return {
                    top: e.top,
                    right: e.right,
                    bottom: e.bottom,
                    left: e.left,
                    width: e.width,
                    height: e.height,
                    x: e.x,
                    y: e.y
                }
            }
        }, {
            key: "hexToRgba", value: function () {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "#999999",
                    e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : .6;
                "#" !== t.substring(0, 1) && (t = "#999999");
                var i = t.replace("#", "");
                i = i.match(new RegExp("(.{" + i.length / 3 + "})", "g"));
                for (var s = 0; s < i.length; s++) i[s] = parseInt(1 === i[s].length ? i[s] + i[s] : i[s], 16);
                return void 0 !== e && i.push(e), "rgba(" + i.join(",") + ")"
            }
        }, {
            key: "getOpacityFromRGBA", value: function (t) {
                return (t = t.match(/^rgba?[\s+]?\([\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?/i))[3]
            }
        }, {
            key: "rgb2hex", value: function (t) {
                return (t = t.match(/^rgba?[\s+]?\([\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?/i)) && 4 === t.length ? "#" + ("0" + parseInt(t[1], 10).toString(16)).slice(-2) + ("0" + parseInt(t[2], 10).toString(16)).slice(-2) + ("0" + parseInt(t[3], 10).toString(16)).slice(-2) : ""
            }
        }, {
            key: "isColorHex", value: function (t) {
                return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(t)
            }
        }, {
            key: "polarToCartesian", value: function (t, e, i, s) {
                var a = (s - 90) * Math.PI / 180;
                return {x: t + i * Math.cos(a), y: e + i * Math.sin(a)}
            }
        }, {
            key: "escapeString", value: function (t) {
                var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "x", i = t.toString().slice();
                return i = i.replace(/[` ~!@#$%^&*()_|+\-=?;:'",.<>\{\}\[\]\\\/]/gi, e)
            }
        }, {
            key: "negToZero", value: function (t) {
                return t < 0 ? 0 : t
            }
        }, {
            key: "moveIndexInArray", value: function (t, e, i) {
                if (i >= t.length) for (var s = i - t.length + 1; s--;) t.push(void 0);
                return t.splice(i, 0, t.splice(e, 1)[0]), t
            }
        }, {
            key: "extractNumber", value: function (t) {
                return parseFloat(t.replace(/[^\d\.]*/g, ""))
            }
        }, {
            key: "randomString", value: function (t) {
                for (var e = "", i = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz", s = 0; s < t; s++) e += i.charAt(Math.floor(Math.random() * i.length));
                return e
            }
        }, {
            key: "findAncestor", value: function (t, e) {
                for (; (t = t.parentElement) && !t.classList.contains(e);) ;
                return t
            }
        }, {
            key: "setELstyles", value: function (t, e) {
                for (var i in e) e.hasOwnProperty(i) && (t.style.key = e[i])
            }
        }, {
            key: "isNumber", value: function (t) {
                return !isNaN(t) && parseFloat(Number(t)) === t && !isNaN(parseInt(t, 10))
            }
        }, {
            key: "isFloat", value: function (t) {
                return Number(t) === t && t % 1 != 0
            }
        }, {
            key: "isSafari", value: function () {
                return /^((?!chrome|android).)*safari/i.test(navigator.userAgent)
            }
        }, {
            key: "isFirefox", value: function () {
                return navigator.userAgent.toLowerCase().indexOf("firefox") > -1
            }
        }, {
            key: "isIE11", value: function () {
                if (-1 !== window.navigator.userAgent.indexOf("MSIE") || window.navigator.appVersion.indexOf("Trident/") > -1) return !0
            }
        }, {
            key: "isIE", value: function () {
                var t = window.navigator.userAgent, e = t.indexOf("MSIE ");
                if (e > 0) return parseInt(t.substring(e + 5, t.indexOf(".", e)), 10);
                if (t.indexOf("Trident/") > 0) {
                    var i = t.indexOf("rv:");
                    return parseInt(t.substring(i + 3, t.indexOf(".", i)), 10)
                }
                var s = t.indexOf("Edge/");
                return s > 0 && parseInt(t.substring(s + 5, t.indexOf(".", s)), 10)
            }
        }]), i
    }(), u = function () {
        function t(i) {
            e(this, t), this.ctx = i, this.w = i.w
        }

        return s(t, [{
            key: "getDefaultFilter", value: function (t, e) {
                var i = this.w;
                t.unfilter(!0), (new window.SVG.Filter).size("120%", "180%", "-5%", "-40%"), "none" !== i.config.states.normal.filter ? this.applyFilter(t, e, i.config.states.normal.filter.type, i.config.states.normal.filter.value) : i.config.chart.dropShadow.enabled && this.dropShadow(t, i.config.chart.dropShadow, e)
            }
        }, {
            key: "addNormalFilter", value: function (t, e) {
                var i = this.w;
                i.config.chart.dropShadow.enabled && this.dropShadow(t, i.config.chart.dropShadow, e)
            }
        }, {
            key: "addLightenFilter", value: function (t, e, i) {
                var s = this, a = this.w, n = i.intensity;
                if (!d.isFirefox()) {
                    t.unfilter(!0);
                    var r = new window.SVG.Filter;
                    r.size("120%", "180%", "-5%", "-40%"), t.filter(function (t) {
                        var i = a.config.chart.dropShadow;
                        (r = i.enabled ? s.addShadow(t, e, i) : t).componentTransfer({
                            rgb: {
                                type: "linear",
                                slope: 1.5,
                                intercept: n
                            }
                        })
                    }), t.filterer.node.setAttribute("filterUnits", "userSpaceOnUse")
                }
            }
        }, {
            key: "addDarkenFilter", value: function (t, e, i) {
                var s = this, a = this.w, n = i.intensity;
                if (!d.isFirefox()) {
                    t.unfilter(!0);
                    var r = new window.SVG.Filter;
                    r.size("120%", "180%", "-5%", "-40%"), t.filter(function (t) {
                        var i = a.config.chart.dropShadow;
                        (r = i.enabled ? s.addShadow(t, e, i) : t).componentTransfer({rgb: {type: "linear", slope: n}})
                    }), t.filterer.node.setAttribute("filterUnits", "userSpaceOnUse")
                }
            }
        }, {
            key: "applyFilter", value: function (t, e, i) {
                var s = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : .5;
                switch (i) {
                    case"none":
                        this.addNormalFilter(t, e);
                        break;
                    case"lighten":
                        this.addLightenFilter(t, e, {intensity: s});
                        break;
                    case"darken":
                        this.addDarkenFilter(t, e, {intensity: s})
                }
            }
        }, {
            key: "addShadow", value: function (t, e, i) {
                var s = i.blur, a = i.top, n = i.left, r = i.color, o = i.opacity,
                    l = t.flood(Array.isArray(r) ? r[e] : r, o).composite(t.sourceAlpha, "in").offset(n, a).gaussianBlur(s).merge(t.source);
                return t.blend(t.source, l)
            }
        }, {
            key: "dropShadow", value: function (t, e) {
                var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0, s = e.top, a = e.left,
                    n = e.blur, r = e.color, o = e.opacity, l = e.noUserSpaceOnUse;
                return t.unfilter(!0), r = Array.isArray(r) ? r[i] : r, (new window.SVG.Filter).size("120%", "180%", "-5%", "-40%"), t.filter(function (t) {
                    var e = null;
                    e = d.isSafari() || d.isFirefox() || d.isIE() ? t.flood(r, o).composite(t.sourceAlpha, "in").offset(a, s).gaussianBlur(n) : t.flood(r, o).composite(t.sourceAlpha, "in").offset(a, s).gaussianBlur(n).merge(t.source), t.blend(t.source, e)
                }), l || t.filterer.node.setAttribute("filterUnits", "userSpaceOnUse"), t
            }
        }, {
            key: "setSelectionFilter", value: function (t, e, i) {
                var s = this.w;
                if (void 0 !== s.globals.selectedDataPoints[e] && s.globals.selectedDataPoints[e].indexOf(i) > -1) {
                    t.node.setAttribute("selected", !0);
                    var a = s.config.states.active.filter;
                    "none" !== a && this.applyFilter(t, e, a.type, a.value)
                }
            }
        }]), t
    }(), g = function () {
        function t(i) {
            e(this, t), this.ctx = i, this.w = i.w, this.setEasingFunctions()
        }

        return s(t, [{
            key: "setEasingFunctions", value: function () {
                var t;
                switch (this.w.config.chart.animations.easing) {
                    case"linear":
                        t = "-";
                        break;
                    case"easein":
                        t = "<";
                        break;
                    case"easeout":
                        t = ">";
                        break;
                    case"easeinout":
                        t = "<>";
                        break;
                    case"swing":
                        t = function (t) {
                            var e = 1.70158;
                            return (t -= 1) * t * ((e + 1) * t + e) + 1
                        };
                        break;
                    case"bounce":
                        t = function (t) {
                            return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375
                        };
                        break;
                    case"elastic":
                        t = function (t) {
                            return t === !!t ? t : Math.pow(2, -10 * t) * Math.sin((t - .075) * (2 * Math.PI) / .3) + 1
                        };
                        break;
                    default:
                        t = "<>"
                }
                this.w.globals.easing = t
            }
        }, {
            key: "animateLine", value: function (t, e, i, s) {
                t.attr(e).animate(s).attr(i)
            }
        }, {
            key: "animateCircleRadius", value: function (t, e, i, s, a) {
                e || (e = 0), t.attr({r: e}).animate(s, a).attr({r: i})
            }
        }, {
            key: "animateCircle", value: function (t, e, i, s, a) {
                t.attr({r: e.r, cx: e.cx, cy: e.cy}).animate(s, a).attr({r: i.r, cx: i.cx, cy: i.cy})
            }
        }, {
            key: "animateRect", value: function (t, e, i, s, a) {
                t.attr(e).animate(s).attr(i).afterAll(function () {
                    a()
                })
            }
        }, {
            key: "animatePathsGradually", value: function (t) {
                var e = t.el, i = t.j, s = t.pathFrom, a = t.pathTo, n = t.speed, r = t.delay, o = t.strokeWidth,
                    l = this.w, h = 0;
                l.config.chart.animations.animateGradually.enabled && (h = l.config.chart.animations.animateGradually.delay), l.config.chart.animations.dynamicAnimation.enabled && l.globals.dataChanged && (h = 0), this.morphSVG(e, i, s, a, n, o, r * h)
            }
        }, {
            key: "showDelayedElements", value: function () {
                this.w.globals.delayedElements.forEach(function (t) {
                    t.el.classList.remove("hidden")
                })
            }
        }, {
            key: "morphSVG", value: function (t, e, i, s, a, n, r) {
                var o = this, l = this.w;
                i || (i = t.attr("pathFrom")), s || (s = t.attr("pathTo")), (!i || i.indexOf("undefined") > -1 || i.indexOf("NaN") > -1) && (i = "M 0 ".concat(l.globals.gridHeight), a = 1), (s.indexOf("undefined") > -1 || s.indexOf("NaN") > -1) && (s = "M 0 ".concat(l.globals.gridHeight), a = 1), l.globals.shouldAnimate || (a = 1), t.plot(i).animate(1, l.globals.easing, r).plot(i).animate(a, l.globals.easing, r).plot(s).afterAll(function () {
                    d.isNumber(e) ? e === l.globals.series[l.globals.maxValsInArrayIndex].length - 2 && l.globals.shouldAnimate && (l.globals.animationEnded = !0) : l.globals.shouldAnimate && (l.globals.animationEnded = !0, "function" == typeof l.config.chart.events.animationEnd && l.config.chart.events.animationEnd(o.ctx, l)), o.showDelayedElements()
                })
            }
        }]), t
    }(), f = function () {
        function t(i) {
            e(this, t), this.ctx = i, this.w = i.w
        }

        return s(t, [{
            key: "drawLine", value: function (t, e, i, s) {
                var a = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : "#a8a8a8",
                    n = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : 0,
                    r = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : null;
                return this.w.globals.dom.Paper.line().attr({
                    x1: t,
                    y1: e,
                    x2: i,
                    y2: s,
                    stroke: a,
                    "stroke-dasharray": n,
                    "stroke-width": r
                })
            }
        }, {
            key: "drawRect", value: function () {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,
                    e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
                    i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,
                    s = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0,
                    a = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 0,
                    n = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : "#fefefe",
                    r = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : 1,
                    o = arguments.length > 7 && void 0 !== arguments[7] ? arguments[7] : null,
                    l = arguments.length > 8 && void 0 !== arguments[8] ? arguments[8] : null,
                    h = arguments.length > 9 && void 0 !== arguments[9] ? arguments[9] : 0,
                    c = this.w.globals.dom.Paper.rect();
                return c.attr({
                    x: t,
                    y: e,
                    width: i > 0 ? i : 0,
                    height: s > 0 ? s : 0,
                    rx: a,
                    ry: a,
                    fill: n,
                    opacity: r,
                    "stroke-width": null !== o ? o : 0,
                    stroke: null !== l ? l : "none",
                    "stroke-dasharray": h
                }), c
            }
        }, {
            key: "drawPolygon", value: function (t) {
                var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "#e1e1e1",
                    i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "none";
                return this.w.globals.dom.Paper.polygon(t).attr({fill: i, stroke: e})
            }
        }, {
            key: "drawCircle", value: function (t) {
                var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null,
                    i = this.w.globals.dom.Paper.circle(2 * t);
                return null !== e && i.attr(e), i
            }
        }, {
            key: "drawPath", value: function (t) {
                var e = t.d, i = void 0 === e ? "" : e, s = t.stroke, a = void 0 === s ? "#a8a8a8" : s,
                    n = t.strokeWidth, r = void 0 === n ? 1 : n, o = t.fill, l = t.fillOpacity,
                    h = void 0 === l ? 1 : l, c = t.strokeOpacity, d = void 0 === c ? 1 : c, u = t.classes,
                    g = t.strokeLinecap, f = void 0 === g ? null : g, p = t.strokeDashArray, x = void 0 === p ? 0 : p,
                    b = this.w;
                return null === f && (f = b.config.stroke.lineCap), (i.indexOf("undefined") > -1 || i.indexOf("NaN") > -1) && (i = "M 0 ".concat(b.globals.gridHeight)), b.globals.dom.Paper.path(i).attr({
                    fill: o,
                    "fill-opacity": h,
                    stroke: a,
                    "stroke-opacity": d,
                    "stroke-linecap": f,
                    "stroke-width": r,
                    "stroke-dasharray": x,
                    class: u
                })
            }
        }, {
            key: "group", value: function () {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
                    e = this.w.globals.dom.Paper.group();
                return null !== t && e.attr(t), e
            }
        }, {
            key: "move", value: function (t, e) {
                var i = ["M", t, e].join(" ");
                return i
            }
        }, {
            key: "line", value: function (t, e) {
                var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null, s = null;
                return null === i ? s = ["L", t, e].join(" ") : "H" === i ? s = ["H", t].join(" ") : "V" === i && (s = ["V", e].join(" ")), s
            }
        }, {
            key: "curve", value: function (t, e, i, s, a, n) {
                var r = ["C", t, e, i, s, a, n].join(" ");
                return r
            }
        }, {
            key: "quadraticCurve", value: function (t, e, i, s) {
                return ["Q", t, e, i, s].join(" ")
            }
        }, {
            key: "arc", value: function (t, e, i, s, a, n, r) {
                var o = "A";
                arguments.length > 7 && void 0 !== arguments[7] && arguments[7] && (o = "a");
                var l = [o, t, e, i, s, a, n, r].join(" ");
                return l
            }
        }, {
            key: "renderPaths", value: function (t) {
                var e, i = t.i, s = t.j, a = t.realIndex, r = t.pathFrom, o = t.pathTo, l = t.stroke, h = t.strokeWidth,
                    c = t.strokeLinecap, d = t.fill, f = t.animationDelay, p = t.initialSpeed, x = t.dataChangeSpeed,
                    b = t.className, m = t.id, v = t.shouldClipToGrid, y = void 0 === v || v, w = t.bindEventsOnPaths,
                    k = void 0 === w || w, A = t.drawShadow, S = void 0 === A || A, C = this.w, L = new u(this.ctx),
                    z = new g(this.ctx), P = this.w.config.chart.animations.enabled,
                    M = P && this.w.config.chart.animations.dynamicAnimation.enabled,
                    E = !!(P && !C.globals.resized || M && C.globals.dataChanged && C.globals.shouldAnimate);
                E ? e = r : (e = o, this.w.globals.animationEnded = !0);
                var T = C.config.stroke.dashArray, X = 0;
                X = Array.isArray(T) ? T[a] : C.config.stroke.dashArray;
                var I = this.drawPath({
                    d: e,
                    stroke: l,
                    strokeWidth: h,
                    fill: d,
                    fillOpacity: 1,
                    classes: b,
                    strokeLinecap: c,
                    strokeDashArray: X
                });
                if (I.attr("id", "".concat(m, "-").concat(i)), I.attr("index", a), y && I.attr({"clip-path": "url(#gridRectMask".concat(C.globals.cuid, ")")}), "none" !== C.config.states.normal.filter.type) L.getDefaultFilter(I, a); else if (C.config.chart.dropShadow.enabled && S && (!C.config.chart.dropShadow.enabledSeries || C.config.chart.dropShadow.enabledSeries && -1 !== C.config.chart.dropShadow.enabledSeries.indexOf(a))) {
                    var Y = C.config.chart.dropShadow;
                    L.dropShadow(I, Y, a)
                }
                k && (I.node.addEventListener("mouseenter", this.pathMouseEnter.bind(this, I)), I.node.addEventListener("mouseleave", this.pathMouseLeave.bind(this, I)), I.node.addEventListener("mousedown", this.pathMouseDown.bind(this, I))), I.attr({
                    pathTo: o,
                    pathFrom: r
                });
                var F = {el: I, j: s, pathFrom: r, pathTo: o, strokeWidth: h};
                return !P || C.globals.resized || C.globals.dataChanged ? !C.globals.resized && C.globals.dataChanged || z.showDelayedElements() : z.animatePathsGradually(n({}, F, {
                    speed: p,
                    delay: f
                })), C.globals.dataChanged && M && E && z.animatePathsGradually(n({}, F, {speed: x})), I
            }
        }, {
            key: "drawPattern", value: function (t, e, i) {
                var s = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : "#a8a8a8",
                    a = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 0;
                return this.w.globals.dom.Paper.pattern(e, i, function (n) {
                    "horizontalLines" === t ? n.line(0, 0, i, 0).stroke({
                        color: s,
                        width: a + 1
                    }) : "verticalLines" === t ? n.line(0, 0, 0, e).stroke({
                        color: s,
                        width: a + 1
                    }) : "slantedLines" === t ? n.line(0, 0, e, i).stroke({
                        color: s,
                        width: a
                    }) : "squares" === t ? n.rect(e, i).fill("none").stroke({
                        color: s,
                        width: a
                    }) : "circles" === t && n.circle(e).fill("none").stroke({color: s, width: a})
                })
            }
        }, {
            key: "drawGradient", value: function (t, e, i, s, a) {
                var n, r = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : null,
                    o = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : null,
                    l = arguments.length > 7 && void 0 !== arguments[7] ? arguments[7] : null,
                    h = arguments.length > 8 && void 0 !== arguments[8] ? arguments[8] : 0, c = this.w;
                e = d.hexToRgba(e, s), i = d.hexToRgba(i, a);
                var u = 0, g = 1, f = 1, p = null;
                null !== o && (u = void 0 !== o[0] ? o[0] / 100 : 0, g = void 0 !== o[1] ? o[1] / 100 : 1, f = void 0 !== o[2] ? o[2] / 100 : 1, p = void 0 !== o[3] ? o[3] / 100 : null);
                var x = !("donut" !== c.config.chart.type && "pie" !== c.config.chart.type && "bubble" !== c.config.chart.type);
                if (n = null === l || 0 === l.length ? c.globals.dom.Paper.gradient(x ? "radial" : "linear", function (t) {
                    t.at(u, e, s), t.at(g, i, a), t.at(f, i, a), null !== p && t.at(p, e, s)
                }) : c.globals.dom.Paper.gradient(x ? "radial" : "linear", function (t) {
                    (Array.isArray(l[h]) ? l[h] : l).forEach(function (e) {
                        t.at(e.offset / 100, e.color, e.opacity)
                    })
                }), x) {
                    var b = c.globals.gridWidth / 2, m = c.globals.gridHeight / 2;
                    "bubble" !== c.config.chart.type ? n.attr({
                        gradientUnits: "userSpaceOnUse",
                        cx: b,
                        cy: m,
                        r: r
                    }) : n.attr({cx: .5, cy: .5, r: .8, fx: .2, fy: .2})
                } else "vertical" === t ? n.from(0, 0).to(0, 1) : "diagonal" === t ? n.from(0, 0).to(1, 1) : "horizontal" === t ? n.from(0, 1).to(1, 1) : "diagonal2" === t && n.from(0, 1).to(2, 2);
                return n
            }
        }, {
            key: "drawText", value: function (t) {
                var e, i = this.w, s = t.x, a = t.y, n = t.text, r = t.textAnchor, o = t.fontSize, l = t.fontFamily,
                    h = t.foreColor, c = t.opacity;
                return void 0 === n && (n = ""), r || (r = "start"), h || (h = i.config.chart.foreColor), l = l || i.config.chart.fontFamily, (e = Array.isArray(n) ? i.globals.dom.Paper.text(function (t) {
                    for (var e = 0; e < n.length; e++) t.tspan(n[e])
                }) : i.globals.dom.Paper.plain(n)).attr({
                    x: s,
                    y: a,
                    "text-anchor": r,
                    "dominant-baseline": "auto",
                    "font-size": o,
                    "font-family": l,
                    fill: h,
                    class: (t.cssClass, t.cssClass)
                }), e.node.style.fontFamily = l, e.node.style.opacity = c, e
            }
        }, {
            key: "addTspan", value: function (t, e, i) {
                var s = t.tspan(e);
                i || (i = this.w.config.chart.fontFamily), s.node.style.fontFamily = i
            }
        }, {
            key: "drawMarker", value: function (t, e, i) {
                t = t || 0;
                var s = i.pSize || 0, a = null;
                if ("square" === i.shape) {
                    var n = void 0 === i.pRadius ? s / 2 : i.pRadius;
                    null === e && (s = 0, n = 0);
                    var r = 1.2 * s + n, o = this.drawRect(r, r, r, r, n);
                    o.attr({
                        x: t - r / 2,
                        y: e - r / 2,
                        cx: t,
                        cy: e,
                        class: i.class ? i.class : "",
                        fill: i.pointFillColor,
                        "fill-opacity": i.pointFillOpacity ? i.pointFillOpacity : 1,
                        stroke: i.pointStrokeColor,
                        "stroke-width": i.pWidth ? i.pWidth : 0,
                        "stroke-opacity": i.pointStrokeOpacity ? i.pointStrokeOpacity : 1
                    }), a = o
                } else "circle" === i.shape && (d.isNumber(e) || (s = 0, e = 0), a = this.drawCircle(s, {
                    cx: t,
                    cy: e,
                    class: i.class ? i.class : "",
                    stroke: i.pointStrokeColor,
                    fill: i.pointFillColor,
                    "fill-opacity": i.pointFillOpacity ? i.pointFillOpacity : 1,
                    "stroke-width": i.pWidth ? i.pWidth : 0,
                    "stroke-opacity": i.pointStrokeOpacity ? i.pointStrokeOpacity : 1
                }));
                return a
            }
        }, {
            key: "pathMouseEnter", value: function (t, e) {
                var i = this.w, s = new u(this.ctx), a = parseInt(t.node.getAttribute("index")),
                    n = parseInt(t.node.getAttribute("j"));
                if ("function" == typeof i.config.chart.events.dataPointMouseEnter && i.config.chart.events.dataPointMouseEnter(e, this.ctx, {
                    seriesIndex: a,
                    dataPointIndex: n,
                    w: i
                }), this.ctx.fireEvent("dataPointMouseEnter", [e, this.ctx, {
                    seriesIndex: a,
                    dataPointIndex: n,
                    w: i
                }]), ("none" === i.config.states.active.filter.type || "true" !== t.node.getAttribute("selected")) && "none" !== i.config.states.hover.filter.type && "none" !== i.config.states.active.filter.type && !i.globals.isTouchDevice) {
                    var r = i.config.states.hover.filter;
                    s.applyFilter(t, a, r.type, r.value)
                }
            }
        }, {
            key: "pathMouseLeave", value: function (t, e) {
                var i = this.w, s = new u(this.ctx), a = parseInt(t.node.getAttribute("index")),
                    n = parseInt(t.node.getAttribute("j"));
                "function" == typeof i.config.chart.events.dataPointMouseLeave && i.config.chart.events.dataPointMouseLeave(e, this.ctx, {
                    seriesIndex: a,
                    dataPointIndex: n,
                    w: i
                }), this.ctx.fireEvent("dataPointMouseLeave", [e, this.ctx, {
                    seriesIndex: a,
                    dataPointIndex: n,
                    w: i
                }]), "none" !== i.config.states.active.filter.type && "true" === t.node.getAttribute("selected") || "none" !== i.config.states.hover.filter.type && s.getDefaultFilter(t, a)
            }
        }, {
            key: "pathMouseDown", value: function (t, e) {
                var i = this.w, s = new u(this.ctx), a = parseInt(t.node.getAttribute("index")),
                    n = parseInt(t.node.getAttribute("j")), r = "false";
                if ("true" === t.node.getAttribute("selected")) {
                    if (t.node.setAttribute("selected", "false"), i.globals.selectedDataPoints[a].indexOf(n) > -1) {
                        var o = i.globals.selectedDataPoints[a].indexOf(n);
                        i.globals.selectedDataPoints[a].splice(o, 1)
                    }
                } else {
                    if (!i.config.states.active.allowMultipleDataPointsSelection && i.globals.selectedDataPoints.length > 0) {
                        i.globals.selectedDataPoints = [];
                        var l = i.globals.dom.Paper.select(".apexcharts-series path").members,
                            h = i.globals.dom.Paper.select(".apexcharts-series circle, .apexcharts-series rect").members;
                        l.forEach(function (t) {
                            t.node.setAttribute("selected", "false"), s.getDefaultFilter(t, a)
                        }), h.forEach(function (t) {
                            t.node.setAttribute("selected", "false"), s.getDefaultFilter(t, a)
                        })
                    }
                    t.node.setAttribute("selected", "true"), r = "true", void 0 === i.globals.selectedDataPoints[a] && (i.globals.selectedDataPoints[a] = []), i.globals.selectedDataPoints[a].push(n)
                }
                if ("true" === r) {
                    var c = i.config.states.active.filter;
                    "none" !== c && s.applyFilter(t, a, c.type, c.value)
                } else "none" !== i.config.states.active.filter.type && s.getDefaultFilter(t, a);
                "function" == typeof i.config.chart.events.dataPointSelection && i.config.chart.events.dataPointSelection(e, this.ctx, {
                    selectedDataPoints: i.globals.selectedDataPoints,
                    seriesIndex: a,
                    dataPointIndex: n,
                    w: i
                }), this.ctx.fireEvent("dataPointSelection", [e, this.ctx, {
                    selectedDataPoints: i.globals.selectedDataPoints,
                    seriesIndex: a,
                    dataPointIndex: n,
                    w: i
                }])
            }
        }, {
            key: "rotateAroundCenter", value: function (t) {
                var e = t.getBBox();
                return {x: e.x + e.width / 2, y: e.y + e.height / 2}
            }
        }, {
            key: "getTextRects", value: function (t, e, i, s) {
                var a = !(arguments.length > 4 && void 0 !== arguments[4]) || arguments[4], n = this.w,
                    r = this.drawText({
                        x: -200,
                        y: -200,
                        text: t,
                        textAnchor: "start",
                        fontSize: e,
                        fontFamily: i,
                        foreColor: "#fff",
                        opacity: 0
                    });
                s && r.attr("transform", s), n.globals.dom.Paper.add(r);
                var o = r.bbox();
                return a || (o = r.node.getBoundingClientRect()), r.remove(), {width: o.width, height: o.height}
            }
        }, {
            key: "placeTextWithEllipsis", value: function (t, e, i) {
                if (t.textContent = e, e.length > 0 && t.getSubStringLength(0, e.length) >= i) {
                    for (var s = e.length - 3; s > 0; s -= 3) if (t.getSubStringLength(0, s) <= i) return void (t.textContent = e.substring(0, s) + "...");
                    t.textContent = "..."
                }
            }
        }], [{
            key: "setAttrs", value: function (t, e) {
                for (var i in e) e.hasOwnProperty(i) && t.setAttribute(i, e[i])
            }
        }]), t
    }();
    var p = {
        name: "en",
        options: {
            months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
            shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
            days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
            shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
            toolbar: {
                exportToSVG: "Download SVG",
                exportToPNG: "Download PNG",
                menu: "Menu",
                selection: "Selection",
                selectionZoom: "Selection Zoom",
                zoomIn: "Zoom In",
                zoomOut: "Zoom Out",
                pan: "Panning",
                reset: "Reset Zoom"
            }
        }
    }, x = function () {
        function t() {
            e(this, t), this.yAxis = {
                show: !0,
                showAlways: !1,
                seriesName: void 0,
                opposite: !1,
                reversed: !1,
                logarithmic: !1,
                tickAmount: void 0,
                forceNiceScale: !1,
                max: void 0,
                min: void 0,
                floating: !1,
                decimalsInFloat: void 0,
                labels: {
                    show: !0,
                    minWidth: 0,
                    maxWidth: 160,
                    offsetX: 0,
                    offsetY: 0,
                    align: void 0,
                    rotate: 0,
                    padding: 20,
                    style: {colors: [], fontSize: "11px", fontFamily: void 0, cssClass: ""},
                    formatter: void 0
                },
                axisBorder: {show: !1, color: "#78909C", offsetX: 0, offsetY: 0},
                axisTicks: {show: !1, color: "#78909C", width: 6, offsetX: 0, offsetY: 0},
                title: {
                    text: void 0,
                    rotate: 90,
                    offsetY: 0,
                    offsetX: 0,
                    style: {color: void 0, fontSize: "11px", fontFamily: void 0, cssClass: ""}
                },
                tooltip: {enabled: !1, offsetX: 0},
                crosshairs: {show: !0, position: "front", stroke: {color: "#b6b6b6", width: 1, dashArray: 0}}
            }, this.xAxisAnnotation = {
                x: 0,
                x2: null,
                strokeDashArray: 1,
                fillColor: "#c2c2c2",
                borderColor: "#c2c2c2",
                opacity: .3,
                offsetX: 0,
                offsetY: 0,
                label: {
                    borderColor: "#c2c2c2",
                    borderWidth: 1,
                    text: void 0,
                    textAnchor: "middle",
                    orientation: "vertical",
                    position: "top",
                    offsetX: 0,
                    offsetY: 0,
                    style: {
                        background: "#fff",
                        color: void 0,
                        fontSize: "11px",
                        fontFamily: void 0,
                        cssClass: "",
                        padding: {left: 5, right: 5, top: 2, bottom: 2}
                    }
                }
            }, this.yAxisAnnotation = {
                y: 0,
                y2: null,
                strokeDashArray: 1,
                fillColor: "#c2c2c2",
                borderColor: "#c2c2c2",
                opacity: .3,
                offsetX: 0,
                offsetY: 0,
                yAxisIndex: 0,
                label: {
                    borderColor: "#c2c2c2",
                    borderWidth: 1,
                    text: void 0,
                    textAnchor: "end",
                    position: "right",
                    offsetX: 0,
                    offsetY: -3,
                    style: {
                        background: "#fff",
                        color: void 0,
                        fontSize: "11px",
                        fontFamily: void 0,
                        cssClass: "",
                        padding: {left: 5, right: 5, top: 0, bottom: 2}
                    }
                }
            }, this.pointAnnotation = {
                x: 0,
                y: null,
                yAxisIndex: 0,
                seriesIndex: 0,
                marker: {
                    size: 0,
                    fillColor: "#fff",
                    strokeWidth: 2,
                    strokeColor: "#333",
                    shape: "circle",
                    offsetX: 0,
                    offsetY: 0,
                    radius: 2,
                    cssClass: ""
                },
                label: {
                    borderColor: "#c2c2c2",
                    borderWidth: 1,
                    text: void 0,
                    textAnchor: "middle",
                    offsetX: 0,
                    offsetY: -15,
                    style: {
                        background: "#fff",
                        color: void 0,
                        fontSize: "11px",
                        fontFamily: void 0,
                        cssClass: "",
                        padding: {left: 5, right: 5, top: 0, bottom: 2}
                    }
                },
                customSVG: {SVG: void 0, cssClass: void 0, offsetX: 0, offsetY: 0}
            }
        }

        return s(t, [{
            key: "init", value: function () {
                return {
                    annotations: {
                        position: "front",
                        yaxis: [this.yAxisAnnotation],
                        xaxis: [this.xAxisAnnotation],
                        points: [this.pointAnnotation]
                    },
                    chart: {
                        animations: {
                            enabled: !0,
                            easing: "easeinout",
                            speed: 800,
                            animateGradually: {delay: 150, enabled: !0},
                            dynamicAnimation: {enabled: !0, speed: 350}
                        },
                        background: "transparent",
                        locales: [p],
                        defaultLocale: "en",
                        dropShadow: {
                            enabled: !1,
                            enabledSeries: void 0,
                            top: 2,
                            left: 2,
                            blur: 4,
                            color: "#000",
                            opacity: .35
                        },
                        events: {
                            animationEnd: void 0,
                            beforeMount: void 0,
                            mounted: void 0,
                            updated: void 0,
                            click: void 0,
                            legendClick: void 0,
                            markerClick: void 0,
                            selection: void 0,
                            dataPointSelection: void 0,
                            dataPointMouseEnter: void 0,
                            dataPointMouseLeave: void 0,
                            beforeZoom: void 0,
                            zoomed: void 0,
                            scrolled: void 0
                        },
                        foreColor: "#373d3f",
                        fontFamily: "Helvetica, Arial, sans-serif",
                        height: "auto",
                        parentHeightOffset: 15,
                        id: void 0,
                        group: void 0,
                        offsetX: 0,
                        offsetY: 0,
                        selection: {
                            enabled: !1,
                            type: "x",
                            fill: {color: "#24292e", opacity: .1},
                            stroke: {width: 1, color: "#24292e", opacity: .4, dashArray: 3},
                            xaxis: {min: void 0, max: void 0},
                            yaxis: {min: void 0, max: void 0}
                        },
                        sparkline: {enabled: !1},
                        brush: {enabled: !1, autoScaleYaxis: !1, target: void 0},
                        stacked: !1,
                        stackType: "normal",
                        toolbar: {
                            show: !0,
                            tools: {
                                download: !0,
                                selection: !0,
                                zoom: !0,
                                zoomin: !0,
                                zoomout: !0,
                                pan: !0,
                                reset: !0,
                                customIcons: []
                            },
                            autoSelected: "zoom"
                        },
                        type: "line",
                        width: "100%",
                        zoom: {
                            enabled: !0,
                            type: "x",
                            zoomedArea: {
                                fill: {color: "#90CAF9", opacity: .4},
                                stroke: {color: "#0D47A1", opacity: .4, width: 1}
                            }
                        }
                    },
                    plotOptions: {
                        bar: {
                            horizontal: !1,
                            columnWidth: "70%",
                            barHeight: "70%",
                            distributed: !1,
                            endingShape: "flat",
                            colors: {ranges: [], backgroundBarColors: [], backgroundBarOpacity: 1},
                            dataLabels: {maxItems: 100, hideOverflowingLabels: !0, position: "top"}
                        },
                        candlestick: {colors: {upward: "#00B746", downward: "#EF403C"}, wick: {useFillColor: !0}},
                        heatmap: {
                            radius: 2,
                            enableShades: !0,
                            shadeIntensity: .5,
                            reverseNegativeShade: !0,
                            distributed: !1,
                            colorScale: {inverse: !1, ranges: [], min: void 0, max: void 0}
                        },
                        radialBar: {
                            size: void 0,
                            inverseOrder: !1,
                            startAngle: 0,
                            endAngle: 360,
                            offsetX: 0,
                            offsetY: 0,
                            hollow: {
                                margin: 5,
                                size: "50%",
                                background: "transparent",
                                image: void 0,
                                imageWidth: 150,
                                imageHeight: 150,
                                imageOffsetX: 0,
                                imageOffsetY: 0,
                                imageClipped: !0,
                                position: "front",
                                dropShadow: {enabled: !1, top: 0, left: 0, blur: 3, color: "#000", opacity: .5}
                            },
                            track: {
                                show: !0,
                                startAngle: void 0,
                                endAngle: void 0,
                                background: "#f2f2f2",
                                strokeWidth: "97%",
                                opacity: 1,
                                margin: 5,
                                dropShadow: {enabled: !1, top: 0, left: 0, blur: 3, color: "#000", opacity: .5}
                            },
                            dataLabels: {
                                show: !0,
                                name: {show: !0, fontSize: "16px", fontFamily: void 0, color: void 0, offsetY: 0},
                                value: {
                                    show: !0,
                                    fontSize: "14px",
                                    fontFamily: void 0,
                                    color: void 0,
                                    offsetY: 16,
                                    formatter: function (t) {
                                        return t + "%"
                                    }
                                },
                                total: {
                                    show: !1, label: "Total", color: void 0, formatter: function (t) {
                                        return t.globals.seriesTotals.reduce(function (t, e) {
                                            return t + e
                                        }, 0) / t.globals.series.length + "%"
                                    }
                                }
                            }
                        },
                        rangeBar: {},
                        pie: {
                            size: void 0,
                            customScale: 1,
                            offsetX: 0,
                            offsetY: 0,
                            expandOnClick: !0,
                            dataLabels: {offset: 0, minAngleToShowLabel: 10},
                            donut: {
                                size: "65%",
                                background: "transparent",
                                labels: {
                                    show: !1,
                                    name: {show: !0, fontSize: "16px", fontFamily: void 0, color: void 0, offsetY: -10},
                                    value: {
                                        show: !0,
                                        fontSize: "20px",
                                        fontFamily: void 0,
                                        color: void 0,
                                        offsetY: 10,
                                        formatter: function (t) {
                                            return t
                                        }
                                    },
                                    total: {
                                        show: !1, label: "Total", color: void 0, formatter: function (t) {
                                            return t.globals.seriesTotals.reduce(function (t, e) {
                                                return t + e
                                            }, 0)
                                        }
                                    }
                                }
                            }
                        },
                        radar: {
                            size: void 0,
                            offsetX: 0,
                            offsetY: 0,
                            polygons: {strokeColors: "#e8e8e8", connectorColors: "#e8e8e8", fill: {colors: void 0}}
                        }
                    },
                    colors: void 0,
                    dataLabels: {
                        enabled: !0,
                        enabledOnSeries: void 0,
                        formatter: function (t) {
                            return t
                        },
                        textAnchor: "middle",
                        offsetX: 0,
                        offsetY: 0,
                        style: {fontSize: "12px", fontFamily: void 0, colors: void 0},
                        dropShadow: {enabled: !1, top: 1, left: 1, blur: 1, color: "#000", opacity: .45}
                    },
                    fill: {
                        type: "solid",
                        colors: void 0,
                        opacity: .85,
                        gradient: {
                            shade: "dark",
                            type: "horizontal",
                            shadeIntensity: .5,
                            gradientToColors: void 0,
                            inverseColors: !0,
                            opacityFrom: 1,
                            opacityTo: 1,
                            stops: [0, 50, 100],
                            colorStops: []
                        },
                        image: {src: [], width: void 0, height: void 0},
                        pattern: {style: "sqaures", width: 6, height: 6, strokeWidth: 2}
                    },
                    grid: {
                        show: !0,
                        borderColor: "#e0e0e0",
                        strokeDashArray: 0,
                        position: "back",
                        xaxis: {lines: {show: !1, animate: !1}},
                        yaxis: {lines: {show: !0, animate: !1}},
                        row: {colors: void 0, opacity: .5},
                        column: {colors: void 0, opacity: .5},
                        padding: {top: 0, right: 10, bottom: 0, left: 12}
                    },
                    labels: [],
                    legend: {
                        show: !0,
                        showForSingleSeries: !1,
                        showForNullSeries: !0,
                        showForZeroSeries: !0,
                        floating: !1,
                        position: "bottom",
                        horizontalAlign: "center",
                        fontSize: "12px",
                        fontFamily: void 0,
                        width: void 0,
                        height: void 0,
                        formatter: void 0,
                        offsetX: -20,
                        offsetY: 0,
                        labels: {colors: void 0, useSeriesColors: !1},
                        markers: {
                            width: 12,
                            height: 12,
                            strokeWidth: 0,
                            strokeColor: "#fff",
                            radius: 12,
                            customHTML: void 0,
                            offsetX: 0,
                            offsetY: 0,
                            onClick: void 0
                        },
                        itemMargin: {horizontal: 0, vertical: 5},
                        onItemClick: {toggleDataSeries: !0},
                        onItemHover: {highlightDataSeries: !0}
                    },
                    markers: {
                        discrete: [],
                        size: 0,
                        colors: void 0,
                        strokeColors: "#fff",
                        strokeWidth: 2,
                        strokeOpacity: .9,
                        fillOpacity: 1,
                        shape: "circle",
                        radius: 2,
                        offsetX: 0,
                        offsetY: 0,
                        hover: {size: void 0, sizeOffset: 3}
                    },
                    noData: {
                        text: void 0,
                        align: "center",
                        verticalAlign: "middle",
                        offsetX: 0,
                        offsetY: 0,
                        style: {color: void 0, fontSize: "14px", fontFamily: void 0}
                    },
                    responsive: [],
                    series: void 0,
                    states: {
                        normal: {filter: {type: "none", value: 0}},
                        hover: {filter: {type: "lighten", value: .15}},
                        active: {allowMultipleDataPointsSelection: !1, filter: {type: "darken", value: .65}}
                    },
                    title: {
                        text: void 0,
                        align: "left",
                        margin: 10,
                        offsetX: 0,
                        offsetY: 0,
                        floating: !1,
                        style: {fontSize: "14px", fontFamily: void 0, color: void 0}
                    },
                    subtitle: {
                        text: void 0,
                        align: "left",
                        margin: 10,
                        offsetX: 0,
                        offsetY: 30,
                        floating: !1,
                        style: {fontSize: "12px", fontFamily: void 0, color: void 0}
                    },
                    stroke: {show: !0, curve: "smooth", lineCap: "butt", width: 2, colors: void 0, dashArray: 0},
                    tooltip: {
                        enabled: !0,
                        enabledOnSeries: void 0,
                        shared: !0,
                        followCursor: !1,
                        intersect: !1,
                        inverseOrder: !1,
                        custom: void 0,
                        fillSeriesColor: !1,
                        theme: "light",
                        style: {fontSize: "12px", fontFamily: void 0},
                        onDatasetHover: {highlightDataSeries: !1},
                        x: {show: !0, format: "dd MMM", formatter: void 0},
                        y: {
                            formatter: void 0, title: {
                                formatter: function (t) {
                                    return t
                                }
                            }
                        },
                        z: {formatter: void 0, title: "Size: "},
                        marker: {show: !0},
                        items: {display: "flex"},
                        fixed: {enabled: !1, position: "topRight", offsetX: 0, offsetY: 0}
                    },
                    xaxis: {
                        type: "category",
                        categories: [],
                        offsetX: 0,
                        offsetY: 0,
                        labels: {
                            show: !0,
                            rotate: -45,
                            rotateAlways: !1,
                            hideOverlappingLabels: !0,
                            trim: !0,
                            minHeight: void 0,
                            maxHeight: 120,
                            showDuplicates: !0,
                            style: {colors: [], fontSize: "12px", fontFamily: void 0, cssClass: ""},
                            offsetX: 0,
                            offsetY: 0,
                            format: void 0,
                            formatter: void 0,
                            datetimeFormatter: {
                                year: "yyyy",
                                month: "MMM 'yy",
                                day: "dd MMM",
                                hour: "HH:mm",
                                minute: "HH:mm:ss"
                            }
                        },
                        axisBorder: {show: !0, color: "#78909C", width: "100%", height: 1, offsetX: 0, offsetY: 0},
                        axisTicks: {show: !0, color: "#78909C", height: 6, offsetX: 0, offsetY: 0},
                        tickAmount: void 0,
                        tickPlacement: "on",
                        min: void 0,
                        max: void 0,
                        range: void 0,
                        floating: !1,
                        position: "bottom",
                        title: {
                            text: void 0,
                            offsetX: 0,
                            offsetY: 0,
                            style: {color: void 0, fontSize: "12px", fontFamily: void 0, cssClass: ""}
                        },
                        crosshairs: {
                            show: !0,
                            width: 1,
                            position: "back",
                            opacity: .9,
                            stroke: {color: "#b6b6b6", width: 1, dashArray: 3},
                            fill: {
                                type: "solid",
                                color: "#B1B9C4",
                                gradient: {
                                    colorFrom: "#D8E3F0",
                                    colorTo: "#BED1E6",
                                    stops: [0, 100],
                                    opacityFrom: .4,
                                    opacityTo: .5
                                }
                            },
                            dropShadow: {enabled: !1, left: 0, top: 0, blur: 1, opacity: .4}
                        },
                        tooltip: {
                            enabled: !0,
                            offsetY: 0,
                            formatter: void 0,
                            style: {fontSize: "12px", fontFamily: void 0}
                        }
                    },
                    yaxis: this.yAxis,
                    theme: {
                        mode: "light",
                        palette: "palette1",
                        monochrome: {enabled: !1, color: "#008FFB", shadeTo: "light", shadeIntensity: .65}
                    }
                }
            }
        }]), t
    }(), b = function () {
        function t(i) {
            e(this, t), this.ctx = i, this.w = i.w, this.graphics = new f(this.ctx), this.w.globals.isBarHorizontal && (this.invertAxis = !0), this.xDivision = this.w.globals.gridWidth / this.w.globals.dataPoints
        }

        return s(t, [{
            key: "drawAnnotations", value: function () {
                var t = this.w;
                if (t.globals.axisCharts) {
                    for (var e = this.drawYAxisAnnotations(), i = this.drawXAxisAnnotations(), s = this.drawPointAnnotations(), a = t.config.chart.animations.enabled, n = [e, i, s], r = [i.node, e.node, s.node], o = 0; o < 3; o++) t.globals.dom.elGraphical.add(n[o]), !a || t.globals.resized || t.globals.dataChanged || r[o].classList.add("hidden"), t.globals.delayedElements.push({
                        el: r[o],
                        index: 0
                    });
                    this.annotationsBackground()
                }
            }
        }, {
            key: "addXaxisAnnotation", value: function (t, e, i) {
                var s = this.w, a = this.invertAxis ? s.globals.minY : s.globals.minX,
                    n = this.invertAxis ? s.globals.yRange[0] : s.globals.xRange,
                    r = (t.x - a) / (n / s.globals.gridWidth), o = t.label.text;
                if ("category" === s.config.xaxis.type || s.config.xaxis.convertedCatToNumeric) {
                    var l = s.globals.labels.indexOf(t.x),
                        h = s.globals.dom.baseEl.querySelector(".apexcharts-xaxis-texts-g text:nth-child(" + (l + 1) + ")");
                    h && (r = parseFloat(h.getAttribute("x")))
                }
                var c = t.strokeDashArray;
                if (!(r < 0 || r > s.globals.gridWidth)) {
                    if (null === t.x2) {
                        var d = this.graphics.drawLine(r + t.offsetX, 0 + t.offsetY, r + t.offsetX, s.globals.gridHeight + t.offsetY, t.borderColor, c);
                        e.appendChild(d.node)
                    } else {
                        var u = (t.x2 - a) / (n / s.globals.gridWidth);
                        if (u < r) {
                            var g = r;
                            r = u, u = g
                        }
                        if (o) {
                            var f = this.graphics.drawRect(r + t.offsetX, 0 + t.offsetY, u - r, s.globals.gridHeight + t.offsetY, 0, t.fillColor, t.opacity, 1, t.borderColor, c);
                            e.appendChild(f.node)
                        }
                    }
                    var p = "top" === t.label.position ? -3 : s.globals.gridHeight, x = this.graphics.drawText({
                        x: r + t.label.offsetX,
                        y: p + t.label.offsetY,
                        text: o,
                        textAnchor: t.label.textAnchor,
                        fontSize: t.label.style.fontSize,
                        fontFamily: t.label.style.fontFamily,
                        foreColor: t.label.style.color,
                        cssClass: "apexcharts-xaxis-annotation-label " + t.label.style.cssClass
                    });
                    x.attr({rel: i}), e.appendChild(x.node), this.setOrientations(t, i)
                }
            }
        }, {
            key: "drawXAxisAnnotations", value: function () {
                var t = this, e = this.w, i = this.graphics.group({class: "apexcharts-xaxis-annotations"});
                return e.config.annotations.xaxis.map(function (e, s) {
                    t.addXaxisAnnotation(e, i.node, s)
                }), i
            }
        }, {
            key: "addYaxisAnnotation", value: function (t, e, i) {
                var s, a, n = this.w, r = t.strokeDashArray;
                if (this.invertAxis) {
                    var o = n.globals.labels.indexOf(t.y),
                        l = n.globals.dom.baseEl.querySelector(".apexcharts-yaxis-texts-g text:nth-child(" + (o + 1) + ")");
                    l && (s = parseFloat(l.getAttribute("y")))
                } else s = n.globals.gridHeight - (t.y - n.globals.minYArr[t.yAxisIndex]) / (n.globals.yRange[t.yAxisIndex] / n.globals.gridHeight), n.config.yaxis[t.yAxisIndex] && n.config.yaxis[t.yAxisIndex].reversed && (s = (t.y - n.globals.minYArr[t.yAxisIndex]) / (n.globals.yRange[t.yAxisIndex] / n.globals.gridHeight));
                var h = t.label.text;
                if (null === t.y2) {
                    var c = this.graphics.drawLine(0 + t.offsetX, s + t.offsetY, n.globals.gridWidth + t.offsetX, s + t.offsetY, t.borderColor, r);
                    e.appendChild(c.node)
                } else {
                    if (this.invertAxis) {
                        var d = n.globals.labels.indexOf(t.y2),
                            u = n.globals.dom.baseEl.querySelector(".apexcharts-yaxis-texts-g text:nth-child(" + (d + 1) + ")");
                        u && (a = parseFloat(u.getAttribute("y")))
                    } else a = n.globals.gridHeight - (t.y2 - n.globals.minYArr[t.yAxisIndex]) / (n.globals.yRange[t.yAxisIndex] / n.globals.gridHeight), n.config.yaxis[t.yAxisIndex] && n.config.yaxis[t.yAxisIndex].reversed && (a = (t.y2 - n.globals.minYArr[t.yAxisIndex]) / (n.globals.yRange[t.yAxisIndex] / n.globals.gridHeight));
                    if (a > s) {
                        var g = s;
                        s = a, a = g
                    }
                    if (h) {
                        var f = this.graphics.drawRect(0 + t.offsetX, a + t.offsetY, n.globals.gridWidth + t.offsetX, s - a, 0, t.fillColor, t.opacity, 1, t.borderColor, r);
                        e.appendChild(f.node)
                    }
                }
                var p = "right" === t.label.position ? n.globals.gridWidth : 0, x = this.graphics.drawText({
                    x: p + t.label.offsetX,
                    y: (a || s) + t.label.offsetY - 3,
                    text: h,
                    textAnchor: t.label.textAnchor,
                    fontSize: t.label.style.fontSize,
                    fontFamily: t.label.style.fontFamily,
                    foreColor: t.label.style.color,
                    cssClass: "apexcharts-yaxis-annotation-label " + t.label.style.cssClass
                });
                x.attr({rel: i}), e.appendChild(x.node)
            }
        }, {
            key: "drawYAxisAnnotations", value: function () {
                var t = this, e = this.w, i = this.graphics.group({class: "apexcharts-yaxis-annotations"});
                return e.config.annotations.yaxis.map(function (e, s) {
                    t.addYaxisAnnotation(e, i.node, s)
                }), i
            }
        }, {
            key: "clearAnnotations", value: function (t) {
                var e = t.w.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxis-annotations, .apexcharts-xaxis-annotations, .apexcharts-point-annotations");
                (e = d.listToArray(e)).forEach(function (t) {
                    for (; t.firstChild;) t.removeChild(t.firstChild)
                })
            }
        }, {
            key: "addPointAnnotation", value: function (t, e, i) {
                var s = this.w, a = 0, n = 0, r = 0;
                if (this.invertAxis && console.warn("Point annotation is not supported in horizontal bar charts."), "string" == typeof t.x) {
                    var o = s.globals.labels.indexOf(t.x),
                        l = s.globals.dom.baseEl.querySelector(".apexcharts-xaxis-texts-g text:nth-child(" + (o + 1) + ")");
                    a = parseFloat(l.getAttribute("x"));
                    var h = t.y;
                    null === t.y && (h = s.globals.series[t.seriesIndex][o]), n = s.globals.gridHeight - (h - s.globals.minYArr[t.yAxisIndex]) / (s.globals.yRange[t.yAxisIndex] / s.globals.gridHeight) - parseInt(t.label.style.fontSize) - t.marker.size, r = s.globals.gridHeight - (h - s.globals.minYArr[t.yAxisIndex]) / (s.globals.yRange[t.yAxisIndex] / s.globals.gridHeight), s.config.yaxis[t.yAxisIndex] && s.config.yaxis[t.yAxisIndex].reversed && (n = (h - s.globals.minYArr[t.yAxisIndex]) / (s.globals.yRange[t.yAxisIndex] / s.globals.gridHeight) + parseInt(t.label.style.fontSize) + t.marker.size, r = (h - s.globals.minYArr[t.yAxisIndex]) / (s.globals.yRange[t.yAxisIndex] / s.globals.gridHeight))
                } else a = (t.x - s.globals.minX) / (s.globals.xRange / s.globals.gridWidth), n = s.globals.gridHeight - (parseFloat(t.y) - s.globals.minYArr[t.yAxisIndex]) / (s.globals.yRange[t.yAxisIndex] / s.globals.gridHeight) - parseInt(t.label.style.fontSize) - t.marker.size, r = s.globals.gridHeight - (t.y - s.globals.minYArr[t.yAxisIndex]) / (s.globals.yRange[t.yAxisIndex] / s.globals.gridHeight), s.config.yaxis[t.yAxisIndex] && s.config.yaxis[t.yAxisIndex].reversed && (n = (parseFloat(t.y) - s.globals.minYArr[t.yAxisIndex]) / (s.globals.yRange[t.yAxisIndex] / s.globals.gridHeight) - parseInt(t.label.style.fontSize) - t.marker.size, r = (t.y - s.globals.minYArr[t.yAxisIndex]) / (s.globals.yRange[t.yAxisIndex] / s.globals.gridHeight));
                if (!(a < 0 || a > s.globals.gridWidth)) {
                    var c = {
                        pSize: t.marker.size,
                        pWidth: t.marker.strokeWidth,
                        pointFillColor: t.marker.fillColor,
                        pointStrokeColor: t.marker.strokeColor,
                        shape: t.marker.shape,
                        radius: t.marker.radius,
                        class: "apexcharts-point-annotation-marker " + t.marker.cssClass
                    }, d = this.graphics.drawMarker(a + t.marker.offsetX, r + t.marker.offsetY, c);
                    e.appendChild(d.node);
                    var u = t.label.text ? t.label.text : "", g = this.graphics.drawText({
                        x: a + t.label.offsetX,
                        y: n + t.label.offsetY,
                        text: u,
                        textAnchor: t.label.textAnchor,
                        fontSize: t.label.style.fontSize,
                        fontFamily: t.label.style.fontFamily,
                        foreColor: t.label.style.color,
                        cssClass: "apexcharts-point-annotation-label " + t.label.style.cssClass
                    });
                    if (g.attr({rel: i}), e.appendChild(g.node), t.customSVG.SVG) {
                        var f = this.graphics.group({class: "apexcharts-point-annotations-custom-svg " + t.customSVG.cssClass});
                        f.attr({transform: "translate(".concat(a + t.customSVG.offsetX, ", ").concat(n + t.customSVG.offsetY, ")")}), f.node.innerHTML = t.customSVG.SVG, e.appendChild(f.node)
                    }
                }
            }
        }, {
            key: "drawPointAnnotations", value: function () {
                var t = this, e = this.w, i = this.graphics.group({class: "apexcharts-point-annotations"});
                return e.config.annotations.points.map(function (e, s) {
                    t.addPointAnnotation(e, i.node, s)
                }), i
            }
        }, {
            key: "setOrientations", value: function (t) {
                var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null, i = this.w;
                if ("vertical" === t.label.orientation) {
                    var s = null !== e ? e : 0,
                        a = i.globals.dom.baseEl.querySelector(".apexcharts-xaxis-annotations .apexcharts-xaxis-annotation-label[rel='".concat(s, "']"));
                    if (null !== a) {
                        var n = a.getBoundingClientRect();
                        a.setAttribute("x", parseFloat(a.getAttribute("x")) - n.height + 4), "top" === t.label.position ? a.setAttribute("y", parseFloat(a.getAttribute("y")) + n.width) : a.setAttribute("y", parseFloat(a.getAttribute("y")) - n.width);
                        var r = this.graphics.rotateAroundCenter(a), o = r.x, l = r.y;
                        a.setAttribute("transform", "rotate(-90 ".concat(o, " ").concat(l, ")"))
                    }
                }
            }
        }, {
            key: "addBackgroundToAnno", value: function (t, e) {
                var i = this.w;
                if (!e.label.text) return null;
                var s = i.globals.dom.baseEl.querySelector(".apexcharts-grid").getBoundingClientRect(),
                    a = t.getBoundingClientRect(), n = e.label.style.padding.left, r = e.label.style.padding.right,
                    o = e.label.style.padding.top, l = e.label.style.padding.bottom;
                "vertical" === e.label.orientation && (o = e.label.style.padding.left, l = e.label.style.padding.right, n = e.label.style.padding.top, r = e.label.style.padding.bottom);
                var h = a.left - s.left - n, c = a.top - s.top - o;
                return this.graphics.drawRect(h, c, a.width + n + r, a.height + o + l, 0, e.label.style.background, 1, e.label.borderWidth, e.label.borderColor, 0)
            }
        }, {
            key: "annotationsBackground", value: function () {
                var t = this, e = this.w, i = function (i, s, a) {
                    var n = e.globals.dom.baseEl.querySelector(".apexcharts-".concat(a, "-annotations .apexcharts-").concat(a, "-annotation-label[rel='").concat(s, "']"));
                    if (n) {
                        var r = n.parentNode, o = t.addBackgroundToAnno(n, i);
                        o && r.insertBefore(o.node, n)
                    }
                };
                e.config.annotations.xaxis.map(function (t, e) {
                    i(t, e, "xaxis")
                }), e.config.annotations.yaxis.map(function (t, e) {
                    i(t, e, "yaxis")
                }), e.config.annotations.points.map(function (t, e) {
                    i(t, e, "point")
                })
            }
        }, {
            key: "addText", value: function (t, e, i) {
                var s = t.x, a = t.y, n = t.text, r = t.textAnchor, o = t.appendTo,
                    l = void 0 === o ? ".apexcharts-inner" : o, h = t.foreColor, c = t.fontSize, d = t.fontFamily,
                    u = t.cssClass, g = t.backgroundColor, f = t.borderWidth, p = t.strokeDashArray, x = t.radius,
                    b = t.borderColor, m = t.paddingLeft, v = void 0 === m ? 4 : m, y = t.paddingRight,
                    w = void 0 === y ? 4 : y, k = t.paddingBottom, A = void 0 === k ? 2 : k, S = t.paddingTop,
                    C = void 0 === S ? 2 : S, L = i, z = L.w, P = z.globals.dom.baseEl.querySelector(l),
                    M = this.graphics.drawText({
                        x: s,
                        y: a,
                        text: n,
                        textAnchor: r || "start",
                        fontSize: c || "12px",
                        fontFamily: d || z.config.chart.fontFamily,
                        foreColor: h || z.config.chart.foreColor,
                        cssClass: u
                    });
                P.appendChild(M.node);
                var E = M.bbox();
                if (n) {
                    var T = this.graphics.drawRect(E.x - v, E.y - C, E.width + v + w, E.height + A + C, x, g, 1, f, b, p);
                    M.before(T)
                }
                return e && z.globals.memory.methodsToExec.push({
                    context: L,
                    method: L.addText,
                    params: {
                        x: s,
                        y: a,
                        text: n,
                        textAnchor: r,
                        appendTo: l,
                        foreColor: h,
                        fontSize: c,
                        cssClass: u,
                        backgroundColor: g,
                        borderWidth: f,
                        strokeDashArray: p,
                        radius: x,
                        borderColor: b,
                        paddingLeft: v,
                        paddingRight: w,
                        paddingBottom: A,
                        paddingTop: C
                    }
                }), i
            }
        }, {
            key: "addPointAnnotationExternal", value: function (t, e, i) {
                return void 0 === this.invertAxis && (this.invertAxis = i.w.globals.isBarHorizontal), this.addAnnotationExternal({
                    params: t,
                    pushToMemory: e,
                    context: i,
                    type: "point",
                    contextMethod: i.addPointAnnotation
                }), i
            }
        }, {
            key: "addYaxisAnnotationExternal", value: function (t, e, i) {
                return this.addAnnotationExternal({
                    params: t,
                    pushToMemory: e,
                    context: i,
                    type: "yaxis",
                    contextMethod: i.addYaxisAnnotation
                }), i
            }
        }, {
            key: "addXaxisAnnotationExternal", value: function (t, e, i) {
                return this.addAnnotationExternal({
                    params: t,
                    pushToMemory: e,
                    context: i,
                    type: "xaxis",
                    contextMethod: i.addXaxisAnnotation
                }), i
            }
        }, {
            key: "addAnnotationExternal", value: function (t) {
                var e = t.params, i = t.pushToMemory, s = t.context, a = t.type, n = t.contextMethod, r = s, o = r.w,
                    l = o.globals.dom.baseEl.querySelector(".apexcharts-".concat(a, "-annotations")),
                    h = l.childNodes.length + 1, c = new x,
                    u = Object.assign({}, "xaxis" === a ? c.xAxisAnnotation : "yaxis" === a ? c.yAxisAnnotation : c.pointAnnotation),
                    g = d.extend(u, e);
                switch (a) {
                    case"xaxis":
                        this.addXaxisAnnotation(g, l, h);
                        break;
                    case"yaxis":
                        this.addYaxisAnnotation(g, l, h);
                        break;
                    case"point":
                        this.addPointAnnotation(g, l, h)
                }
                var f = o.globals.dom.baseEl.querySelector(".apexcharts-".concat(a, "-annotations .apexcharts-").concat(a, "-annotation-label[rel='").concat(h, "']")),
                    p = this.addBackgroundToAnno(f, g);
                return p && l.insertBefore(p.node, f), i && o.globals.memory.methodsToExec.push({
                    context: r,
                    method: n,
                    params: e
                }), s
            }
        }]), t
    }(), m = function () {
        function t(i) {
            e(this, t), this.ctx = i, this.w = i.w, this.months31 = [1, 3, 5, 7, 8, 10, 12], this.months30 = [2, 4, 6, 9, 11], this.daysCntOfYear = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334]
        }

        return s(t, [{
            key: "isValidDate", value: function (t) {
                return !isNaN(this.parseDate(t))
            }
        }, {
            key: "getUTCTimeStamp", value: function (t) {
                return Date.parse(t) ? new Date(new Date(t).toISOString().substr(0, 25)).getTime() : t
            }
        }, {
            key: "parseDate", value: function (t) {
                var e = Date.parse(t);
                if (!isNaN(e)) return this.getUTCTimeStamp(t);
                var i = Date.parse(t.replace(/-/g, "/").replace(/[a-z]+/gi, " "));
                return i = this.getUTCTimeStamp(i)
            }
        }, {
            key: "treatAsUtc", value: function (t) {
                var e = new Date(t);
                return e.setMinutes(e.getMinutes() - e.getTimezoneOffset()), e
            }
        }, {
            key: "formatDate", value: function (t, e) {
                var i = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2],
                    s = !(arguments.length > 3 && void 0 !== arguments[3]) || arguments[3], a = this.w.globals.locale,
                    n = ["\0"].concat(c(a.months)), r = ["\x01"].concat(c(a.shortMonths)),
                    o = ["\x02"].concat(c(a.days)), l = ["\x03"].concat(c(a.shortDays));

                function h(t, e) {
                    var i = t + "";
                    for (e = e || 2; i.length < e;) i = "0" + i;
                    return i
                }

                s && (t = this.treatAsUtc(t));
                var d = i ? t.getUTCFullYear() : t.getFullYear();
                e = (e = (e = e.replace(/(^|[^\\])yyyy+/g, "$1" + d)).replace(/(^|[^\\])yy/g, "$1" + d.toString().substr(2, 2))).replace(/(^|[^\\])y/g, "$1" + d);
                var u = (i ? t.getUTCMonth() : t.getMonth()) + 1;
                e = (e = (e = (e = e.replace(/(^|[^\\])MMMM+/g, "$1" + n[0])).replace(/(^|[^\\])MMM/g, "$1" + r[0])).replace(/(^|[^\\])MM/g, "$1" + h(u))).replace(/(^|[^\\])M/g, "$1" + u);
                var g = i ? t.getUTCDate() : t.getDate();
                e = (e = (e = (e = e.replace(/(^|[^\\])dddd+/g, "$1" + o[0])).replace(/(^|[^\\])ddd/g, "$1" + l[0])).replace(/(^|[^\\])dd/g, "$1" + h(g))).replace(/(^|[^\\])d/g, "$1" + g);
                var f = i ? t.getUTCHours() : t.getHours(), p = f > 12 ? f - 12 : 0 === f ? 12 : f;
                e = (e = (e = (e = e.replace(/(^|[^\\])HH+/g, "$1" + h(f))).replace(/(^|[^\\])H/g, "$1" + f)).replace(/(^|[^\\])hh+/g, "$1" + h(p))).replace(/(^|[^\\])h/g, "$1" + p);
                var x = i ? t.getUTCMinutes() : t.getMinutes();
                e = (e = e.replace(/(^|[^\\])mm+/g, "$1" + h(x))).replace(/(^|[^\\])m/g, "$1" + x);
                var b = i ? t.getUTCSeconds() : t.getSeconds();
                e = (e = e.replace(/(^|[^\\])ss+/g, "$1" + h(b))).replace(/(^|[^\\])s/g, "$1" + b);
                var m = i ? t.getUTCMilliseconds() : t.getMilliseconds();
                e = e.replace(/(^|[^\\])fff+/g, "$1" + h(m, 3)), m = Math.round(m / 10), e = e.replace(/(^|[^\\])ff/g, "$1" + h(m)), m = Math.round(m / 10);
                var v = f < 12 ? "AM" : "PM";
                e = (e = (e = e.replace(/(^|[^\\])f/g, "$1" + m)).replace(/(^|[^\\])TT+/g, "$1" + v)).replace(/(^|[^\\])T/g, "$1" + v.charAt(0));
                var y = v.toLowerCase();
                e = (e = e.replace(/(^|[^\\])tt+/g, "$1" + y)).replace(/(^|[^\\])t/g, "$1" + y.charAt(0));
                var w = -t.getTimezoneOffset(), k = i || !w ? "Z" : w > 0 ? "+" : "-";
                if (!i) {
                    var A = (w = Math.abs(w)) % 60;
                    k += h(Math.floor(w / 60)) + ":" + h(A)
                }
                e = e.replace(/(^|[^\\])K/g, "$1" + k);
                var S = (i ? t.getUTCDay() : t.getDay()) + 1;
                return e = (e = (e = (e = (e = e.replace(new RegExp(o[0], "g"), o[S])).replace(new RegExp(l[0], "g"), l[S])).replace(new RegExp(n[0], "g"), n[u])).replace(new RegExp(r[0], "g"), r[u])).replace(/\\(.)/g, "$1")
            }
        }, {
            key: "getTimeUnitsfromTimestamp", value: function (t, e) {
                var i = this.w;
                void 0 !== i.config.xaxis.min && (t = i.config.xaxis.min), void 0 !== i.config.xaxis.max && (e = i.config.xaxis.max);
                var s = new Date(t).getFullYear(), a = new Date(e).getFullYear(), n = new Date(t).getMonth(),
                    r = new Date(e).getMonth(), o = new Date(t).getDate(), l = new Date(e).getDate(),
                    h = new Date(t).getHours(), c = new Date(e).getHours();
                return {
                    minMinute: new Date(t).getMinutes(),
                    maxMinute: new Date(e).getMinutes(),
                    minHour: h,
                    maxHour: c,
                    minDate: o,
                    maxDate: l,
                    minMonth: n,
                    maxMonth: r,
                    minYear: s,
                    maxYear: a
                }
            }
        }, {
            key: "isLeapYear", value: function (t) {
                return t % 4 == 0 && t % 100 != 0 || t % 400 == 0
            }
        }, {
            key: "calculcateLastDaysOfMonth", value: function (t, e, i) {
                return this.determineDaysOfMonths(t, e) - i
            }
        }, {
            key: "determineDaysOfYear", value: function (t) {
                var e = 365;
                return this.isLeapYear(t) && (e = 366), e
            }
        }, {
            key: "determineRemainingDaysOfYear", value: function (t, e, i) {
                var s = this.daysCntOfYear[e] + i;
                return e > 1 && this.isLeapYear() && s++, s
            }
        }, {
            key: "determineDaysOfMonths", value: function (t, e) {
                var i = 30;
                switch (t = d.monthMod(t), !0) {
                    case this.months30.indexOf(t) > -1:
                        2 === t && (i = this.isLeapYear(e) ? 29 : 28);
                        break;
                    case this.months31.indexOf(t) > -1:
                    default:
                        i = 31
                }
                return i
            }
        }]), t
    }(), v = function () {
        function t(i) {
            e(this, t), this.opts = i
        }

        return s(t, [{
            key: "line", value: function () {
                return {
                    chart: {animations: {easing: "swing"}},
                    dataLabels: {enabled: !1},
                    stroke: {width: 5, curve: "straight"},
                    markers: {size: 0, hover: {sizeOffset: 6}},
                    xaxis: {crosshairs: {width: 1}}
                }
            }
        }, {
            key: "sparkline", value: function (t) {
                this.opts.yaxis[0].labels.show = !1, this.opts.yaxis[0].floating = !0;
                return d.extend(t, {
                    grid: {show: !1, padding: {left: 0, right: 0, top: 0, bottom: 0}},
                    legend: {show: !1},
                    xaxis: {labels: {show: !1}, tooltip: {enabled: !1}, axisBorder: {show: !1}},
                    chart: {toolbar: {show: !1}, zoom: {enabled: !1}},
                    dataLabels: {enabled: !1}
                })
            }
        }, {
            key: "bar", value: function () {
                return {
                    chart: {stacked: !1, animations: {easing: "swing"}},
                    plotOptions: {bar: {dataLabels: {position: "center"}}},
                    dataLabels: {style: {colors: ["#fff"]}},
                    stroke: {width: 0},
                    fill: {opacity: .85},
                    legend: {markers: {shape: "square", radius: 2, size: 8}},
                    tooltip: {shared: !1},
                    xaxis: {
                        tooltip: {enabled: !1},
                        crosshairs: {
                            width: "barWidth",
                            position: "back",
                            fill: {type: "gradient"},
                            dropShadow: {enabled: !1},
                            stroke: {width: 0}
                        }
                    }
                }
            }
        }, {
            key: "candlestick", value: function () {
                return {
                    stroke: {width: 1, colors: ["#333"]},
                    dataLabels: {enabled: !1},
                    tooltip: {
                        shared: !0, custom: function (t) {
                            var e = t.seriesIndex, i = t.dataPointIndex, s = t.w;
                            return '<div class="apexcharts-tooltip-candlestick"><div>Open: <span class="value">' + s.globals.seriesCandleO[e][i] + '</span></div><div>High: <span class="value">' + s.globals.seriesCandleH[e][i] + '</span></div><div>Low: <span class="value">' + s.globals.seriesCandleL[e][i] + '</span></div><div>Close: <span class="value">' + s.globals.seriesCandleC[e][i] + "</span></div></div>"
                        }
                    },
                    states: {active: {filter: {type: "none"}}},
                    xaxis: {crosshairs: {width: 1}}
                }
            }
        }, {
            key: "rangeBar", value: function () {
                return {
                    stroke: {width: 0},
                    plotOptions: {bar: {dataLabels: {position: "center"}}},
                    dataLabels: {
                        enabled: !1, formatter: function (t, e) {
                            e.ctx;
                            var i = e.seriesIndex, s = e.dataPointIndex, a = e.w, n = a.globals.seriesRangeStart[i][s];
                            return a.globals.seriesRangeEnd[i][s] - n
                        }, style: {colors: ["#fff"]}
                    },
                    tooltip: {
                        shared: !1, followCursor: !0, custom: function (t) {
                            var e = t.ctx, i = t.seriesIndex, s = t.dataPointIndex, a = t.w,
                                n = a.globals.seriesRangeStart[i][s], r = a.globals.seriesRangeEnd[i][s], o = "",
                                l = "", h = a.globals.colors[i];
                            if (void 0 === a.config.tooltip.x.formatter) if ("datetime" === a.config.xaxis.type) {
                                var c = new m(e);
                                o = c.formatDate(new Date(n), a.config.tooltip.x.format, !0, !0), l = c.formatDate(new Date(r), a.config.tooltip.x.format, !0, !0)
                            } else o = n, l = r; else o = a.config.tooltip.x.formatter(n), l = a.config.tooltip.x.formatter(r);
                            var d = a.globals.labels[s];
                            return '<div class="apexcharts-tooltip-rangebar"><div> <span class="series-name" style="color: ' + h + '">' + (a.config.series[i].name ? a.config.series[i].name : "") + '</span></div><div> <span class="category">' + d + ': </span> <span class="value start-value">' + o + '</span> <span class="separator">-</span> <span class="value end-value">' + l + "</span></div></div>"
                        }
                    },
                    xaxis: {tooltip: {enabled: !1}, crosshairs: {stroke: {width: 0}}}
                }
            }
        }, {
            key: "area", value: function () {
                return {
                    stroke: {width: 4},
                    fill: {
                        type: "gradient",
                        gradient: {
                            inverseColors: !1,
                            shade: "light",
                            type: "vertical",
                            opacityFrom: .65,
                            opacityTo: .5,
                            stops: [0, 100, 100]
                        }
                    },
                    markers: {size: 0, hover: {sizeOffset: 6}},
                    tooltip: {followCursor: !1}
                }
            }
        }, {
            key: "brush", value: function (t) {
                return d.extend(t, {
                    chart: {toolbar: {autoSelected: "selection", show: !1}, zoom: {enabled: !1}},
                    dataLabels: {enabled: !1},
                    stroke: {width: 1},
                    tooltip: {enabled: !1},
                    xaxis: {tooltip: {enabled: !1}}
                })
            }
        }, {
            key: "stacked100", value: function () {
                var t = this;
                this.opts.dataLabels = this.opts.dataLabels || {}, this.opts.dataLabels.formatter = this.opts.dataLabels.formatter || void 0;
                var e = this.opts.dataLabels.formatter;
                this.opts.yaxis.forEach(function (e, i) {
                    t.opts.yaxis[i].min = 0, t.opts.yaxis[i].max = 100
                }), "bar" === this.opts.chart.type && (this.opts.dataLabels.formatter = e || function (t) {
                    return "number" == typeof t && t ? t.toFixed(0) + "%" : t
                })
            }
        }, {
            key: "bubble", value: function () {
                return {
                    dataLabels: {style: {colors: ["#fff"]}},
                    tooltip: {shared: !1, intersect: !0},
                    xaxis: {crosshairs: {width: 0}},
                    fill: {
                        type: "solid",
                        gradient: {shade: "light", inverse: !0, shadeIntensity: .55, opacityFrom: .4, opacityTo: .8}
                    }
                }
            }
        }, {
            key: "scatter", value: function () {
                return {
                    dataLabels: {enabled: !1},
                    tooltip: {shared: !1, intersect: !0},
                    markers: {size: 6, strokeWidth: 2, hover: {sizeOffset: 2}}
                }
            }
        }, {
            key: "heatmap", value: function () {
                return {
                    chart: {stacked: !1, zoom: {enabled: !1}},
                    fill: {opacity: 1},
                    dataLabels: {style: {colors: ["#fff"]}},
                    stroke: {colors: ["#fff"]},
                    tooltip: {followCursor: !0, marker: {show: !1}, x: {show: !1}},
                    legend: {position: "top", markers: {shape: "square", size: 10, offsetY: 2}},
                    grid: {padding: {right: 20}}
                }
            }
        }, {
            key: "pie", value: function () {
                return {
                    chart: {toolbar: {show: !1}},
                    plotOptions: {pie: {donut: {labels: {show: !1}}}},
                    dataLabels: {
                        formatter: function (t) {
                            return t.toFixed(1) + "%"
                        }, style: {colors: ["#fff"]}, dropShadow: {enabled: !0}
                    },
                    stroke: {colors: ["#fff"]},
                    fill: {
                        opacity: 1,
                        gradient: {shade: "dark", shadeIntensity: .35, inverseColors: !1, stops: [0, 100, 100]}
                    },
                    padding: {right: 0, left: 0},
                    tooltip: {theme: "dark", fillSeriesColor: !0},
                    legend: {position: "right"}
                }
            }
        }, {
            key: "donut", value: function () {
                return {
                    chart: {toolbar: {show: !1}},
                    dataLabels: {
                        formatter: function (t) {
                            return t.toFixed(1) + "%"
                        }, style: {colors: ["#fff"]}, dropShadow: {enabled: !0}
                    },
                    stroke: {colors: ["#fff"]},
                    fill: {
                        opacity: 1,
                        gradient: {
                            shade: "dark",
                            shadeIntensity: .4,
                            inverseColors: !1,
                            type: "vertical",
                            opacityFrom: 1,
                            opacityTo: 1,
                            stops: [70, 98, 100]
                        }
                    },
                    padding: {right: 0, left: 0},
                    tooltip: {theme: "dark", fillSeriesColor: !0},
                    legend: {position: "right"}
                }
            }
        }, {
            key: "radar", value: function () {
                return this.opts.yaxis[0].labels.style.fontSize = "13px", this.opts.yaxis[0].labels.offsetY = 6, {
                    dataLabels: {
                        enabled: !0,
                        style: {colors: ["#a8a8a8"], fontSize: "11px"}
                    },
                    stroke: {width: 2},
                    markers: {size: 3, strokeWidth: 1, strokeOpacity: 1},
                    fill: {opacity: .2},
                    tooltip: {shared: !1, intersect: !0, followCursor: !0},
                    grid: {show: !1},
                    xaxis: {tooltip: {enabled: !1}, crosshairs: {show: !1}}
                }
            }
        }, {
            key: "radialBar", value: function () {
                return {
                    chart: {animations: {dynamicAnimation: {enabled: !0, speed: 800}}, toolbar: {show: !1}},
                    fill: {
                        gradient: {
                            shade: "dark",
                            shadeIntensity: .4,
                            inverseColors: !1,
                            type: "diagonal2",
                            opacityFrom: 1,
                            opacityTo: 1,
                            stops: [70, 98, 100]
                        }
                    },
                    padding: {right: 0, left: 0},
                    legend: {show: !1, position: "right"},
                    tooltip: {enabled: !1, fillSeriesColor: !0}
                }
            }
        }], [{
            key: "convertCatToNumeric", value: function (t) {
                t.xaxis.type = "numeric", t.xaxis.convertedCatToNumeric = !0, t.xaxis.labels = t.xaxis.labels || {}, t.xaxis.labels.formatter = t.xaxis.labels.formatter || function (t) {
                    return t
                }, t.chart = t.chart || {}, t.chart.zoom = t.chart.zoom || window.Apex.chart && window.Apex.chart.zoom || {};
                var e = t.xaxis.labels.formatter,
                    i = t.xaxis.categories && t.xaxis.categories.length ? t.xaxis.categories : t.labels;
                return i && i.length && (t.xaxis.labels.formatter = function (t) {
                    return e(i[t - 1])
                }), t.xaxis.categories = [], t.labels = [], t.chart.zoom.enabled = t.chart.zoom.enabled || !1, t
            }
        }]), t
    }(), y = function () {
        function t(i) {
            e(this, t), this.ctx = i, this.w = i.w
        }

        return s(t, [{
            key: "getStackedSeriesTotals", value: function () {
                for (var t = this.w, e = [], i = 0; i < t.globals.series[t.globals.maxValsInArrayIndex].length; i++) {
                    for (var s = 0, a = 0; a < t.globals.series.length; a++) s += t.globals.series[a][i];
                    e.push(s)
                }
                return t.globals.stackedSeriesTotals = e, e
            }
        }, {
            key: "getSeriesTotalByIndex", value: function () {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;
                return null === t ? this.w.config.series.reduce(function (t, e) {
                    return t + e
                }, 0) : this.w.globals.series[t].reduce(function (t, e) {
                    return t + e
                }, 0)
            }
        }, {
            key: "isSeriesNull", value: function () {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;
                return 0 === (null === t ? this.w.config.series.filter(function (t) {
                    return null !== t
                }) : this.w.globals.series[t].filter(function (t) {
                    return null !== t
                })).length
            }
        }, {
            key: "seriesHaveSameValues", value: function (t) {
                return this.w.globals.series[t].every(function (t, e, i) {
                    return t === i[0]
                })
            }
        }, {
            key: "getLargestSeries", value: function () {
                var t = this.w;
                t.globals.maxValsInArrayIndex = t.globals.series.map(function (t) {
                    return t.length
                }).indexOf(Math.max.apply(Math, t.globals.series.map(function (t) {
                    return t.length
                })))
            }
        }, {
            key: "getLargestMarkerSize", value: function () {
                var t = this.w, e = 0;
                return t.globals.markers.size.forEach(function (t) {
                    e = Math.max(e, t)
                }), t.globals.markers.largestSize = e, e
            }
        }, {
            key: "getSeriesTotals", value: function () {
                var t = this.w;
                t.globals.seriesTotals = t.globals.series.map(function (t, e) {
                    var i = 0;
                    if (Array.isArray(t)) for (var s = 0; s < t.length; s++) i += t[s]; else i += t;
                    return i
                })
            }
        }, {
            key: "getSeriesTotalsXRange", value: function (t, e) {
                var i = this.w;
                return i.globals.series.map(function (s, a) {
                    for (var n = 0, r = 0; r < s.length; r++) i.globals.seriesX[a][r] > t && i.globals.seriesX[a][r] < e && (n += s[r]);
                    return n
                })
            }
        }, {
            key: "getPercentSeries", value: function () {
                var t = this.w;
                t.globals.seriesPercent = t.globals.series.map(function (e, i) {
                    var s = [];
                    if (Array.isArray(e)) for (var a = 0; a < e.length; a++) {
                        var n = t.globals.stackedSeriesTotals[a], r = 100 * e[a] / n;
                        s.push(r)
                    } else {
                        var o = 100 * e / t.globals.seriesTotals.reduce(function (t, e) {
                            return t + e
                        }, 0);
                        s.push(o)
                    }
                    return s
                })
            }
        }, {
            key: "getCalculatedRatios", value: function () {
                var t, e, i, s, a, n = this.w.globals, r = [], o = [], l = .1, h = 0;
                if (n.yRange = [], n.isMultipleYAxis) for (var c = 0; c < n.minYArr.length; c++) n.yRange.push(Math.abs(n.minYArr[c] - n.maxYArr[c])), o.push(0); else n.yRange.push(Math.abs(n.minY - n.maxY));
                n.xRange = Math.abs(n.maxX - n.minX), n.zRange = Math.abs(n.maxZ - n.minZ);
                for (var d = 0; d < n.yRange.length; d++) r.push(n.yRange[d] / n.gridHeight);
                if (e = n.xRange / n.gridWidth, i = Math.abs(n.initialmaxX - n.initialminX) / n.gridWidth, t = n.yRange / n.gridWidth, s = n.xRange / n.gridHeight, a = n.zRange / n.gridHeight * 16, n.minY !== Number.MIN_VALUE && 0 !== Math.abs(n.minY) && (n.hasNegs = !0), n.isMultipleYAxis) {
                    o = [];
                    for (var u = 0; u < r.length; u++) o.push(-n.minYArr[u] / r[u])
                } else o.push(-n.minY / r[0]), n.minY !== Number.MIN_VALUE && 0 !== Math.abs(n.minY) && (l = -n.minY / t, h = n.minX / e);
                return {
                    yRatio: r,
                    invertedYRatio: t,
                    zRatio: a,
                    xRatio: e,
                    initialXRatio: i,
                    invertedXRatio: s,
                    baseLineInvertedY: l,
                    baseLineY: o,
                    baseLineX: h
                }
            }
        }, {
            key: "getLogSeries", value: function (t) {
                var e = this.w;
                return e.globals.seriesLog = t.map(function (t, i) {
                    return e.config.yaxis[i] && e.config.yaxis[i].logarithmic ? t.map(function (t) {
                        return null === t ? null : (Math.log(t) - Math.log(e.globals.minYArr[i])) / (Math.log(e.globals.maxYArr[i]) - Math.log(e.globals.minYArr[i]))
                    }) : t
                }), e.globals.seriesLog
            }
        }, {
            key: "getLogYRatios", value: function (t) {
                var e = this, i = this.w, s = this.w.globals;
                return s.yLogRatio = t.slice(), s.logYRange = s.yRange.map(function (t, a) {
                    if (i.config.yaxis[a] && e.w.config.yaxis[a].logarithmic) {
                        var n, r = -Number.MAX_VALUE, o = Number.MIN_VALUE;
                        return s.seriesLog.forEach(function (t, e) {
                            t.forEach(function (t) {
                                i.config.yaxis[e] && i.config.yaxis[e].logarithmic && (r = Math.max(t, r), o = Math.min(t, o))
                            })
                        }), n = Math.pow(s.yRange[a], Math.abs(o - r) / s.yRange[a]), s.yLogRatio[a] = n / s.gridHeight, n
                    }
                }), s.yLogRatio
            }
        }], [{
            key: "checkComboSeries", value: function (t) {
                var e = !1, i = !1;
                return t.length && void 0 !== t[0].type && (e = !0, t.forEach(function (t) {
                    "bar" !== t.type && "column" !== t.type || (i = !0)
                })), {comboCharts: e, comboChartsHasBars: i}
            }
        }, {
            key: "extendArrayProps", value: function (t, e) {
                return e.yaxis && (e = t.extendYAxis(e)), e.annotations && (e.annotations.yaxis && (e = t.extendYAxisAnnotations(e)), e.annotations.xaxis && (e = t.extendXAxisAnnotations(e)), e.annotations.points && (e = t.extendPointAnnotations(e))), e
            }
        }]), t
    }(), w = function () {
        function i(t) {
            e(this, i), this.opts = t
        }

        return s(i, [{
            key: "init", value: function () {
                var e = this.opts, i = new x, s = new v(e);
                this.chartType = e.chart.type, "histogram" === this.chartType && (e.chart.type = "bar", e = d.extend({plotOptions: {bar: {columnWidth: "99.99%"}}}, e)), e.series = this.checkEmptySeries(e.series), e = this.extendYAxis(e), e = this.extendAnnotations(e);
                var a = i.init(), n = {};
                if (e && "object" === t(e)) {
                    var r = {};
                    switch (this.chartType) {
                        case"line":
                            r = s.line();
                            break;
                        case"area":
                            r = s.area();
                            break;
                        case"bar":
                            r = s.bar();
                            break;
                        case"candlestick":
                            r = s.candlestick();
                            break;
                        case"rangeBar":
                            r = s.rangeBar();
                            break;
                        case"histogram":
                            r = s.bar();
                            break;
                        case"bubble":
                            r = s.bubble();
                            break;
                        case"scatter":
                            r = s.scatter();
                            break;
                        case"heatmap":
                            r = s.heatmap();
                            break;
                        case"pie":
                            r = s.pie();
                            break;
                        case"donut":
                            r = s.donut();
                            break;
                        case"radar":
                            r = s.radar();
                            break;
                        case"radialBar":
                            r = s.radialBar();
                            break;
                        default:
                            r = s.line()
                    }
                    e.chart.brush && e.chart.brush.enabled && (r = s.brush(r)), e.chart.stacked && "100%" === e.chart.stackType && s.stacked100(), this.checkForDarkTheme(window.Apex), this.checkForDarkTheme(e), e.xaxis = e.xaxis || window.Apex.xaxis || {};
                    var o = y.checkComboSeries(e.series);
                    "line" !== e.chart.type && "area" !== e.chart.type && "scatter" !== e.chart.type || o.comboChartsHasBars || "datetime" === e.xaxis.type || "numeric" === e.xaxis.type || "between" === e.xaxis.tickPlacement || (e = v.convertCatToNumeric(e)), (e.chart.sparkline && e.chart.sparkline.enabled || window.Apex.chart && window.Apex.chart.sparkline && window.Apex.chart.sparkline.enabled) && (r = s.sparkline(r)), n = d.extend(a, r)
                }
                var l = d.extend(n, window.Apex);
                return a = d.extend(l, e), a = this.handleUserInputErrors(a)
            }
        }, {
            key: "extendYAxis", value: function (t) {
                var e = new x;
                return void 0 === t.yaxis && (t.yaxis = {}), t.yaxis.constructor !== Array && window.Apex.yaxis && window.Apex.yaxis.constructor !== Array && (t.yaxis = d.extend(t.yaxis, window.Apex.yaxis)), t.yaxis.constructor !== Array ? t.yaxis = [d.extend(e.yAxis, t.yaxis)] : t.yaxis = d.extendArray(t.yaxis, e.yAxis), t
            }
        }, {
            key: "extendAnnotations", value: function (t) {
                return void 0 === t.annotations && (t.annotations = {}, t.annotations.yaxis = [], t.annotations.xaxis = [], t.annotations.points = []), t = this.extendYAxisAnnotations(t), t = this.extendXAxisAnnotations(t), t = this.extendPointAnnotations(t)
            }
        }, {
            key: "extendYAxisAnnotations", value: function (t) {
                var e = new x;
                return t.annotations.yaxis = d.extendArray(void 0 !== t.annotations.yaxis ? t.annotations.yaxis : [], e.yAxisAnnotation), t
            }
        }, {
            key: "extendXAxisAnnotations", value: function (t) {
                var e = new x;
                return t.annotations.xaxis = d.extendArray(void 0 !== t.annotations.xaxis ? t.annotations.xaxis : [], e.xAxisAnnotation), t
            }
        }, {
            key: "extendPointAnnotations", value: function (t) {
                var e = new x;
                return t.annotations.points = d.extendArray(void 0 !== t.annotations.points ? t.annotations.points : [], e.pointAnnotation), t
            }
        }, {
            key: "checkForDarkTheme", value: function (t) {
                t.theme && "dark" === t.theme.mode && (t.tooltip || (t.tooltip = {}), "light" !== t.tooltip.theme && (t.tooltip.theme = "dark"), t.chart.foreColor || (t.chart.foreColor = "#f6f7f8"), t.theme.palette || (t.theme.palette = "palette4"))
            }
        }, {
            key: "checkEmptySeries", value: function (t) {
                return 0 === t.length ? [{data: []}] : t
            }
        }, {
            key: "handleUserInputErrors", value: function (t) {
                var e = t;
                if (e.tooltip.shared && e.tooltip.intersect) throw new Error("tooltip.shared cannot be enabled when tooltip.intersect is true. Turn off any other option by setting it to false.");
                if (e.chart.scroller && console.warn("Scroller has been deprecated since v2.0.0. Please remove the configuration for chart.scroller"), ("bar" === e.chart.type || "rangeBar" === e.chart.type) && e.plotOptions.bar.horizontal) {
                    if (e.yaxis.length > 1) throw new Error("Multiple Y Axis for bars are not supported. Switch to column chart by setting plotOptions.bar.horizontal=false");
                    e.yaxis[0].reversed && (e.yaxis[0].opposite = !0), e.xaxis.tooltip.enabled = !1, e.yaxis[0].tooltip.enabled = !1, e.chart.zoom.enabled = !1
                }
                return "bar" !== e.chart.type && "rangeBar" !== e.chart.type || e.tooltip.shared && ("barWidth" === e.xaxis.crosshairs.width && e.series.length > 1 && (console.warn('crosshairs.width = "barWidth" is only supported in single series, not in a multi-series barChart.'), e.xaxis.crosshairs.width = "tickWidth"), e.plotOptions.bar.horizontal && (e.states.hover.type = "none", e.tooltip.shared = !1), e.tooltip.followCursor || (console.warn("followCursor option in shared columns cannot be turned off. Please set %ctooltip.followCursor: true", "color: blue;"), e.tooltip.followCursor = !0)), "candlestick" === e.chart.type && e.yaxis[0].reversed && (console.warn("Reversed y-axis in candlestick chart is not supported."), e.yaxis[0].reversed = !1), e.chart.group && 0 === e.yaxis[0].labels.minWidth && console.warn("It looks like you have multiple charts in synchronization. You must provide yaxis.labels.minWidth which must be EQUAL for all grouped charts to prevent incorrect behaviour."), Array.isArray(e.stroke.width) && "line" !== e.chart.type && "area" !== e.chart.type && (console.warn("stroke.width option accepts array only for line and area charts. Reverted back to Number"), e.stroke.width = e.stroke.width[0]), e
            }
        }]), i
    }(), k = function () {
        function t() {
            e(this, t)
        }

        return s(t, [{
            key: "globalVars", value: function (t) {
                return {
                    chartID: null,
                    cuid: null,
                    events: {
                        beforeMount: [],
                        mounted: [],
                        updated: [],
                        clicked: [],
                        selection: [],
                        dataPointSelection: [],
                        zoomed: [],
                        scrolled: []
                    },
                    colors: [],
                    clientX: null,
                    clientY: null,
                    fill: {colors: []},
                    stroke: {colors: []},
                    dataLabels: {style: {colors: []}},
                    radarPolygons: {fill: {colors: []}},
                    markers: {colors: [], size: t.markers.size, largestSize: 0},
                    animationEnded: !1,
                    isTouchDevice: "ontouchstart" in window || navigator.msMaxTouchPoints,
                    isDirty: !1,
                    initialConfig: null,
                    lastXAxis: [],
                    lastYAxis: [],
                    series: [],
                    seriesRangeStart: [],
                    seriesRangeEnd: [],
                    seriesPercent: [],
                    seriesTotals: [],
                    stackedSeriesTotals: [],
                    seriesX: [],
                    seriesZ: [],
                    labels: [],
                    timelineLabels: [],
                    invertedTimelineLabels: [],
                    seriesNames: [],
                    noLabelsProvided: !1,
                    allSeriesCollapsed: !1,
                    collapsedSeries: [],
                    collapsedSeriesIndices: [],
                    ancillaryCollapsedSeries: [],
                    ancillaryCollapsedSeriesIndices: [],
                    risingSeries: [],
                    dataFormatXNumeric: !1,
                    selectedDataPoints: [],
                    ignoreYAxisIndexes: [],
                    padHorizontal: 0,
                    maxValsInArrayIndex: 0,
                    zoomEnabled: "zoom" === t.chart.toolbar.autoSelected && t.chart.toolbar.tools.zoom && t.chart.zoom.enabled,
                    panEnabled: "pan" === t.chart.toolbar.autoSelected && t.chart.toolbar.tools.pan,
                    selectionEnabled: "selection" === t.chart.toolbar.autoSelected && t.chart.toolbar.tools.selection,
                    yaxis: null,
                    minY: Number.MIN_VALUE,
                    maxY: -Number.MAX_VALUE,
                    minYArr: [],
                    maxYArr: [],
                    maxX: -Number.MAX_VALUE,
                    initialmaxX: -Number.MAX_VALUE,
                    minX: Number.MIN_VALUE,
                    initialminX: Number.MIN_VALUE,
                    minZ: Number.MIN_VALUE,
                    maxZ: -Number.MAX_VALUE,
                    minXDiff: Number.MAX_VALUE,
                    mousedown: !1,
                    lastClientPosition: {},
                    visibleXRange: void 0,
                    yRange: [],
                    zRange: 0,
                    xRange: 0,
                    yValueDecimal: 0,
                    total: 0,
                    SVGNS: "http://www.w3.org/2000/svg",
                    svgWidth: 0,
                    svgHeight: 0,
                    noData: !1,
                    locale: {},
                    dom: {},
                    memory: {methodsToExec: []},
                    shouldAnimate: !0,
                    skipLastTimelinelabel: !1,
                    delayedElements: [],
                    axisCharts: !0,
                    isXNumeric: !1,
                    isDataXYZ: !1,
                    resized: !1,
                    resizeTimer: null,
                    comboCharts: !1,
                    comboChartsHasBars: !1,
                    dataChanged: !1,
                    previousPaths: [],
                    seriesXvalues: [],
                    seriesYvalues: [],
                    seriesCandleO: [],
                    seriesCandleH: [],
                    seriesCandleL: [],
                    seriesCandleC: [],
                    allSeriesHasEqualX: !0,
                    dataPoints: 0,
                    pointsArray: [],
                    dataLabelsRects: [],
                    lastDrawnDataLabelsIndexes: [],
                    hasNullValues: !1,
                    easing: null,
                    zoomed: !1,
                    gridWidth: 0,
                    gridHeight: 0,
                    yAxisScale: [],
                    xAxisScale: null,
                    xAxisTicksPositions: [],
                    timescaleTicks: [],
                    rotateXLabels: !1,
                    defaultLabels: !1,
                    xLabelFormatter: void 0,
                    yLabelFormatters: [],
                    xaxisTooltipFormatter: void 0,
                    ttKeyFormatter: void 0,
                    ttVal: void 0,
                    ttZFormatter: void 0,
                    LINE_HEIGHT_RATIO: 1.618,
                    xAxisLabelsHeight: 0,
                    yAxisLabelsWidth: 0,
                    scaleX: 1,
                    scaleY: 1,
                    translateX: 0,
                    translateY: 0,
                    translateYAxisX: [],
                    yLabelsCoords: [],
                    yTitleCoords: [],
                    yAxisWidths: [],
                    translateXAxisY: 0,
                    translateXAxisX: 0,
                    tooltip: null,
                    tooltipOpts: null
                }
            }
        }, {
            key: "init", value: function (t) {
                var e = this.globalVars(t);
                return e.initialConfig = d.extend({}, t), e.initialSeries = JSON.parse(JSON.stringify(e.initialConfig.series)), e.lastXAxis = JSON.parse(JSON.stringify(e.initialConfig.xaxis)), e.lastYAxis = JSON.parse(JSON.stringify(e.initialConfig.yaxis)), e
            }
        }]), t
    }(), A = function () {
        function t(i) {
            e(this, t), this.opts = i
        }

        return s(t, [{
            key: "init", value: function () {
                var t = new w(this.opts).init();
                return {config: t, globals: (new k).init(t)}
            }
        }]), t
    }(), S = function () {
        function t(i) {
            e(this, t), this.ctx = i, this.w = i.w, this.opts = null, this.seriesIndex = 0
        }

        return s(t, [{
            key: "clippedImgArea", value: function (t) {
                var e = this.w, i = e.config, s = parseInt(e.globals.gridWidth), a = parseInt(e.globals.gridHeight),
                    n = s > a ? s : a, r = t.image, o = 0, l = 0;
                void 0 === t.width && void 0 === t.height ? void 0 !== i.fill.image.width && void 0 !== i.fill.image.height ? (o = i.fill.image.width + 1, l = i.fill.image.height) : (o = n + 1, l = n) : (o = t.width, l = t.height);
                var h = document.createElementNS(e.globals.SVGNS, "pattern");
                f.setAttrs(h, {
                    id: t.patternID,
                    patternUnits: t.patternUnits ? t.patternUnits : "userSpaceOnUse",
                    width: o + "px",
                    height: l + "px"
                });
                var c = document.createElementNS(e.globals.SVGNS, "image");
                h.appendChild(c), c.setAttributeNS("http://www.w3.org/1999/xlink", "href", r), f.setAttrs(c, {
                    x: 0,
                    y: 0,
                    preserveAspectRatio: "none",
                    width: o + "px",
                    height: l + "px"
                }), c.style.opacity = t.opacity, e.globals.dom.elDefs.node.appendChild(h)
            }
        }, {
            key: "getSeriesIndex", value: function (t) {
                var e = this.w;
                return "bar" === e.config.chart.type && e.config.plotOptions.bar.distributed || "heatmap" === e.config.chart.type ? this.seriesIndex = t.seriesNumber : this.seriesIndex = t.seriesNumber % e.globals.series.length, this.seriesIndex
            }
        }, {
            key: "fillPath", value: function (t) {
                var e = this.w;
                this.opts = t;
                var i, s, a, n = this.w.config;
                this.seriesIndex = this.getSeriesIndex(t);
                var r = this.getFillColors(), o = r[this.seriesIndex];
                "function" == typeof o && (o = o({seriesIndex: this.seriesIndex, value: t.value, w: e}));
                var l = this.getFillType(this.seriesIndex),
                    h = Array.isArray(n.fill.opacity) ? n.fill.opacity[this.seriesIndex] : n.fill.opacity, c = o;
                return t.color && (o = t.color), -1 === o.indexOf("rgb") ? c = d.hexToRgba(o, h) : o.indexOf("rgba") > -1 && (h = "0." + d.getOpacityFromRGBA(r[this.seriesIndex])), "pattern" === l && (s = this.handlePatternFill(s, o, h, c)), "gradient" === l && (a = this.handleGradientFill(a, o, h, this.seriesIndex)), n.fill.image.src.length > 0 && "image" === l ? t.seriesNumber < n.fill.image.src.length ? (this.clippedImgArea({
                    opacity: h,
                    image: n.fill.image.src[t.seriesNumber],
                    patternUnits: t.patternUnits,
                    patternID: "pattern".concat(e.globals.cuid).concat(t.seriesNumber + 1)
                }), i = "url(#pattern".concat(e.globals.cuid).concat(t.seriesNumber + 1, ")")) : i = c : i = "gradient" === l ? a : "pattern" === l ? s : c, t.solid && (i = c), i
            }
        }, {
            key: "getFillType", value: function (t) {
                var e = this.w;
                return Array.isArray(e.config.fill.type) ? e.config.fill.type[t] : e.config.fill.type
            }
        }, {
            key: "getFillColors", value: function () {
                var t = this.w, e = t.config, i = this.opts, s = [];
                return t.globals.comboCharts ? "line" === t.config.series[this.seriesIndex].type ? t.globals.stroke.colors instanceof Array ? s = t.globals.stroke.colors : s.push(t.globals.stroke.colors) : t.globals.fill.colors instanceof Array ? s = t.globals.fill.colors : s.push(t.globals.fill.colors) : "line" === e.chart.type ? t.globals.stroke.colors instanceof Array ? s = t.globals.stroke.colors : s.push(t.globals.stroke.colors) : t.globals.fill.colors instanceof Array ? s = t.globals.fill.colors : s.push(t.globals.fill.colors), void 0 !== i.fillColors && (s = [], i.fillColors instanceof Array ? s = i.fillColors.slice() : s.push(i.fillColors)), s
            }
        }, {
            key: "handlePatternFill", value: function (t, e, i, s) {
                var a = this.w.config, n = this.opts, r = new f(this.ctx),
                    o = void 0 === a.fill.pattern.strokeWidth ? Array.isArray(a.stroke.width) ? a.stroke.width[this.seriesIndex] : a.stroke.width : Array.isArray(a.fill.pattern.strokeWidth) ? a.fill.pattern.strokeWidth[this.seriesIndex] : a.fill.pattern.strokeWidth,
                    l = e;
                a.fill.pattern.style instanceof Array ? t = void 0 !== a.fill.pattern.style[n.seriesNumber] ? r.drawPattern(a.fill.pattern.style[n.seriesNumber], a.fill.pattern.width, a.fill.pattern.height, l, o, i) : s : t = r.drawPattern(a.fill.pattern.style, a.fill.pattern.width, a.fill.pattern.height, l, o, i);
                return t
            }
        }, {
            key: "handleGradientFill", value: function (t, e, i, s) {
                var a, n, r = this.w.config, o = this.opts, l = new f(this.ctx), h = new d, c = r.fill.gradient.type,
                    u = void 0 === r.fill.gradient.opacityFrom ? i : Array.isArray(r.fill.gradient.opacityFrom) ? r.fill.gradient.opacityFrom[s] : r.fill.gradient.opacityFrom,
                    g = void 0 === r.fill.gradient.opacityTo ? i : Array.isArray(r.fill.gradient.opacityTo) ? r.fill.gradient.opacityTo[s] : r.fill.gradient.opacityTo;
                if (a = e, n = void 0 === r.fill.gradient.gradientToColors || 0 === r.fill.gradient.gradientToColors.length ? "dark" === r.fill.gradient.shade ? h.shadeColor(-1 * parseFloat(r.fill.gradient.shadeIntensity), e) : h.shadeColor(parseFloat(r.fill.gradient.shadeIntensity), e) : r.fill.gradient.gradientToColors[o.seriesNumber], r.fill.gradient.inverseColors) {
                    var p = a;
                    a = n, n = p
                }
                return l.drawGradient(c, a, n, u, g, o.size, r.fill.gradient.stops, r.fill.gradient.colorStops, s)
            }
        }]), t
    }(), C = function () {
        function t(i, s) {
            e(this, t), this.ctx = i, this.w = i.w
        }

        return s(t, [{
            key: "setGlobalMarkerSize", value: function () {
                var t = this.w;
                if (t.globals.markers.size = Array.isArray(t.config.markers.size) ? t.config.markers.size : [t.config.markers.size], t.globals.markers.size.length > 0) {
                    if (t.globals.markers.size.length < t.globals.series.length + 1) for (var e = 0; e <= t.globals.series.length; e++) void 0 === t.globals.markers.size[e] && t.globals.markers.size.push(t.globals.markers.size[0])
                } else t.globals.markers.size = t.config.series.map(function (e) {
                    return t.config.markers.size
                })
            }
        }, {
            key: "plotChartMarkers", value: function (t, e, i) {
                var s, a = this, n = this.w, r = e, o = t, l = null, h = new f(this.ctx);
                if (n.globals.markers.size[e] > 0 && (l = h.group({class: "apexcharts-series-markers"})).attr("clip-path", "url(#gridRectMarkerMask".concat(n.globals.cuid, ")")), o.x instanceof Array) for (var c = function (t) {
                    var c = i;
                    1 === i && 0 === t && (c = 0), 1 === i && 1 === t && (c = 1);
                    var g = "apexcharts-marker";
                    if ("line" !== n.config.chart.type && "area" !== n.config.chart.type || n.globals.comboCharts || n.config.tooltip.intersect || (g += " no-pointer-events"), Array.isArray(n.config.markers.size) ? n.globals.markers.size[e] > 0 : n.config.markers.size > 0) {
                        d.isNumber(o.y[t]) ? g += " w".concat((Math.random() + 1).toString(36).substring(4)) : g = "apexcharts-nullpoint";
                        var f = a.getMarkerConfig(g, e);
                        n.config.markers.discrete.map(function (t) {
                            t.seriesIndex === e && t.dataPointIndex === c && (f.pointStrokeColor = t.strokeColor, f.pointFillColor = t.fillColor, f.pSize = t.size)
                        }), n.config.series[r].data[i] && (n.config.series[r].data[i].fillColor && (f.pointFillColor = n.config.series[r].data[i].fillColor), n.config.series[r].data[i].strokeColor && (f.pointStrokeColor = n.config.series[r].data[i].strokeColor)), (s = h.drawMarker(o.x[t], o.y[t], f)).attr("rel", c), s.attr("j", c), s.attr("index", e), s.node.setAttribute("default-marker-size", f.pSize), new u(a.ctx).setSelectionFilter(s, e, c), a.addEvents(s), l && l.add(s)
                    } else void 0 === n.globals.pointsArray[e] && (n.globals.pointsArray[e] = []), n.globals.pointsArray[e].push([o.x[t], o.y[t]])
                }, g = 0; g < o.x.length; g++) c(g);
                return l
            }
        }, {
            key: "getMarkerConfig", value: function (t, e) {
                var i = this.w, s = this.getMarkerStyle(e);
                return {
                    pSize: i.globals.markers.size[e],
                    pRadius: i.config.markers.radius,
                    pWidth: i.config.markers.strokeWidth,
                    pointStrokeColor: s.pointStrokeColor,
                    pointFillColor: s.pointFillColor,
                    shape: i.config.markers.shape instanceof Array ? i.config.markers.shape[e] : i.config.markers.shape,
                    class: t,
                    pointStrokeOpacity: i.config.markers.strokeOpacity,
                    pointFillOpacity: i.config.markers.fillOpacity,
                    seriesIndex: e
                }
            }
        }, {
            key: "addEvents", value: function (t) {
                var e = new f(this.ctx);
                t.node.addEventListener("mouseenter", e.pathMouseEnter.bind(this.ctx, t)), t.node.addEventListener("mouseleave", e.pathMouseLeave.bind(this.ctx, t)), t.node.addEventListener("mousedown", e.pathMouseDown.bind(this.ctx, t)), t.node.addEventListener("touchstart", e.pathMouseDown.bind(this.ctx, t), {passive: !0})
            }
        }, {
            key: "getMarkerStyle", value: function (t) {
                var e = this.w, i = e.globals.markers.colors,
                    s = e.config.markers.strokeColor || e.config.markers.strokeColors;
                return {pointStrokeColor: s instanceof Array ? s[t] : s, pointFillColor: i instanceof Array ? i[t] : i}
            }
        }]), t
    }(), L = function () {
        function t(i) {
            e(this, t), this.ctx = i, this.w = i.w, this.initialAnim = this.w.config.chart.animations.enabled, this.dynamicAnim = this.initialAnim && this.w.config.chart.animations.dynamicAnimation.enabled, this.radiusSizes = []
        }

        return s(t, [{
            key: "draw", value: function (t, e, i) {
                var s = this.w, a = new f(this.ctx), n = i.realIndex, r = i.pointsPos, o = i.zRatio, l = i.elParent,
                    h = a.group({class: "apexcharts-series-markers apexcharts-series-".concat(s.config.chart.type)});
                if (h.attr("clip-path", "url(#gridRectMarkerMask".concat(s.globals.cuid, ")")), r.x instanceof Array) for (var c = 0; c < r.x.length; c++) {
                    var d = e + 1, u = !0;
                    0 === e && 0 === c && (d = 0), 0 === e && 1 === c && (d = 1);
                    var g = 0, p = s.globals.markers.size[n];
                    o !== 1 / 0 && (p = s.globals.seriesZ[n][d] / o, void 0 === this.radiusSizes[n] && this.radiusSizes.push([]), this.radiusSizes[n].push(p)), s.config.chart.animations.enabled || (g = p);
                    var x = r.x[c], b = r.y[c];
                    if (g = g || 0, (0 === x && 0 === b || null === b || void 0 === s.globals.series[n][d]) && (u = !1), u) {
                        var m = this.drawPoint(x, b, g, p, n, d, e);
                        h.add(m)
                    }
                    l.add(h)
                }
            }
        }, {
            key: "drawPoint", value: function (t, e, i, s, a, n, r) {
                var o = this.w, l = a, h = new g(this.ctx), c = new u(this.ctx), d = new S(this.ctx),
                    p = new C(this.ctx), x = new f(this.ctx), b = p.getMarkerConfig("apexcharts-marker", l),
                    m = d.fillPath({seriesNumber: a, patternUnits: "objectBoundingBox", value: o.globals.series[a][r]}),
                    v = x.drawCircle(i);
                if (o.config.series[l].data[n] && o.config.series[l].data[n].fillColor && (m = o.config.series[l].data[n].fillColor), v.attr({
                    cx: t,
                    cy: e,
                    fill: m,
                    stroke: b.pointStrokeColor,
                    strokeWidth: b.pWidth
                }), o.config.chart.dropShadow.enabled) {
                    var y = o.config.chart.dropShadow;
                    c.dropShadow(v, y, a)
                }
                if (this.initialAnim && !o.globals.dataChanged) {
                    var w = 1;
                    o.globals.resized || (w = o.config.chart.animations.speed), h.animateCircleRadius(v, 0, s, w, o.globals.easing)
                }
                if (o.globals.dataChanged) if (this.dynamicAnim) {
                    var k, A, L, z, P = o.config.chart.animations.dynamicAnimation.speed;
                    null != (z = o.globals.previousPaths[a] && o.globals.previousPaths[a][r]) && (k = z.x, A = z.y, L = void 0 !== z.r ? z.r : s);
                    for (var M = 0; M < o.globals.collapsedSeries.length; M++) o.globals.collapsedSeries[M].index === a && (P = 1, s = 0);
                    0 === t && 0 === e && (s = 0), h.animateCircle(v, {cx: k, cy: A, r: L}, {
                        cx: t,
                        cy: e,
                        r: s
                    }, P, o.globals.easing)
                } else v.attr({r: s});
                return v.attr({
                    rel: n,
                    j: n,
                    index: a,
                    "default-marker-size": s
                }), c.setSelectionFilter(v, a, n), p.addEvents(v), v.node.classList.add("apexcharts-marker"), v
            }
        }, {
            key: "centerTextInBubble", value: function (t) {
                var e = this.w;
                return {y: t += parseInt(e.config.dataLabels.style.fontSize) / 4}
            }
        }]), t
    }(), z = function () {
        function t(i) {
            e(this, t), this.ctx = i, this.w = i.w
        }

        return s(t, [{
            key: "dataLabelsCorrection", value: function (t, e, i, s, a, n, r) {
                var o = this.w, l = !1, h = new f(this.ctx).getTextRects(i, r), c = h.width, d = h.height;
                void 0 === o.globals.dataLabelsRects[s] && (o.globals.dataLabelsRects[s] = []), o.globals.dataLabelsRects[s].push({
                    x: t,
                    y: e,
                    width: c,
                    height: d
                });
                var u = o.globals.dataLabelsRects[s].length - 2,
                    g = void 0 !== o.globals.lastDrawnDataLabelsIndexes[s] ? o.globals.lastDrawnDataLabelsIndexes[s][o.globals.lastDrawnDataLabelsIndexes[s].length - 1] : 0;
                if (void 0 !== o.globals.dataLabelsRects[s][u]) {
                    var p = o.globals.dataLabelsRects[s][g];
                    (t > p.x + p.width + 2 || e > p.y + p.height + 2 || t + c < p.x) && (l = !0)
                }
                return (0 === a || n) && (l = !0), {x: t, y: e, drawnextLabel: l}
            }
        }, {
            key: "drawDataLabel", value: function (t, e, i) {
                var s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : "top", a = this.w,
                    n = new f(this.ctx), r = a.config.dataLabels, o = 0, l = 0, h = i, c = null;
                if (!r.enabled || t.x instanceof Array != !0) return c;
                (c = n.group({class: "apexcharts-data-labels"})).attr("clip-path", "url(#gridRectMarkerMask".concat(a.globals.cuid, ")"));
                for (var d = 0; d < t.x.length; d++) if (o = t.x[d] + r.offsetX, l = t.y[d] + r.offsetY - a.globals.markers.size[e] - 5, "bottom" === s && (l = l + 2 * a.globals.markers.size[e] + 1.4 * parseInt(r.style.fontSize)), !isNaN(o)) {
                    1 === i && 0 === d && (h = 0), 1 === i && 1 === d && (h = 1);
                    var u = a.globals.series[e][h], g = "";
                    if ("bubble" === a.config.chart.type) g = a.globals.seriesZ[e][h], l = t.y[d] + a.config.dataLabels.offsetY, l = new L(this.ctx).centerTextInBubble(l, e, h).y; else null != u && (g = a.config.dataLabels.formatter(u, {
                        ctx: this.ctx,
                        seriesIndex: e,
                        dataPointIndex: h,
                        w: a
                    }));
                    this.plotDataLabelsText({
                        x: o,
                        y: l,
                        text: g,
                        i: e,
                        j: h,
                        parent: c,
                        offsetCorrection: !0,
                        dataLabelsConfig: a.config.dataLabels
                    })
                }
                return c
            }
        }, {
            key: "plotDataLabelsText", value: function (t) {
                var e = this.w, i = new f(this.ctx), s = t.x, a = t.y, n = t.i, r = t.j, o = t.text, l = t.textAnchor,
                    h = t.parent, c = t.dataLabelsConfig, d = t.alwaysDrawDataLabel, g = t.offsetCorrection;
                if (!(Array.isArray(e.config.dataLabels.enabledOnSeries) && e.config.dataLabels.enabledOnSeries.indexOf(n) > -1)) {
                    var p = {x: s, y: a, drawnextLabel: !0};
                    if (g && (p = this.dataLabelsCorrection(s, a, o, n, r, d, parseInt(c.style.fontSize))), e.globals.zoomed || (s = p.x, a = p.y), p.drawnextLabel) {
                        var x = i.drawText({
                            width: 100,
                            height: parseInt(c.style.fontSize),
                            x: s,
                            y: a,
                            foreColor: e.globals.dataLabels.style.colors[n],
                            textAnchor: l || c.textAnchor,
                            text: o,
                            fontSize: c.style.fontSize,
                            fontFamily: c.style.fontFamily
                        });
                        if (x.attr({class: "apexcharts-datalabel", cx: s, cy: a}), c.dropShadow.enabled) {
                            var b = c.dropShadow;
                            new u(this.ctx).dropShadow(x, b)
                        }
                        h.add(x), void 0 === e.globals.lastDrawnDataLabelsIndexes[n] && (e.globals.lastDrawnDataLabelsIndexes[n] = []), e.globals.lastDrawnDataLabelsIndexes[n].push(r)
                    }
                }
            }
        }]), t
    }(), P = function () {
        function t(i, s) {
            e(this, t), this.ctx = i, this.w = i.w;
            var a = this.w;
            this.barOptions = a.config.plotOptions.bar, this.isHorizontal = this.barOptions.horizontal, this.strokeWidth = a.config.stroke.width, this.isNullValue = !1, this.xyRatios = s, null !== this.xyRatios && (this.xRatio = s.xRatio, this.yRatio = s.yRatio, this.invertedXRatio = s.invertedXRatio, this.invertedYRatio = s.invertedYRatio, this.baseLineY = s.baseLineY, this.baseLineInvertedY = s.baseLineInvertedY), this.yaxisIndex = 0, this.seriesLen = 0
        }

        return s(t, [{
            key: "draw", value: function (t, e) {
                var i = this.w, s = new f(this.ctx), a = new y(this.ctx, i);
                t = a.getLogSeries(t), this.series = t, this.yRatio = a.getLogYRatios(this.yRatio), this.initVariables(t);
                var n = s.group({class: "apexcharts-bar-series apexcharts-plot-series"});
                i.config.dataLabels.enabled && this.totalItems > i.config.plotOptions.bar.dataLabels.maxItems && console.warn("WARNING: DataLabels are enabled but there are too many to display. This may cause performance issue when rendering.");
                for (var r = 0, o = 0; r < t.length; r++, o++) {
                    var l, h, c, u, g = void 0, p = void 0, x = void 0, b = void 0, m = [], v = [],
                        w = i.globals.comboCharts ? e[r] : r, k = s.group({
                            class: "apexcharts-series",
                            rel: r + 1,
                            seriesName: d.escapeString(i.globals.seriesNames[w]),
                            "data:realIndex": w
                        });
                    this.ctx.series.addCollapsedClassToSeries(k, w), t[r].length > 0 && (this.visibleI = this.visibleI + 1);
                    var A = 0, S = 0, C = 0;
                    this.yRatio.length > 1 && (this.yaxisIndex = w), this.isReversed = i.config.yaxis[this.yaxisIndex] && i.config.yaxis[this.yaxisIndex].reversed;
                    var L = this.initialPositions();
                    b = L.y, S = L.barHeight, h = L.yDivision, u = L.zeroW, x = L.x, C = L.barWidth, l = L.xDivision, c = L.zeroH, this.horizontal || v.push(x + C / 2);
                    for (var z = s.group({class: "apexcharts-datalabels"}), P = 0, M = i.globals.dataPoints; P < i.globals.dataPoints; P++, M--) {
                        void 0 === this.series[r][P] || null === t[r][P] ? this.isNullValue = !0 : this.isNullValue = !1, i.config.stroke.show && (A = this.isNullValue ? 0 : Array.isArray(this.strokeWidth) ? this.strokeWidth[w] : this.strokeWidth);
                        var E = null;
                        this.isHorizontal ? (E = this.drawBarPaths({
                            indexes: {i: r, j: P, realIndex: w, bc: o},
                            barHeight: S,
                            strokeWidth: A,
                            pathTo: g,
                            pathFrom: p,
                            zeroW: u,
                            x: x,
                            y: b,
                            yDivision: h,
                            elSeries: k
                        }), C = this.series[r][P] / this.invertedYRatio) : (E = this.drawColumnPaths({
                            indexes: {
                                i: r,
                                j: P,
                                realIndex: w,
                                bc: o
                            },
                            x: x,
                            y: b,
                            xDivision: l,
                            pathTo: g,
                            pathFrom: p,
                            barWidth: C,
                            zeroH: c,
                            strokeWidth: A,
                            elSeries: k
                        }), S = this.series[r][P] / this.yRatio[this.yaxisIndex]), g = E.pathTo, p = E.pathFrom, b = E.y, x = E.x, P > 0 && v.push(x + C / 2), m.push(b);
                        var T = this.getPathFillColor(t, r, P, w);
                        k = this.renderSeries({
                            realIndex: w,
                            pathFill: T,
                            j: P,
                            i: r,
                            pathFrom: p,
                            pathTo: g,
                            strokeWidth: A,
                            elSeries: k,
                            x: x,
                            y: b,
                            series: t,
                            barHeight: S,
                            barWidth: C,
                            elDataLabelsWrap: z,
                            visibleSeries: this.visibleI,
                            type: "bar"
                        })
                    }
                    i.globals.seriesXvalues[w] = v, i.globals.seriesYvalues[w] = m, n.add(k)
                }
                return n
            }
        }, {
            key: "getPathFillColor", value: function (t, e, i, s) {
                var a = this.w, n = new S(this.ctx), r = null, o = this.barOptions.distributed ? i : e;
                this.barOptions.colors.ranges.length > 0 && this.barOptions.colors.ranges.map(function (s) {
                    t[e][i] >= s.from && t[e][i] <= s.to && (r = s.color)
                });
                return a.config.series[e].data[i] && a.config.series[e].data[i].fillColor && (r = a.config.series[e].data[i].fillColor), n.fillPath({
                    seriesNumber: this.barOptions.distributed ? o : s,
                    color: r,
                    value: t[e][i]
                })
            }
        }, {
            key: "renderSeries", value: function (t) {
                var e = t.realIndex, i = t.pathFill, s = t.lineFill, a = t.j, n = t.i, r = t.pathFrom, o = t.pathTo,
                    l = t.strokeWidth, h = t.elSeries, c = t.x, d = t.y, g = t.series, p = t.barHeight, x = t.barWidth,
                    b = t.elDataLabelsWrap, m = t.visibleSeries, v = t.type, y = this.w, w = new f(this.ctx);
                s || (s = this.barOptions.distributed ? y.globals.stroke.colors[a] : y.globals.stroke.colors[e]), y.config.series[n].data[a] && y.config.series[n].data[a].strokeColor && (s = y.config.series[n].data[a].strokeColor), this.isNullValue && (i = "none");
                var k = a / y.config.chart.animations.animateGradually.delay * (y.config.chart.animations.speed / y.globals.dataPoints) / 2.4,
                    A = w.renderPaths({
                        i: n,
                        j: a,
                        realIndex: e,
                        pathFrom: r,
                        pathTo: o,
                        stroke: s,
                        strokeWidth: l,
                        strokeLineCap: y.config.stroke.lineCap,
                        fill: i,
                        animationDelay: k,
                        initialSpeed: y.config.chart.animations.speed,
                        dataChangeSpeed: y.config.chart.animations.dynamicAnimation.speed,
                        className: "apexcharts-".concat(v, "-area"),
                        id: "apexcharts-".concat(v, "-area")
                    });
                A.attr("clip-path", "url(#gridRectMask".concat(y.globals.cuid, ")")), new u(this.ctx).setSelectionFilter(A, e, a), h.add(A);
                var S = this.calculateDataLabelsPos({
                    x: c,
                    y: d,
                    i: n,
                    j: a,
                    series: g,
                    realIndex: e,
                    barHeight: p,
                    barWidth: x,
                    renderedPath: A,
                    visibleSeries: m
                });
                return null !== S && b.add(S), h.add(b), h
            }
        }, {
            key: "initVariables", value: function (t) {
                var e = this.w;
                this.series = t, this.totalItems = 0, this.seriesLen = 0, this.visibleI = -1, this.visibleItems = 1;
                for (var i = 0; i < t.length; i++) if (t[i].length > 0 && (this.seriesLen = this.seriesLen + 1, this.totalItems += t[i].length), e.globals.isXNumeric) for (var s = 0; s < t[i].length; s++) e.globals.seriesX[i][s] > e.globals.minX && e.globals.seriesX[i][s] < e.globals.maxX && this.visibleItems++; else this.visibleItems = e.globals.dataPoints;
                0 === this.seriesLen && (this.seriesLen = 1)
            }
        }, {
            key: "initialPositions", value: function () {
                var t, e, i, s, a, n, r, o, l = this.w;
                return this.isHorizontal ? (a = (i = l.globals.gridHeight / l.globals.dataPoints) / this.seriesLen, l.globals.isXNumeric && (a = (i = l.globals.gridHeight / this.totalItems) / this.seriesLen), a = a * parseInt(this.barOptions.barHeight) / 100, o = this.baseLineInvertedY + l.globals.padHorizontal + (this.isReversed ? l.globals.gridWidth : 0) - (this.isReversed ? 2 * this.baseLineInvertedY : 0), e = (i - a * this.seriesLen) / 2) : (n = (s = l.globals.gridWidth / this.visibleItems) / this.seriesLen * parseInt(this.barOptions.columnWidth) / 100, l.globals.isXNumeric && (n = (s = l.globals.minXDiff / this.xRatio) / this.seriesLen * parseInt(this.barOptions.columnWidth) / 100), r = l.globals.gridHeight - this.baseLineY[this.yaxisIndex] - (this.isReversed ? l.globals.gridHeight : 0) + (this.isReversed ? 2 * this.baseLineY[this.yaxisIndex] : 0), t = l.globals.padHorizontal + (s - n * this.seriesLen) / 2), {
                    x: t,
                    y: e,
                    yDivision: i,
                    xDivision: s,
                    barHeight: a,
                    barWidth: n,
                    zeroH: r,
                    zeroW: o
                }
            }
        }, {
            key: "drawBarPaths", value: function (t) {
                var e = t.indexes, i = t.barHeight, s = t.strokeWidth, a = t.pathTo, n = t.pathFrom, r = t.zeroW,
                    o = t.x, l = t.y, h = t.yDivision, c = t.elSeries, d = this.w, u = new f(this.ctx), g = e.i,
                    p = e.j, x = e.realIndex, b = e.bc;
                d.globals.isXNumeric && (l = (d.globals.seriesX[g][p] - d.globals.minX) / this.invertedXRatio - i);
                var m = l + i * this.visibleI;
                a = u.move(r, m), n = u.move(r, m), d.globals.previousPaths.length > 0 && (n = this.getPathFrom(x, p));
                var v = {
                    barHeight: i,
                    strokeWidth: s,
                    barYPosition: m,
                    x: o = void 0 === this.series[g][p] || null === this.series[g][p] ? r : r + this.series[g][p] / this.invertedYRatio - 2 * (this.isReversed ? this.series[g][p] / this.invertedYRatio : 0),
                    zeroW: r
                }, y = this.barEndingShape(d, v, this.series, g, p);
                if (a = a + u.line(y.newX, m) + y.path + u.line(r, m + i - s) + u.line(r, m), n = n + u.line(r, m) + y.ending_p_from + u.line(r, m + i - s) + u.line(r, m + i - s) + u.line(r, m), d.globals.isXNumeric || (l += h), this.barOptions.colors.backgroundBarColors.length > 0 && 0 === g) {
                    b >= this.barOptions.colors.backgroundBarColors.length && (b = 0);
                    var w = this.barOptions.colors.backgroundBarColors[b],
                        k = u.drawRect(0, m - i * this.visibleI, d.globals.gridWidth, i * this.seriesLen, 0, w, this.barOptions.colors.backgroundBarOpacity);
                    c.add(k), k.node.classList.add("apexcharts-backgroundBar")
                }
                return {pathTo: a, pathFrom: n, x: o, y: l, barYPosition: m}
            }
        }, {
            key: "drawColumnPaths", value: function (t) {
                var e = t.indexes, i = t.x, s = t.y, a = t.xDivision, n = t.pathTo, r = t.pathFrom, o = t.barWidth,
                    l = t.zeroH, h = t.strokeWidth, c = t.elSeries, d = this.w, u = new f(this.ctx), g = e.i, p = e.j,
                    x = e.realIndex, b = e.bc;
                d.globals.isXNumeric && (i = (d.globals.seriesX[g][p] - d.globals.minX) / this.xRatio - o / 2);
                var m = i + o * this.visibleI;
                n = u.move(m, l), r = u.move(m, l), d.globals.previousPaths.length > 0 && (r = this.getPathFrom(x, p));
                var v = {
                    barWidth: o,
                    strokeWidth: h,
                    barXPosition: m,
                    y: s = void 0 === this.series[g][p] || null === this.series[g][p] ? l : l - this.series[g][p] / this.yRatio[this.yaxisIndex] + 2 * (this.isReversed ? this.series[g][p] / this.yRatio[this.yaxisIndex] : 0),
                    zeroH: l
                }, y = this.barEndingShape(d, v, this.series, g, p);
                if (n = n + u.line(m, y.newY) + y.path + u.line(m + o - h, l) + u.line(m - h / 2, l), r = r + u.line(m, l) + y.ending_p_from + u.line(m + o - h, l) + u.line(m + o - h, l) + u.line(m - h / 2, l), d.globals.isXNumeric || (i += a), this.barOptions.colors.backgroundBarColors.length > 0 && 0 === g) {
                    b >= this.barOptions.colors.backgroundBarColors.length && (b = 0);
                    var w = this.barOptions.colors.backgroundBarColors[b],
                        k = u.drawRect(m - o * this.visibleI, 0, o * this.seriesLen, d.globals.gridHeight, 0, w, this.barOptions.colors.backgroundBarOpacity);
                    c.add(k), k.node.classList.add("apexcharts-backgroundBar")
                }
                return {pathTo: n, pathFrom: r, x: i, y: s, barXPosition: m}
            }
        }, {
            key: "getPathFrom", value: function (t, e) {
                for (var i, s = this.w, a = 0; a < s.globals.previousPaths.length; a++) {
                    var n = s.globals.previousPaths[a];
                    n.paths.length > 0 && parseInt(n.realIndex) === parseInt(t) && void 0 !== s.globals.previousPaths[a].paths[e] && (i = s.globals.previousPaths[a].paths[e].d)
                }
                return i
            }
        }, {
            key: "calculateDataLabelsPos", value: function (t) {
                var e = t.x, i = t.y, s = t.i, a = t.j, n = t.realIndex, r = t.series, o = t.barHeight, l = t.barWidth,
                    h = t.visibleSeries, c = t.renderedPath, d = this.w, u = new f(this.ctx),
                    g = Array.isArray(this.strokeWidth) ? this.strokeWidth[n] : this.strokeWidth,
                    p = e + parseFloat(l * h), x = i + parseFloat(o * h);
                d.globals.isXNumeric && !d.globals.isBarHorizontal && (p = e + parseFloat(l * (h + 1)) - g, x = i + parseFloat(o * (h + 1)) - g);
                var b = e, m = i, v = {}, y = d.config.dataLabels, w = this.barOptions.dataLabels, k = y.offsetX,
                    A = y.offsetY, S = {width: 0, height: 0};
                return d.config.dataLabels.enabled && (S = u.getTextRects(d.globals.yLabelFormatters[0](d.globals.maxY), parseInt(y.style.fontSize))), v = this.isHorizontal ? this.calculateBarsDataLabelsPosition({
                    x: e,
                    y: i,
                    i: s,
                    j: a,
                    renderedPath: c,
                    bcy: x,
                    barHeight: o,
                    barWidth: l,
                    textRects: S,
                    strokeWidth: g,
                    dataLabelsX: b,
                    dataLabelsY: m,
                    barDataLabelsConfig: w,
                    offX: k,
                    offY: A
                }) : this.calculateColumnsDataLabelsPosition({
                    x: e,
                    y: i,
                    i: s,
                    j: a,
                    renderedPath: c,
                    realIndex: n,
                    bcx: p,
                    bcy: x,
                    barHeight: o,
                    barWidth: l,
                    textRects: S,
                    strokeWidth: g,
                    dataLabelsY: m,
                    barDataLabelsConfig: w,
                    offX: k,
                    offY: A
                }), c.attr({
                    cy: v.bcy,
                    cx: v.bcx,
                    j: a,
                    val: r[s][a],
                    barHeight: o,
                    barWidth: l
                }), this.drawCalculatedDataLabels({
                    x: v.dataLabelsX,
                    y: v.dataLabelsY,
                    val: r[s][a],
                    i: n,
                    j: a,
                    barWidth: l,
                    barHeight: o,
                    textRects: S,
                    dataLabelsConfig: y
                })
            }
        }, {
            key: "calculateColumnsDataLabelsPosition", value: function (t) {
                var e, i = this.w, s = t.i, a = t.j, n = t.y, r = t.bcx, o = t.barWidth, l = t.barHeight,
                    h = t.textRects, c = t.dataLabelsY, d = t.barDataLabelsConfig, u = t.strokeWidth, g = t.offX,
                    f = t.offY, p = i.globals.gridWidth / i.globals.dataPoints;
                r -= u / 2, e = i.globals.isXNumeric ? r - o / 2 + g : r - p + o / 2 + g;
                var x = this.series[s][a] <= 0;
                switch (this.isReversed && (n -= l), d.position) {
                    case"center":
                        c = x ? n + l / 2 + h.height / 2 + f : n + l / 2 + h.height / 2 - f;
                        break;
                    case"bottom":
                        c = x ? n + l + h.height + u + f : n + l - h.height / 2 + u - f;
                        break;
                    case"top":
                        c = x ? n - h.height / 2 - f : n + h.height + f
                }
                return i.config.chart.stacked || (c < 0 ? c = 0 + u : c + h.height / 3 > i.globals.gridHeight && (c = i.globals.gridHeight - u)), {
                    bcx: r,
                    bcy: n,
                    dataLabelsX: e,
                    dataLabelsY: c
                }
            }
        }, {
            key: "calculateBarsDataLabelsPosition", value: function (t) {
                var e = this.w, i = t.x, s = t.i, a = t.j, n = t.bcy, r = t.barHeight, o = t.barWidth, l = t.textRects,
                    h = t.dataLabelsX, c = t.strokeWidth, d = t.barDataLabelsConfig, u = t.offX, g = t.offY,
                    f = n - e.globals.gridHeight / e.globals.dataPoints + r / 2 + l.height / 2 + g - 3,
                    p = this.series[s][a] <= 0;
                switch (this.isReversed && (i += o), d.position) {
                    case"center":
                        h = p ? i - o / 2 - u : i - o / 2 + u;
                        break;
                    case"bottom":
                        h = p ? i - o - c - Math.round(l.width / 2) - u : i - o + c + Math.round(l.width / 2) + u;
                        break;
                    case"top":
                        h = p ? i - c + Math.round(l.width / 2) - u : i - c - Math.round(l.width / 2) + u
                }
                return e.config.chart.stacked || (h < 0 ? h = h + l.width + c : h + l.width / 2 > e.globals.gridWidth && (h = e.globals.gridWidth - l.width - c)), {
                    bcx: i,
                    bcy: n,
                    dataLabelsX: h,
                    dataLabelsY: f
                }
            }
        }, {
            key: "drawCalculatedDataLabels", value: function (t) {
                var e = t.x, i = t.y, s = t.val, a = t.i, n = t.j, r = t.textRects, o = t.barHeight, l = t.barWidth,
                    h = t.dataLabelsConfig, c = this.w, d = new z(this.ctx), u = new f(this.ctx), g = h.formatter,
                    p = null, x = c.globals.collapsedSeriesIndices.indexOf(a) > -1;
                if (h.enabled && !x) {
                    p = u.group({class: "apexcharts-data-labels"});
                    var b = "";
                    null != s && (b = g(s, {
                        seriesIndex: a,
                        dataPointIndex: n,
                        w: c
                    })), 0 === s && c.config.chart.stacked && (b = ""), c.config.chart.stacked && this.barOptions.dataLabels.hideOverflowingLabels && (this.isHorizontal ? (l = this.series[a][n] / this.yRatio[this.yaxisIndex], r.width / 1.6 > l && (b = "")) : (o = this.series[a][n] / this.yRatio[this.yaxisIndex], r.height / 1.6 > o && (b = ""))), d.plotDataLabelsText({
                        x: e,
                        y: i,
                        text: b,
                        i: a,
                        j: n,
                        parent: p,
                        dataLabelsConfig: h,
                        alwaysDrawDataLabel: !0,
                        offsetCorrection: !0
                    })
                }
                return p
            }
        }, {
            key: "barEndingShape", value: function (t, e, i, s, a) {
                var n = new f(this.ctx);
                if (this.isHorizontal) {
                    var r = null, o = e.x;
                    if (void 0 !== i[s][a] || null !== i[s][a]) {
                        var l = i[s][a] < 0, h = e.barHeight / 2 - e.strokeWidth;
                        switch (l && (h = -e.barHeight / 2 - e.strokeWidth), t.config.chart.stacked || "rounded" === this.barOptions.endingShape && (o = e.x - h / 2), this.barOptions.endingShape) {
                            case"flat":
                                r = n.line(o, e.barYPosition + e.barHeight - e.strokeWidth);
                                break;
                            case"rounded":
                                r = n.quadraticCurve(o + h, e.barYPosition + (e.barHeight - e.strokeWidth) / 2, o, e.barYPosition + e.barHeight - e.strokeWidth)
                        }
                    }
                    return {path: r, ending_p_from: "", newX: o}
                }
                var c = null, d = e.y;
                if (void 0 !== i[s][a] || null !== i[s][a]) {
                    var u = i[s][a] < 0, g = e.barWidth / 2 - e.strokeWidth;
                    switch (u && (g = -e.barWidth / 2 - e.strokeWidth), t.config.chart.stacked || "rounded" === this.barOptions.endingShape && (d += g / 2), this.barOptions.endingShape) {
                        case"flat":
                            c = n.line(e.barXPosition + e.barWidth - e.strokeWidth, d);
                            break;
                        case"rounded":
                            c = n.quadraticCurve(e.barXPosition + (e.barWidth - e.strokeWidth) / 2, d - g, e.barXPosition + e.barWidth - e.strokeWidth, d)
                    }
                }
                return {path: c, ending_p_from: "", newY: d}
            }
        }]), t
    }(), M = function (t) {
        function i() {
            return e(this, i), h(this, o(i).apply(this, arguments))
        }

        return r(i, P), s(i, [{
            key: "draw", value: function (t, e) {
                var i = this.w;
                this.graphics = new f(this.ctx), this.fill = new S(this.ctx), this.bar = new P(this.ctx, this.xyRatios);
                var s = new y(this.ctx, i);
                t = s.getLogSeries(t), this.yRatio = s.getLogYRatios(this.yRatio), this.initVariables(t), "100%" === i.config.chart.stackType && (t = i.globals.seriesPercent.slice()), this.series = t, this.totalItems = 0, this.prevY = [], this.prevX = [], this.prevYF = [], this.prevXF = [], this.prevYVal = [], this.prevXVal = [], this.xArrj = [], this.xArrjF = [], this.xArrjVal = [], this.yArrj = [], this.yArrjF = [], this.yArrjVal = [];
                for (var a = 0; a < t.length; a++) t[a].length > 0 && (this.totalItems += t[a].length);
                for (var n = this.graphics.group({class: "apexcharts-bar-series apexcharts-plot-series"}), r = 0, o = 0, l = 0, h = 0; l < t.length; l++, h++) {
                    var c = void 0, u = void 0, g = void 0, p = void 0, x = void 0, b = void 0, m = [], v = [],
                        w = i.globals.comboCharts ? e[l] : l;
                    this.yRatio.length > 1 && (this.yaxisIndex = w), this.isReversed = i.config.yaxis[this.yaxisIndex] && i.config.yaxis[this.yaxisIndex].reversed;
                    var k = this.graphics.group({
                            class: "apexcharts-series",
                            seriesName: d.escapeString(i.globals.seriesNames[w]),
                            rel: l + 1,
                            "data:realIndex": w
                        }), A = this.graphics.group({class: "apexcharts-datalabels"}), C = 0, L = 0, z = 0,
                        M = this.initialPositions(r, o, g, p, x, b);
                    o = M.y, L = M.barHeight, p = M.yDivision, b = M.zeroW, r = M.x, z = M.barWidth, g = M.xDivision, x = M.zeroH, this.yArrj = [], this.yArrjF = [], this.yArrjVal = [], this.xArrj = [], this.xArrjF = [], this.xArrjVal = [];
                    for (var E = 0; E < i.globals.dataPoints; E++) {
                        i.config.stroke.show && (C = this.isNullValue ? 0 : Array.isArray(this.strokeWidth) ? this.strokeWidth[w] : this.strokeWidth);
                        var T = null;
                        this.isHorizontal ? (T = this.drawBarPaths({
                            indexes: {i: l, j: E, realIndex: w, bc: h},
                            barHeight: L,
                            strokeWidth: C,
                            pathTo: c,
                            pathFrom: u,
                            zeroW: b,
                            x: r,
                            y: o,
                            yDivision: p,
                            elSeries: k
                        }), z = this.series[l][E] / this.invertedYRatio) : (T = this.drawColumnPaths({
                            indexes: {
                                i: l,
                                j: E,
                                realIndex: w,
                                bc: h
                            },
                            x: r,
                            y: o,
                            xDivision: g,
                            pathTo: c,
                            pathFrom: u,
                            barWidth: z,
                            zeroH: x,
                            strokeWidth: C,
                            elSeries: k
                        }), L = this.series[l][E] / this.yRatio[this.yaxisIndex]), c = T.pathTo, u = T.pathFrom, o = T.y, r = T.x, m.push(r), v.push(o);
                        var X = this.bar.getPathFillColor(t, l, E, w);
                        k = this.renderSeries({
                            realIndex: w,
                            pathFill: X,
                            j: E,
                            i: l,
                            pathFrom: u,
                            pathTo: c,
                            strokeWidth: C,
                            elSeries: k,
                            x: r,
                            y: o,
                            series: t,
                            barHeight: L,
                            barWidth: z,
                            elDataLabelsWrap: A,
                            type: "bar",
                            visibleSeries: 0
                        })
                    }
                    i.globals.seriesXvalues[w] = m, i.globals.seriesYvalues[w] = v, this.prevY.push(this.yArrj), this.prevYF.push(this.yArrjF), this.prevYVal.push(this.yArrjVal), this.prevX.push(this.xArrj), this.prevXF.push(this.xArrjF), this.prevXVal.push(this.xArrjVal), n.add(k)
                }
                return n
            }
        }, {
            key: "initialPositions", value: function (t, e, i, s, a, n) {
                var r, o, l = this.w;
                return this.isHorizontal ? (r = (r = s = l.globals.gridHeight / l.globals.dataPoints) * parseInt(l.config.plotOptions.bar.barHeight) / 100, n = this.baseLineInvertedY + l.globals.padHorizontal + (this.isReversed ? l.globals.gridWidth : 0) - (this.isReversed ? 2 * this.baseLineInvertedY : 0), e = (s - r) / 2) : (o = i = l.globals.gridWidth / l.globals.dataPoints, o = l.globals.isXNumeric ? (i = l.globals.minXDiff / this.xRatio) * parseInt(this.barOptions.columnWidth) / 100 : o * parseInt(l.config.plotOptions.bar.columnWidth) / 100, a = this.baseLineY[this.yaxisIndex] + (this.isReversed ? l.globals.gridHeight : 0) - (this.isReversed ? 2 * this.baseLineY[this.yaxisIndex] : 0), t = l.globals.padHorizontal + (i - o) / 2), {
                    x: t,
                    y: e,
                    yDivision: s,
                    xDivision: i,
                    barHeight: r,
                    barWidth: o,
                    zeroH: a,
                    zeroW: n
                }
            }
        }, {
            key: "drawBarPaths", value: function (t) {
                for (var e, i = t.indexes, s = t.barHeight, a = t.strokeWidth, n = t.pathTo, r = t.pathFrom, o = t.zeroW, l = t.x, h = t.y, c = t.yDivision, d = t.elSeries, u = this.w, g = h, f = i.i, p = i.j, x = i.realIndex, b = i.bc, m = 0, v = 0; v < this.prevXF.length; v++) m += this.prevXF[v][p];
                if (f > 0) {
                    var y = o;
                    this.prevXVal[f - 1][p] < 0 ? y = this.series[f][p] >= 0 ? this.prevX[f - 1][p] + m - 2 * (this.isReversed ? m : 0) : this.prevX[f - 1][p] : this.prevXVal[f - 1][p] >= 0 && (y = this.series[f][p] >= 0 ? this.prevX[f - 1][p] : this.prevX[f - 1][p] - m + 2 * (this.isReversed ? m : 0)), e = y
                } else e = o;
                l = null === this.series[f][p] ? e : e + this.series[f][p] / this.invertedYRatio - 2 * (this.isReversed ? this.series[f][p] / this.invertedYRatio : 0);
                var w = {barHeight: s, strokeWidth: a, invertedYRatio: this.invertedYRatio, barYPosition: g, x: l},
                    k = this.bar.barEndingShape(u, w, this.series, f, p);
                if (this.series.length > 1 && f !== this.endingShapeOnSeriesNumber && (k.path = this.graphics.line(k.newX, g + s - a)), this.xArrj.push(k.newX), this.xArrjF.push(Math.abs(e - k.newX)), this.xArrjVal.push(this.series[f][p]), n = this.graphics.move(e, g), r = this.graphics.move(e, g), u.globals.previousPaths.length > 0 && (r = this.bar.getPathFrom(x, p, !1)), n = n + this.graphics.line(k.newX, g) + k.path + this.graphics.line(e, g + s - a) + this.graphics.line(e, g), r = r + this.graphics.line(e, g) + this.graphics.line(e, g + s - a) + this.graphics.line(e, g + s - a) + this.graphics.line(e, g + s - a) + this.graphics.line(e, g), u.config.plotOptions.bar.colors.backgroundBarColors.length > 0 && 0 === f) {
                    b >= u.config.plotOptions.bar.colors.backgroundBarColors.length && (b = 0);
                    var A = u.config.plotOptions.bar.colors.backgroundBarColors[b],
                        S = this.graphics.drawRect(0, g, u.globals.gridWidth, s, 0, A, u.config.plotOptions.bar.colors.backgroundBarOpacity);
                    d.add(S), S.node.classList.add("apexcharts-backgroundBar")
                }
                return {pathTo: n, pathFrom: r, x: l, y: h += c}
            }
        }, {
            key: "drawColumnPaths", value: function (t) {
                var e = t.indexes, i = t.x, s = t.y, a = t.xDivision, n = t.pathTo, r = t.pathFrom, o = t.barWidth,
                    l = t.zeroH, h = t.strokeWidth, c = t.elSeries, d = this.w, u = e.i, g = e.j, f = e.realIndex,
                    p = e.bc;
                if (d.globals.isXNumeric) {
                    var x = d.globals.seriesX[u][g];
                    x || (x = 0), i = (x - d.globals.minX) / this.xRatio - o / 2
                }
                for (var b, m = i, v = 0, y = 0; y < this.prevYF.length; y++) v += this.prevYF[y][g];
                if (u > 0 && !d.globals.isXNumeric || u > 0 && d.globals.isXNumeric && d.globals.seriesX[u - 1][g] === d.globals.seriesX[u][g]) {
                    var w = this.prevY[u - 1][g];
                    b = this.prevYVal[u - 1][g] < 0 ? this.series[u][g] >= 0 ? w - v + 2 * (this.isReversed ? v : 0) : w : this.series[u][g] >= 0 ? w : w + v - 2 * (this.isReversed ? v : 0)
                } else b = d.globals.gridHeight - l;
                s = b - this.series[u][g] / this.yRatio[this.yaxisIndex] + 2 * (this.isReversed ? this.series[u][g] / this.yRatio[this.yaxisIndex] : 0);
                var k = {barWidth: o, strokeWidth: h, yRatio: this.yRatio[this.yaxisIndex], barXPosition: m, y: s},
                    A = this.bar.barEndingShape(d, k, this.series, u, g);
                if (this.yArrj.push(A.newY), this.yArrjF.push(Math.abs(b - A.newY)), this.yArrjVal.push(this.series[u][g]), n = this.graphics.move(m, b), r = this.graphics.move(m, b), d.globals.previousPaths.length > 0 && (r = this.bar.getPathFrom(f, g, !1)), n = n + this.graphics.line(m, A.newY) + A.path + this.graphics.line(m + o - h, b) + this.graphics.line(m - h / 2, b), r = r + this.graphics.line(m, b) + this.graphics.line(m + o - h, b) + this.graphics.line(m + o - h, b) + this.graphics.line(m + o - h, b) + this.graphics.line(m - h / 2, b), d.config.plotOptions.bar.colors.backgroundBarColors.length > 0 && 0 === u) {
                    p >= d.config.plotOptions.bar.colors.backgroundBarColors.length && (p = 0);
                    var S = d.config.plotOptions.bar.colors.backgroundBarColors[p],
                        C = this.graphics.drawRect(m, 0, o, d.globals.gridHeight, 0, S, d.config.plotOptions.bar.colors.backgroundBarOpacity);
                    c.add(C), C.node.classList.add("apexcharts-backgroundBar")
                }
                return i += a, {pathTo: n, pathFrom: r, x: d.globals.isXNumeric ? i - a : i, y: s}
            }
        }, {
            key: "checkZeroSeries", value: function (t) {
                for (var e = t.series, i = this.w, s = 0; s < e.length; s++) {
                    for (var a = 0, n = 0; n < e[i.globals.maxValsInArrayIndex].length; n++) a += e[s][n];
                    0 === a && this.zeroSerieses.push(s)
                }
                for (var r = e.length - 1; r >= 0; r--) this.zeroSerieses.indexOf(r) > -1 && r === this.endingShapeOnSeriesNumber && (this.endingShapeOnSeriesNumber -= 1)
            }
        }]), i
    }(), E = function (t) {
        function i() {
            return e(this, i), h(this, o(i).apply(this, arguments))
        }

        return r(i, P), s(i, [{
            key: "draw", value: function (t, e) {
                var i = this.w, s = new f(this.ctx), a = new S(this.ctx);
                this.candlestickOptions = this.w.config.plotOptions.candlestick;
                var n = new y(this.ctx, i);
                t = n.getLogSeries(t), this.series = t, this.yRatio = n.getLogYRatios(this.yRatio), this.initVariables(t);
                for (var r = s.group({class: "apexcharts-candlestick-series apexcharts-plot-series"}), o = 0, l = 0; o < t.length; o++, l++) {
                    var h, c, u = void 0, g = void 0, p = void 0, x = void 0, b = [], m = [],
                        v = i.globals.comboCharts ? e[o] : o, w = s.group({
                            class: "apexcharts-series",
                            seriesName: d.escapeString(i.globals.seriesNames[v]),
                            rel: o + 1,
                            "data:realIndex": v
                        });
                    t[o].length > 0 && (this.visibleI = this.visibleI + 1);
                    var k, A, C = 0;
                    this.yRatio.length > 1 && (this.yaxisIndex = v);
                    var L = this.initialPositions();
                    x = L.y, k = L.barHeight, p = L.x, A = L.barWidth, h = L.xDivision, c = L.zeroH, m.push(p + A / 2);
                    for (var z = s.group({class: "apexcharts-datalabels"}), P = 0, M = i.globals.dataPoints; P < i.globals.dataPoints; P++, M--) {
                        void 0 === this.series[o][P] || null === t[o][P] ? this.isNullValue = !0 : this.isNullValue = !1, i.config.stroke.show && (C = this.isNullValue ? 0 : Array.isArray(this.strokeWidth) ? this.strokeWidth[v] : this.strokeWidth);
                        var E, T = this.drawCandleStickPaths({
                            indexes: {i: o, j: P, realIndex: v, bc: l},
                            x: p,
                            y: x,
                            xDivision: h,
                            pathTo: u,
                            pathFrom: g,
                            barWidth: A,
                            zeroH: c,
                            strokeWidth: C,
                            elSeries: w
                        });
                        u = T.pathTo, g = T.pathFrom, x = T.y, p = T.x, E = T.color, P > 0 && m.push(p + A / 2), b.push(x);
                        var X = a.fillPath({seriesNumber: v, color: E, value: t[o][P]}),
                            I = this.candlestickOptions.wick.useFillColor ? E : void 0;
                        w = this.renderSeries({
                            realIndex: v,
                            pathFill: X,
                            lineFill: I,
                            j: P,
                            i: o,
                            pathFrom: g,
                            pathTo: u,
                            strokeWidth: C,
                            elSeries: w,
                            x: p,
                            y: x,
                            series: t,
                            barHeight: k,
                            barWidth: A,
                            elDataLabelsWrap: z,
                            visibleSeries: this.visibleI,
                            type: "candlestick"
                        })
                    }
                    i.globals.seriesXvalues[v] = m, i.globals.seriesYvalues[v] = b, r.add(w)
                }
                return r
            }
        }, {
            key: "drawCandleStickPaths", value: function (t) {
                var e = t.indexes, i = t.x, s = (t.y, t.xDivision), a = t.pathTo, n = t.pathFrom, r = t.barWidth,
                    o = t.zeroH, l = t.strokeWidth, h = this.w, c = new f(this.ctx), d = e.i, u = e.j, g = !0,
                    p = h.config.plotOptions.candlestick.colors.upward,
                    x = h.config.plotOptions.candlestick.colors.downward, b = this.yRatio[this.yaxisIndex],
                    m = e.realIndex, v = this.getOHLCValue(m, u), y = o, w = o;
                v.o > v.c && (g = !1);
                var k = Math.min(v.o, v.c), A = Math.max(v.o, v.c);
                h.globals.isXNumeric && (i = (h.globals.seriesX[d][u] - h.globals.minX) / this.xRatio - r / 2);
                var S = i + r * this.visibleI;
                return void 0 === this.series[d][u] || null === this.series[d][u] ? k = o : (k = o - k / b, A = o - A / b, y = o - v.h / b, w = o - v.l / b), c.move(S, o), n = c.move(S, k), h.globals.previousPaths.length > 0 && (n = this.getPathFrom(m, u, !0)), a = c.move(S, A) + c.line(S + r / 2, A) + c.line(S + r / 2, y) + c.line(S + r / 2, A) + c.line(S + r, A) + c.line(S + r, k) + c.line(S + r / 2, k) + c.line(S + r / 2, w) + c.line(S + r / 2, k) + c.line(S, k) + c.line(S, A - l / 2), n += c.move(S, k), h.globals.isXNumeric || (i += s), {
                    pathTo: a,
                    pathFrom: n,
                    x: i,
                    y: A,
                    barXPosition: S,
                    color: g ? p : x
                }
            }
        }, {
            key: "getOHLCValue", value: function (t, e) {
                var i = this.w;
                return {
                    o: i.globals.seriesCandleO[t][e],
                    h: i.globals.seriesCandleH[t][e],
                    l: i.globals.seriesCandleL[t][e],
                    c: i.globals.seriesCandleC[t][e]
                }
            }
        }]), i
    }(), T = function () {
        function t(i) {
            e(this, t), this.ctx = i, this.w = i.w
        }

        return s(t, [{
            key: "drawXCrosshairs", value: function () {
                var t = this.w, e = new f(this.ctx), i = new u(this.ctx), s = t.config.xaxis.crosshairs.fill.gradient,
                    a = t.config.xaxis.crosshairs.dropShadow, n = t.config.xaxis.crosshairs.fill.type, r = s.colorFrom,
                    o = s.colorTo, l = s.opacityFrom, h = s.opacityTo, c = s.stops, g = a.enabled, p = a.left,
                    x = a.top, b = a.blur, m = a.color, v = a.opacity, y = t.config.xaxis.crosshairs.fill.color;
                if (t.config.xaxis.crosshairs.show) {
                    "gradient" === n && (y = e.drawGradient("vertical", r, o, l, h, null, c, null));
                    var w = e.drawRect();
                    1 === t.config.xaxis.crosshairs.width && (w = e.drawLine()), w.attr({
                        class: "apexcharts-xcrosshairs",
                        x: 0,
                        y: 0,
                        y2: t.globals.gridHeight,
                        width: d.isNumber(t.config.xaxis.crosshairs.width) ? t.config.xaxis.crosshairs.width : 0,
                        height: t.globals.gridHeight,
                        fill: y,
                        filter: "none",
                        "fill-opacity": t.config.xaxis.crosshairs.opacity,
                        stroke: t.config.xaxis.crosshairs.stroke.color,
                        "stroke-width": t.config.xaxis.crosshairs.stroke.width,
                        "stroke-dasharray": t.config.xaxis.crosshairs.stroke.dashArray
                    }), g && (w = i.dropShadow(w, {
                        left: p,
                        top: x,
                        blur: b,
                        color: m,
                        opacity: v
                    })), t.globals.dom.elGraphical.add(w)
                }
            }
        }, {
            key: "drawYCrosshairs", value: function () {
                var t = this.w, e = new f(this.ctx), i = t.config.yaxis[0].crosshairs;
                if (t.config.yaxis[0].crosshairs.show) {
                    var s = e.drawLine(0, 0, t.globals.gridWidth, 0, i.stroke.color, i.stroke.dashArray, i.stroke.width);
                    s.attr({class: "apexcharts-ycrosshairs"}), t.globals.dom.elGraphical.add(s)
                }
                var a = e.drawLine(0, 0, t.globals.gridWidth, 0, i.stroke.color, 0, 0);
                a.attr({class: "apexcharts-ycrosshairs-hidden"}), t.globals.dom.elGraphical.add(a)
            }
        }]), t
    }(), X = function () {
        function t(i, s) {
            e(this, t), this.ctx = i, this.w = i.w, this.xRatio = s.xRatio, this.yRatio = s.yRatio, this.negRange = !1, this.dynamicAnim = this.w.config.chart.animations.dynamicAnimation, this.rectRadius = this.w.config.plotOptions.heatmap.radius, this.strokeWidth = this.w.config.stroke.width
        }

        return s(t, [{
            key: "draw", value: function (t) {
                var e = this.w, i = new f(this.ctx), s = i.group({class: "apexcharts-heatmap"});
                s.attr("clip-path", "url(#gridRectMask".concat(e.globals.cuid, ")"));
                var a = e.globals.gridWidth / e.globals.dataPoints, n = e.globals.gridHeight / e.globals.series.length,
                    r = 0, o = !1;
                this.checkColorRange();
                var l = t.slice();
                e.config.yaxis[0].reversed && (o = !0, l.reverse());
                for (var h = o ? 0 : l.length - 1; o ? h < l.length : h >= 0; o ? h++ : h--) {
                    var c = i.group({
                        class: "apexcharts-series apexcharts-heatmap-series",
                        seriesName: d.escapeString(e.globals.seriesNames[h]),
                        rel: h + 1,
                        "data:realIndex": h
                    });
                    if (e.config.chart.dropShadow.enabled) {
                        var g = e.config.chart.dropShadow;
                        new u(this.ctx).dropShadow(c, g, h)
                    }
                    for (var p = 0, x = 0; x < l[h].length; x++) {
                        var b = 1, m = this.determineHeatColor(h, x);
                        if (e.globals.hasNegs || this.negRange) {
                            var v = e.config.plotOptions.heatmap.shadeIntensity;
                            b = e.config.plotOptions.heatmap.reverseNegativeShade ? m.percent < 0 ? m.percent / 100 * (1.25 * v) : (1 - m.percent / 100) * (1.25 * v) : m.percent < 0 ? 1 - (1 + m.percent / 100) * v : (1 - m.percent / 100) * v
                        } else b = 1 - m.percent / 100;
                        var y = m.color;
                        if (e.config.plotOptions.heatmap.enableShades) {
                            var w = new d;
                            y = d.hexToRgba(w.shadeColor(b, m.color), e.config.fill.opacity)
                        }
                        var k = this.rectRadius, A = i.drawRect(p, r, a, n, k);
                        if (A.attr({
                            cx: p,
                            cy: r
                        }), A.node.classList.add("apexcharts-heatmap-rect"), c.add(A), A.attr({
                            fill: y,
                            i: h,
                            index: h,
                            j: x,
                            val: l[h][x],
                            "stroke-width": this.strokeWidth,
                            stroke: e.globals.stroke.colors[0],
                            color: y
                        }), A.node.addEventListener("mouseenter", i.pathMouseEnter.bind(this, A)), A.node.addEventListener("mouseleave", i.pathMouseLeave.bind(this, A)), A.node.addEventListener("mousedown", i.pathMouseDown.bind(this, A)), e.config.chart.animations.enabled && !e.globals.dataChanged) {
                            var S = 1;
                            e.globals.resized || (S = e.config.chart.animations.speed), this.animateHeatMap(A, p, r, a, n, S)
                        }
                        if (e.globals.dataChanged) {
                            var C = 1;
                            if (this.dynamicAnim.enabled && e.globals.shouldAnimate) {
                                C = this.dynamicAnim.speed;
                                var L = e.globals.previousPaths[h] && e.globals.previousPaths[h][x] && e.globals.previousPaths[h][x].color;
                                L || (L = "rgba(255, 255, 255, 0)"), this.animateHeatColor(A, d.isColorHex(L) ? L : d.rgb2hex(L), d.isColorHex(y) ? y : d.rgb2hex(y), C)
                            }
                        }
                        var z = this.calculateHeatmapDataLabels({
                            x: p,
                            y: r,
                            i: h,
                            j: x,
                            series: l,
                            rectHeight: n,
                            rectWidth: a
                        });
                        null !== z && c.add(z), p += a
                    }
                    r += n, s.add(c)
                }
                var P = e.globals.yAxisScale[0].result.slice();
                e.config.yaxis[0].reversed ? P.unshift("") : P.push(""), e.globals.yAxisScale[0].result = P;
                var M = e.globals.gridHeight / e.globals.series.length;
                return e.config.yaxis[0].labels.offsetY = -M / 2, s
            }
        }, {
            key: "checkColorRange", value: function () {
                var t = this, e = this.w.config.plotOptions.heatmap;
                e.colorScale.ranges.length > 0 && e.colorScale.ranges.map(function (e, i) {
                    e.from < 0 && (t.negRange = !0)
                })
            }
        }, {
            key: "determineHeatColor", value: function (t, e) {
                var i = this.w, s = i.globals.series[t][e], a = i.config.plotOptions.heatmap,
                    n = a.colorScale.inverse ? e : t, r = i.globals.colors[n],
                    o = Math.min.apply(Math, c(i.globals.series[t])), l = Math.max.apply(Math, c(i.globals.series[t]));
                a.distributed || (o = i.globals.minY, l = i.globals.maxY), void 0 !== a.colorScale.min && (o = a.colorScale.min < i.globals.minY ? a.colorScale.min : i.globals.minY, l = a.colorScale.max > i.globals.maxY ? a.colorScale.max : i.globals.maxY);
                var h = Math.abs(l) + Math.abs(o), d = 100 * s / (0 === h ? h - 1e-6 : h);
                a.colorScale.ranges.length > 0 && a.colorScale.ranges.map(function (t, e) {
                    if (s >= t.from && s <= t.to) {
                        r = t.color, o = t.from, l = t.to;
                        var i = Math.abs(l) + Math.abs(o);
                        d = 100 * s / (0 === i ? i - 1e-6 : i)
                    }
                });
                return {color: r, percent: d}
            }
        }, {
            key: "calculateHeatmapDataLabels", value: function (t) {
                var e = t.x, i = t.y, s = t.i, a = t.j, n = (t.series, t.rectHeight), r = t.rectWidth, o = this.w,
                    l = o.config.dataLabels, h = new f(this.ctx), c = new z(this.ctx), d = l.formatter, u = null;
                if (l.enabled) {
                    u = h.group({class: "apexcharts-data-labels"});
                    var g = l.offsetX, p = l.offsetY, x = e + r / 2 + g,
                        b = i + n / 2 + parseInt(l.style.fontSize) / 3 + p,
                        m = d(o.globals.series[s][a], {seriesIndex: s, dataPointIndex: a, w: o});
                    c.plotDataLabelsText({x: x, y: b, text: m, i: s, j: a, parent: u, dataLabelsConfig: l})
                }
                return u
            }
        }, {
            key: "animateHeatMap", value: function (t, e, i, s, a, n) {
                var r = this;
                new g(this.ctx).animateRect(t, {x: e + s / 2, y: i + a / 2, width: 0, height: 0}, {
                    x: e,
                    y: i,
                    width: s,
                    height: a
                }, n, function () {
                    r.w.globals.animationEnded = !0
                })
            }
        }, {
            key: "animateHeatColor", value: function (t, e, i, s) {
                t.attr({fill: e}).animate(s).attr({fill: i})
            }
        }]), t
    }(), I = function () {
        function t(i) {
            e(this, t), this.ctx = i, this.w = i.w, this.chartType = this.w.config.chart.type, this.initialAnim = this.w.config.chart.animations.enabled, this.dynamicAnim = this.initialAnim && this.w.config.chart.animations.dynamicAnimation.enabled, this.animBeginArr = [0], this.animDur = 0, this.donutDataLabels = this.w.config.plotOptions.pie.donut.labels;
            var s = this.w;
            this.lineColorArr = void 0 !== s.globals.stroke.colors ? s.globals.stroke.colors : s.globals.colors, this.defaultSize = s.globals.svgHeight < s.globals.svgWidth ? s.globals.svgHeight - 35 : s.globals.gridWidth, this.centerY = this.defaultSize / 2, this.centerX = s.globals.gridWidth / 2, this.fullAngle = 360, this.size = 0, this.donutSize = 0, this.sliceLabels = [], this.prevSectorAngleArr = []
        }

        return s(t, [{
            key: "draw", value: function (t) {
                for (var e = this.w, i = new f(this.ctx), s = i.group({class: "apexcharts-pie"}), a = 0, n = 0; n < t.length; n++) a += d.negToZero(t[n]);
                var r = [], o = i.group();
                0 === a && (a = 1e-5);
                for (var l = 0; l < t.length; l++) {
                    var h = this.fullAngle * d.negToZero(t[l]) / a;
                    r.push(h)
                }
                if (e.globals.dataChanged) {
                    for (var c, u = 0, g = 0; g < e.globals.previousPaths.length; g++) u += d.negToZero(e.globals.previousPaths[g]);
                    for (var p = 0; p < e.globals.previousPaths.length; p++) c = this.fullAngle * d.negToZero(e.globals.previousPaths[p]) / u, this.prevSectorAngleArr.push(c)
                }
                this.size = this.defaultSize / 2.05 - e.config.stroke.width - e.config.chart.dropShadow.blur, void 0 !== e.config.plotOptions.pie.size && (this.size = e.config.plotOptions.pie.size), this.donutSize = this.size * parseInt(e.config.plotOptions.pie.donut.size) / 100;
                var x = e.config.plotOptions.pie.customScale, b = e.globals.gridWidth / 2, m = e.globals.gridHeight / 2,
                    v = b - e.globals.gridWidth / 2 * x, y = m - e.globals.gridHeight / 2 * x;
                if (this.donutDataLabels.show) {
                    var w = this.renderInnerDataLabels(this.donutDataLabels, {
                        hollowSize: this.donutSize,
                        centerX: this.centerX,
                        centerY: this.centerY,
                        opacity: this.donutDataLabels.show,
                        translateX: v,
                        translateY: y
                    });
                    s.add(w)
                }
                if ("donut" === e.config.chart.type) {
                    var k = i.drawCircle(this.donutSize);
                    k.attr({
                        cx: this.centerX,
                        cy: this.centerY,
                        fill: e.config.plotOptions.pie.donut.background
                    }), o.add(k)
                }
                var A = this.drawArcs(r, t);
                return this.sliceLabels.forEach(function (t) {
                    A.add(t)
                }), o.attr({transform: "translate(".concat(v, ", ").concat(y - 5, ") scale(").concat(x, ")")}), s.attr({
                    "data:innerTranslateX": v,
                    "data:innerTranslateY": y - 25
                }), o.add(A), s.add(o), s
            }
        }, {
            key: "drawArcs", value: function (t, e) {
                var i = this.w, s = new u(this.ctx), a = new f(this.ctx), n = new S(this.ctx), r = a.group(), o = 0,
                    l = 0, h = 0, c = 0;
                this.strokeWidth = i.config.stroke.show ? i.config.stroke.width : 0;
                for (var g = 0; g < t.length; g++) {
                    var p = a.group({
                        class: "apexcharts-series apexcharts-pie-series",
                        seriesName: d.escapeString(i.globals.seriesNames[g]),
                        id: "apexcharts-series-" + g,
                        rel: g + 1
                    });
                    r.add(p), l = c, h = (o = h) + t[g], c = l + this.prevSectorAngleArr[g];
                    var x = h - o, b = n.fillPath({seriesNumber: g, size: this.size, value: e[g]}),
                        m = this.getChangedPath(l, c), v = a.drawPath({
                            d: m,
                            stroke: this.lineColorArr instanceof Array ? this.lineColorArr[g] : this.lineColorArr,
                            strokeWidth: this.strokeWidth,
                            fill: b,
                            fillOpacity: i.config.fill.opacity,
                            classes: "apexcharts-pie-area"
                        });
                    if (v.attr({
                        id: "apexcharts-".concat(i.config.chart.type, "-slice-").concat(g),
                        index: 0,
                        j: g
                    }), i.config.chart.dropShadow.enabled) {
                        var y = i.config.chart.dropShadow;
                        s.dropShadow(v, y, g)
                    }
                    this.addListeners(v, this.donutDataLabels), f.setAttrs(v.node, {
                        "data:angle": x,
                        "data:startAngle": o,
                        "data:strokeWidth": this.strokeWidth,
                        "data:value": e[g]
                    });
                    var w = {x: 0, y: 0};
                    "pie" === i.config.chart.type ? w = d.polarToCartesian(this.centerX, this.centerY, this.size / 1.25 + i.config.plotOptions.pie.dataLabels.offset, o + (h - o) / 2) : "donut" === i.config.chart.type && (w = d.polarToCartesian(this.centerX, this.centerY, (this.size + this.donutSize) / 2 + i.config.plotOptions.pie.dataLabels.offset, o + (h - o) / 2)), p.add(v);
                    var k = 0;
                    if (!this.initialAnim || i.globals.resized || i.globals.dataChanged ? this.animBeginArr.push(0) : (k = (h - o) / this.fullAngle * i.config.chart.animations.speed, this.animDur = k + this.animDur, this.animBeginArr.push(this.animDur)), this.dynamicAnim && i.globals.dataChanged ? this.animatePaths(v, {
                        endAngle: h,
                        startAngle: o,
                        prevStartAngle: l,
                        prevEndAngle: c,
                        animateStartingPos: !0,
                        i: g,
                        animBeginArr: this.animBeginArr,
                        dur: i.config.chart.animations.dynamicAnimation.speed
                    }) : this.animatePaths(v, {
                        endAngle: h,
                        startAngle: o,
                        i: g,
                        totalItems: t.length - 1,
                        animBeginArr: this.animBeginArr,
                        dur: k
                    }), i.config.plotOptions.pie.expandOnClick && v.click(this.pieClicked.bind(this, g)), i.config.dataLabels.enabled) {
                        var A = w.x, C = w.y, L = 100 * (h - o) / 360 + "%";
                        if (0 !== x && i.config.plotOptions.pie.dataLabels.minAngleToShowLabel < t[g]) {
                            var z = i.config.dataLabels.formatter;
                            void 0 !== z && (L = z(i.globals.seriesPercent[g][0], {seriesIndex: g, w: i}));
                            var P = i.globals.dataLabels.style.colors[g], M = a.drawText({
                                x: A,
                                y: C,
                                text: L,
                                textAnchor: "middle",
                                fontSize: i.config.dataLabels.style.fontSize,
                                fontFamily: i.config.dataLabels.style.fontFamily,
                                foreColor: P
                            });
                            if (i.config.dataLabels.dropShadow.enabled) {
                                var E = i.config.dataLabels.dropShadow;
                                new u(this.ctx).dropShadow(M, E)
                            }
                            M.node.classList.add("apexcharts-pie-label"), i.config.chart.animations.animate && !1 === i.globals.resized && (M.node.classList.add("apexcharts-pie-label-delay"), M.node.style.animationDelay = i.config.chart.animations.speed / 940 + "s"), this.sliceLabels.push(M)
                        }
                    }
                }
                return r
            }
        }, {
            key: "addListeners", value: function (t, e) {
                var i = new f(this.ctx);
                t.node.addEventListener("mouseenter", i.pathMouseEnter.bind(this, t)), t.node.addEventListener("mouseenter", this.printDataLabelsInner.bind(this, t.node, e)), t.node.addEventListener("mouseleave", i.pathMouseLeave.bind(this, t)), t.node.addEventListener("mouseleave", this.revertDataLabelsInner.bind(this, t.node, e)), t.node.addEventListener("mousedown", i.pathMouseDown.bind(this, t)), t.node.addEventListener("mousedown", this.printDataLabelsInner.bind(this, t.node, e))
            }
        }, {
            key: "animatePaths", value: function (t, e) {
                var i = this.w, s = e.endAngle - e.startAngle, a = s, n = e.startAngle, r = e.startAngle;
                void 0 !== e.prevStartAngle && void 0 !== e.prevEndAngle && (n = e.prevEndAngle, a = e.prevEndAngle - e.prevStartAngle), e.i === i.config.series.length - 1 && (s + r > this.fullAngle ? e.endAngle = e.endAngle - (s + r) : s + r < this.fullAngle && (e.endAngle = e.endAngle + (this.fullAngle - (s + r)))), s === this.fullAngle && (s = this.fullAngle - .01), this.animateArc(t, n, r, s, a, e)
            }
        }, {
            key: "animateArc", value: function (t, e, i, s, a, n) {
                var r, o = this, l = this.w, h = o.size;
                h || (h = n.size), (isNaN(e) || isNaN(a)) && (e = i, a = s, n.dur = 0);
                var c = s, d = i, u = e - i;
                l.globals.dataChanged && n.shouldSetPrevPaths && (r = o.getPiePath({
                    me: o,
                    startAngle: d,
                    angle: a,
                    size: h
                }), t.attr({d: r})), 0 !== n.dur ? t.animate(n.dur, l.globals.easing, n.animBeginArr[n.i]).afterAll(function () {
                    "pie" !== l.config.chart.type && "donut" !== l.config.chart.type || this.animate(300).attr({"stroke-width": l.config.stroke.width}), l.globals.animationEnded = !0
                }).during(function (l) {
                    c = u + (s - u) * l, n.animateStartingPos && (c = a + (s - a) * l, d = e - a + (i - (e - a)) * l), r = o.getPiePath({
                        me: o,
                        startAngle: d,
                        angle: c,
                        size: h
                    }), t.node.setAttribute("data:pathOrig", r), t.attr({d: r})
                }) : (r = o.getPiePath({
                    me: o,
                    startAngle: d,
                    angle: s,
                    size: h
                }), n.isTrack || (l.globals.animationEnded = !0), t.node.setAttribute("data:pathOrig", r), t.attr({d: r}))
            }
        }, {
            key: "pieClicked", value: function (t) {
                var e, i = this.w, s = this.size + 4,
                    a = i.globals.dom.Paper.select("#apexcharts-".concat(i.config.chart.type.toLowerCase(), "-slice-").concat(t)).members[0],
                    n = a.attr("d");
                if ("true" !== a.attr("data:pieClicked")) {
                    var r = i.globals.dom.baseEl.querySelectorAll(".apexcharts-pie-area");
                    Array.prototype.forEach.call(r, function (t) {
                        t.setAttribute("data:pieClicked", "false");
                        var e = t.getAttribute("data:pathOrig");
                        t.setAttribute("d", e)
                    }), a.attr("data:pieClicked", "true");
                    var o = parseInt(a.attr("data:startAngle")), l = parseInt(a.attr("data:angle"));
                    e = this.getPiePath({
                        me: this,
                        startAngle: o,
                        angle: l,
                        size: s
                    }), 360 !== l && a.plot(e).animate(1).plot(n).animate(100).plot(e)
                } else {
                    a.attr({"data:pieClicked": "false"}), this.revertDataLabelsInner(a.node, this.donutDataLabels);
                    var h = a.attr("data:pathOrig");
                    a.attr({d: h})
                }
            }
        }, {
            key: "getChangedPath", value: function (t, e) {
                var i = "";
                return this.dynamicAnim && this.w.globals.dataChanged && (i = this.getPiePath({
                    me: this,
                    startAngle: t,
                    angle: e - t,
                    size: this.size
                })), i
            }
        }, {
            key: "getPiePath", value: function (t) {
                var e = t.me, i = t.startAngle, s = t.angle, a = t.size, n = this.w, r = i,
                    o = Math.PI * (r - 90) / 180, l = s + i;
                Math.ceil(l) >= 360 && (l = 359.99);
                var h = Math.PI * (l - 90) / 180, c = e.centerX + a * Math.cos(o), u = e.centerY + a * Math.sin(o),
                    g = e.centerX + a * Math.cos(h), f = e.centerY + a * Math.sin(h),
                    p = d.polarToCartesian(e.centerX, e.centerY, e.donutSize, l),
                    x = d.polarToCartesian(e.centerX, e.centerY, e.donutSize, r), b = s > 180 ? 1 : 0;
                return "donut" === n.config.chart.type ? ["M", c, u, "A", a, a, 0, b, 1, g, f, "L", p.x, p.y, "A", e.donutSize, e.donutSize, 0, b, 0, x.x, x.y, "L", c, u, "z"].join(" ") : "pie" === n.config.chart.type ? ["M", c, u, "A", a, a, 0, b, 1, g, f, "L", e.centerX, e.centerY, "L", c, u].join(" ") : ["M", c, u, "A", a, a, 0, b, 1, g, f].join(" ")
            }
        }, {
            key: "renderInnerDataLabels", value: function (t, e) {
                var i = this.w, s = new f(this.ctx), a = s.group({
                    class: "apexcharts-datalabels-group",
                    transform: "translate(".concat(e.translateX ? e.translateX : 0, ", ").concat(e.translateY ? e.translateY : 0, ")")
                }), n = t.total.show;
                a.node.style.opacity = e.opacity;
                var r, o, l = e.centerX, h = e.centerY;
                r = void 0 === t.name.color ? i.globals.colors[0] : t.name.color, o = void 0 === t.value.color ? i.config.chart.foreColor : t.value.color;
                var c = t.value.formatter, d = "", u = "";
                if (n ? (r = t.total.color, u = t.total.label, d = t.total.formatter(i)) : 1 === i.globals.series.length && (d = c(i.globals.series[0], i), u = i.globals.seriesNames[0]), t.name.show) {
                    var g = s.drawText({
                        x: l,
                        y: h + parseInt(t.name.offsetY),
                        text: u,
                        textAnchor: "middle",
                        foreColor: r,
                        fontSize: t.name.fontSize,
                        fontFamily: t.name.fontFamily
                    });
                    g.node.classList.add("apexcharts-datalabel-label"), a.add(g)
                }
                if (t.value.show) {
                    var p = t.name.show ? parseInt(t.value.offsetY) + 16 : t.value.offsetY, x = s.drawText({
                        x: l,
                        y: h + p,
                        text: d,
                        textAnchor: "middle",
                        foreColor: o,
                        fontSize: t.value.fontSize,
                        fontFamily: t.value.fontFamily
                    });
                    x.node.classList.add("apexcharts-datalabel-value"), a.add(x)
                }
                return a
            }
        }, {
            key: "printInnerLabels", value: function (t, e, i, s) {
                var a, n = this.w;
                s ? a = void 0 === t.name.color ? n.globals.colors[parseInt(s.parentNode.getAttribute("rel")) - 1] : t.name.color : n.globals.series.length > 1 && t.total.show && (a = t.total.color);
                var r = n.globals.dom.baseEl.querySelector(".apexcharts-datalabel-label"),
                    o = n.globals.dom.baseEl.querySelector(".apexcharts-datalabel-value");
                i = (0, t.value.formatter)(i, n), s || "function" != typeof t.total.formatter || (i = t.total.formatter(n)), null !== r && (r.textContent = e), null !== o && (o.textContent = i), null !== r && (r.style.fill = a)
            }
        }, {
            key: "printDataLabelsInner", value: function (t, e) {
                var i = this.w, s = t.getAttribute("data:value"),
                    a = i.globals.seriesNames[parseInt(t.parentNode.getAttribute("rel")) - 1];
                i.globals.series.length > 1 && this.printInnerLabels(e, a, s, t);
                var n = i.globals.dom.baseEl.querySelector(".apexcharts-datalabels-group");
                null !== n && (n.style.opacity = 1)
            }
        }, {
            key: "revertDataLabelsInner", value: function (e, i, s) {
                var a = this, n = this.w, r = n.globals.dom.baseEl.querySelector(".apexcharts-datalabels-group");
                if (i.total.show && n.globals.series.length > 1) {
                    new t(this.ctx).printInnerLabels(i, i.total.label, i.total.formatter(n))
                } else {
                    var o = document.querySelectorAll(".apexcharts-pie-area"), l = !1;
                    if (o.forEach(function (t) {
                        "true" === t.getAttribute("data:pieClicked") && (l = !0, a.printDataLabelsInner(t, i))
                    }), !l) if (n.globals.selectedDataPoints.length && n.globals.series.length > 1) if (n.globals.selectedDataPoints[0].length > 0) {
                        var h = n.globals.selectedDataPoints[0],
                            c = n.globals.dom.baseEl.querySelector("#apexcharts-".concat(n.config.chart.type.toLowerCase(), "-slice-").concat(h));
                        this.printDataLabelsInner(c, i)
                    } else r && n.globals.selectedDataPoints.length && 0 === n.globals.selectedDataPoints[0].length && (r.style.opacity = 0); else r && n.globals.series.length > 1 && (r.style.opacity = 0)
                }
            }
        }]), t
    }(), Y = function () {
        function t(i) {
            e(this, t), this.ctx = i, this.w = i.w, this.chartType = this.w.config.chart.type, this.initialAnim = this.w.config.chart.animations.enabled, this.dynamicAnim = this.initialAnim && this.w.config.chart.animations.dynamicAnimation.enabled, this.animDur = 0;
            var s = this.w;
            this.graphics = new f(this.ctx), this.lineColorArr = void 0 !== s.globals.stroke.colors ? s.globals.stroke.colors : s.globals.colors, this.defaultSize = s.globals.svgHeight < s.globals.svgWidth ? s.globals.svgHeight - 35 : s.globals.gridWidth, this.maxValue = this.w.globals.maxY, this.polygons = s.config.plotOptions.radar.polygons, this.maxLabelWidth = 20;
            var a = s.globals.labels.slice().sort(function (t, e) {
                return e.length - t.length
            })[0], n = this.graphics.getTextRects(a, s.config.dataLabels.style.fontSize);
            this.size = this.defaultSize / 2.1 - s.config.stroke.width - s.config.chart.dropShadow.blur - n.width / 1.75, void 0 !== s.config.plotOptions.radar.size && (this.size = s.config.plotOptions.radar.size), this.dataRadiusOfPercent = [], this.dataRadius = [], this.angleArr = [], this.yaxisLabelsTextsPos = []
        }

        return s(t, [{
            key: "draw", value: function (t) {
                var e = this, i = this.w, s = new S(this.ctx), a = [];
                this.dataPointsLen = t[i.globals.maxValsInArrayIndex].length, this.disAngle = 2 * Math.PI / this.dataPointsLen;
                var r = i.globals.gridWidth / 2, o = i.globals.gridHeight / 2, l = this.graphics.group({
                    class: "apexcharts-radar-series",
                    "data:innerTranslateX": r,
                    "data:innerTranslateY": o - 25,
                    transform: "translate(".concat(r || 0, ", ").concat(o || 0, ")")
                }), h = [], c = null;
                if (this.yaxisLabels = this.graphics.group({class: "apexcharts-yaxis"}), t.forEach(function (t, r) {
                    var o = e.graphics.group().attr({
                        class: "apexcharts-series",
                        seriesName: d.escapeString(i.globals.seriesNames[r]),
                        rel: r + 1,
                        "data:realIndex": r
                    });
                    e.dataRadiusOfPercent[r] = [], e.dataRadius[r] = [], e.angleArr[r] = [], t.forEach(function (t, i) {
                        e.dataRadiusOfPercent[r][i] = t / e.maxValue, e.dataRadius[r][i] = e.dataRadiusOfPercent[r][i] * e.size, e.angleArr[r][i] = i * e.disAngle
                    }), h = e.getDataPointsPos(e.dataRadius[r], e.angleArr[r]);
                    var l = e.createPaths(h, {x: 0, y: 0});
                    c = e.graphics.group({class: "apexcharts-series-markers-wrap hidden"}), i.globals.delayedElements.push({
                        el: c.node,
                        index: r
                    });
                    var g = {
                        i: r,
                        realIndex: r,
                        animationDelay: r,
                        initialSpeed: i.config.chart.animations.speed,
                        dataChangeSpeed: i.config.chart.animations.dynamicAnimation.speed,
                        className: "apexcharts-radar",
                        id: "apexcharts-radar",
                        shouldClipToGrid: !1,
                        bindEventsOnPaths: !1,
                        stroke: i.globals.stroke.colors[r],
                        strokeLineCap: i.config.stroke.lineCap
                    }, f = null;
                    i.globals.previousPaths.length > 0 && (f = e.getPathFrom(r));
                    for (var p = 0; p < l.linePathsTo.length; p++) {
                        var x = e.graphics.renderPaths(n({}, g, {
                            pathFrom: null === f ? l.linePathsFrom[p] : f,
                            pathTo: l.linePathsTo[p],
                            strokeWidth: Array.isArray(i.config.stroke.width) ? i.config.stroke.width[r] : i.config.stroke.width,
                            fill: "none",
                            drawShadow: !1
                        }));
                        o.add(x);
                        var b = s.fillPath({seriesNumber: r}), m = e.graphics.renderPaths(n({}, g, {
                            pathFrom: null === f ? l.areaPathsFrom[p] : f,
                            pathTo: l.areaPathsTo[p],
                            strokeWidth: 0,
                            fill: b,
                            drawShadow: !1
                        }));
                        if (i.config.chart.dropShadow.enabled) {
                            var v = new u(e.ctx), y = i.config.chart.dropShadow;
                            v.dropShadow(m, Object.assign({}, y, {noUserSpaceOnUse: !0}), r)
                        }
                        o.add(m)
                    }
                    t.forEach(function (t, i) {
                        var s = new C(e.ctx).getMarkerConfig("apexcharts-marker", r),
                            a = e.graphics.drawMarker(h[i].x, h[i].y, s);
                        a.attr("rel", i), a.attr("j", i), a.attr("index", r), a.node.setAttribute("default-marker-size", s.pSize);
                        var n = e.graphics.group({class: "apexcharts-series-markers"});
                        n && n.add(a), c.add(n), o.add(c)
                    }), a.push(o)
                }), this.drawPolygons({parent: l}), i.config.dataLabels.enabled) {
                    var g = this.drawLabels();
                    l.add(g)
                }
                return l.add(this.yaxisLabels), a.forEach(function (t) {
                    l.add(t)
                }), l
            }
        }, {
            key: "drawPolygons", value: function (t) {
                for (var e = this, i = this.w, s = t.parent, a = i.globals.yAxisScale[0].result.reverse(), n = a.length, r = [], o = this.size / (n - 1), l = 0; l < n; l++) r[l] = o * l;
                r.reverse();
                var h = [], c = [];
                r.forEach(function (t, i) {
                    var s = e.getPolygonPos(t), a = "";
                    s.forEach(function (t, s) {
                        if (0 === i) {
                            var n = e.graphics.drawLine(t.x, t.y, 0, 0, Array.isArray(e.polygons.connectorColors) ? e.polygons.connectorColors[s] : e.polygons.connectorColors);
                            c.push(n)
                        }
                        0 === s && e.yaxisLabelsTextsPos.push({x: t.x, y: t.y}), a += t.x + "," + t.y + " "
                    }), h.push(a)
                }), h.forEach(function (t, a) {
                    var n = e.polygons.strokeColors,
                        r = e.graphics.drawPolygon(t, Array.isArray(n) ? n[a] : n, i.globals.radarPolygons.fill.colors[a]);
                    s.add(r)
                }), c.forEach(function (t) {
                    s.add(t)
                }), i.config.yaxis[0].show && this.yaxisLabelsTextsPos.forEach(function (t, i) {
                    var s = e.drawYAxisText(t.x, t.y, i, a[i]);
                    e.yaxisLabels.add(s)
                })
            }
        }, {
            key: "drawYAxisText", value: function (t, e, i, s) {
                var a = this.w, n = a.config.yaxis[0], r = a.globals.yLabelFormatters[0];
                return this.graphics.drawText({
                    x: t + n.labels.offsetX,
                    y: e + n.labels.offsetY,
                    text: r(s, i),
                    textAnchor: "middle",
                    fontSize: n.labels.style.fontSize,
                    fontFamily: n.labels.style.fontFamily,
                    foreColor: n.labels.style.color
                })
            }
        }, {
            key: "drawLabels", value: function () {
                var t = this, e = this.w, i = "middle", s = e.config.dataLabels,
                    a = this.graphics.group({class: "apexcharts-datalabels"}), n = this.getPolygonPos(this.size), r = 0,
                    o = 0;
                return e.globals.labels.forEach(function (l, h) {
                    var c = s.formatter, d = new z(t.ctx);
                    if (n[h]) {
                        r = n[h].x, o = n[h].y, Math.abs(n[h].x) >= 10 ? n[h].x > 0 ? (i = "start", r += 10) : n[h].x < 0 && (i = "end", r -= 10) : i = "middle", Math.abs(n[h].y) >= t.size - 10 && (n[h].y < 0 ? o -= 10 : n[h].y > 0 && (o += 10));
                        var u = c(l, {seriesIndex: -1, dataPointIndex: h, w: e});
                        d.plotDataLabelsText({
                            x: r,
                            y: o,
                            text: u,
                            textAnchor: i,
                            i: h,
                            j: h,
                            parent: a,
                            dataLabelsConfig: s,
                            offsetCorrection: !1
                        })
                    }
                }), a
            }
        }, {
            key: "createPaths", value: function (t, e) {
                var i = this, s = [], a = [], n = [], r = [];
                if (t.length) {
                    a = [this.graphics.move(e.x, e.y)], r = [this.graphics.move(e.x, e.y)];
                    var o = this.graphics.move(t[0].x, t[0].y), l = this.graphics.move(t[0].x, t[0].y);
                    t.forEach(function (e, s) {
                        o += i.graphics.line(e.x, e.y), l += i.graphics.line(e.x, e.y), s === t.length - 1 && (o += "Z", l += "Z")
                    }), s.push(o), n.push(l)
                }
                return {linePathsFrom: a, linePathsTo: s, areaPathsFrom: r, areaPathsTo: n}
            }
        }, {
            key: "getPathFrom", value: function (t) {
                for (var e = this.w, i = null, s = 0; s < e.globals.previousPaths.length; s++) {
                    var a = e.globals.previousPaths[s];
                    a.paths.length > 0 && parseInt(a.realIndex) === parseInt(t) && void 0 !== e.globals.previousPaths[s].paths[0] && (i = e.globals.previousPaths[s].paths[0].d)
                }
                return i
            }
        }, {
            key: "getDataPointsPos", value: function (t, e) {
                var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : this.dataPointsLen;
                t = t || [], e = e || [];
                for (var s = [], a = 0; a < i; a++) {
                    var n = {};
                    n.x = t[a] * Math.sin(e[a]), n.y = -t[a] * Math.cos(e[a]), s.push(n)
                }
                return s
            }
        }, {
            key: "getPolygonPos", value: function (t) {
                for (var e = [], i = 2 * Math.PI / this.dataPointsLen, s = 0; s < this.dataPointsLen; s++) {
                    var a = {};
                    a.x = t * Math.sin(s * i), a.y = -t * Math.cos(s * i), e.push(a)
                }
                return e
            }
        }]), t
    }(), F = function (t) {
        function i(t) {
            var s;
            e(this, i), (s = h(this, o(i).call(this, t))).ctx = t, s.w = t.w, s.animBeginArr = [0], s.animDur = 0;
            var a = s.w;
            return s.startAngle = a.config.plotOptions.radialBar.startAngle, s.endAngle = a.config.plotOptions.radialBar.endAngle, s.trackStartAngle = a.config.plotOptions.radialBar.track.startAngle, s.trackEndAngle = a.config.plotOptions.radialBar.track.endAngle, s.radialDataLabels = a.config.plotOptions.radialBar.dataLabels, s.trackStartAngle || (s.trackStartAngle = s.startAngle), s.trackEndAngle || (s.trackEndAngle = s.endAngle), 360 === s.endAngle && (s.endAngle = 359.99), s.fullAngle = 360 - a.config.plotOptions.radialBar.endAngle - a.config.plotOptions.radialBar.startAngle, s.margin = parseInt(a.config.plotOptions.radialBar.track.margin), s
        }

        return r(i, I), s(i, [{
            key: "draw", value: function (t) {
                var e = this.w, i = new f(this.ctx), s = i.group({class: "apexcharts-radialbar"}), a = i.group(),
                    n = this.defaultSize / 2, r = e.globals.gridWidth / 2,
                    o = this.defaultSize / 2.05 - e.config.stroke.width - e.config.chart.dropShadow.blur;
                void 0 !== e.config.plotOptions.radialBar.size && (o = e.config.plotOptions.radialBar.size);
                var l = e.globals.fill.colors;
                if (e.config.plotOptions.radialBar.track.show) {
                    var h = this.drawTracks({size: o, centerX: r, centerY: n, colorArr: l, series: t});
                    a.add(h)
                }
                var c = this.drawArcs({size: o, centerX: r, centerY: n, colorArr: l, series: t});
                return a.add(c.g), "front" === e.config.plotOptions.radialBar.hollow.position && (c.g.add(c.elHollow), c.dataLabels && c.g.add(c.dataLabels)), s.add(a), s
            }
        }, {
            key: "drawTracks", value: function (t) {
                var e = this.w, i = new f(this.ctx), s = i.group(), a = new u(this.ctx), n = new S(this.ctx),
                    r = this.getStrokeWidth(t);
                t.size = t.size - r / 2;
                for (var o = 0; o < t.series.length; o++) {
                    var l = i.group({class: "apexcharts-radialbar-track apexcharts-track"});
                    s.add(l), l.attr({id: "apexcharts-track-" + o, rel: o + 1}), t.size = t.size - r - this.margin;
                    var h = e.config.plotOptions.radialBar.track, c = n.fillPath({
                        seriesNumber: 0,
                        size: t.size,
                        fillColors: Array.isArray(h.background) ? h.background[o] : h.background,
                        solid: !0
                    }), d = this.trackStartAngle, g = this.trackEndAngle;
                    Math.abs(g) + Math.abs(d) >= 360 && (g = 360 - Math.abs(this.startAngle) - .1);
                    var p = i.drawPath({
                        d: "",
                        stroke: c,
                        strokeWidth: r * parseInt(h.strokeWidth) / 100,
                        fill: "none",
                        strokeOpacity: h.opacity,
                        classes: "apexcharts-radialbar-area"
                    });
                    if (h.dropShadow.enabled) {
                        var x = h.dropShadow;
                        a.dropShadow(p, x)
                    }
                    l.add(p), p.attr("id", "apexcharts-radialbarTrack-" + o), new I(this.ctx).animatePaths(p, {
                        centerX: t.centerX,
                        centerY: t.centerY,
                        endAngle: g,
                        startAngle: d,
                        size: t.size,
                        i: o,
                        totalItems: 2,
                        animBeginArr: 0,
                        dur: 0,
                        isTrack: !0,
                        easing: e.globals.easing
                    })
                }
                return s
            }
        }, {
            key: "drawArcs", value: function (t) {
                var e = this.w, i = new f(this.ctx), s = new S(this.ctx), a = new u(this.ctx), n = i.group(),
                    r = this.getStrokeWidth(t);
                t.size = t.size - r / 2;
                var o = e.config.plotOptions.radialBar.hollow.background,
                    l = t.size - r * t.series.length - this.margin * t.series.length - r * parseInt(e.config.plotOptions.radialBar.track.strokeWidth) / 100 / 2,
                    h = l - e.config.plotOptions.radialBar.hollow.margin;
                void 0 !== e.config.plotOptions.radialBar.hollow.image && (o = this.drawHollowImage(t, n, l, o));
                var c = this.drawHollow({size: h, centerX: t.centerX, centerY: t.centerY, fill: o});
                if (e.config.plotOptions.radialBar.hollow.dropShadow.enabled) {
                    var g = e.config.plotOptions.radialBar.hollow.dropShadow;
                    a.dropShadow(c, g)
                }
                var p = 1;
                !this.radialDataLabels.total.show && e.globals.series.length > 1 && (p = 0);
                var x = new I(this.ctx), b = null;
                this.radialDataLabels.show && (b = x.renderInnerDataLabels(this.radialDataLabels, {
                    hollowSize: l,
                    centerX: t.centerX,
                    centerY: t.centerY,
                    opacity: p
                })), "back" === e.config.plotOptions.radialBar.hollow.position && (n.add(c), b && n.add(b));
                var m = !1;
                e.config.plotOptions.radialBar.inverseOrder && (m = !0);
                for (var v = m ? t.series.length - 1 : 0; m ? v >= 0 : v < t.series.length; m ? v-- : v++) {
                    var y = i.group({
                        class: "apexcharts-series apexcharts-radial-series",
                        seriesName: d.escapeString(e.globals.seriesNames[v])
                    });
                    n.add(y), y.attr({
                        id: "apexcharts-series-" + v,
                        rel: v + 1
                    }), this.ctx.series.addCollapsedClassToSeries(y, v), t.size = t.size - r - this.margin;
                    var w = s.fillPath({seriesNumber: v, size: t.size, value: t.series[v]}), k = this.startAngle,
                        A = void 0,
                        C = Math.abs(e.config.plotOptions.radialBar.endAngle - e.config.plotOptions.radialBar.startAngle),
                        L = d.negToZero(t.series[v] > 100 ? 100 : t.series[v]) / 100,
                        z = Math.round(C * L) + this.startAngle, P = void 0;
                    e.globals.dataChanged && (A = this.startAngle, P = Math.round(C * d.negToZero(e.globals.previousPaths[v]) / 100) + A), Math.abs(z) + Math.abs(k) >= 360 && (z -= .01), Math.abs(P) + Math.abs(A) >= 360 && (P -= .01);
                    var M = z - k,
                        E = Array.isArray(e.config.stroke.dashArray) ? e.config.stroke.dashArray[v] : e.config.stroke.dashArray,
                        T = i.drawPath({
                            d: "",
                            stroke: w,
                            strokeWidth: r,
                            fill: "none",
                            fillOpacity: e.config.fill.opacity,
                            classes: "apexcharts-radialbar-area",
                            strokeDashArray: E
                        });
                    if (f.setAttrs(T.node, {
                        "data:angle": M,
                        "data:value": t.series[v]
                    }), e.config.chart.dropShadow.enabled) {
                        var X = e.config.chart.dropShadow;
                        a.dropShadow(T, X, v)
                    }
                    this.addListeners(T, this.radialDataLabels);
                    var Y = new I(this.ctx);
                    y.add(T), T.attr({id: "apexcharts-radialbar-slice-" + v, index: 0, j: v});
                    var F = 0;
                    !Y.initialAnim || e.globals.resized || e.globals.dataChanged || (F = (z - k) / 360 * e.config.chart.animations.speed, this.animDur = F / (1.2 * t.series.length) + this.animDur, this.animBeginArr.push(this.animDur)), e.globals.dataChanged && (F = (z - k) / 360 * e.config.chart.animations.dynamicAnimation.speed, this.animDur = F / (1.2 * t.series.length) + this.animDur, this.animBeginArr.push(this.animDur)), Y.animatePaths(T, {
                        centerX: t.centerX,
                        centerY: t.centerY,
                        endAngle: z,
                        startAngle: k,
                        prevEndAngle: P,
                        prevStartAngle: A,
                        size: t.size,
                        i: v,
                        totalItems: 2,
                        animBeginArr: this.animBeginArr,
                        dur: F,
                        shouldSetPrevPaths: !0,
                        easing: e.globals.easing
                    })
                }
                return {g: n, elHollow: c, dataLabels: b}
            }
        }, {
            key: "drawHollow", value: function (t) {
                var e = new f(this.ctx).drawCircle(2 * t.size);
                return e.attr({
                    class: "apexcharts-radialbar-hollow",
                    cx: t.centerX,
                    cy: t.centerY,
                    r: t.size,
                    fill: t.fill
                }), e
            }
        }, {
            key: "drawHollowImage", value: function (t, e, i, s) {
                var a = this.w, n = new S(this.ctx), r = (Math.random() + 1).toString(36).substring(4),
                    o = a.config.plotOptions.radialBar.hollow.image;
                if (a.config.plotOptions.radialBar.hollow.imageClipped) n.clippedImgArea({
                    width: i,
                    height: i,
                    image: o,
                    patternID: "pattern".concat(a.globals.cuid).concat(r)
                }), s = "url(#pattern".concat(a.globals.cuid).concat(r, ")"); else {
                    var l = a.config.plotOptions.radialBar.hollow.imageWidth,
                        h = a.config.plotOptions.radialBar.hollow.imageHeight;
                    if (void 0 === l && void 0 === h) {
                        var c = a.globals.dom.Paper.image(o).loaded(function (e) {
                            this.move(t.centerX - e.width / 2 + a.config.plotOptions.radialBar.hollow.imageOffsetX, t.centerY - e.height / 2 + a.config.plotOptions.radialBar.hollow.imageOffsetY)
                        });
                        e.add(c)
                    } else {
                        var d = a.globals.dom.Paper.image(o).loaded(function (e) {
                            this.move(t.centerX - l / 2 + a.config.plotOptions.radialBar.hollow.imageOffsetX, t.centerY - h / 2 + a.config.plotOptions.radialBar.hollow.imageOffsetY), this.size(l, h)
                        });
                        e.add(d)
                    }
                }
                return s
            }
        }, {
            key: "getStrokeWidth", value: function (t) {
                var e = this.w;
                return t.size * (100 - parseInt(e.config.plotOptions.radialBar.hollow.size)) / 100 / (t.series.length + 1) - this.margin
            }
        }]), i
    }(), R = function (t) {
        function i() {
            return e(this, i), h(this, o(i).apply(this, arguments))
        }

        return r(i, P), s(i, [{
            key: "draw", value: function (t, e) {
                var i = this.w, s = new f(this.ctx), a = new S(this.ctx);
                this.rangeBarOptions = this.w.config.plotOptions.rangeBar, this.series = t, this.seriesRangeStart = i.globals.seriesRangeStart, this.seriesRangeEnd = i.globals.seriesRangeEnd, this.initVariables(t);
                for (var n = s.group({class: "apexcharts-rangebar-series apexcharts-plot-series"}), r = 0, o = 0; r < t.length; r++, o++) {
                    var l, h, c, u, g = void 0, p = void 0, x = void 0, b = void 0, m = [], v = [],
                        y = i.globals.comboCharts ? e[r] : r, w = s.group({
                            class: "apexcharts-series",
                            seriesName: d.escapeString(i.globals.seriesNames[y]),
                            rel: r + 1,
                            "data:realIndex": y
                        });
                    t[r].length > 0 && (this.visibleI = this.visibleI + 1);
                    var k = 0, A = 0, C = 0;
                    this.yRatio.length > 1 && (this.yaxisIndex = y);
                    var L = this.initialPositions();
                    b = L.y, h = L.yDivision, A = L.barHeight, u = L.zeroW, x = L.x, C = L.barWidth, l = L.xDivision, c = L.zeroH, v.push(x + C / 2);
                    for (var z = s.group({class: "apexcharts-datalabels"}), P = 0, M = i.globals.dataPoints; P < i.globals.dataPoints; P++, M--) {
                        void 0 === this.series[r][P] || null === t[r][P] ? this.isNullValue = !0 : this.isNullValue = !1, i.config.stroke.show && (k = this.isNullValue ? 0 : Array.isArray(this.strokeWidth) ? this.strokeWidth[y] : this.strokeWidth);
                        var E = null;
                        this.isHorizontal ? C = (E = this.drawRangeBarPaths({
                            indexes: {i: r, j: P, realIndex: y, bc: o},
                            barHeight: A,
                            strokeWidth: k,
                            pathTo: g,
                            pathFrom: p,
                            zeroW: u,
                            x: x,
                            y: b,
                            yDivision: h,
                            elSeries: w
                        })).barWidth : A = (E = this.drawRangeColumnPaths({
                            indexes: {i: r, j: P, realIndex: y, bc: o},
                            x: x,
                            y: b,
                            xDivision: l,
                            pathTo: g,
                            pathFrom: p,
                            barWidth: C,
                            zeroH: c,
                            strokeWidth: k,
                            elSeries: w
                        })).barHeight, g = E.pathTo, p = E.pathFrom, b = E.y, x = E.x, P > 0 && v.push(x + C / 2), m.push(b);
                        var T = a.fillPath({seriesNumber: y}), X = i.globals.stroke.colors[y];
                        w = this.renderSeries({
                            realIndex: y,
                            pathFill: T,
                            lineFill: X,
                            j: P,
                            i: r,
                            pathFrom: p,
                            pathTo: g,
                            strokeWidth: k,
                            elSeries: w,
                            x: x,
                            y: b,
                            series: t,
                            barHeight: A,
                            barWidth: C,
                            elDataLabelsWrap: z,
                            visibleSeries: this.visibleI,
                            type: "rangebar"
                        })
                    }
                    i.globals.seriesXvalues[y] = v, i.globals.seriesYvalues[y] = m, n.add(w)
                }
                return n
            }
        }, {
            key: "drawRangeColumnPaths", value: function (t) {
                var e = t.indexes, i = t.x, s = (t.y, t.strokeWidth), a = t.xDivision, n = t.pathTo, r = t.pathFrom,
                    o = t.barWidth, l = t.zeroH, h = this.w, c = new f(this.ctx), d = e.i, u = e.j,
                    g = this.yRatio[this.yaxisIndex], p = e.realIndex, x = this.getRangeValue(p, u),
                    b = Math.min(x.start, x.end), m = Math.max(x.start, x.end);
                h.globals.isXNumeric && (i = (h.globals.seriesX[d][u] - h.globals.minX) / this.xRatio - o / 2);
                var v = i + o * this.visibleI;
                void 0 === this.series[d][u] || null === this.series[d][u] ? b = l : (b = l - b / g, m = l - m / g);
                var y = Math.abs(m - b);
                return c.move(v, l), r = c.move(v, b), h.globals.previousPaths.length > 0 && (r = this.getPathFrom(p, u, !0)), n = c.move(v, m) + c.line(v + o, m) + c.line(v + o, b) + c.line(v, b) + c.line(v, m - s / 2), r = r + c.move(v, b) + c.line(v + o, b) + c.line(v + o, b) + c.line(v, b), h.globals.isXNumeric || (i += a), {
                    pathTo: n,
                    pathFrom: r,
                    barHeight: y,
                    x: i,
                    y: m,
                    barXPosition: v
                }
            }
        }, {
            key: "drawRangeBarPaths", value: function (t) {
                var e = t.indexes, i = (t.x, t.y), s = t.yDivision, a = t.pathTo, n = t.pathFrom, r = t.barHeight,
                    o = t.zeroW, l = this.w, h = new f(this.ctx), c = e.i, d = e.j, u = e.realIndex, g = o, p = o;
                l.globals.isXNumeric && (i = (l.globals.seriesX[c][d] - l.globals.minX) / this.invertedXRatio - r);
                var x = i + r * this.visibleI;
                void 0 !== this.series[c][d] && null !== this.series[c][d] && (g = o + this.seriesRangeStart[c][d] / this.invertedYRatio, p = o + this.seriesRangeEnd[c][d] / this.invertedYRatio), h.move(o, x), n = h.move(o, x), l.globals.previousPaths.length > 0 && (n = this.getPathFrom(u, d));
                var b = Math.abs(p - g);
                return a = h.move(g, x) + h.line(p, x) + h.line(p, x + r) + h.line(g, x + r) + h.line(g, x), n = n + h.line(g, x) + h.line(g, x + r) + h.line(g, x + r) + h.line(g, x), l.globals.isXNumeric || (i += s), {
                    pathTo: a,
                    pathFrom: n,
                    barWidth: b,
                    x: p,
                    y: i,
                    barYPosition: x
                }
            }
        }, {
            key: "getRangeValue", value: function (t, e) {
                var i = this.w;
                return {start: i.globals.seriesRangeStart[t][e], end: i.globals.seriesRangeEnd[t][e]}
            }
        }]), i
    }(), D = function () {
        function t(i, s, a) {
            e(this, t), this.ctx = i, this.w = i.w, this.xyRatios = s, this.pointsChart = !("bubble" !== this.w.config.chart.type && "scatter" !== this.w.config.chart.type) || a, this.scatter = new L(this.ctx), this.noNegatives = this.w.globals.minX === Number.MAX_VALUE, this.yaxisIndex = 0
        }

        return s(t, [{
            key: "draw", value: function (t, e, i) {
                var s = this.w, a = new f(this.ctx), r = new S(this.ctx),
                    o = s.globals.comboCharts ? e : s.config.chart.type,
                    l = a.group({class: "apexcharts-".concat(o, "-series apexcharts-plot-series")}),
                    h = new y(this.ctx, s);
                t = h.getLogSeries(t);
                var c = this.xyRatios.yRatio;
                c = h.getLogYRatios(c);
                for (var u = this.xyRatios.zRatio, g = this.xyRatios.xRatio, p = this.xyRatios.baseLineY, x = [], b = [], m = 0, v = 0; v < t.length; v++) {
                    if ("line" === o && ("gradient" === s.config.fill.type || "gradient" === s.config.fill.type[v]) && h.seriesHaveSameValues(v)) {
                        var w = t[v].slice();
                        w[w.length - 1] = w[w.length - 1] + 1e-6, t[v] = w
                    }
                    var k = s.globals.gridWidth / s.globals.dataPoints, A = s.globals.comboCharts ? i[v] : v;
                    c.length > 1 && (this.yaxisIndex = A), this.isReversed = s.config.yaxis[this.yaxisIndex] && s.config.yaxis[this.yaxisIndex].reversed;
                    var L = [], P = [],
                        M = s.globals.gridHeight - p[this.yaxisIndex] - (this.isReversed ? s.globals.gridHeight : 0) + (this.isReversed ? 2 * p[this.yaxisIndex] : 0),
                        E = M;
                    M > s.globals.gridHeight && (E = s.globals.gridHeight), m = k / 2;
                    var T = s.globals.padHorizontal + m, X = 1;
                    s.globals.isXNumeric && s.globals.seriesX.length > 0 && (T = (s.globals.seriesX[A][0] - s.globals.minX) / g), P.push(T);
                    var I = void 0, Y = void 0, F = void 0, R = void 0, D = [], N = [],
                        O = a.group({class: "apexcharts-series", seriesName: d.escapeString(s.globals.seriesNames[A])}),
                        H = a.group({class: "apexcharts-series-markers-wrap"}),
                        W = a.group({class: "apexcharts-datalabels"});
                    this.ctx.series.addCollapsedClassToSeries(O, A);
                    var B = t[v].length === s.globals.dataPoints;
                    O.attr({"data:longestSeries": B, rel: v + 1, "data:realIndex": A}), this.appendPathFrom = !0;
                    var V = T, G = void 0, _ = V, j = M, U = 0;
                    if (j = this.determineFirstPrevY({
                        i: v,
                        series: t,
                        yRatio: c[this.yaxisIndex],
                        zeroY: M,
                        prevY: j,
                        prevSeriesY: b,
                        lineYPosition: U
                    }).prevY, L.push(j), G = j, null === t[v][0]) {
                        for (var q = 0; q < t[v].length; q++) if (null !== t[v][q]) {
                            _ = k * q, j = M - t[v][q] / c[this.yaxisIndex], I = a.move(_, j), Y = a.move(_, E);
                            break
                        }
                    } else I = a.move(_, j), Y = a.move(_, E) + a.line(_, j);
                    if (F = a.move(-1, M) + a.line(-1, M), R = a.move(-1, M) + a.line(-1, M), s.globals.previousPaths.length > 0) {
                        var Z = this.checkPreviousPaths({pathFromLine: F, pathFromArea: R, realIndex: A});
                        F = Z.pathFromLine, R = Z.pathFromArea
                    }
                    for (var $ = s.globals.dataPoints > 1 ? s.globals.dataPoints - 1 : s.globals.dataPoints, J = 0; J < $; J++) {
                        if (s.globals.isXNumeric) {
                            var Q = s.globals.seriesX[A][J + 1];
                            void 0 === s.globals.seriesX[A][J + 1] && (Q = s.globals.seriesX[A][$ - 1]), T = (Q - s.globals.minX) / g
                        } else T += k;
                        var K = d.isNumber(s.globals.minYArr[A]) ? s.globals.minYArr[A] : s.globals.minY;
                        s.config.chart.stacked ? (U = v > 0 && s.globals.collapsedSeries.length < s.config.series.length - 1 ? b[v - 1][J + 1] : M, X = void 0 === t[v][J + 1] || null === t[v][J + 1] ? U - K / c[this.yaxisIndex] + 2 * (this.isReversed ? K / c[this.yaxisIndex] : 0) : U - t[v][J + 1] / c[this.yaxisIndex] + 2 * (this.isReversed ? t[v][J + 1] / c[this.yaxisIndex] : 0)) : X = void 0 === t[v][J + 1] || null === t[v][J + 1] ? M - K / c[this.yaxisIndex] + 2 * (this.isReversed ? K / c[this.yaxisIndex] : 0) : M - t[v][J + 1] / c[this.yaxisIndex] + 2 * (this.isReversed ? t[v][J + 1] / c[this.yaxisIndex] : 0), P.push(T), L.push(X);
                        var tt = this.createPaths({
                            series: t,
                            i: v,
                            j: J,
                            x: T,
                            y: X,
                            xDivision: k,
                            pX: V,
                            pY: G,
                            areaBottomY: E,
                            linePath: I,
                            areaPath: Y,
                            linePaths: D,
                            areaPaths: N,
                            seriesIndex: i
                        });
                        N = tt.areaPaths, D = tt.linePaths, V = tt.pX, G = tt.pY, Y = tt.areaPath, I = tt.linePath, this.appendPathFrom && (F += a.line(T, M), R += a.line(T, M));
                        var et = this.calculatePoints({
                            series: t,
                            x: T,
                            y: X,
                            realIndex: A,
                            i: v,
                            j: J,
                            prevY: j,
                            categoryAxisCorrection: m,
                            xRatio: g
                        });
                        if (this.pointsChart) this.scatter.draw(O, J, {
                            realIndex: A,
                            pointsPos: et,
                            zRatio: u,
                            elParent: H
                        }); else {
                            var it = new C(this.ctx);
                            s.globals.dataPoints > 1 && H.node.classList.add("hidden");
                            var st = it.plotChartMarkers(et, A, J + 1);
                            null !== st && H.add(st)
                        }
                        var at = !t[v][J + 1] || t[v][J + 1] > t[v][J] ? "top" : "bottom",
                            nt = new z(this.ctx).drawDataLabel(et, A, J + 1, null, at);
                        null !== nt && W.add(nt)
                    }
                    b.push(L), s.globals.seriesXvalues[A] = P, s.globals.seriesYvalues[A] = L, this.pointsChart || s.globals.delayedElements.push({
                        el: H.node,
                        index: A
                    });
                    var rt = {
                        i: v,
                        realIndex: A,
                        animationDelay: v,
                        initialSpeed: s.config.chart.animations.speed,
                        dataChangeSpeed: s.config.chart.animations.dynamicAnimation.speed,
                        className: "apexcharts-".concat(o),
                        id: "apexcharts-".concat(o)
                    };
                    if ("area" === o) for (var ot = r.fillPath({seriesNumber: A}), lt = 0; lt < N.length; lt++) {
                        var ht = a.renderPaths(n({}, rt, {
                            pathFrom: R,
                            pathTo: N[lt],
                            stroke: "none",
                            strokeWidth: 0,
                            strokeLineCap: null,
                            fill: ot
                        }));
                        O.add(ht)
                    }
                    if (s.config.stroke.show && !this.pointsChart) {
                        var ct = null;
                        ct = "line" === o ? r.fillPath({seriesNumber: A, i: v}) : s.globals.stroke.colors[A];
                        for (var dt = 0; dt < D.length; dt++) {
                            var ut = a.renderPaths(n({}, rt, {
                                pathFrom: F,
                                pathTo: D[dt],
                                stroke: ct,
                                strokeWidth: Array.isArray(s.config.stroke.width) ? s.config.stroke.width[A] : s.config.stroke.width,
                                strokeLineCap: s.config.stroke.lineCap,
                                fill: "none"
                            }));
                            O.add(ut)
                        }
                    }
                    O.add(H), O.add(W), x.push(O)
                }
                for (var gt = x.length; gt > 0; gt--) l.add(x[gt - 1]);
                return l
            }
        }, {
            key: "createPaths", value: function (t) {
                var e = t.series, i = t.i, s = t.j, a = t.x, n = t.y, r = t.pX, o = t.pY, l = t.xDivision,
                    h = t.areaBottomY, c = t.linePath, d = t.areaPath, u = t.linePaths, g = t.areaPaths,
                    p = t.seriesIndex, x = this.w, b = new f(this.ctx), m = x.config.stroke.curve;
                if (Array.isArray(x.config.stroke.curve) && (m = Array.isArray(p) ? x.config.stroke.curve[p[i]] : x.config.stroke.curve[i]), "smooth" === m) {
                    var v = .35 * (a - r);
                    x.globals.hasNullValues ? (null !== e[i][s] && (null !== e[i][s + 1] ? (c = b.move(r, o) + b.curve(r + v, o, a - v, n, a + 1, n), d = b.move(r + 1, o) + b.curve(r + v, o, a - v, n, a + 1, n) + b.line(a, h) + b.line(r, h) + "z") : (c = b.move(r, o), d = b.move(r, o) + "z")), u.push(c), g.push(d)) : (c += b.curve(r + v, o, a - v, n, a, n), d += b.curve(r + v, o, a - v, n, a, n)), r = a, o = n, s === e[i].length - 2 && (d = d + b.curve(r, o, a, n, a, h) + b.move(a, n) + "z", x.globals.hasNullValues || (u.push(c), g.push(d)))
                } else null === e[i][s + 1] && (c += b.move(a, n), d = d + b.line(a - l, h) + b.move(a, n)), null === e[i][s] && (c += b.move(a, n), d += b.move(a, h)), "stepline" === m ? (c = c + b.line(a, null, "H") + b.line(null, n, "V"), d = d + b.line(a, null, "H") + b.line(null, n, "V")) : "straight" === m && (c += b.line(a, n), d += b.line(a, n)), s === e[i].length - 2 && (d = d + b.line(a, h) + b.move(a, n) + "z", u.push(c), g.push(d));
                return {linePaths: u, areaPaths: g, pX: r, pY: o, linePath: c, areaPath: d}
            }
        }, {
            key: "calculatePoints", value: function (t) {
                var e = t.series, i = t.realIndex, s = t.x, a = t.y, n = t.i, r = t.j, o = t.prevY,
                    l = t.categoryAxisCorrection, h = t.xRatio, c = this.w, u = [], g = [];
                if (0 === r) {
                    var f = l + c.config.markers.offsetX;
                    c.globals.isXNumeric && (f = (c.globals.seriesX[i][0] - c.globals.minX) / h + c.config.markers.offsetX), u.push(f), g.push(d.isNumber(e[n][0]) ? o + c.config.markers.offsetY : null), u.push(s + c.config.markers.offsetX), g.push(d.isNumber(e[n][r + 1]) ? a + c.config.markers.offsetY : null)
                } else u.push(s + c.config.markers.offsetX), g.push(d.isNumber(e[n][r + 1]) ? a + c.config.markers.offsetY : null);
                return {x: u, y: g}
            }
        }, {
            key: "checkPreviousPaths", value: function (t) {
                for (var e = t.pathFromLine, i = t.pathFromArea, s = t.realIndex, a = this.w, n = 0; n < a.globals.previousPaths.length; n++) {
                    var r = a.globals.previousPaths[n];
                    ("line" === r.type || "area" === r.type) && r.paths.length > 0 && parseInt(r.realIndex) === parseInt(s) && ("line" === r.type ? (this.appendPathFrom = !1, e = a.globals.previousPaths[n].paths[0].d) : "area" === r.type && (this.appendPathFrom = !1, i = a.globals.previousPaths[n].paths[0].d, a.config.stroke.show && (e = a.globals.previousPaths[n].paths[1].d)))
                }
                return {pathFromLine: e, pathFromArea: i}
            }
        }, {
            key: "determineFirstPrevY", value: function (t) {
                var e = t.i, i = t.series, s = t.yRatio, a = t.zeroY, n = t.prevY, r = t.prevSeriesY,
                    o = t.lineYPosition, l = this.w;
                if (void 0 !== i[e][0]) n = l.config.chart.stacked ? (o = e > 0 ? r[e - 1][0] : a) - i[e][0] / s + 2 * (this.isReversed ? i[e][0] / s : 0) : a - i[e][0] / s + 2 * (this.isReversed ? i[e][0] / s : 0); else if (l.config.chart.stacked && e > 0 && void 0 === i[e][0]) for (var h = e - 1; h >= 0; h--) if (null !== i[h][0] && void 0 !== i[h][0]) {
                    n = o = r[h][0];
                    break
                }
                return {prevY: n, lineYPosition: o}
            }
        }]), t
    }(), N = function () {
        function t(i) {
            e(this, t), this.ctx = i, this.w = i.w, this.tooltipKeyFormat = "dd MMM"
        }

        return s(t, [{
            key: "xLabelFormat", value: function (t, e) {
                var i = this.w;
                if ("datetime" === i.config.xaxis.type && void 0 === i.config.tooltip.x.formatter) return new m(this.ctx).formatDate(new Date(e), i.config.tooltip.x.format, !0, !0);
                return t(e)
            }
        }, {
            key: "setLabelFormatters", value: function () {
                var t = this.w;
                return t.globals.xLabelFormatter = function (t) {
                    return t
                }, t.globals.xaxisTooltipFormatter = function (t) {
                    return t
                }, t.globals.ttKeyFormatter = function (t) {
                    return t
                }, t.globals.ttZFormatter = function (t) {
                    return t
                }, t.globals.legendFormatter = function (t) {
                    return t
                }, "function" == typeof t.config.tooltip.x.formatter && (t.globals.ttKeyFormatter = t.config.tooltip.x.formatter), "function" == typeof t.config.xaxis.tooltip.formatter && (t.globals.xaxisTooltipFormatter = t.config.xaxis.tooltip.formatter), Array.isArray(t.config.tooltip.y) ? t.globals.ttVal = t.config.tooltip.y : void 0 !== t.config.tooltip.y.formatter && (t.globals.ttVal = t.config.tooltip.y), void 0 !== t.config.tooltip.z.formatter && (t.globals.ttZFormatter = t.config.tooltip.z.formatter), void 0 !== t.config.legend.formatter && (t.globals.legendFormatter = t.config.legend.formatter), void 0 !== t.config.xaxis.labels.formatter ? t.globals.xLabelFormatter = t.config.xaxis.labels.formatter : t.globals.xLabelFormatter = function (e) {
                    return d.isNumber(e) ? "numeric" === t.config.xaxis.type && t.globals.dataPoints < 50 ? e.toFixed(1) : e.toFixed(0) : e
                }, t.config.yaxis.forEach(function (e, i) {
                    void 0 !== e.labels.formatter ? t.globals.yLabelFormatters[i] = e.labels.formatter : t.globals.yLabelFormatters[i] = function (i) {
                        return d.isNumber(i) ? 0 !== t.globals.yValueDecimal ? i.toFixed(void 0 !== e.decimalsInFloat ? e.decimalsInFloat : t.globals.yValueDecimal) : t.globals.maxY - t.globals.minY < 5 ? i.toFixed(1) : i.toFixed(0) : i
                    }
                }), t.globals
            }
        }, {
            key: "heatmapLabelFormatters", value: function () {
                var t = this.w;
                if ("heatmap" === t.config.chart.type) {
                    t.globals.yAxisScale[0].result = t.globals.seriesNames.slice();
                    var e = t.globals.seriesNames.reduce(function (t, e) {
                        return t.length > e.length ? t : e
                    }, 0);
                    t.globals.yAxisScale[0].niceMax = e, t.globals.yAxisScale[0].niceMin = e
                }
            }
        }]), t
    }(), O = function () {
        function t(i) {
            e(this, t), this.ctx = i, this.w = i.w
        }

        return s(t, [{
            key: "getLabel", value: function (t, e, i, s) {
                var a, n = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : [], r = this.w,
                    o = void 0 === t[s] ? "" : t[s], l = r.globals.xLabelFormatter, h = r.config.xaxis.labels.formatter;
                return a = new N(this.ctx).xLabelFormat(l, o), void 0 !== h && (a = h(o, t[s], s)), e.length > 0 ? (i = e[s].position, a = e[s].value) : "datetime" === r.config.xaxis.type && void 0 === h && (a = ""), void 0 === a && (a = ""), (0 === (a = a.toString()).indexOf("NaN") || 0 === a.toLowerCase().indexOf("invalid") || a.toLowerCase().indexOf("infinity") >= 0 || n.indexOf(a) >= 0 && !r.config.xaxis.labels.showDuplicates) && (a = ""), {
                    x: i,
                    text: a
                }
            }
        }, {
            key: "drawYAxisTicks", value: function (t, e, i, s, a, n, r) {
                var o = this.w, l = new f(this.ctx), h = o.globals.translateY;
                if (s.show) {
                    !0 === o.config.yaxis[a].opposite && (t += s.width);
                    for (var c = e; c >= 0; c--) {
                        var d = h + e / 10 + o.config.yaxis[a].labels.offsetY - 1;
                        o.globals.isBarHorizontal && (d = n * c);
                        var u = l.drawLine(t + i.offsetX - s.width + s.offsetX, d + s.offsetY, t + i.offsetX + s.offsetX, d + s.offsetY, i.color);
                        r.add(u), h += n
                    }
                }
            }
        }]), t
    }(), H = function () {
        function t(i) {
            e(this, t), this.ctx = i, this.w = i.w;
            var s = this.w;
            this.xaxisLabels = s.globals.labels.slice(), s.globals.timelineLabels.length > 0 && (this.xaxisLabels = s.globals.timelineLabels.slice()), this.drawnLabels = [], "top" === s.config.xaxis.position ? this.offY = 0 : this.offY = s.globals.gridHeight + 1, this.offY = this.offY + s.config.xaxis.axisBorder.offsetY, this.xaxisFontSize = s.config.xaxis.labels.style.fontSize, this.xaxisFontFamily = s.config.xaxis.labels.style.fontFamily, this.xaxisForeColors = s.config.xaxis.labels.style.colors, this.xaxisBorderWidth = s.config.xaxis.axisBorder.width, this.xaxisBorderWidth.indexOf("%") > -1 ? this.xaxisBorderWidth = s.globals.gridWidth * parseInt(this.xaxisBorderWidth) / 100 : this.xaxisBorderWidth = parseInt(this.xaxisBorderWidth), this.xaxisBorderHeight = s.config.xaxis.axisBorder.height, this.yaxis = s.config.yaxis[0], this.axesUtils = new O(i)
        }

        return s(t, [{
            key: "drawXaxis", value: function () {
                var t, e = this.w, i = new f(this.ctx), s = i.group({
                    class: "apexcharts-xaxis",
                    transform: "translate(".concat(e.config.xaxis.offsetX, ", ").concat(e.config.xaxis.offsetY, ")")
                }), a = i.group({
                    class: "apexcharts-xaxis-texts-g",
                    transform: "translate(".concat(e.globals.translateXAxisX, ", ").concat(e.globals.translateXAxisY, ")")
                });
                s.add(a);
                for (var n = e.globals.padHorizontal, r = [], o = 0; o < this.xaxisLabels.length; o++) r.push(this.xaxisLabels[o]);
                n = e.globals.isXNumeric ? n + (t = e.globals.gridWidth / (r.length - 1)) / 2 + e.config.xaxis.labels.offsetX : n + (t = e.globals.gridWidth / r.length) + e.config.xaxis.labels.offsetX;
                var l = r.length;
                if (e.config.xaxis.labels.show) for (var h = 0; h <= l - 1; h++) {
                    var c = n - t / 2 + e.config.xaxis.labels.offsetX,
                        d = this.axesUtils.getLabel(r, e.globals.timelineLabels, c, h, this.drawnLabels);
                    this.drawnLabels.push(d.text);
                    var u = 28;
                    e.globals.rotateXLabels && (u = 22);
                    var g = i.drawText({
                        x: d.x,
                        y: this.offY + e.config.xaxis.labels.offsetY + u,
                        text: "",
                        textAnchor: "middle",
                        fontSize: this.xaxisFontSize,
                        fontFamily: this.xaxisFontFamily,
                        foreColor: Array.isArray(this.xaxisForeColors) ? this.xaxisForeColors[h] : this.xaxisForeColors,
                        cssClass: "apexcharts-xaxis-label " + e.config.xaxis.labels.style.cssClass
                    });
                    h === l - 1 && e.globals.skipLastTimelinelabel && (d.text = ""), a.add(g), i.addTspan(g, d.text, this.xaxisFontFamily);
                    var p = document.createElementNS(e.globals.SVGNS, "title");
                    p.textContent = d.text, g.node.appendChild(p), n += t
                }
                if (void 0 !== e.config.xaxis.title.text) {
                    var x = i.group({class: "apexcharts-xaxis-title"}), b = i.drawText({
                        x: e.globals.gridWidth / 2 + e.config.xaxis.title.offsetX,
                        y: this.offY - parseInt(this.xaxisFontSize) + e.globals.xAxisLabelsHeight + e.config.xaxis.title.offsetY,
                        text: e.config.xaxis.title.text,
                        textAnchor: "middle",
                        fontSize: e.config.xaxis.title.style.fontSize,
                        fontFamily: e.config.xaxis.title.style.fontFamily,
                        foreColor: e.config.xaxis.title.style.color,
                        cssClass: "apexcharts-xaxis-title-text " + e.config.xaxis.title.style.cssClass
                    });
                    x.add(b), s.add(x)
                }
                if (e.config.xaxis.axisBorder.show) {
                    var m = 0;
                    "bar" === e.config.chart.type && e.globals.isXNumeric && (m -= 15);
                    var v = i.drawLine(e.globals.padHorizontal + m + e.config.xaxis.axisBorder.offsetX, this.offY, this.xaxisBorderWidth, this.offY, e.config.xaxis.axisBorder.color, 0, this.xaxisBorderHeight);
                    s.add(v)
                }
                return s
            }
        }, {
            key: "drawXaxisInversed", value: function (t) {
                var e, i, s = this.w, a = new f(this.ctx),
                    n = s.config.yaxis[0].opposite ? s.globals.translateYAxisX[t] : 0,
                    r = a.group({class: "apexcharts-yaxis apexcharts-xaxis-inversed", rel: t}), o = a.group({
                        class: "apexcharts-yaxis-texts-g apexcharts-xaxis-inversed-texts-g",
                        transform: "translate(" + n + ", 0)"
                    });
                r.add(o);
                for (var l = [], h = 0; h < this.xaxisLabels.length; h++) l.push(this.xaxisLabels[h]);
                i = -(e = s.globals.gridHeight / l.length) / 2.2;
                var c = s.globals.yLabelFormatters[0], d = s.config.yaxis[0].labels;
                if (d.show) for (var u = 0; u <= l.length - 1; u++) {
                    var g = void 0 === l[u] ? "" : l[u];
                    g = c(g);
                    var p = a.drawText({
                        x: d.offsetX - 15,
                        y: i + e + d.offsetY,
                        text: g,
                        textAnchor: this.yaxis.opposite ? "start" : "end",
                        foreColor: d.style.color ? d.style.color : d.style.colors[u],
                        fontSize: d.style.fontSize,
                        fontFamily: d.style.fontFamily,
                        cssClass: "apexcharts-yaxis-label " + d.style.cssClass
                    });
                    if (o.add(p), 0 !== s.config.yaxis[t].labels.rotate) {
                        var x = a.rotateAroundCenter(p.node);
                        p.node.setAttribute("transform", "rotate(".concat(s.config.yaxis[t].labels.rotate, " ").concat(x.x, " ").concat(x.y, ")"))
                    }
                    i += e
                }
                if (void 0 !== s.config.yaxis[0].title.text) {
                    var b = a.group({
                        class: "apexcharts-yaxis-title apexcharts-xaxis-title-inversed",
                        transform: "translate(" + n + ", 0)"
                    }), m = a.drawText({
                        x: 0,
                        y: s.globals.gridHeight / 2,
                        text: s.config.yaxis[0].title.text,
                        textAnchor: "middle",
                        foreColor: s.config.yaxis[0].title.style.color,
                        fontSize: s.config.yaxis[0].title.style.fontSize,
                        fontFamily: s.config.yaxis[0].title.style.fontFamily,
                        cssClass: "apexcharts-yaxis-title-text " + s.config.yaxis[0].title.style.cssClass
                    });
                    b.add(m), r.add(b)
                }
                if (s.config.xaxis.axisBorder.show) {
                    var v = a.drawLine(s.globals.padHorizontal + s.config.xaxis.axisBorder.offsetX, this.offY, this.xaxisBorderWidth, this.offY, this.yaxis.axisBorder.color, 0, this.xaxisBorderHeight);
                    r.add(v), this.axesUtils.drawYAxisTicks(0, l.length, s.config.yaxis[0].axisBorder, s.config.yaxis[0].axisTicks, 0, e, r)
                }
                return r
            }
        }, {
            key: "drawXaxisTicks", value: function (t, e) {
                var i = this.w, s = t;
                if (!(t < 0 || t > i.globals.gridWidth)) {
                    var a = this.offY + i.config.xaxis.axisTicks.offsetY, n = a + i.config.xaxis.axisTicks.height;
                    if (i.config.xaxis.axisTicks.show) {
                        var r = new f(this.ctx).drawLine(t + i.config.xaxis.axisTicks.offsetX, a + i.config.xaxis.offsetY, s + i.config.xaxis.axisTicks.offsetX, n + i.config.xaxis.offsetY, i.config.xaxis.axisTicks.color);
                        e.add(r), r.node.classList.add("apexcharts-xaxis-tick")
                    }
                }
            }
        }, {
            key: "getXAxisTicksPositions", value: function () {
                var t = this.w, e = [], i = this.xaxisLabels.length, s = t.globals.padHorizontal;
                if (t.globals.timelineLabels.length > 0) for (var a = 0; a < i; a++) s = this.xaxisLabels[a].position, e.push(s); else for (var n = i, r = 0; r < n; r++) {
                    var o = n;
                    t.globals.isXNumeric && "bar" !== t.config.chart.type && (o -= 1), s += t.globals.gridWidth / o, e.push(s)
                }
                return e
            }
        }, {
            key: "xAxisLabelCorrections", value: function () {
                var t = this.w, e = new f(this.ctx),
                    i = t.globals.dom.baseEl.querySelector(".apexcharts-xaxis-texts-g"),
                    s = t.globals.dom.baseEl.querySelectorAll(".apexcharts-xaxis-texts-g text"),
                    a = t.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxis-inversed text"),
                    n = t.globals.dom.baseEl.querySelectorAll(".apexcharts-xaxis-inversed-texts-g text");
                if (t.globals.rotateXLabels || t.config.xaxis.labels.rotateAlways) for (var r = 0; r < s.length; r++) {
                    var o = e.rotateAroundCenter(s[r]);
                    o.y = o.y - 1, o.x = o.x + 1, s[r].setAttribute("transform", "rotate(".concat(t.config.xaxis.labels.rotate, " ").concat(o.x, " ").concat(o.y, ")")), s[r].setAttribute("text-anchor", "end");
                    i.setAttribute("transform", "translate(0, ".concat(-10, ")"));
                    var l = s[r].childNodes;
                    t.config.xaxis.labels.trim && e.placeTextWithEllipsis(l[0], l[0].textContent, t.config.xaxis.labels.maxHeight - 40)
                } else for (var h = t.globals.gridWidth / t.globals.labels.length, c = 0; c < s.length; c++) {
                    var d = s[c].childNodes;
                    t.config.xaxis.labels.trim && "datetime" !== t.config.xaxis.type && e.placeTextWithEllipsis(d[0], d[0].textContent, h)
                }
                if (a.length > 0) {
                    var u = a[a.length - 1].getBBox(), g = a[0].getBBox();
                    u.x < -20 && a[a.length - 1].parentNode.removeChild(a[a.length - 1]), g.x + g.width > t.globals.gridWidth && a[0].parentNode.removeChild(a[0]);
                    for (var p = 0; p < n.length; p++) e.placeTextWithEllipsis(n[p], n[p].textContent, t.config.yaxis[0].labels.maxWidth - 2 * parseInt(t.config.yaxis[0].title.style.fontSize) - 20)
                }
            }
        }]), t
    }(), W = function () {
        function t(i) {
            e(this, t), this.ctx = i, this.w = i.w;
            var s = this.w;
            this.xaxisFontSize = s.config.xaxis.labels.style.fontSize, this.axisFontFamily = s.config.xaxis.labels.style.fontFamily, this.xaxisForeColors = s.config.xaxis.labels.style.colors, this.xAxisoffX = 0, "bottom" === s.config.xaxis.position && (this.xAxisoffX = s.globals.gridHeight), this.drawnLabels = [], this.axesUtils = new O(i)
        }

        return s(t, [{
            key: "drawYaxis", value: function (t) {
                var e = this.w, i = new f(this.ctx), s = e.config.yaxis[t].labels.style.fontSize,
                    a = e.config.yaxis[t].labels.style.fontFamily, n = i.group({
                        class: "apexcharts-yaxis",
                        rel: t,
                        transform: "translate(" + e.globals.translateYAxisX[t] + ", 0)"
                    });
                if (!e.config.yaxis[t].show) return n;
                var r = i.group({class: "apexcharts-yaxis-texts-g"});
                n.add(r);
                var o = e.globals.yAxisScale[t].result.length - 1, l = e.globals.gridHeight / o + .1,
                    h = e.globals.translateY, c = e.globals.yLabelFormatters[t],
                    d = e.globals.yAxisScale[t].result.slice();
                if (e.config.yaxis[t] && e.config.yaxis[t].reversed && d.reverse(), e.config.yaxis[t].labels.show) for (var u = o; u >= 0; u--) {
                    var g = d[u];
                    g = c(g, u);
                    var p = e.config.yaxis[t].labels.padding;
                    e.config.yaxis[t].opposite && 0 !== e.config.yaxis.length && (p *= -1);
                    var x = i.drawText({
                        x: p,
                        y: h + o / 10 + e.config.yaxis[t].labels.offsetY + 1,
                        text: g,
                        textAnchor: e.config.yaxis[t].opposite ? "start" : "end",
                        fontSize: s,
                        fontFamily: a,
                        foreColor: e.config.yaxis[t].labels.style.color,
                        cssClass: "apexcharts-yaxis-label " + e.config.yaxis[t].labels.style.cssClass
                    });
                    r.add(x);
                    var b = i.rotateAroundCenter(x.node);
                    0 !== e.config.yaxis[t].labels.rotate && x.node.setAttribute("transform", "rotate(".concat(e.config.yaxis[t].labels.rotate, " ").concat(b.x, " ").concat(b.y, ")")), h += l
                }
                if (void 0 !== e.config.yaxis[t].title.text) {
                    var m = i.group({class: "apexcharts-yaxis-title"}), v = 0;
                    e.config.yaxis[t].opposite && (v = e.globals.translateYAxisX[t]);
                    var y = i.drawText({
                        x: v,
                        y: e.globals.gridHeight / 2 + e.globals.translateY,
                        text: e.config.yaxis[t].title.text,
                        textAnchor: "end",
                        foreColor: e.config.yaxis[t].title.style.color,
                        fontSize: e.config.yaxis[t].title.style.fontSize,
                        fontFamily: e.config.yaxis[t].title.style.fontFamily,
                        cssClass: "apexcharts-yaxis-title-text " + e.config.yaxis[t].title.style.cssClass
                    });
                    m.add(y), n.add(m)
                }
                var w = e.config.yaxis[t].axisBorder;
                if (w.show) {
                    var k = 31 + w.offsetX;
                    e.config.yaxis[t].opposite && (k = -31 - w.offsetX);
                    var A = i.drawLine(k, e.globals.translateY + w.offsetY - 2, k, e.globals.gridHeight + e.globals.translateY + w.offsetY + 2, w.color);
                    n.add(A), this.axesUtils.drawYAxisTicks(k, o, w, e.config.yaxis[t].axisTicks, t, l, n)
                }
                return n
            }
        }, {
            key: "drawYaxisInversed", value: function (t) {
                var e = this.w, i = new f(this.ctx), s = i.group({class: "apexcharts-xaxis apexcharts-yaxis-inversed"}),
                    a = i.group({
                        class: "apexcharts-xaxis-texts-g",
                        transform: "translate(".concat(e.globals.translateXAxisX, ", ").concat(e.globals.translateXAxisY, ")")
                    });
                s.add(a);
                var n = e.globals.yAxisScale[t].result.length - 1, r = e.globals.gridWidth / n + .1,
                    o = r + e.config.xaxis.labels.offsetX, l = e.globals.xLabelFormatter,
                    h = e.globals.yAxisScale[t].result.slice(), c = e.globals.invertedTimelineLabels;
                c.length > 0 && (this.xaxisLabels = c.slice(), n = (h = c.slice()).length), e.config.yaxis[t] && e.config.yaxis[t].reversed && h.reverse();
                var d = c.length;
                if (e.config.xaxis.labels.show) for (var u = d ? 0 : n; d ? u < d - 1 : u >= 0; d ? u++ : u--) {
                    var g = h[u];
                    g = l(g, u);
                    var p = e.globals.gridWidth + e.globals.padHorizontal - (o - r + e.config.xaxis.labels.offsetX);
                    if (c.length) {
                        var x = this.axesUtils.getLabel(h, c, p, u, this.drawnLabels);
                        p = x.x, g = x.text, this.drawnLabels.push(x.text)
                    }
                    var b = i.drawText({
                        x: p,
                        y: this.xAxisoffX + e.config.xaxis.labels.offsetY + 30,
                        text: "",
                        textAnchor: "middle",
                        foreColor: Array.isArray(this.xaxisForeColors) ? this.xaxisForeColors[t] : this.xaxisForeColors,
                        fontSize: this.xaxisFontSize,
                        fontFamily: this.xaxisFontFamily,
                        cssClass: "apexcharts-xaxis-label " + e.config.xaxis.labels.style.cssClass
                    });
                    a.add(b), b.tspan(g);
                    var m = document.createElementNS(e.globals.SVGNS, "title");
                    m.textContent = g, b.node.appendChild(m), o += r
                }
                if (void 0 !== e.config.xaxis.title.text) {
                    var v = i.group({class: "apexcharts-xaxis-title apexcharts-yaxis-title-inversed"}), y = i.drawText({
                        x: e.globals.gridWidth / 2,
                        y: this.xAxisoffX + parseInt(this.xaxisFontSize) + parseInt(e.config.xaxis.title.style.fontSize) + 20,
                        text: e.config.xaxis.title.text,
                        textAnchor: "middle",
                        fontSize: e.config.xaxis.title.style.fontSize,
                        fontFamily: e.config.xaxis.title.style.fontFamily,
                        cssClass: "apexcharts-xaxis-title-text " + e.config.xaxis.title.style.cssClass
                    });
                    v.add(y), s.add(v)
                }
                var w = e.config.yaxis[t].axisBorder;
                if (w.show) {
                    var k = i.drawLine(e.globals.padHorizontal + w.offsetX, 1 + w.offsetY, e.globals.padHorizontal + w.offsetX, e.globals.gridHeight + w.offsetY, w.color);
                    s.add(k)
                }
                return s
            }
        }, {
            key: "yAxisTitleRotate", value: function (t, e) {
                var i = this.w, s = new f(this.ctx), a = {width: 0, height: 0}, n = {width: 0, height: 0},
                    r = i.globals.dom.baseEl.querySelector(" .apexcharts-yaxis[rel='".concat(t, "'] .apexcharts-yaxis-texts-g"));
                null !== r && (a = r.getBoundingClientRect());
                var o = i.globals.dom.baseEl.querySelector(".apexcharts-yaxis[rel='".concat(t, "'] .apexcharts-yaxis-title text"));
                if (null !== o && (n = o.getBoundingClientRect()), null !== o) {
                    var l = this.xPaddingForYAxisTitle(t, a, n, e);
                    o.setAttribute("x", l.xPos - (e ? 10 : 0))
                }
                if (null !== o) {
                    var h = s.rotateAroundCenter(o);
                    e ? o.setAttribute("transform", "rotate(".concat(i.config.yaxis[t].title.rotate, " ").concat(h.x, " ").concat(h.y, ")")) : o.setAttribute("transform", "rotate(-".concat(i.config.yaxis[t].title.rotate, " ").concat(h.x, " ").concat(h.y, ")"))
                }
            }
        }, {
            key: "xPaddingForYAxisTitle", value: function (t, e, i, s) {
                var a = this.w, n = 0, r = 0, o = 10;
                return void 0 === a.config.yaxis[t].title.text || t < 0 ? {
                    xPos: r,
                    padd: 0
                } : (s ? (r = e.width + a.config.yaxis[t].title.offsetX + i.width / 2 + o / 2, 0 === (n += 1) && (r -= o / 2)) : (r = -1 * e.width + a.config.yaxis[t].title.offsetX + o / 2 + i.width / 2, a.globals.isBarHorizontal && (o = 25, r = -1 * e.width - a.config.yaxis[t].title.offsetX - o)), {
                    xPos: r,
                    padd: o
                })
            }
        }, {
            key: "setYAxisXPosition", value: function (t, e) {
                var i = this.w, s = 0, a = 0, n = 21, r = 1;
                i.config.yaxis.length > 1 && (this.multipleYs = !0), i.config.yaxis.map(function (o, l) {
                    var h = i.globals.ignoreYAxisIndexes.indexOf(l) > -1 || !o.show || o.floating || 0 === t[l].width,
                        c = t[l].width + e[l].width;
                    o.opposite ? i.globals.isBarHorizontal ? (a = i.globals.gridWidth + i.globals.translateX - 1, i.globals.translateYAxisX[l] = a - o.labels.offsetX) : (a = i.globals.gridWidth + i.globals.translateX + r, h || (r = r + c + 20), i.globals.translateYAxisX[l] = a - o.labels.offsetX + 20) : (s = i.globals.translateX - n, h || (n = n + c + 20), i.globals.translateYAxisX[l] = s + o.labels.offsetX)
                })
            }
        }, {
            key: "setYAxisTextAlignments", value: function () {
                var t = this.w, e = t.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxis");
                (e = d.listToArray(e)).forEach(function (e, i) {
                    var s = t.config.yaxis[i];
                    if (void 0 !== s.labels.align) {
                        var a = t.globals.dom.baseEl.querySelector(".apexcharts-yaxis[rel='".concat(i, "'] .apexcharts-yaxis-texts-g")),
                            n = t.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxis[rel='".concat(i, "'] .apexcharts-yaxis-label"));
                        n = d.listToArray(n);
                        var r = a.getBoundingClientRect();
                        "left" === s.labels.align ? (n.forEach(function (t, e) {
                            t.setAttribute("text-anchor", "start")
                        }), s.opposite || a.setAttribute("transform", "translate(-".concat(r.width, ", 0)"))) : "center" === s.labels.align ? (n.forEach(function (t, e) {
                            t.setAttribute("text-anchor", "middle")
                        }), a.setAttribute("transform", "translate(".concat(r.width / 2 * (s.opposite ? 1 : -1), ", 0)"))) : "right" === s.labels.align && (n.forEach(function (t, e) {
                            t.setAttribute("text-anchor", "end")
                        }), s.opposite && a.setAttribute("transform", "translate(".concat(r.width, ", 0)")))
                    }
                })
            }
        }]), t
    }(), B = function () {
        function t(i) {
            e(this, t), this.ctx = i, this.w = i.w
        }

        return s(t, [{
            key: "niceScale", value: function (t, e, i) {
                var s = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0,
                    a = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 10, n = this.w,
                    r = void 0 === this.w.config.yaxis[s].max && void 0 === this.w.config.yaxis[s].min || this.w.config.yaxis[s].forceNiceScale;
                if (t === Number.MIN_VALUE && 0 === e || !d.isNumber(t) && !d.isNumber(e) || t === Number.MIN_VALUE && e === -Number.MAX_VALUE) return t = 0, e = a, this.linearScale(t, e, a);
                t > e ? (console.warn("yaxis.min cannot be greater than yaxis.max"), e = t + .1) : t === e && (t = 0 === t ? 0 : t - .5, e = 0 === e ? 2 : e + .5);
                var o = [], l = Math.abs(e - t);
                l < 1 && r && ("candlestick" === n.config.chart.type || "candlestick" === n.config.series[s].type || n.globals.isRangeData) && (e *= 1.01), l < 1e-5 && r && e < 10 ? e *= 1.05 : i > .1 && i < 3 && r && (e += i / 3);
                var h = a + 1;
                h < 2 ? h = 2 : h > 2 && (h -= 2);
                for (var c = l / h, u = Math.floor(d.log10(c)), g = Math.pow(10, u), f = parseInt(c / g) * g, p = f * Math.floor(t / f), x = f * Math.ceil(e / f), b = p; o.push(b), !((b += f) > x);) ;
                if (r) return {result: o, niceMin: o[0], niceMax: o[o.length - 1]};
                var m = t;
                (o = []).push(m);
                for (var v = Math.abs(e - t) / a, y = 0; y <= a - 1; y++) m += v, o.push(m);
                return {result: o, niceMin: o[0], niceMax: o[o.length - 1]}
            }
        }, {
            key: "linearScale", value: function (t, e) {
                var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 10, s = Math.abs(e - t) / i;
                i === Number.MAX_VALUE && (i = 10, s = 1);
                for (var a = [], n = t; i >= 0;) a.push(n), n += s, i -= 1;
                return {result: a, niceMin: a[0], niceMax: a[a.length - 1]}
            }
        }, {
            key: "logarithmicScale", value: function (t, e, i, s) {
                (e < 0 || e === Number.MIN_VALUE) && (e = .01);
                for (var a = Math.log(e) / Math.log(10), n = Math.log(i) / Math.log(10), r = Math.abs(i - e) / s, o = [], l = e; s >= 0;) o.push(l), l += r, s -= 1;
                var h = o.map(function (t, s) {
                    t <= 0 && (t = .01);
                    var r = (n - a) / (i - e), o = Math.pow(10, a + r * (t - a));
                    return Math.round(o / d.roundToBase(o, 10)) * d.roundToBase(o, 10)
                });
                return 0 === h[0] && (h[0] = 1), {result: h, niceMin: h[0], niceMax: h[h.length - 1]}
            }
        }, {
            key: "setYScaleForIndex", value: function (t, e, i) {
                var s = this.w.globals, a = this.w.config, n = s.isBarHorizontal ? a.xaxis : a.yaxis[t];
                if (void 0 === s.yAxisScale[t] && (s.yAxisScale[t] = []), n.logarithmic) s.allSeriesCollapsed = !1, s.yAxisScale[t] = this.logarithmicScale(t, e, i, n.tickAmount ? n.tickAmount : Math.floor(Math.log10(i))); else if (i !== -Number.MAX_VALUE && d.isNumber(i)) if (s.allSeriesCollapsed = !1, void 0 === n.min && void 0 === n.max || n.forceNiceScale) {
                    var r = Math.abs(i - e);
                    s.yAxisScale[t] = this.niceScale(e, i, r, t, n.tickAmount ? n.tickAmount : r < 5 && r > 1 ? r + 1 : 5)
                } else s.yAxisScale[t] = this.linearScale(e, i, n.tickAmount); else s.yAxisScale[t] = this.linearScale(0, 5, 5)
            }
        }, {
            key: "setMultipleYScales", value: function () {
                var t = this, e = this.w.globals, i = this.w.config, s = e.minYArr.concat([]), a = e.maxYArr.concat([]),
                    n = [];
                i.yaxis.forEach(function (r, o) {
                    var l = o;
                    i.series.forEach(function (t, i) {
                        t.name === r.seriesName && -1 === e.collapsedSeriesIndices.indexOf(i) && (l = i, o !== i ? n.push({
                            index: i,
                            similarIndex: o,
                            alreadyExists: !0
                        }) : n.push({index: i}))
                    });
                    var h = s[l], c = a[l];
                    t.setYScaleForIndex(o, h, c)
                }), this.sameScaleInMultipleAxes(s, a, n)
            }
        }, {
            key: "sameScaleInMultipleAxes", value: function (t, e, i) {
                var s = this, a = this.w.config, n = this.w.globals, r = [];
                i.forEach(function (t) {
                    t.alreadyExists && (void 0 === r[t.index] && (r[t.index] = []), r[t.index].push(t.index), r[t.index].push(t.similarIndex))
                }), r.forEach(function (t, e) {
                    r.forEach(function (i, s) {
                        var a, n;
                        e !== s && (a = t, n = i, a.filter(function (t) {
                            return -1 !== n.indexOf(t)
                        })).length > 0 && (r[e] = r[e].concat(r[s]))
                    })
                });
                var o = r.map(function (t) {
                    return t.filter(function (e, i) {
                        return t.indexOf(e) === i
                    })
                }).map(function (t) {
                    return t.sort()
                });
                r = r.filter(function (t) {
                    return !!t
                });
                var l = o.slice(), h = l.map(function (t) {
                    return JSON.stringify(t)
                });
                l = l.filter(function (t, e) {
                    return h.indexOf(JSON.stringify(t)) === e
                });
                var c = [], d = [];
                t.forEach(function (t, i) {
                    l.forEach(function (s, a) {
                        s.indexOf(i) > -1 && (void 0 === c[a] && (c[a] = [], d[a] = []), c[a].push({
                            key: i,
                            value: t
                        }), d[a].push({key: i, value: e[i]}))
                    })
                });
                var u = Array.apply(null, Array(l.length)).map(Number.prototype.valueOf, Number.MIN_VALUE),
                    g = Array.apply(null, Array(l.length)).map(Number.prototype.valueOf, -Number.MAX_VALUE);
                c.forEach(function (t, e) {
                    t.forEach(function (t, i) {
                        u[e] = Math.min(t.value, u[e])
                    })
                }), d.forEach(function (t, e) {
                    t.forEach(function (t, i) {
                        g[e] = Math.max(t.value, g[e])
                    })
                }), t.forEach(function (t, e) {
                    d.forEach(function (t, i) {
                        var r = u[i], o = g[i];
                        t.forEach(function (i, l) {
                            t[l].key === e && (void 0 !== a.yaxis[e].min && (r = "function" == typeof a.yaxis[e].min ? a.yaxis[e].min(n.minY) : a.yaxis[e].min), void 0 !== a.yaxis[e].max && (o = "function" == typeof a.yaxis[e].max ? a.yaxis[e].max(n.maxY) : a.yaxis[e].max), s.setYScaleForIndex(e, r, o))
                        })
                    })
                })
            }
        }, {
            key: "autoScaleY", value: function (t, e) {
                t || (t = this);
                var i = [];
                return t.w.config.series.forEach(function (t) {
                    var s, a, n = t.data.find(function (t) {
                        return t[0] >= e.xaxis.min
                    })[1];
                    a = s = n, t.data.forEach(function (t) {
                        t[0] <= e.xaxis.max && t[0] >= e.xaxis.min && (t[1] > a && null !== t[1] && (a = t[1]), t[1] < s && null !== t[1] && (s = t[1]))
                    }), s *= .95, a *= 1.05, i.push({min: s, max: a})
                }), i
            }
        }]), t
    }(), V = function () {
        function t(i) {
            e(this, t), this.ctx = i, this.w = i.w, this.scales = new B(i)
        }

        return s(t, [{
            key: "init", value: function () {
                this.setYRange(), this.setXRange(), this.setZRange()
            }
        }, {
            key: "getMinYMaxY", value: function (t) {
                var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : Number.MAX_VALUE,
                    i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : -Number.MAX_VALUE,
                    s = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null, a = this.w.globals,
                    n = -Number.MAX_VALUE, r = Number.MIN_VALUE;
                null === s && (s = t + 1);
                var o = a.series, l = o, h = o;
                "candlestick" === this.w.config.chart.type ? (l = a.seriesCandleL, h = a.seriesCandleH) : a.isRangeData && (l = a.seriesRangeStart, h = a.seriesRangeEnd);
                for (var c = t; c < s; c++) {
                    a.dataPoints = Math.max(a.dataPoints, o[c].length);
                    for (var u = 0; u < a.series[c].length; u++) {
                        var g = o[c][u];
                        null !== g && d.isNumber(g) ? (n = Math.max(n, h[c][u]), e = Math.min(e, l[c][u]), i = Math.max(i, l[c][u]), "candlestick" === this.w.config.chart.type && (n = Math.max(n, a.seriesCandleO[c][u]), n = Math.max(n, a.seriesCandleH[c][u]), n = Math.max(n, a.seriesCandleL[c][u]), i = n = Math.max(n, a.seriesCandleC[c][u])), d.isFloat(g) && (g = d.noExponents(g), a.yValueDecimal = Math.max(a.yValueDecimal, g.toString().split(".")[1].length)), r > l[c][u] && l[c][u] < 0 && (r = l[c][u])) : a.hasNullValues = !0
                    }
                }
                return {minY: r, maxY: n, lowestY: e, highestY: i}
            }
        }, {
            key: "setYRange", value: function () {
                var t = this.w.globals, e = this.w.config;
                t.maxY = -Number.MAX_VALUE, t.minY = Number.MIN_VALUE;
                var i = Number.MAX_VALUE;
                if (t.isMultipleYAxis) for (var s = 0; s < t.series.length; s++) {
                    var a = this.getMinYMaxY(s, i, null, s + 1);
                    t.minYArr.push(a.minY), t.maxYArr.push(a.maxY), i = a.lowestY
                }
                var n = this.getMinYMaxY(0, i, null, t.series.length);
                if (t.minY = n.minY, t.maxY = n.maxY, i = n.lowestY, e.chart.stacked) {
                    for (var r = [], o = [], l = 0; l < t.series[t.maxValsInArrayIndex].length; l++) for (var h = 0, c = 0, u = 0; u < t.series.length; u++) null !== t.series[u][l] && d.isNumber(t.series[u][l]) && (t.series[u][l] > 0 ? h = h + parseFloat(t.series[u][l]) + 1e-4 : c += parseFloat(t.series[u][l])), u === t.series.length - 1 && (r.push(h), o.push(c));
                    for (var g = 0; g < r.length; g++) t.maxY = Math.max(t.maxY, r[g]), t.minY = Math.min(t.minY, o[g])
                }
                if (("line" === e.chart.type || "area" === e.chart.type || "candlestick" === e.chart.type) && t.minY === Number.MIN_VALUE && i !== -Number.MAX_VALUE && i !== t.maxY) {
                    var f = t.maxY - i;
                    i >= 0 && i <= 10 && (f = 0), t.minY = i - 5 * f / 100, t.maxY = t.maxY + 5 * f / 100
                }
                return e.yaxis.map(function (e, i) {
                    void 0 !== e.max && ("number" == typeof e.max ? t.maxYArr[i] = e.max : "function" == typeof e.max && (t.maxYArr[i] = e.max(t.maxY)), t.maxY = t.maxYArr[i]), void 0 !== e.min && ("number" == typeof e.min ? t.minYArr[i] = e.min : "function" == typeof e.min && (t.minYArr[i] = e.min(t.minY)), t.minY = t.minYArr[i])
                }), t.isBarHorizontal && (void 0 !== e.xaxis.min && "number" == typeof e.xaxis.min && (t.minY = e.xaxis.min), void 0 !== e.xaxis.max && "number" == typeof e.xaxis.max && (t.maxY = e.xaxis.max)), t.isMultipleYAxis ? (this.scales.setMultipleYScales(), t.minY = i, t.yAxisScale.forEach(function (e, i) {
                    t.minYArr[i] = e.niceMin, t.maxYArr[i] = e.niceMax
                })) : (this.scales.setYScaleForIndex(0, t.minY, t.maxY), t.minY = t.yAxisScale[0].niceMin, t.maxY = t.yAxisScale[0].niceMax, t.minYArr[0] = t.yAxisScale[0].niceMin, t.maxYArr[0] = t.yAxisScale[0].niceMax), {
                    minY: t.minY,
                    maxY: t.maxY,
                    minYArr: t.minYArr,
                    maxYArr: t.maxYArr
                }
            }
        }, {
            key: "setXRange", value: function () {
                var t, e = this.w.globals, i = this.w.config,
                    s = "numeric" === i.xaxis.type || "datetime" === i.xaxis.type || "category" === i.xaxis.type && !e.noLabelsProvided || e.noLabelsProvided || e.isXNumeric;
                if (e.isXNumeric) for (var a = 0; a < e.series.length; a++) if (e.labels[a]) for (var n = 0; n < e.labels[a].length; n++) null !== e.labels[a][n] && d.isNumber(e.labels[a][n]) && (e.maxX = Math.max(e.maxX, e.labels[a][n]), e.initialmaxX = Math.max(e.maxX, e.labels[a][n]), e.minX = Math.min(e.minX, e.labels[a][n]), e.initialminX = Math.min(e.minX, e.labels[a][n]));
                if (e.noLabelsProvided && 0 === i.xaxis.categories.length && (e.maxX = e.labels[e.labels.length - 1], e.initialmaxX = e.labels[e.labels.length - 1], e.minX = 1, e.initialminX = 1), (e.comboChartsHasBars || "candlestick" === i.chart.type || "bar" === i.chart.type && e.isXNumeric) && ("category" !== i.xaxis.type || e.isXNumeric)) {
                    var r = e.minX - e.svgWidth / e.dataPoints * (Math.abs(e.maxX - e.minX) / e.svgWidth) / 2;
                    e.minX = r, e.initialminX = r;
                    var o = e.maxX + e.svgWidth / e.dataPoints * (Math.abs(e.maxX - e.minX) / e.svgWidth) / 2;
                    e.maxX = o, e.initialmaxX = o
                }
                !e.isXNumeric && !e.noLabelsProvided || i.xaxis.convertedCatToNumeric && !e.dataFormatXNumeric || (void 0 === i.xaxis.tickAmount ? (t = Math.round(e.svgWidth / 150), "numeric" === i.xaxis.type && e.dataPoints < 20 && (t = e.dataPoints - 1), t > e.dataPoints && 0 !== e.dataPoints && (t = e.dataPoints - 1)) : t = "dataPoints" === i.xaxis.tickAmount ? e.series[e.maxValsInArrayIndex].length - 1 : i.xaxis.tickAmount, void 0 !== i.xaxis.max && "number" == typeof i.xaxis.max && (e.maxX = i.xaxis.max), void 0 !== i.xaxis.min && "number" == typeof i.xaxis.min && (e.minX = i.xaxis.min), void 0 !== i.xaxis.range && (e.minX = e.maxX - i.xaxis.range), e.minX !== Number.MAX_VALUE && e.maxX !== -Number.MAX_VALUE ? e.xAxisScale = this.scales.linearScale(e.minX, e.maxX, t) : (e.xAxisScale = this.scales.linearScale(1, t, t), e.noLabelsProvided && e.labels.length > 0 && (e.xAxisScale = this.scales.linearScale(1, e.labels.length, t - 1), e.seriesX = e.labels.slice())), s && (e.labels = e.xAxisScale.result.slice()));
                if (e.minX === e.maxX) if ("datetime" === i.xaxis.type) {
                    var l = new Date(e.minX);
                    l.setDate(l.getDate() - 2), e.minX = new Date(l).getTime();
                    var h = new Date(e.maxX);
                    h.setDate(h.getDate() + 2), e.maxX = new Date(h).getTime()
                } else ("numeric" === i.xaxis.type || "category" === i.xaxis.type && !e.noLabelsProvided) && (e.minX = e.minX - 2, e.maxX = e.maxX + 2);
                return e.isXNumeric && (e.seriesX.forEach(function (t, i) {
                    t.forEach(function (t, s) {
                        if (s > 0) {
                            var a = t - e.seriesX[i][s - 1];
                            e.minXDiff = Math.min(a, e.minXDiff)
                        }
                    })
                }), this.calcMinXDiffForTinySeries()), {minX: e.minX, maxX: e.maxX}
            }
        }, {
            key: "calcMinXDiffForTinySeries", value: function () {
                var t = this.w, e = t.globals.labels.length;
                return 1 === t.globals.labels.length ? t.globals.minXDiff = (t.globals.maxX - t.globals.minX) / e / 3 : t.globals.minXDiff === Number.MAX_VALUE && (t.globals.timelineLabels.length > 0 && (e = t.globals.timelineLabels.length), e < 3 && (e = 3), t.globals.minXDiff = (t.globals.maxX - t.globals.minX) / e), t.globals.minXDiff
            }
        }, {
            key: "setZRange", value: function () {
                var t = this.w.globals;
                if (t.isDataXYZ) for (var e = 0; e < t.series.length; e++) if (void 0 !== t.seriesZ[e]) for (var i = 0; i < t.seriesZ[e].length; i++) null !== t.seriesZ[e][i] && d.isNumber(t.seriesZ[e][i]) && (t.maxZ = Math.max(t.maxZ, t.seriesZ[e][i]), t.minZ = Math.min(t.minZ, t.seriesZ[e][i]))
            }
        }]), t
    }(), G = function () {
        function t(i) {
            e(this, t), this.ctx = i, this.w = i.w
        }

        return s(t, [{
            key: "getAllSeriesEls", value: function () {
                return this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-series")
            }
        }, {
            key: "getSeriesByName", value: function (t) {
                return this.w.globals.dom.baseEl.querySelector("[seriesName='".concat(d.escapeString(t), "']"))
            }
        }, {
            key: "addCollapsedClassToSeries", value: function (t, e) {
                var i = this.w;

                function s(i) {
                    for (var s = 0; s < i.length; s++) i[s].index === e && t.node.classList.add("apexcharts-series-collapsed")
                }

                s(i.globals.collapsedSeries), s(i.globals.ancillaryCollapsedSeries)
            }
        }, {
            key: "toggleSeriesOnHover", value: function (t, e) {
                var i = this.w, s = i.globals.dom.baseEl.querySelectorAll(".apexcharts-series");
                if ("mousemove" === t.type) {
                    var a = parseInt(e.getAttribute("rel")) - 1, n = null;
                    n = i.globals.axisCharts || "radialBar" === i.config.chart.type ? i.globals.axisCharts ? i.globals.dom.baseEl.querySelector(".apexcharts-series[data\\:realIndex='".concat(a, "']")) : i.globals.dom.baseEl.querySelector(".apexcharts-series[rel='".concat(a + 1, "']")) : i.globals.dom.baseEl.querySelector(".apexcharts-series[rel='".concat(a + 1, "'] path"));
                    for (var r = 0; r < s.length; r++) s[r].classList.add("legend-mouseover-inactive");
                    null !== n && (i.globals.axisCharts || n.parentNode.classList.remove("legend-mouseover-inactive"), n.classList.remove("legend-mouseover-inactive"))
                } else if ("mouseout" === t.type) for (var o = 0; o < s.length; o++) s[o].classList.remove("legend-mouseover-inactive")
            }
        }, {
            key: "highlightRangeInSeries", value: function (t, e) {
                var i = this.w, s = i.globals.dom.baseEl.querySelectorAll(".apexcharts-heatmap-rect"), a = function () {
                    for (var t = 0; t < s.length; t++) s[t].classList.remove("legend-mouseover-inactive")
                };
                if ("mousemove" === t.type) {
                    var n = parseInt(e.getAttribute("rel")) - 1;
                    a(), function () {
                        for (var t = 0; t < s.length; t++) s[t].classList.add("legend-mouseover-inactive")
                    }(), function (t) {
                        for (var e = 0; e < s.length; e++) {
                            var i = parseInt(s[e].getAttribute("val"));
                            i >= t.from && i <= t.to && s[e].classList.remove("legend-mouseover-inactive")
                        }
                    }(i.config.plotOptions.heatmap.colorScale.ranges[n])
                } else "mouseout" === t.type && a()
            }
        }, {
            key: "getActiveSeriesIndex", value: function () {
                var t = this.w, e = 0;
                if (t.globals.series.length > 1) for (var i = t.globals.series.map(function (e, i) {
                    return e.length > 0 && "bar" !== t.config.series[i].type && "column" !== t.config.series[i].type ? i : -1
                }), s = 0; s < i.length; s++) if (-1 !== i[s]) {
                    e = i[s];
                    break
                }
                return e
            }
        }, {
            key: "getActiveConfigSeriesIndex", value: function () {
                var t = this.w, e = 0;
                if (t.config.series.length > 1) for (var i = t.config.series.map(function (t, e) {
                    return t.data && t.data.length > 0 ? e : -1
                }), s = 0; s < i.length; s++) if (-1 !== i[s]) {
                    e = i[s];
                    break
                }
                return e
            }
        }, {
            key: "getPreviousPaths", value: function () {
                var t = this.w;

                function e(e, i, s) {
                    for (var a = e[i].childNodes, n = {
                        type: s,
                        paths: [],
                        realIndex: e[i].getAttribute("data:realIndex")
                    }, r = 0; r < a.length; r++) if (a[r].hasAttribute("pathTo")) {
                        var o = a[r].getAttribute("pathTo");
                        n.paths.push({d: o})
                    }
                    t.globals.previousPaths.push(n)
                }

                t.globals.previousPaths = [];
                var i = t.globals.dom.baseEl.querySelectorAll(".apexcharts-line-series .apexcharts-series");
                if (i.length > 0) for (var s = i.length - 1; s >= 0; s--) e(i, s, "line");
                var a = t.globals.dom.baseEl.querySelectorAll(".apexcharts-area-series .apexcharts-series");
                if (a.length > 0) for (var n = a.length - 1; n >= 0; n--) e(a, n, "area");
                var r = t.globals.dom.baseEl.querySelectorAll(".apexcharts-bar-series .apexcharts-series");
                if (r.length > 0) for (var o = 0; o < r.length; o++) e(r, o, "bar");
                var l = t.globals.dom.baseEl.querySelectorAll(".apexcharts-candlestick-series .apexcharts-series");
                if (l.length > 0) for (var h = 0; h < l.length; h++) e(l, h, "candlestick");
                var c = t.globals.dom.baseEl.querySelectorAll(".apexcharts-radar-series .apexcharts-series");
                if (c.length > 0) for (var d = 0; d < c.length; d++) e(c, d, "radar");
                var u = t.globals.dom.baseEl.querySelectorAll(".apexcharts-bubble-series .apexcharts-series");
                if (u.length > 0) for (var g = 0; g < u.length; g++) {
                    for (var f = t.globals.dom.baseEl.querySelectorAll(".apexcharts-bubble-series .apexcharts-series[data\\:realIndex='".concat(g, "'] circle")), p = [], x = 0; x < f.length; x++) p.push({
                        x: f[x].getAttribute("cx"),
                        y: f[x].getAttribute("cy"),
                        r: f[x].getAttribute("r")
                    });
                    t.globals.previousPaths.push(p)
                }
                var b = t.globals.dom.baseEl.querySelectorAll(".apexcharts-scatter-series .apexcharts-series");
                if (b.length > 0) for (var m = 0; m < b.length; m++) {
                    for (var v = t.globals.dom.baseEl.querySelectorAll(".apexcharts-scatter-series .apexcharts-series[data\\:realIndex='".concat(m, "'] circle")), y = [], w = 0; w < v.length; w++) y.push({
                        x: v[w].getAttribute("cx"),
                        y: v[w].getAttribute("cy"),
                        r: v[w].getAttribute("r")
                    });
                    t.globals.previousPaths.push(y)
                }
                var k = t.globals.dom.baseEl.querySelectorAll(".apexcharts-heatmap .apexcharts-series");
                if (k.length > 0) for (var A = 0; A < k.length; A++) {
                    for (var S = t.globals.dom.baseEl.querySelectorAll(".apexcharts-heatmap .apexcharts-series[data\\:realIndex='".concat(A, "'] rect")), C = [], L = 0; L < S.length; L++) C.push({color: S[L].getAttribute("color")});
                    t.globals.previousPaths.push(C)
                }
                t.globals.axisCharts || (t.globals.previousPaths = t.globals.series)
            }
        }, {
            key: "handleNoData", value: function () {
                var t = this.w, e = t.config.noData, i = new f(this.ctx), s = t.globals.svgWidth / 2,
                    a = t.globals.svgHeight / 2, n = "middle";
                if (t.globals.noData = !0, t.globals.animationEnded = !0, "left" === e.align ? (s = 10, n = "start") : "right" === e.align && (s = t.globals.svgWidth - 10, n = "end"), "top" === e.verticalAlign ? a = 50 : "bottom" === e.verticalAlign && (a = t.globals.svgHeight - 50), s += e.offsetX, a = a + parseInt(e.style.fontSize) + 2, void 0 !== e.text && "" !== e.text) {
                    var r = i.drawText({
                        x: s,
                        y: a,
                        text: e.text,
                        textAnchor: n,
                        fontSize: e.style.fontSize,
                        fontFamily: e.style.fontFamily,
                        foreColor: e.style.color,
                        opacity: 1,
                        class: "apexcharts-text-nodata"
                    });
                    r.node.setAttribute("class", "apexcharts-title-text"), t.globals.dom.Paper.add(r)
                }
            }
        }, {
            key: "setNullSeriesToZeroValues", value: function (t) {
                for (var e = this.w, i = 0; i < t.length; i++) if (0 === t[i].length) for (var s = 0; s < t[e.globals.maxValsInArrayIndex].length; s++) t[i].push(0);
                return t
            }
        }, {
            key: "hasAllSeriesEqualX", value: function () {
                for (var t = !0, e = this.w, i = this.filteredSeriesX(), s = 0; s < i.length - 1; s++) if (i[s][0] !== i[s + 1][0]) {
                    t = !1;
                    break
                }
                return e.globals.allSeriesHasEqualX = t, t
            }
        }, {
            key: "filteredSeriesX", value: function () {
                var t = this.w.globals.seriesX.map(function (t, e) {
                    return t.length > 0 ? t : []
                });
                return t
            }
        }]), t
    }(), _ = function () {
        function t(i) {
            e(this, t), this.ctx = i, this.w = i.w, this.lgRect = {}, this.yAxisWidth = 0, this.xAxisHeight = 0, this.isSparkline = this.w.config.chart.sparkline.enabled, this.xPadRight = 0, this.xPadLeft = 0
        }

        return s(t, [{
            key: "plotCoords", value: function () {
                var t = this.w, e = t.globals, i = this.getLegendsRect();
                e.axisCharts ? this.setGridCoordsForAxisCharts(i) : this.setGridCoordsForNonAxisCharts(i), this.titleSubtitleOffset(), e.gridHeight = e.gridHeight - t.config.grid.padding.top - t.config.grid.padding.bottom, e.gridWidth = e.gridWidth - t.config.grid.padding.left - t.config.grid.padding.right - this.xPadRight - this.xPadLeft, e.translateX = e.translateX + t.config.grid.padding.left + this.xPadLeft, e.translateY = e.translateY + t.config.grid.padding.top
            }
        }, {
            key: "conditionalChecksForAxisCoords", value: function (t, e) {
                var i = this.w;
                this.xAxisHeight = (t.height + e.height) * i.globals.LINE_HEIGHT_RATIO + 15, this.xAxisWidth = t.width, this.xAxisHeight - e.height > i.config.xaxis.labels.maxHeight && (this.xAxisHeight = i.config.xaxis.labels.maxHeight), i.config.xaxis.labels.minHeight && this.xAxisHeight < i.config.xaxis.labels.minHeight && (this.xAxisHeight = i.config.xaxis.labels.minHeight), i.config.xaxis.floating && (this.xAxisHeight = 0), i.globals.isBarHorizontal ? this.yAxisWidth = i.globals.yLabelsCoords[0].width + i.globals.yTitleCoords[0].width + 15 : this.yAxisWidth = this.getTotalYAxisWidth();
                var s = 0, a = 0;
                i.config.yaxis.forEach(function (t) {
                    s += t.labels.minWidth, a += t.labels.maxWidth
                }), this.yAxisWidth < s && (this.yAxisWidth = s), this.yAxisWidth > a && (this.yAxisWidth = a)
            }
        }, {
            key: "setGridCoordsForAxisCharts", value: function (t) {
                var e = this.w, i = e.globals, s = this.getyAxisLabelsCoords(), a = this.getxAxisLabelsCoords(),
                    n = this.getyAxisTitleCoords(), r = this.getxAxisTitleCoords();
                e.globals.yLabelsCoords = [], e.globals.yTitleCoords = [], e.config.yaxis.map(function (t, i) {
                    e.globals.yLabelsCoords.push({
                        width: s[i].width,
                        index: i
                    }), e.globals.yTitleCoords.push({width: n[i].width, index: i})
                }), this.conditionalChecksForAxisCoords(a, r), i.translateXAxisY = e.globals.rotateXLabels ? this.xAxisHeight / 8 : -4, i.translateXAxisX = e.globals.rotateXLabels && e.globals.isXNumeric && e.config.xaxis.labels.rotate <= -45 ? -this.xAxisWidth / 4 : 0, e.globals.isBarHorizontal && (i.rotateXLabels = !1, i.translateXAxisY = parseInt(e.config.xaxis.labels.style.fontSize) / 1.5 * -1), i.translateXAxisY = i.translateXAxisY + e.config.xaxis.labels.offsetY, i.translateXAxisX = i.translateXAxisX + e.config.xaxis.labels.offsetX;
                var o = this.yAxisWidth, l = this.xAxisHeight;
                i.xAxisLabelsHeight = this.xAxisHeight, i.xAxisHeight = this.xAxisHeight;
                var h = 10;
                switch (e.config.grid.show && "radar" !== e.config.chart.type || (o = 0, l = 35), this.isSparkline && (t = {
                    height: 0,
                    width: 0
                }, l = 0, o = 0, h = 0), this.additionalPaddingXLabels(a), e.config.legend.position) {
                    case"bottom":
                        i.translateY = h, i.translateX = o, i.gridHeight = i.svgHeight - t.height - l - (this.isSparkline ? 0 : e.globals.rotateXLabels ? 10 : 15), i.gridWidth = i.svgWidth - o;
                        break;
                    case"top":
                        i.translateY = t.height + h, i.translateX = o, i.gridHeight = i.svgHeight - t.height - l - (this.isSparkline ? 0 : e.globals.rotateXLabels ? 10 : 15), i.gridWidth = i.svgWidth - o;
                        break;
                    case"left":
                        i.translateY = h, i.translateX = t.width + o, i.gridHeight = i.svgHeight - l - 12, i.gridWidth = i.svgWidth - t.width - o;
                        break;
                    case"right":
                        i.translateY = h, i.translateX = o, i.gridHeight = i.svgHeight - l - 12, i.gridWidth = i.svgWidth - t.width - o - 5;
                        break;
                    default:
                        throw new Error("Legend position not supported")
                }
                this.setGridXPosForDualYAxis(n, s), new W(this.ctx).setYAxisXPosition(s, n)
            }
        }, {
            key: "setGridCoordsForNonAxisCharts", value: function (t) {
                var e = this.w, i = e.globals, s = 0;
                e.config.legend.show && !e.config.legend.floating && (s = 20);
                var a = 10, n = 0;
                if ("pie" === e.config.chart.type || "donut" === e.config.chart.type ? (a += e.config.plotOptions.pie.offsetY, n += e.config.plotOptions.pie.offsetX) : "radialBar" === e.config.chart.type && (a += e.config.plotOptions.radialBar.offsetY, n += e.config.plotOptions.radialBar.offsetX), !e.config.legend.show) return i.gridHeight = i.svgHeight - 35, i.gridWidth = i.gridHeight, i.translateY = a - 10, void (i.translateX = n + (i.svgWidth - i.gridWidth) / 2);
                switch (e.config.legend.position) {
                    case"bottom":
                        i.gridHeight = i.svgHeight - t.height - 35, i.gridWidth = i.gridHeight, i.translateY = a - 20, i.translateX = n + (i.svgWidth - i.gridWidth) / 2;
                        break;
                    case"top":
                        i.gridHeight = i.svgHeight - t.height - 35, i.gridWidth = i.gridHeight, i.translateY = t.height + a, i.translateX = n + (i.svgWidth - i.gridWidth) / 2;
                        break;
                    case"left":
                        i.gridWidth = i.svgWidth - t.width - s, i.gridHeight = i.gridWidth, i.translateY = a, i.translateX = n + t.width + s;
                        break;
                    case"right":
                        i.gridWidth = i.svgWidth - t.width - s - 5, i.gridHeight = i.gridWidth, i.translateY = a, i.translateX = n + 10;
                        break;
                    default:
                        throw new Error("Legend position not supported")
                }
            }
        }, {
            key: "setGridXPosForDualYAxis", value: function (t, e) {
                var i = this.w;
                i.config.yaxis.map(function (s, a) {
                    -1 === i.globals.ignoreYAxisIndexes.indexOf(a) && !i.config.yaxis[a].floating && i.config.yaxis[a].show && s.opposite && (i.globals.translateX = i.globals.translateX - (e[a].width + t[a].width) - parseInt(i.config.yaxis[a].labels.style.fontSize) / 1.2 - 12)
                })
            }
        }, {
            key: "additionalPaddingXLabels", value: function (t) {
                var e = this, i = this.w;
                if ("category" === i.config.xaxis.type && i.globals.isBarHorizontal || "numeric" === i.config.xaxis.type || "datetime" === i.config.xaxis.type) {
                    var s = i.globals.isXNumeric;
                    i.config.yaxis.forEach(function (a, n) {
                        var r;
                        (!a.show || a.floating || -1 !== i.globals.collapsedSeriesIndices.indexOf(n) || s || a.opposite && i.globals.isBarHorizontal) && ((s && i.globals.isMultipleYAxis && -1 !== i.globals.collapsedSeriesIndices.indexOf(n) || i.globals.isBarHorizontal && a.opposite) && (r = t, i.config.grid.padding.left < r.width && (e.xPadLeft = r.width / 2 + 1)), (!i.globals.isBarHorizontal && a.opposite && -1 !== i.globals.collapsedSeriesIndices.indexOf(n) || s && !i.globals.isMultipleYAxis) && function (t) {
                            e.timescaleLabels ? e.timescaleLabels[e.timescaleLabels.length - 1].position + t.width > i.globals.gridWidth ? i.globals.skipLastTimelinelabel = !0 : i.globals.skipLastTimelinelabel = !1 : "datetime" !== i.config.xaxis.type && i.config.grid.padding.right < t.width && (e.xPadRight = t.width / 2 + 1)
                        }(t))
                    })
                }
            }
        }, {
            key: "titleSubtitleOffset", value: function () {
                var t = this.w, e = t.globals, i = this.isSparkline || !t.globals.axisCharts ? 0 : 10;
                void 0 !== t.config.title.text ? i += t.config.title.margin : i += this.isSparkline || !t.globals.axisCharts ? 0 : 5, void 0 !== t.config.subtitle.text ? i += t.config.subtitle.margin : i += this.isSparkline || !t.globals.axisCharts ? 0 : 5, t.config.legend.show && "bottom" === t.config.legend.position && !t.config.legend.floating && t.config.series.length > 1 && (i += 10);
                var s = this.getTitleSubtitleCoords("title"), a = this.getTitleSubtitleCoords("subtitle");
                e.gridHeight = e.gridHeight - s.height - a.height - i, e.translateY = e.translateY + s.height + a.height + i
            }
        }, {
            key: "getTotalYAxisWidth", value: function () {
                var t = this.w, e = 0, i = 10, s = function (e) {
                    return t.globals.ignoreYAxisIndexes.indexOf(e) > -1
                };
                return t.globals.yLabelsCoords.map(function (a, n) {
                    var r = t.config.yaxis[n].floating;
                    a.width > 0 && !r ? (e = e + a.width + i, s(n) && (e = e - a.width - i)) : e += r || !t.config.yaxis[n].show ? 0 : 5
                }), t.globals.yTitleCoords.map(function (a, n) {
                    var r = t.config.yaxis[n].floating;
                    i = parseInt(t.config.yaxis[n].title.style.fontSize), a.width > 0 && !r ? (e = e + a.width + i, s(n) && (e = e - a.width - i)) : e += r || !t.config.yaxis[n].show ? 0 : 5
                }), e
            }
        }, {
            key: "getxAxisTimeScaleLabelsCoords", value: function () {
                var t, e = this.w;
                this.timescaleLabels = e.globals.timelineLabels.slice(), e.globals.isBarHorizontal && "datetime" === e.config.xaxis.type && (this.timescaleLabels = e.globals.invertedTimelineLabels.slice());
                var i = this.timescaleLabels.map(function (t) {
                    return t.value
                }), s = i.reduce(function (t, e) {
                    return void 0 === t ? (console.error("You have possibly supplied invalid Date format. Please supply a valid JavaScript Date"), 0) : t.length > e.length ? t : e
                }, 0);
                return 1.05 * (t = new f(this.ctx).getTextRects(s, e.config.xaxis.labels.style.fontSize)).width * i.length > e.globals.gridWidth && 0 !== e.config.xaxis.labels.rotate && (e.globals.overlappingXLabels = !0), t
            }
        }, {
            key: "getxAxisLabelsCoords", value: function () {
                var t, e = this.w, i = e.globals.labels.slice();
                if (e.globals.timelineLabels.length > 0) {
                    var s = this.getxAxisTimeScaleLabelsCoords();
                    t = {width: s.width, height: s.height}
                } else {
                    var a = "left" !== e.config.legend.position || "right" !== e.config.legend.position || e.config.legend.floating ? 0 : this.lgRect.width,
                        n = e.globals.xLabelFormatter, r = i.reduce(function (t, e) {
                            return t.length > e.length ? t : e
                        }, 0);
                    e.globals.isBarHorizontal && (r = e.globals.yAxisScale[0].result.reduce(function (t, e) {
                        return t.length > e.length ? t : e
                    }, 0)), r = new N(this.ctx).xLabelFormat(n, r);
                    var o = new f(this.ctx), l = o.getTextRects(r, e.config.xaxis.labels.style.fontSize);
                    (t = {
                        width: l.width,
                        height: l.height
                    }).width * i.length > e.globals.svgWidth - a - this.yAxisWidth && 0 !== e.config.xaxis.labels.rotate ? e.globals.isBarHorizontal || (e.globals.rotateXLabels = !0, l = o.getTextRects(r, e.config.xaxis.labels.style.fontSize, e.config.xaxis.labels.style.fontFamily, "rotate(".concat(e.config.xaxis.labels.rotate, " 0 0)"), !1), t.height = l.height / 1.66) : e.globals.rotateXLabels = !1
                }
                return e.config.xaxis.labels.show || (t = {width: 0, height: 0}), {width: t.width, height: t.height}
            }
        }, {
            key: "getyAxisLabelsCoords", value: function () {
                var t = this, e = this.w, i = [], s = 10;
                return e.config.yaxis.map(function (a, n) {
                    if (a.show && a.labels.show && e.globals.yAxisScale[n].result.length) {
                        var r = e.globals.yLabelFormatters[n], o = r(e.globals.yAxisScale[n].niceMax, -1);
                        if (void 0 !== o && 0 !== o.length || (o = e.globals.yAxisScale[n].niceMax), e.globals.isBarHorizontal) s = 0, o = r(o = e.globals.labels.slice().reduce(function (t, e) {
                            return t.length > e.length ? t : e
                        }, 0), -1);
                        var l = new f(t.ctx).getTextRects(o, a.labels.style.fontSize);
                        i.push({width: l.width + s, height: l.height})
                    } else i.push({width: 0, height: 0})
                }), i
            }
        }, {
            key: "getxAxisTitleCoords", value: function () {
                var t = this.w, e = 0, i = 0;
                if (void 0 !== t.config.xaxis.title.text) {
                    var s = new f(this.ctx).getTextRects(t.config.xaxis.title.text, t.config.xaxis.title.style.fontSize);
                    e = s.width, i = s.height
                }
                return {width: e, height: i}
            }
        }, {
            key: "getyAxisTitleCoords", value: function () {
                var t = this, e = this.w, i = [];
                return e.config.yaxis.map(function (e, s) {
                    if (e.show && void 0 !== e.title.text) {
                        var a = new f(t.ctx).getTextRects(e.title.text, e.title.style.fontSize, e.title.style.fontFamily, "rotate(-90 0 0)", !1);
                        i.push({width: a.width, height: a.height})
                    } else i.push({width: 0, height: 0})
                }), i
            }
        }, {
            key: "getTitleSubtitleCoords", value: function (t) {
                var e = this.w, i = 0, s = 0, a = "title" === t ? e.config.title.floating : e.config.subtitle.floating,
                    n = e.globals.dom.baseEl.querySelector(".apexcharts-".concat(t, "-text"));
                if (null !== n && !a) {
                    var r = n.getBoundingClientRect();
                    i = r.width, s = e.globals.axisCharts ? r.height + 5 : r.height
                }
                return {width: i, height: s}
            }
        }, {
            key: "getLegendsRect", value: function () {
                var t = this.w, e = t.globals.dom.baseEl.querySelector(".apexcharts-legend"),
                    i = Object.assign({}, d.getBoundingClientRect(e));
                return null !== e && !t.config.legend.floating && t.config.legend.show ? this.lgRect = {
                    x: i.x,
                    y: i.y,
                    height: i.height,
                    width: 0 === i.height ? 0 : i.width
                } : this.lgRect = {x: 0, y: 0, height: 0, width: 0}, this.lgRect
            }
        }]), t
    }(), j = function () {
        function t(i) {
            e(this, t), this.ctx = i, this.w = i.w, this.timeScaleArray = []
        }

        return s(t, [{
            key: "calculateTimeScaleTicks", value: function (t, e) {
                var i = this, s = this.w;
                if (s.globals.allSeriesCollapsed) return s.globals.labels = [], s.globals.timelineLabels = [], [];
                var a = new m(this.ctx), r = (e - t) / 864e5;
                this.determineInterval(r), s.globals.disableZoomIn = !1, s.globals.disableZoomOut = !1, r < .005 ? s.globals.disableZoomIn = !0 : r > 5e4 && (s.globals.disableZoomOut = !0);
                var o = a.getTimeUnitsfromTimestamp(t, e), l = s.globals.gridWidth / r, h = l / 24, c = h / 60,
                    d = Math.floor(24 * r), u = Math.floor(24 * r * 60), g = Math.floor(r), f = Math.floor(r / 30),
                    p = Math.floor(r / 365), x = {
                        minMinute: o.minMinute,
                        minHour: o.minHour,
                        minDate: o.minDate,
                        minMonth: o.minMonth,
                        minYear: o.minYear
                    }, b = {
                        firstVal: x,
                        currentMinute: x.minMinute,
                        currentHour: x.minHour,
                        currentMonthDate: x.minDate,
                        currentDate: x.minDate,
                        currentMonth: x.minMonth,
                        currentYear: x.minYear,
                        daysWidthOnXAxis: l,
                        hoursWidthOnXAxis: h,
                        minutesWidthOnXAxis: c,
                        numberOfMinutes: u,
                        numberOfHours: d,
                        numberOfDays: g,
                        numberOfMonths: f,
                        numberOfYears: p
                    };
                switch (this.tickInterval) {
                    case"years":
                        this.generateYearScale(b);
                        break;
                    case"months":
                    case"half_year":
                        this.generateMonthScale(b);
                        break;
                    case"months_days":
                    case"months_fortnight":
                    case"days":
                    case"week_days":
                        this.generateDayScale(b);
                        break;
                    case"hours":
                        this.generateHourScale(b);
                        break;
                    case"minutes":
                        this.generateMinuteScale(b)
                }
                var v = this.timeScaleArray.map(function (t) {
                    var e = {
                        position: t.position,
                        unit: t.unit,
                        year: t.year,
                        day: t.day ? t.day : 1,
                        hour: t.hour ? t.hour : 0,
                        month: t.month + 1
                    };
                    return "month" === t.unit ? n({}, e, {value: t.value + 1}) : "day" === t.unit || "hour" === t.unit ? n({}, e, {value: t.value}) : "minute" === t.unit ? n({}, e, {
                        value: t.value,
                        minute: t.value
                    }) : t
                });
                return v.filter(function (t) {
                    var e = 1, a = Math.ceil(s.globals.gridWidth / 120), n = t.value;
                    void 0 !== s.config.xaxis.tickAmount && (a = s.config.xaxis.tickAmount), v.length > a && (e = Math.floor(v.length / a));
                    var r = !1, o = !1;
                    switch (i.tickInterval) {
                        case"half_year":
                            e = 7, "year" === t.unit && (r = !0);
                            break;
                        case"months":
                            e = 1, "year" === t.unit && (r = !0);
                            break;
                        case"months_fortnight":
                            e = 15, "year" !== t.unit && "month" !== t.unit || (r = !0), 30 === n && (o = !0);
                            break;
                        case"months_days":
                            e = 10, "month" === t.unit && (r = !0), 30 === n && (o = !0);
                            break;
                        case"week_days":
                            e = 8, "month" === t.unit && (r = !0);
                            break;
                        case"days":
                            e = 1, "month" === t.unit && (r = !0);
                            break;
                        case"hours":
                            "day" === t.unit && (r = !0);
                            break;
                        case"minutes":
                            n % 5 != 0 && (o = !0)
                    }
                    if ("minutes" === i.tickInterval || "hours" === i.tickInterval) {
                        if (!o) return !0
                    } else if ((n % e == 0 || r) && !o) return !0
                })
            }
        }, {
            key: "recalcDimensionsBasedOnFormat", value: function (t, e) {
                var i = this.w, s = this.formatDates(t), a = this.removeOverlappingTS(s);
                e ? i.globals.invertedTimelineLabels = a.slice() : i.globals.timelineLabels = a.slice(), new _(this.ctx).plotCoords()
            }
        }, {
            key: "determineInterval", value: function (t) {
                switch (!0) {
                    case t > 1825:
                        this.tickInterval = "years";
                        break;
                    case t > 800 && t <= 1825:
                        this.tickInterval = "half_year";
                        break;
                    case t > 180 && t <= 800:
                        this.tickInterval = "months";
                        break;
                    case t > 90 && t <= 180:
                        this.tickInterval = "months_fortnight";
                        break;
                    case t > 60 && t <= 90:
                        this.tickInterval = "months_days";
                        break;
                    case t > 30 && t <= 60:
                        this.tickInterval = "week_days";
                        break;
                    case t > 2 && t <= 30:
                        this.tickInterval = "days";
                        break;
                    case t > .1 && t <= 2:
                        this.tickInterval = "hours";
                        break;
                    case t < .1:
                        this.tickInterval = "minutes";
                        break;
                    default:
                        this.tickInterval = "days"
                }
            }
        }, {
            key: "generateYearScale", value: function (t) {
                var e = t.firstVal, i = t.currentMonth, s = t.currentYear, a = t.daysWidthOnXAxis, n = t.numberOfYears,
                    r = e.minYear, o = 0, l = new m(this.ctx);
                if (e.minDate > 1 && e.minMonth > 0) {
                    var h = l.determineRemainingDaysOfYear(e.minYear, e.minMonth, e.minDate);
                    o = (l.determineDaysOfYear(e.minYear) - h + 1) * a, r = e.minYear + 1, this.timeScaleArray.push({
                        position: o,
                        value: r,
                        unit: "year",
                        year: r,
                        month: d.monthMod(i + 1)
                    })
                } else 1 === e.minDate && 0 === e.minMonth && this.timeScaleArray.push({
                    position: o,
                    value: r,
                    unit: "year",
                    year: s,
                    month: d.monthMod(i + 1)
                });
                for (var c = r, u = o, g = 0; g < n; g++) c++, u = l.determineDaysOfYear(c - 1) * a + u, this.timeScaleArray.push({
                    position: u,
                    value: c,
                    unit: "year",
                    year: c,
                    month: 1
                })
            }
        }, {
            key: "generateMonthScale", value: function (t) {
                var e = t.firstVal, i = t.currentMonthDate, s = t.currentMonth, a = t.currentYear,
                    n = t.daysWidthOnXAxis, r = t.numberOfMonths, o = s, l = 0, h = new m(this.ctx), c = "month", u = 0;
                if (e.minDate > 1) {
                    l = (h.determineDaysOfMonths(s + 1, e.minYear) - i + 1) * n, o = d.monthMod(s + 1);
                    var g = a + u, f = d.monthMod(o), p = o;
                    0 === o && (c = "year", p = g, f = 1, g += u += 1), this.timeScaleArray.push({
                        position: l,
                        value: p,
                        unit: c,
                        year: g,
                        month: f
                    })
                } else this.timeScaleArray.push({position: l, value: o, unit: c, year: a, month: d.monthMod(s)});
                for (var x = o + 1, b = l, v = 0, y = 1; v < r; v++, y++) {
                    0 === (x = d.monthMod(x)) ? (c = "year", u += 1) : c = "month";
                    var w = a + Math.floor(x / 12) + u;
                    b = h.determineDaysOfMonths(x, w) * n + b;
                    var k = 0 === x ? w : x;
                    this.timeScaleArray.push({position: b, value: k, unit: c, year: w, month: 0 === x ? 1 : x}), x++
                }
            }
        }, {
            key: "generateDayScale", value: function (t) {
                var e = t.firstVal, i = t.currentMonth, s = t.currentYear, a = t.hoursWidthOnXAxis, n = t.numberOfDays,
                    r = new m(this.ctx), o = "day", l = (24 - e.minHour) * a, h = e.minDate + 1, c = h,
                    u = function (t, e, i) {
                        return t > r.determineDaysOfMonths(e + 1, i) ? (g = 1, o = "month", c = e += 1, e) : e
                    }, g = h, f = u(g, i, s);
                this.timeScaleArray.push({position: l, value: c, unit: o, year: s, month: d.monthMod(f), day: g});
                for (var p = l, x = 0; x < n; x++) {
                    o = "day", f = u(g += 1, f, s + Math.floor(f / 12) + 0);
                    var b = s + Math.floor(f / 12) + 0;
                    p = 24 * a + p;
                    var v = 1 === g ? d.monthMod(f) : g;
                    this.timeScaleArray.push({position: p, value: v, unit: o, year: b, month: d.monthMod(f), day: v})
                }
            }
        }, {
            key: "generateHourScale", value: function (t) {
                var e = t.firstVal, i = t.currentDate, s = t.currentMonth, a = t.currentYear, n = t.minutesWidthOnXAxis,
                    r = t.numberOfHours, o = new m(this.ctx), l = "hour", h = function (t, e) {
                        return t > o.determineDaysOfMonths(e + 1, a) && (x = 1, e += 1), {month: e, date: x}
                    }, c = function (t, e) {
                        return t > o.determineDaysOfMonths(e + 1, a) ? e += 1 : e
                    }, u = 60 - e.minMinute, g = u * n, f = e.minHour + 1, p = f + 1;
                60 === u && (g = 0, p = (f = e.minHour) + 1);
                var x = i, b = c(x, s);
                this.timeScaleArray.push({
                    position: g,
                    value: f,
                    unit: l,
                    day: x,
                    hour: p,
                    year: a,
                    month: d.monthMod(b)
                });
                for (var v = g, y = 0; y < r; y++) {
                    if (l = "hour", p >= 24) p = 0, l = "day", b = h(x += 1, b).month, b = c(x, b);
                    var w = a + Math.floor(b / 12) + 0;
                    v = 0 === p && 0 === y ? u * n : 60 * n + v;
                    var k = 0 === p ? x : p;
                    this.timeScaleArray.push({
                        position: v,
                        value: k,
                        unit: l,
                        hour: p,
                        day: x,
                        year: w,
                        month: d.monthMod(b)
                    }), p++
                }
            }
        }, {
            key: "generateMinuteScale", value: function (t) {
                var e = t.firstVal, i = t.currentMinute, s = t.currentHour, a = t.currentDate, n = t.currentMonth,
                    r = t.currentYear, o = t.minutesWidthOnXAxis, l = t.numberOfMinutes, h = o - (i - e.minMinute),
                    c = e.minMinute + 1, u = c + 1, g = a, f = n, p = r, x = s;
                this.timeScaleArray.push({
                    position: h,
                    value: c,
                    unit: "minute",
                    day: g,
                    hour: x,
                    minute: u,
                    year: p,
                    month: d.monthMod(f)
                });
                for (var b = h, m = 0; m < l; m++) {
                    u >= 60 && (u = 0, 24 === (x += 1) && (x = 0));
                    var v = r + Math.floor(f / 12) + 0;
                    b = o + b;
                    var y = u;
                    this.timeScaleArray.push({
                        position: b,
                        value: y,
                        unit: "minute",
                        hour: x,
                        minute: u,
                        day: g,
                        year: v,
                        month: d.monthMod(f)
                    }), u++
                }
            }
        }, {
            key: "createRawDateString", value: function (t, e) {
                var i = t.year;
                return i += "-" + ("0" + t.month.toString()).slice(-2), "day" === t.unit ? i += "day" === t.unit ? "-" + ("0" + e).slice(-2) : "-01" : i += "-" + ("0" + (t.day ? t.day : "1")).slice(-2), "hour" === t.unit ? i += "hour" === t.unit ? "T" + ("0" + e).slice(-2) : "T00" : i += "T" + ("0" + (t.hour ? t.hour : "0")).slice(-2), i += "minute" === t.unit ? ":" + ("0" + e).slice(-2) + ":00.000Z" : ":00:00.000Z"
            }
        }, {
            key: "formatDates", value: function (t) {
                var e = this, i = this.w;
                return t.map(function (t) {
                    var s = t.value.toString(), a = new m(e.ctx), n = e.createRawDateString(t, s),
                        r = new Date(Date.parse(n));
                    if (void 0 === i.config.xaxis.labels.format) {
                        var o = "dd MMM", l = i.config.xaxis.labels.datetimeFormatter;
                        "year" === t.unit && (o = l.year), "month" === t.unit && (o = l.month), "day" === t.unit && (o = l.day), "hour" === t.unit && (o = l.hour), "minute" === t.unit && (o = l.minute), s = a.formatDate(r, o, !0, !1)
                    } else s = a.formatDate(r, i.config.xaxis.labels.format);
                    return {dateString: n, position: t.position, value: s, unit: t.unit, year: t.year, month: t.month}
                })
            }
        }, {
            key: "removeOverlappingTS", value: function (t) {
                var e = this, i = new f(this.ctx), s = 0, a = t.map(function (a, n) {
                    if (n > 0 && e.w.config.xaxis.labels.hideOverlappingLabels) {
                        var r = i.getTextRects(t[s].value).width, o = t[s].position;
                        return a.position > o + r + 10 ? (s = n, a) : null
                    }
                    return a
                });
                return a = a.filter(function (t) {
                    return null !== t
                })
            }
        }]), t
    }(), U = function () {
        function t(i, s) {
            e(this, t), this.ctx = s, this.w = s.w, this.el = i, this.coreUtils = new y(this.ctx), this.twoDSeries = [], this.threeDSeries = [], this.twoDSeriesX = []
        }

        return s(t, [{
            key: "setupElements", value: function () {
                var t = this.w.globals, e = this.w.config, i = e.chart.type;
                t.axisCharts = ["line", "area", "bar", "rangeBar", "candlestick", "radar", "scatter", "bubble", "heatmap"].indexOf(i) > -1, t.xyCharts = ["line", "area", "bar", "rangeBar", "candlestick", "scatter", "bubble"].indexOf(i) > -1, t.isBarHorizontal = ("bar" === e.chart.type || "rangeBar" === e.chart.type) && e.plotOptions.bar.horizontal, t.chartClass = ".apexcharts" + t.cuid, t.dom.baseEl = this.el, t.dom.elWrap = document.createElement("div"), f.setAttrs(t.dom.elWrap, {
                    id: t.chartClass.substring(1),
                    class: "apexcharts-canvas " + t.chartClass.substring(1)
                }), this.el.appendChild(t.dom.elWrap), t.dom.Paper = new window.SVG.Doc(t.dom.elWrap), t.dom.Paper.attr({
                    class: "apexcharts-svg",
                    "xmlns:data": "ApexChartsNS",
                    transform: "translate(".concat(e.chart.offsetX, ", ").concat(e.chart.offsetY, ")")
                }), t.dom.Paper.node.style.background = e.chart.background, this.setSVGDimensions(), t.dom.elGraphical = t.dom.Paper.group().attr({class: "apexcharts-inner apexcharts-graphical"}), t.dom.elDefs = t.dom.Paper.defs(), t.dom.elLegendWrap = document.createElement("div"), t.dom.elLegendWrap.classList.add("apexcharts-legend"), t.dom.elWrap.appendChild(t.dom.elLegendWrap), t.dom.Paper.add(t.dom.elGraphical), t.dom.elGraphical.add(t.dom.elDefs)
            }
        }, {
            key: "plotChartType", value: function (t, e) {
                var i = this.w, s = i.config, a = i.globals, n = {series: [], i: []}, r = {series: [], i: []},
                    o = {series: [], i: []}, l = {series: [], i: []}, h = {series: [], i: []};
                a.series.map(function (e, s) {
                    void 0 !== t[s].type ? ("column" === t[s].type || "bar" === t[s].type ? (i.config.plotOptions.bar.horizontal = !1, l.series.push(e), l.i.push(s)) : "area" === t[s].type ? (r.series.push(e), r.i.push(s)) : "line" === t[s].type ? (n.series.push(e), n.i.push(s)) : "scatter" === t[s].type ? (o.series.push(e), o.i.push(s)) : "bubble" === t[s].type || ("candlestick" === t[s].type ? (h.series.push(e), h.i.push(s)) : console.warn("You have specified an unrecognized chart type. Available types for this propery are line/area/column/bar/scatter/bubble")), a.comboCharts = !0) : (n.series.push(e), n.i.push(s))
                });
                var c = new D(this.ctx, e), d = new E(this.ctx, e), u = new I(this.ctx), g = new F(this.ctx),
                    f = new R(this.ctx, e), p = new Y(this.ctx), x = [];
                if (a.comboCharts) {
                    if (r.series.length > 0 && x.push(c.draw(r.series, "area", r.i)), l.series.length > 0) if (i.config.chart.stacked) {
                        var b = new M(this.ctx, e);
                        x.push(b.draw(l.series, l.i))
                    } else {
                        var m = new P(this.ctx, e);
                        x.push(m.draw(l.series, l.i))
                    }
                    if (n.series.length > 0 && x.push(c.draw(n.series, "line", n.i)), h.series.length > 0 && x.push(d.draw(h.series, h.i)), o.series.length > 0) {
                        var v = new D(this.ctx, e, !0);
                        x.push(v.draw(o.series, "scatter", o.i))
                    }
                } else switch (s.chart.type) {
                    case"line":
                        x = c.draw(a.series, "line");
                        break;
                    case"area":
                        x = c.draw(a.series, "area");
                        break;
                    case"bar":
                        if (s.chart.stacked) x = new M(this.ctx, e).draw(a.series); else x = new P(this.ctx, e).draw(a.series);
                        break;
                    case"candlestick":
                        x = new E(this.ctx, e).draw(a.series);
                        break;
                    case"rangeBar":
                        x = f.draw(a.series);
                        break;
                    case"heatmap":
                        x = new X(this.ctx, e).draw(a.series);
                        break;
                    case"pie":
                    case"donut":
                        x = u.draw(a.series);
                        break;
                    case"radialBar":
                        x = g.draw(a.series);
                        break;
                    case"radar":
                        x = p.draw(a.series);
                        break;
                    default:
                        x = c.draw(a.series)
                }
                return x
            }
        }, {
            key: "setSVGDimensions", value: function () {
                var t = this.w.globals, e = this.w.config;
                t.svgWidth = e.chart.width, t.svgHeight = e.chart.height;
                var i = d.getDimensions(this.el), s = e.chart.width.toString().split(/[0-9]+/g).pop();
                if ("%" === s ? d.isNumber(i[0]) && (0 === i[0].width && (i = d.getDimensions(this.el.parentNode)), t.svgWidth = i[0] * parseInt(e.chart.width) / 100) : "px" !== s && "" !== s || (t.svgWidth = parseInt(e.chart.width)), "auto" !== t.svgHeight && "" !== t.svgHeight) if ("%" === e.chart.height.toString().split(/[0-9]+/g).pop()) {
                    var a = d.getDimensions(this.el.parentNode);
                    t.svgHeight = a[1] * parseInt(e.chart.height) / 100
                } else t.svgHeight = parseInt(e.chart.height); else t.axisCharts ? t.svgHeight = t.svgWidth / 1.61 : t.svgHeight = t.svgWidth;
                f.setAttrs(t.dom.Paper.node, {width: t.svgWidth, height: t.svgHeight});
                var n = e.chart.sparkline.enabled ? 0 : t.axisCharts ? e.chart.parentHeightOffset : 0;
                t.dom.Paper.node.parentNode.parentNode.style.minHeight = t.svgHeight + n + "px", t.dom.elWrap.style.width = t.svgWidth + "px", t.dom.elWrap.style.height = t.svgHeight + "px"
            }
        }, {
            key: "shiftGraphPosition", value: function () {
                var t = this.w.globals, e = t.translateY, i = {transform: "translate(" + t.translateX + ", " + e + ")"};
                f.setAttrs(t.dom.elGraphical.node, i)
            }
        }, {
            key: "coreCalculations", value: function () {
                new V(this.ctx).init()
            }
        }, {
            key: "resetGlobals", value: function () {
                var t = this, e = this.w.globals;
                e.series = [], e.seriesCandleO = [], e.seriesCandleH = [], e.seriesCandleL = [], e.seriesCandleC = [], e.seriesRangeStart = [], e.seriesRangeEnd = [], e.seriesPercent = [], e.seriesX = [], e.seriesZ = [], e.seriesNames = [], e.seriesTotals = [], e.stackedSeriesTotals = [], e.labels = [], e.timelineLabels = [], e.noLabelsProvided = !1, e.timescaleTicks = [], e.resizeTimer = null, e.selectionResizeTimer = null, e.seriesXvalues = t.w.config.series.map(function (t) {
                    return []
                }), e.seriesYvalues = t.w.config.series.map(function (t) {
                    return []
                }), e.delayedElements = [], e.pointsArray = [], e.dataLabelsRects = [], e.isXNumeric = !1, e.isDataXYZ = !1, e.maxY = -Number.MAX_VALUE, e.minY = Number.MIN_VALUE, e.minYArr = [], e.maxYArr = [], e.maxX = -Number.MAX_VALUE, e.minX = Number.MAX_VALUE, e.initialmaxX = -Number.MAX_VALUE, e.initialminX = Number.MAX_VALUE, e.maxDate = 0, e.minDate = Number.MAX_VALUE, e.minZ = Number.MAX_VALUE, e.maxZ = -Number.MAX_VALUE, e.minXDiff = Number.MAX_VALUE, e.yAxisScale = [], e.xAxisScale = null, e.xAxisTicksPositions = [], e.yLabelsCoords = [], e.yTitleCoords = [], e.xRange = 0, e.yRange = [], e.zRange = 0, e.dataPoints = 0
            }
        }, {
            key: "isMultipleY", value: function () {
                if (this.w.config.yaxis.constructor === Array && this.w.config.yaxis.length > 1) return this.w.config.chart.stacked = !1, this.w.globals.isMultipleYAxis = !0, !0
            }
        }, {
            key: "excludeCollapsedSeriesInYAxis", value: function () {
                var t = this, e = this.w;
                e.globals.ignoreYAxisIndexes = e.globals.collapsedSeries.map(function (e, i) {
                    if (t.w.globals.isMultipleYAxis) return e.index
                })
            }
        }, {
            key: "isMultiFormat", value: function () {
                return this.isFormatXY() || this.isFormat2DArray()
            }
        }, {
            key: "isFormatXY", value: function () {
                var t = this.w.config.series.slice(), e = new G(this.ctx);
                if (this.activeSeriesIndex = e.getActiveConfigSeriesIndex(), void 0 !== t[this.activeSeriesIndex].data && t[this.activeSeriesIndex].data.length > 0 && null !== t[this.activeSeriesIndex].data[0] && void 0 !== t[this.activeSeriesIndex].data[0].x && null !== t[this.activeSeriesIndex].data[0]) return !0
            }
        }, {
            key: "isFormat2DArray", value: function () {
                var t = this.w.config.series.slice(), e = new G(this.ctx);
                if (this.activeSeriesIndex = e.getActiveConfigSeriesIndex(), void 0 !== t[this.activeSeriesIndex].data && t[this.activeSeriesIndex].data.length > 0 && void 0 !== t[this.activeSeriesIndex].data[0] && null !== t[this.activeSeriesIndex].data[0] && t[this.activeSeriesIndex].data[0].constructor === Array) return !0
            }
        }, {
            key: "handleFormat2DArray", value: function (t, e) {
                for (var i = this.w.config, s = this.w.globals, a = 0; a < t[e].data.length; a++) if (void 0 !== t[e].data[a][1] && (Array.isArray(t[e].data[a][1]) && 4 === t[e].data[a][1].length ? this.twoDSeries.push(d.parseNumber(t[e].data[a][1][3])) : this.twoDSeries.push(d.parseNumber(t[e].data[a][1])), s.dataFormatXNumeric = !0), "datetime" === i.xaxis.type) {
                    var n = new Date(t[e].data[a][0]);
                    n = new Date(n).getTime(), this.twoDSeriesX.push(n)
                } else this.twoDSeriesX.push(t[e].data[a][0]);
                for (var r = 0; r < t[e].data.length; r++) void 0 !== t[e].data[r][2] && (this.threeDSeries.push(t[e].data[r][2]), s.isDataXYZ = !0)
            }
        }, {
            key: "handleFormatXY", value: function (t, e) {
                var i = this.w.config, s = this.w.globals, a = new m(this.ctx), n = e;
                s.collapsedSeriesIndices.indexOf(e) > -1 && (n = this.activeSeriesIndex);
                for (var r = 0; r < t[e].data.length; r++) void 0 !== t[e].data[r].y && (Array.isArray(t[e].data[r].y) ? this.twoDSeries.push(d.parseNumber(t[e].data[r].y[t[e].data[r].y.length - 1])) : this.twoDSeries.push(d.parseNumber(t[e].data[r].y)));
                for (var o = 0; o < t[n].data.length; o++) {
                    var l = "string" == typeof t[n].data[o].x, h = !!a.isValidDate(t[n].data[o].x.toString());
                    l || h ? l ? "datetime" !== i.xaxis.type || s.isRangeData ? (this.fallbackToCategory = !0, this.twoDSeriesX.push(t[n].data[o].x)) : this.twoDSeriesX.push(a.parseDate(t[n].data[o].x)) : "datetime" === i.xaxis.type ? this.twoDSeriesX.push(a.parseDate(t[n].data[o].x.toString())) : (s.dataFormatXNumeric = !0, s.isXNumeric = !0, this.twoDSeriesX.push(parseFloat(t[n].data[o].x))) : (s.isXNumeric = !0, s.dataFormatXNumeric = !0, this.twoDSeriesX.push(t[n].data[o].x))
                }
                if (t[e].data[0] && void 0 !== t[e].data[0].z) {
                    for (var c = 0; c < t[e].data.length; c++) this.threeDSeries.push(t[e].data[c].z);
                    s.isDataXYZ = !0
                }
            }
        }, {
            key: "handleRangeData", value: function (t, e) {
                var i = this.w.globals, s = {};
                return this.isFormat2DArray() ? s = this.handleRangeDataFormat("array", t, e) : this.isFormatXY() && (s = this.handleRangeDataFormat("xy", t, e)), i.seriesRangeStart.push(s.start), i.seriesRangeEnd.push(s.end), s
            }
        }, {
            key: "handleCandleStickData", value: function (t, e) {
                var i = this.w.globals, s = {};
                return this.isFormat2DArray() ? s = this.handleCandleStickDataFormat("array", t, e) : this.isFormatXY() && (s = this.handleCandleStickDataFormat("xy", t, e)), i.seriesCandleO.push(s.o), i.seriesCandleH.push(s.h), i.seriesCandleL.push(s.l), i.seriesCandleC.push(s.c), s
            }
        }, {
            key: "handleRangeDataFormat", value: function (t, e, i) {
                var s = [], a = [],
                    n = "Please provide [Start, End] values in valid format. Read more https://apexcharts.com/docs/series/#rangecharts",
                    r = new G(this.ctx).getActiveConfigSeriesIndex();
                if ("array" === t) {
                    if (2 !== e[r].data[0][1].length) throw new Error(n);
                    for (var o = 0; o < e[i].data.length; o++) s.push(e[i].data[o][1][0]), a.push(e[i].data[o][1][1])
                } else if ("xy" === t) {
                    if (2 !== e[r].data[0].y.length) throw new Error(n);
                    for (var l = 0; l < e[i].data.length; l++) s.push(e[i].data[l].y[0]), a.push(e[i].data[l].y[1])
                }
                return {start: s, end: a}
            }
        }, {
            key: "handleCandleStickDataFormat", value: function (t, e, i) {
                var s = [], a = [], n = [], r = [],
                    o = "Please provide [Open, High, Low and Close] values in valid format. Read more https://apexcharts.com/docs/series/#candlestick";
                if ("array" === t) {
                    if (4 !== e[i].data[0][1].length) throw new Error(o);
                    for (var l = 0; l < e[i].data.length; l++) s.push(e[i].data[l][1][0]), a.push(e[i].data[l][1][1]), n.push(e[i].data[l][1][2]), r.push(e[i].data[l][1][3])
                } else if ("xy" === t) {
                    if (4 !== e[i].data[0].y.length) throw new Error(o);
                    for (var h = 0; h < e[i].data.length; h++) s.push(e[i].data[h].y[0]), a.push(e[i].data[h].y[1]), n.push(e[i].data[h].y[2]), r.push(e[i].data[h].y[3])
                }
                return {o: s, h: a, l: n, c: r}
            }
        }, {
            key: "parseDataAxisCharts", value: function (t) {
                for (var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.ctx, i = this.w.config, s = this.w.globals, a = new m(e), n = 0; n < t.length; n++) {
                    if (this.twoDSeries = [], this.twoDSeriesX = [], this.threeDSeries = [], void 0 === t[n].data) return void console.error("It is a possibility that you may have not included 'data' property in series.");
                    if ("rangeBar" !== i.chart.type && "rangeArea" !== i.chart.type && "rangeBar" !== t[n].type && "rangeArea" !== t[n].type || (s.isRangeData = !0, this.handleRangeData(t, n)), this.isMultiFormat()) this.isFormat2DArray() ? this.handleFormat2DArray(t, n) : this.isFormatXY() && this.handleFormatXY(t, n), "candlestick" !== i.chart.type && "candlestick" !== t[n].type || this.handleCandleStickData(t, n), s.series.push(this.twoDSeries), s.labels.push(this.twoDSeriesX), s.seriesX.push(this.twoDSeriesX), this.fallbackToCategory || (s.isXNumeric = !0); else {
                        if ("datetime" === i.xaxis.type) {
                            s.isXNumeric = !0;
                            for (var r = i.labels.length > 0 ? i.labels.slice() : i.xaxis.categories.slice(), o = 0; o < r.length; o++) if ("string" == typeof r[o]) {
                                if (!a.isValidDate(r[o])) throw new Error("You have provided invalid Date format. Please provide a valid JavaScript Date");
                                this.twoDSeriesX.push(a.parseDate(r[o]))
                            }
                            s.seriesX.push(this.twoDSeriesX)
                        } else if ("numeric" === i.xaxis.type) {
                            s.isXNumeric = !0;
                            var l = i.labels.length > 0 ? i.labels.slice() : i.xaxis.categories.slice();
                            l.length > 0 && (this.twoDSeriesX = l, s.seriesX.push(this.twoDSeriesX))
                        }
                        s.labels.push(this.twoDSeriesX);
                        var h = t[n].data.map(function (t) {
                            return d.parseNumber(t)
                        });
                        s.series.push(h)
                    }
                    s.seriesZ.push(this.threeDSeries), void 0 !== t[n].name ? s.seriesNames.push(t[n].name) : s.seriesNames.push("series-" + parseInt(n + 1))
                }
                return this.w
            }
        }, {
            key: "parseDataNonAxisCharts", value: function (t) {
                var e = this.w.globals, i = this.w.config;
                e.series = t.slice(), e.seriesNames = i.labels.slice();
                for (var s = 0; s < e.series.length; s++) void 0 === e.seriesNames[s] && e.seriesNames.push("series-" + (s + 1));
                return this.w
            }
        }, {
            key: "handleExternalLabelsData", value: function (t) {
                var e = this.w.config, i = this.w.globals;
                if (e.xaxis.categories.length > 0) i.labels = e.xaxis.categories; else if (e.labels.length > 0) i.labels = e.labels.slice(); else if (this.fallbackToCategory) i.labels = i.labels[0]; else {
                    var s = [];
                    if (i.axisCharts) {
                        for (var a = 0; a < i.series[i.maxValsInArrayIndex].length; a++) s.push(a + 1);
                        for (var n = 0; n < t.length; n++) i.seriesX.push(s);
                        i.isXNumeric = !0
                    }
                    if (0 === s.length) {
                        s = [0, 10];
                        for (var r = 0; r < t.length; r++) i.seriesX.push(s)
                    }
                    i.labels = s, i.noLabelsProvided = !0
                }
            }
        }, {
            key: "parseData", value: function (t) {
                var e = this.w, i = e.config, s = e.globals;
                if (this.excludeCollapsedSeriesInYAxis(), this.fallbackToCategory = !1, this.resetGlobals(), this.isMultipleY(), s.axisCharts ? this.parseDataAxisCharts(t) : this.parseDataNonAxisCharts(t), this.coreUtils.getLargestSeries(), "bar" === i.chart.type && i.chart.stacked) {
                    var a = new G(this.ctx);
                    s.series = a.setNullSeriesToZeroValues(s.series)
                }
                this.coreUtils.getSeriesTotals(), s.axisCharts && this.coreUtils.getStackedSeriesTotals(), this.coreUtils.getPercentSeries(), s.dataFormatXNumeric || s.isXNumeric && ("numeric" !== i.xaxis.type || 0 !== i.labels.length || 0 !== i.xaxis.categories.length) || this.handleExternalLabelsData(t)
            }
        }, {
            key: "xySettings", value: function () {
                var t = null, e = this.w;
                if (e.globals.axisCharts) {
                    if ("back" === e.config.xaxis.crosshairs.position) new T(this.ctx).drawXCrosshairs();
                    if ("back" === e.config.yaxis[0].crosshairs.position) new T(this.ctx).drawYCrosshairs();
                    if (t = this.coreUtils.getCalculatedRatios(), "datetime" === e.config.xaxis.type && void 0 === e.config.xaxis.labels.formatter) {
                        var i, s = new j(this.ctx);
                        isFinite(e.globals.minX) && isFinite(e.globals.maxX) && !e.globals.isBarHorizontal ? (i = s.calculateTimeScaleTicks(e.globals.minX, e.globals.maxX), s.recalcDimensionsBasedOnFormat(i, !1)) : e.globals.isBarHorizontal && (i = s.calculateTimeScaleTicks(e.globals.minY, e.globals.maxY), s.recalcDimensionsBasedOnFormat(i, !0))
                    }
                }
                return t
            }
        }, {
            key: "drawAxis", value: function (t, e) {
                var i, s, a = this.w.globals, n = this.w.config, r = new H(this.ctx), o = new W(this.ctx);
                a.axisCharts && "radar" !== t && (a.isBarHorizontal ? (s = o.drawYaxisInversed(0), i = r.drawXaxisInversed(0), a.dom.elGraphical.add(i), a.dom.elGraphical.add(s)) : (i = r.drawXaxis(), a.dom.elGraphical.add(i), n.yaxis.map(function (t, e) {
                    -1 === a.ignoreYAxisIndexes.indexOf(e) && (s = o.drawYaxis(e), a.dom.Paper.add(s))
                })));
                n.yaxis.map(function (t, e) {
                    -1 === a.ignoreYAxisIndexes.indexOf(e) && o.yAxisTitleRotate(e, t.opposite)
                })
            }
        }, {
            key: "setupBrushHandler", value: function () {
                var t = this, e = this.w;
                e.config.chart.brush.enabled && ("function" != typeof e.config.chart.events.selection && (e.config.chart.brush.targets || [e.config.chart.brush.target]).forEach(function (i) {
                    var s = ApexCharts.getChartByID(i);
                    s.w.globals.brushSource = t.ctx;
                    var a = function () {
                        t.ctx._updateOptions({
                            chart: {
                                selection: {
                                    xaxis: {
                                        min: s.w.globals.minX,
                                        max: s.w.globals.maxX
                                    }
                                }
                            }
                        }, !1, !1)
                    };
                    "function" != typeof s.w.config.chart.events.zoomed && (s.w.config.chart.events.zoomed = function () {
                        a()
                    }), "function" != typeof s.w.config.chart.events.scrolled && (s.w.config.chart.events.scrolled = function () {
                        a()
                    }), e.config.chart.events.selection = function (t, i) {
                        var a = d.clone(e.config.yaxis);
                        e.config.chart.brush.autoScaleYaxis && (a = new B(s).autoScaleY(s, i));
                        s._updateOptions({xaxis: {min: i.xaxis.min, max: i.xaxis.max}, yaxis: a}, !1, !1, !1)
                    }
                }))
            }
        }]), t
    }();
    var q = setTimeout;

    function Z() {
    }

    function $(t) {
        if (!(this instanceof $)) throw new TypeError("Promises must be constructed via new");
        if ("function" != typeof t) throw new TypeError("not a function");
        this._state = 0, this._handled = !1, this._value = void 0, this._deferreds = [], it(t, this)
    }

    function J(t, e) {
        for (; 3 === t._state;) t = t._value;
        0 !== t._state ? (t._handled = !0, $._immediateFn(function () {
            var i = 1 === t._state ? e.onFulfilled : e.onRejected;
            if (null !== i) {
                var s;
                try {
                    s = i(t._value)
                } catch (t) {
                    return void K(e.promise, t)
                }
                Q(e.promise, s)
            } else (1 === t._state ? Q : K)(e.promise, t._value)
        })) : t._deferreds.push(e)
    }

    function Q(t, e) {
        try {
            if (e === t) throw new TypeError("A promise cannot be resolved with itself.");
            if (e && ("object" == typeof e || "function" == typeof e)) {
                var i = e.then;
                if (e instanceof $) return t._state = 3, t._value = e, void tt(t);
                if ("function" == typeof i) return void it((s = i, a = e, function () {
                    s.apply(a, arguments)
                }), t)
            }
            t._state = 1, t._value = e, tt(t)
        } catch (e) {
            K(t, e)
        }
        var s, a
    }

    function K(t, e) {
        t._state = 2, t._value = e, tt(t)
    }

    function tt(t) {
        2 === t._state && 0 === t._deferreds.length && $._immediateFn(function () {
            t._handled || $._unhandledRejectionFn(t._value)
        });
        for (var e = 0, i = t._deferreds.length; e < i; e++) J(t, t._deferreds[e]);
        t._deferreds = null
    }

    function et(t, e, i) {
        this.onFulfilled = "function" == typeof t ? t : null, this.onRejected = "function" == typeof e ? e : null, this.promise = i
    }

    function it(t, e) {
        var i = !1;
        try {
            t(function (t) {
                i || (i = !0, Q(e, t))
            }, function (t) {
                i || (i = !0, K(e, t))
            })
        } catch (t) {
            if (i) return;
            i = !0, K(e, t)
        }
    }

    $.prototype.catch = function (t) {
        return this.then(null, t)
    }, $.prototype.then = function (t, e) {
        var i = new this.constructor(Z);
        return J(this, new et(t, e, i)), i
    }, $.prototype.finally = function (t) {
        var e = this.constructor;
        return this.then(function (i) {
            return e.resolve(t()).then(function () {
                return i
            })
        }, function (i) {
            return e.resolve(t()).then(function () {
                return e.reject(i)
            })
        })
    }, $.all = function (t) {
        return new $(function (e, i) {
            if (!t || void 0 === t.length) throw new TypeError("Promise.all accepts an array");
            var s = Array.prototype.slice.call(t);
            if (0 === s.length) return e([]);
            var a = s.length;

            function n(t, r) {
                try {
                    if (r && ("object" == typeof r || "function" == typeof r)) {
                        var o = r.then;
                        if ("function" == typeof o) return void o.call(r, function (e) {
                            n(t, e)
                        }, i)
                    }
                    s[t] = r, 0 == --a && e(s)
                } catch (t) {
                    i(t)
                }
            }

            for (var r = 0; r < s.length; r++) n(r, s[r])
        })
    }, $.resolve = function (t) {
        return t && "object" == typeof t && t.constructor === $ ? t : new $(function (e) {
            e(t)
        })
    }, $.reject = function (t) {
        return new $(function (e, i) {
            i(t)
        })
    }, $.race = function (t) {
        return new $(function (e, i) {
            for (var s = 0, a = t.length; s < a; s++) t[s].then(e, i)
        })
    }, $._immediateFn = "function" == typeof setImmediate && function (t) {
        setImmediate(t)
    } || function (t) {
        q(t, 0)
    }, $._unhandledRejectionFn = function (t) {
        "undefined" != typeof console && console && console.warn("Possible Unhandled Promise Rejection:", t)
    };
    var st, at, nt = function () {
        function t(i) {
            e(this, t), this.ctx = i, this.w = i.w
        }

        return s(t, [{
            key: "getSvgString", value: function () {
                return this.w.globals.dom.Paper.svg()
            }
        }, {
            key: "cleanup", value: function () {
                var t = this.w, e = t.globals.dom.baseEl.querySelector(".apexcharts-xcrosshairs"),
                    i = t.globals.dom.baseEl.querySelector(".apexcharts-ycrosshairs");
                e && e.setAttribute("x", -500), i && (i.setAttribute("y1", -100), i.setAttribute("y2", -100))
            }
        }, {
            key: "svgUrl", value: function () {
                this.cleanup();
                var t = this.getSvgString(), e = new Blob([t], {type: "image/svg+xml;charset=utf-8"});
                return URL.createObjectURL(e)
            }
        }, {
            key: "dataURI", value: function () {
                var t = this;
                return new $(function (e) {
                    var i = t.w;
                    t.cleanup();
                    var s = document.createElement("canvas");
                    s.width = i.globals.svgWidth, s.height = i.globals.svgHeight;
                    var a = "transparent" === i.config.chart.background ? "#fff" : i.config.chart.background,
                        n = s.getContext("2d");
                    n.fillStyle = a, n.fillRect(0, 0, s.width, s.height);
                    var r = window.URL || window.webkitURL || window, o = new Image;
                    o.crossOrigin = "anonymous";
                    var l = t.getSvgString(), h = "data:image/svg+xml," + encodeURIComponent(l);
                    o.onload = function () {
                        n.drawImage(o, 0, 0), r.revokeObjectURL(h);
                        var t = s.toDataURL("image/png");
                        e(t)
                    }, o.src = h
                })
            }
        }, {
            key: "exportToSVG", value: function () {
                this.triggerDownload(this.svgUrl(), ".svg")
            }
        }, {
            key: "exportToPng", value: function () {
                var t = this;
                this.dataURI().then(function (e) {
                    t.triggerDownload(e, ".png")
                })
            }
        }, {
            key: "triggerDownload", value: function (t, e) {
                var i = document.createElement("a");
                i.href = t, i.download = this.w.globals.chartID + e, document.body.appendChild(i), i.click(), document.body.removeChild(i)
            }
        }]), t
    }(), rt = function () {
        function t(i) {
            e(this, t), this.ctx = i, this.w = i.w;
            var s = this.w;
            this.anim = new g(this.ctx), this.xaxisLabels = s.globals.labels.slice(), this.animX = s.config.grid.xaxis.lines.animate && s.config.chart.animations.enabled, this.animY = s.config.grid.yaxis.lines.animate && s.config.chart.animations.enabled, s.globals.timelineLabels.length > 0 && (this.xaxisLabels = s.globals.timelineLabels.slice())
        }

        return s(t, [{
            key: "drawGridArea", value: function () {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null, e = this.w,
                    i = new f(this.ctx);
                null === t && (t = i.group({class: "apexcharts-grid"}));
                var s = i.drawLine(e.globals.padHorizontal, 1, e.globals.padHorizontal, e.globals.gridHeight, "transparent"),
                    a = i.drawLine(e.globals.padHorizontal, e.globals.gridHeight, e.globals.gridWidth, e.globals.gridHeight, "transparent");
                return t.add(a), t.add(s), t
            }
        }, {
            key: "drawGrid", value: function () {
                var t = this.w, e = new H(this.ctx), i = new W(this.ctx), s = this.w.globals, a = null;
                if (s.axisCharts) {
                    if (t.config.grid.show) a = this.renderGrid(), s.dom.elGraphical.add(a.el), this.drawGridArea(a.el); else {
                        var n = this.drawGridArea();
                        s.dom.elGraphical.add(n)
                    }
                    null !== a && e.xAxisLabelCorrections(a.xAxisTickWidth), i.setYAxisTextAlignments()
                }
            }
        }, {
            key: "createGridMask", value: function () {
                var t = this.w, e = t.globals, i = new f(this.ctx),
                    s = Array.isArray(t.config.stroke.width) ? 0 : t.config.stroke.width;
                if (Array.isArray(t.config.stroke.width)) {
                    var a = 0;
                    t.config.stroke.width.forEach(function (t) {
                        a = Math.max(a, t)
                    }), s = a
                }
                e.dom.elGridRectMask = document.createElementNS(e.SVGNS, "clipPath"), e.dom.elGridRectMask.setAttribute("id", "gridRectMask".concat(e.cuid)), e.dom.elGridRectMarkerMask = document.createElementNS(e.SVGNS, "clipPath"), e.dom.elGridRectMarkerMask.setAttribute("id", "gridRectMarkerMask".concat(e.cuid)), e.dom.elGridRect = i.drawRect(-s / 2, -s / 2, e.gridWidth + s, e.gridHeight + s, 0, "#fff"), new y(this).getLargestMarkerSize();
                var n = t.globals.markers.largestSize + 1;
                e.dom.elGridRectMarker = i.drawRect(-n, -n, e.gridWidth + 2 * n, e.gridHeight + 2 * n, 0, "#fff"), e.dom.elGridRectMask.appendChild(e.dom.elGridRect.node), e.dom.elGridRectMarkerMask.appendChild(e.dom.elGridRectMarker.node);
                var r = e.dom.baseEl.querySelector("defs");
                r.appendChild(e.dom.elGridRectMask), r.appendChild(e.dom.elGridRectMarkerMask)
            }
        }, {
            key: "renderGrid", value: function () {
                var t = this.w, e = new f(this.ctx), i = t.config.grid.strokeDashArray,
                    s = e.group({class: "apexcharts-grid"}), a = e.group({class: "apexcharts-gridlines-horizontal"}),
                    n = e.group({class: "apexcharts-gridlines-vertical"});
                s.add(a), s.add(n);
                for (var r, o = 8, l = 0; l < t.globals.series.length && (void 0 !== t.globals.yAxisScale[l] && (o = t.globals.yAxisScale[l].result.length - 1), !(o > 2)); l++) ;
                if (t.globals.isBarHorizontal) {
                    if (r = o, t.config.grid.xaxis.lines.show || t.config.xaxis.axisTicks.show) for (var h, c = t.globals.padHorizontal, d = t.globals.gridHeight, u = 0; u < r + 1 && (h = c = c + t.globals.gridWidth / r + .3, u !== r - 1); u++) {
                        if (t.config.grid.xaxis.lines.show) {
                            var g = e.drawLine(c, 0, h, d, t.config.grid.borderColor, i);
                            g.node.classList.add("apexcharts-gridline"), n.add(g), this.animX && this.animateLine(g, {
                                x1: 0,
                                x2: 0
                            }, {x1: c, x2: h})
                        }
                        new H(this.ctx).drawXaxisTicks(c, s)
                    }
                    if (t.config.grid.yaxis.lines.show) for (var p = 0, x = 0, b = t.globals.gridWidth, m = 0; m < t.globals.dataPoints + 1; m++) {
                        var v = e.drawLine(0, p, b, x, t.config.grid.borderColor, i);
                        a.add(v), v.node.classList.add("apexcharts-gridline"), this.animY && this.animateLine(v, {
                            y1: p + 20,
                            y2: x + 20
                        }, {y1: p, y2: x}), x = p += t.globals.gridHeight / t.globals.dataPoints
                    }
                } else {
                    if (r = this.xaxisLabels.length, t.config.grid.xaxis.lines.show || t.config.xaxis.axisTicks.show) {
                        var y, w = t.globals.padHorizontal, k = t.globals.gridHeight;
                        if (t.globals.timelineLabels.length > 0) for (var A = 0; A < r; A++) {
                            if (w = this.xaxisLabels[A].position, y = this.xaxisLabels[A].position, t.config.grid.xaxis.lines.show && w > 0 && w < t.globals.gridWidth) {
                                var S = e.drawLine(w, 0, y, k, t.config.grid.borderColor, i);
                                S.node.classList.add("apexcharts-gridline"), n.add(S), this.animX && this.animateLine(S, {
                                    x1: 0,
                                    x2: 0
                                }, {x1: w, x2: y})
                            }
                            var C = new H(this.ctx);
                            A === r - 1 && t.globals.skipLastTimelinelabel || C.drawXaxisTicks(w, s)
                        } else for (var L = r, z = 0; z < L; z++) {
                            var P = L;
                            if (t.globals.isXNumeric && "bar" !== t.config.chart.type && (P -= 1), y = w += t.globals.gridWidth / P, z === P - 1) break;
                            if (t.config.grid.xaxis.lines.show) {
                                var M = e.drawLine(w, 0, y, k, t.config.grid.borderColor, i);
                                M.node.classList.add("apexcharts-gridline"), n.add(M), this.animX && this.animateLine(M, {
                                    x1: 0,
                                    x2: 0
                                }, {x1: w, x2: y})
                            }
                            new H(this.ctx).drawXaxisTicks(w, s)
                        }
                    }
                    if (t.config.grid.yaxis.lines.show) for (var E = 0, T = 0, X = t.globals.gridWidth, I = 0; I < o + 1; I++) {
                        var Y = e.drawLine(0, E, X, T, t.config.grid.borderColor, i);
                        a.add(Y), Y.node.classList.add("apexcharts-gridline"), this.animY && this.animateLine(Y, {
                            y1: E + 20,
                            y2: T + 20
                        }, {y1: E, y2: T}), T = E += t.globals.gridHeight / o
                    }
                }
                return this.drawGridBands(s, r, o), {el: s, xAxisTickWidth: t.globals.gridWidth / r}
            }
        }, {
            key: "drawGridBands", value: function (t, e, i) {
                var s = this.w, a = new f(this.ctx);
                if (void 0 !== s.config.grid.row.colors && s.config.grid.row.colors.length > 0) for (var n = 0, r = s.globals.gridHeight / i, o = s.globals.gridWidth, l = 0, h = 0; l < i; l++, h++) {
                    h >= s.config.grid.row.colors.length && (h = 0);
                    var c = s.config.grid.row.colors[h], d = a.drawRect(0, n, o, r, 0, c, s.config.grid.row.opacity);
                    t.add(d), d.node.classList.add("apexcharts-gridRow"), n += s.globals.gridHeight / i
                }
                if (void 0 !== s.config.grid.column.colors && s.config.grid.column.colors.length > 0) for (var u = s.globals.padHorizontal, g = s.globals.padHorizontal + s.globals.gridWidth / e, p = s.globals.gridHeight, x = 0, b = 0; x < e; x++, b++) {
                    b >= s.config.grid.column.colors.length && (b = 0);
                    var m = s.config.grid.column.colors[b],
                        v = a.drawRect(u, 0, g, p, 0, m, s.config.grid.column.opacity);
                    v.node.classList.add("apexcharts-gridColumn"), t.add(v), u += s.globals.gridWidth / e
                }
            }
        }, {
            key: "animateLine", value: function (t, e, i) {
                var s = this.w, a = s.config.chart.animations;
                if (a && !s.globals.resized && !s.globals.dataChanged) {
                    var n = a.speed;
                    this.anim.animateLine(t, e, i, n)
                }
            }
        }]), t
    }(), ot = function () {
        function t(i, s) {
            e(this, t), this.ctx = i, this.w = i.w, this.onLegendClick = this.onLegendClick.bind(this), this.onLegendHovered = this.onLegendHovered.bind(this)
        }

        return s(t, [{
            key: "init", value: function () {
                var t = this.w, e = t.globals, i = t.config;
                if ((i.legend.showForSingleSeries && 1 === e.series.length || e.series.length > 1 || !e.axisCharts) && i.legend.show) {
                    for (; e.dom.elLegendWrap.firstChild;) e.dom.elLegendWrap.removeChild(e.dom.elLegendWrap.firstChild);
                    this.drawLegends(), d.isIE11() ? document.getElementsByTagName("head")[0].appendChild(this.getLegendStyles()) : this.appendToForeignObject(), "bottom" === i.legend.position || "top" === i.legend.position ? this.legendAlignHorizontal() : "right" !== i.legend.position && "left" !== i.legend.position || this.legendAlignVertical()
                }
            }
        }, {
            key: "appendToForeignObject", value: function () {
                var t = this.w.globals, e = document.createElementNS(t.SVGNS, "foreignObject");
                e.setAttribute("x", 0), e.setAttribute("y", 0), e.setAttribute("width", t.svgWidth), e.setAttribute("height", t.svgHeight), t.dom.elLegendWrap.setAttribute("xmlns", "http://www.w3.org/1999/xhtml"), e.appendChild(t.dom.elLegendWrap), e.appendChild(this.getLegendStyles()), t.dom.Paper.node.insertBefore(e, t.dom.elGraphical.node)
            }
        }, {
            key: "drawLegends", value: function () {
                var t = this.w, e = t.config.legend.fontFamily, i = t.globals.seriesNames, s = t.globals.colors.slice();
                if ("heatmap" === t.config.chart.type) {
                    var a = t.config.plotOptions.heatmap.colorScale.ranges;
                    i = a.map(function (t) {
                        return t.name ? t.name : t.from + " - " + t.to
                    }), s = a.map(function (t) {
                        return t.color
                    })
                }
                for (var n = t.globals.legendFormatter, r = 0; r <= i.length - 1; r++) {
                    var o = n(i[r], {seriesIndex: r, w: t}), l = !1, h = !1;
                    if (t.globals.collapsedSeries.length > 0) for (var c = 0; c < t.globals.collapsedSeries.length; c++) t.globals.collapsedSeries[c].index === r && (l = !0);
                    if (t.globals.ancillaryCollapsedSeriesIndices.length > 0) for (var d = 0; d < t.globals.ancillaryCollapsedSeriesIndices.length; d++) t.globals.ancillaryCollapsedSeriesIndices[d] === r && (h = !0);
                    var u = document.createElement("span");
                    u.classList.add("apexcharts-legend-marker");
                    var g = t.config.legend.markers.offsetX, p = t.config.legend.markers.offsetY,
                        x = t.config.legend.markers.height, b = t.config.legend.markers.width,
                        m = t.config.legend.markers.strokeWidth, v = t.config.legend.markers.strokeColor,
                        w = t.config.legend.markers.radius, k = u.style;
                    k.background = s[r], k.color = s[r], k.height = Array.isArray(x) ? parseFloat(x[r]) + "px" : parseFloat(x) + "px", k.width = Array.isArray(b) ? parseFloat(b[r]) + "px" : parseFloat(b) + "px", k.left = Array.isArray(g) ? g[r] : g, k.top = Array.isArray(p) ? p[r] : p, k.borderWidth = Array.isArray(m) ? m[r] : m, k.borderColor = Array.isArray(v) ? v[r] : v, k.borderRadius = Array.isArray(w) ? parseFloat(w[r]) + "px" : parseFloat(w) + "px", t.config.legend.markers.customHTML && (Array.isArray(t.config.legend.markers.customHTML) ? u.innerHTML = t.config.legend.markers.customHTML[r]() : u.innerHTML = t.config.legend.markers.customHTML()), f.setAttrs(u, {
                        rel: r + 1,
                        "data:collapsed": l || h
                    }), (l || h) && u.classList.add("inactive-legend");
                    var A = document.createElement("div"), S = document.createElement("span");
                    S.classList.add("apexcharts-legend-text"), S.innerHTML = o;
                    var C = t.config.legend.labels.useSeriesColors ? t.globals.colors[r] : t.config.legend.labels.colors;
                    C || (C = t.config.chart.foreColor), S.style.color = C, S.style.fontSize = parseFloat(t.config.legend.fontSize) + "px", S.style.fontFamily = e || t.config.chart.fontFamily, f.setAttrs(S, {
                        rel: r + 1,
                        "data:collapsed": l || h
                    }), A.appendChild(u), A.appendChild(S);
                    var L = new y(this.ctx);
                    if (!t.config.legend.showForZeroSeries) 0 === L.getSeriesTotalByIndex(r) && L.seriesHaveSameValues(r) && !L.isSeriesNull(r) && -1 === t.globals.collapsedSeriesIndices.indexOf(r) && -1 === t.globals.ancillaryCollapsedSeriesIndices.indexOf(r) && A.classList.add("apexcharts-hidden-zero-series");
                    t.config.legend.showForNullSeries || L.isSeriesNull(r) && -1 === t.globals.collapsedSeriesIndices.indexOf(r) && -1 === t.globals.ancillaryCollapsedSeriesIndices.indexOf(r) && A.classList.add("apexcharts-hidden-null-series"), t.globals.dom.elLegendWrap.appendChild(A), t.globals.dom.elLegendWrap.classList.add(t.config.legend.horizontalAlign), t.globals.dom.elLegendWrap.classList.add("position-" + t.config.legend.position), A.classList.add("apexcharts-legend-series"), A.style.margin = "".concat(t.config.legend.itemMargin.horizontal, "px ").concat(t.config.legend.itemMargin.vertical, "px"), t.globals.dom.elLegendWrap.style.width = t.config.legend.width ? t.config.legend.width + "px" : "", t.globals.dom.elLegendWrap.style.height = t.config.legend.height ? t.config.legend.height + "px" : "", f.setAttrs(A, {
                        rel: r + 1,
                        "data:collapsed": l || h
                    }), (l || h) && A.classList.add("inactive-legend"), t.config.legend.onItemClick.toggleDataSeries || A.classList.add("no-click")
                }
                "heatmap" !== t.config.chart.type && t.config.legend.onItemClick.toggleDataSeries && t.globals.dom.elWrap.addEventListener("click", this.onLegendClick, !0), t.config.legend.onItemHover.highlightDataSeries && (t.globals.dom.elWrap.addEventListener("mousemove", this.onLegendHovered, !0), t.globals.dom.elWrap.addEventListener("mouseout", this.onLegendHovered, !0))
            }
        }, {
            key: "getLegendBBox", value: function () {
                var t = this.w.globals.dom.baseEl.querySelector(".apexcharts-legend").getBoundingClientRect(),
                    e = t.width;
                return {clwh: t.height, clww: e}
            }
        }, {
            key: "setLegendWrapXY", value: function (t, e) {
                var i = this.w, s = i.globals.dom.baseEl.querySelector(".apexcharts-legend"),
                    a = s.getBoundingClientRect(), n = 0, r = 0;
                if ("bottom" === i.config.legend.position) r += i.globals.svgHeight - a.height / 2; else if ("top" === i.config.legend.position) {
                    var o = new _(this.ctx), l = o.getTitleSubtitleCoords("title").height,
                        h = o.getTitleSubtitleCoords("subtitle").height;
                    r = r + (l > 0 ? l - 10 : 0) + (h > 0 ? h - 10 : 0)
                }
                s.style.position = "absolute", n = n + t + i.config.legend.offsetX, r = r + e + i.config.legend.offsetY, s.style.left = n + "px", s.style.top = r + "px", "bottom" === i.config.legend.position ? (s.style.top = "auto", s.style.bottom = 10 + i.config.legend.offsetY + "px") : "right" === i.config.legend.position && (s.style.left = "auto", s.style.right = 25 + i.config.legend.offsetX + "px"), s.style.width && (s.style.width = parseInt(i.config.legend.width) + "px"), s.style.height && (s.style.height = parseInt(i.config.legend.height) + "px")
            }
        }, {
            key: "legendAlignHorizontal", value: function () {
                var t = this.w;
                t.globals.dom.baseEl.querySelector(".apexcharts-legend").style.right = 0;
                var e = this.getLegendBBox(), i = new _(this.ctx), s = i.getTitleSubtitleCoords("title"),
                    a = i.getTitleSubtitleCoords("subtitle"), n = 0;
                "bottom" === t.config.legend.position ? n = -e.clwh / 1.8 : "top" === t.config.legend.position && (n = s.height + a.height + t.config.title.margin + t.config.subtitle.margin - 15), this.setLegendWrapXY(20, n)
            }
        }, {
            key: "legendAlignVertical", value: function () {
                var t = this.w, e = this.getLegendBBox(), i = 0;
                "left" === t.config.legend.position && (i = 20), "right" === t.config.legend.position && (i = t.globals.svgWidth - e.clww - 10), this.setLegendWrapXY(i, 20)
            }
        }, {
            key: "onLegendHovered", value: function (t) {
                var e = this.w,
                    i = t.target.classList.contains("apexcharts-legend-text") || t.target.classList.contains("apexcharts-legend-marker");
                if ("heatmap" !== e.config.chart.type) !t.target.classList.contains("inactive-legend") && i && new G(this.ctx).toggleSeriesOnHover(t, t.target); else if (i) {
                    var s = parseInt(t.target.getAttribute("rel")) - 1;
                    this.ctx.fireEvent("legendHover", [this.ctx, s, this.w]), new G(this.ctx).highlightRangeInSeries(t, t.target)
                }
            }
        }, {
            key: "onLegendClick", value: function (t) {
                if (t.target.classList.contains("apexcharts-legend-text") || t.target.classList.contains("apexcharts-legend-marker")) {
                    var e = parseInt(t.target.getAttribute("rel")) - 1,
                        i = "true" === t.target.getAttribute("data:collapsed"),
                        s = this.w.config.chart.events.legendClick;
                    "function" == typeof s && s(this.ctx, e, this.w), this.ctx.fireEvent("legendClick", [this.ctx, e, this.w]);
                    var a = this.w.config.legend.markers.onClick;
                    "function" == typeof a && t.target.classList.contains("apexcharts-legend-marker") && (a(this.ctx, e, this.w), this.ctx.fireEvent("legendMarkerClick", [this.ctx, e, this.w])), this.toggleDataSeries(e, i)
                }
            }
        }, {
            key: "getLegendStyles", value: function () {
                var t = document.createElement("style");
                t.setAttribute("type", "text/css");
                var e = document.createTextNode("\n    \n      .apexcharts-legend {\n        display: flex;\n        overflow: auto;\n        padding: 0 10px;\n      }\n\n      .apexcharts-legend.position-bottom, .apexcharts-legend.position-top {\n        flex-wrap: wrap\n      }\n      .apexcharts-legend.position-right, .apexcharts-legend.position-left {\n        flex-direction: column;\n        bottom: 0;\n      }\n\n      .apexcharts-legend.position-bottom.left, .apexcharts-legend.position-top.left, .apexcharts-legend.position-right, .apexcharts-legend.position-left {\n        justify-content: flex-start;\n      }\n\n      .apexcharts-legend.position-bottom.center, .apexcharts-legend.position-top.center {\n        justify-content: center;  \n      }\n\n      .apexcharts-legend.position-bottom.right, .apexcharts-legend.position-top.right {\n        justify-content: flex-end;\n      }\n\n      .apexcharts-legend-series {\n        cursor: pointer;\n        line-height: normal;\n      }\n\n      .apexcharts-legend.position-bottom .apexcharts-legend-series, .apexcharts-legend.position-top .apexcharts-legend-series{\n        display: flex;\n        align-items: center;\n      }\n\n      .apexcharts-legend-text {\n        position: relative;\n        font-size: 14px;\n      }\n\n      .apexcharts-legend-text *, .apexcharts-legend-marker * {\n        pointer-events: none;\n      }\n\n      .apexcharts-legend-marker {\n        position: relative;\n        display: inline-block;\n        cursor: pointer;\n        margin-right: 3px;\n      }\n      \n      .apexcharts-legend.right .apexcharts-legend-series, .apexcharts-legend.left .apexcharts-legend-series{\n        display: inline-block;\n      }\n\n      .apexcharts-legend-series.no-click {\n        cursor: auto;\n      }\n\n      .apexcharts-legend .apexcharts-hidden-zero-series, .apexcharts-legend .apexcharts-hidden-null-series {\n        display: none !important;\n      }\n\n      .inactive-legend {\n        opacity: 0.45;\n      }");
                return t.appendChild(e), t
            }
        }, {
            key: "resetToggleDataSeries", value: function () {
                var t = this.w, e = null, i = [];
                if (t.globals.axisCharts ? (e = t.globals.dom.baseEl.querySelectorAll(".apexcharts-series[data\\:realIndex]"), (e = d.listToArray(e)).forEach(function (t) {
                    i.push(parseInt(t.getAttribute("data:realIndex")))
                })) : (e = t.globals.dom.baseEl.querySelectorAll(".apexcharts-series[rel]"), (e = d.listToArray(e)).forEach(function (t) {
                    i.push(parseInt(t.getAttribute("rel")) - 1)
                })), i.sort(), t.globals.collapsedSeries.length > 0) {
                    for (var s = t.globals.risingSeries.slice(), a = t.config.series.slice(), n = 0; n < t.globals.collapsedSeries.length; n++) {
                        var r = i.indexOf(t.globals.collapsedSeries[n].index);
                        -1 !== r && (t.globals.axisCharts ? a[r].data = t.globals.collapsedSeries.slice()[n].data.slice() : a[r] = t.globals.collapsedSeries.slice()[n].data, s.push(r))
                    }
                    t.globals.collapsedSeries = [], t.globals.ancillaryCollapsedSeries = [], t.globals.collapsedSeriesIndices = [], t.globals.ancillaryCollapsedSeriesIndices = [], t.globals.risingSeries = s, t.config.series = a, this.ctx._updateSeries(t.config.series, t.config.chart.animations.dynamicAnimation.enabled)
                }
            }
        }, {
            key: "toggleDataSeries", value: function (t, e) {
                var i = this.w;
                if (i.globals.axisCharts || "radialBar" === i.config.chart.type) {
                    i.globals.resized = !0;
                    var s = null, a = null;
                    if (i.globals.risingSeries = [], i.globals.axisCharts ? (s = i.globals.dom.baseEl.querySelector(".apexcharts-series[data\\:realIndex='".concat(t, "']")), a = parseInt(s.getAttribute("data:realIndex"))) : (s = i.globals.dom.baseEl.querySelector(".apexcharts-series[rel='".concat(t + 1, "']")), a = parseInt(s.getAttribute("rel")) - 1), e) this.riseCollapsedSeries(i.globals.collapsedSeries, i.globals.collapsedSeriesIndices, a), this.riseCollapsedSeries(i.globals.ancillaryCollapsedSeries, i.globals.ancillaryCollapsedSeriesIndices, a); else {
                        if (i.globals.axisCharts) {
                            var n = !1;
                            if (i.config.yaxis[a] && i.config.yaxis[a].show && i.config.yaxis[a].showAlways && (n = !0, i.globals.ancillaryCollapsedSeriesIndices.indexOf(a) < 0 && (i.globals.ancillaryCollapsedSeries.push({
                                index: a,
                                data: i.config.series[a].data.slice(),
                                type: s.parentNode.className.baseVal.split("-")[1]
                            }), i.globals.ancillaryCollapsedSeriesIndices.push(a))), !n) {
                                i.globals.collapsedSeries.push({
                                    index: a,
                                    data: i.config.series[a].data.slice(),
                                    type: s.parentNode.className.baseVal.split("-")[1]
                                }), i.globals.collapsedSeriesIndices.push(a);
                                var r = i.globals.risingSeries.indexOf(a);
                                i.globals.risingSeries.splice(r, 1)
                            }
                            i.config.series[a].data = []
                        } else i.globals.collapsedSeries.push({
                            index: a,
                            data: i.config.series[a]
                        }), i.globals.collapsedSeriesIndices.push(a), i.config.series[a] = 0;
                        for (var o = s.childNodes, l = 0; l < o.length; l++) o[l].classList.contains("apexcharts-series-markers-wrap") && (o[l].classList.contains("apexcharts-hide") ? o[l].classList.remove("apexcharts-hide") : o[l].classList.add("apexcharts-hide"));
                        i.globals.allSeriesCollapsed = i.globals.collapsedSeries.length === i.globals.series.length, this.ctx._updateSeries(i.config.series, i.config.chart.animations.dynamicAnimation.enabled)
                    }
                } else {
                    var h = i.globals.dom.Paper.select(" .apexcharts-series[rel='".concat(t + 1, "'] path")),
                        c = i.config.chart.type;
                    if ("pie" === c || "donut" === c) {
                        var d = i.config.plotOptions.pie.donut.labels, u = new f(this.ctx), g = new I(this.ctx);
                        u.pathMouseDown(h.members[0], null), g.printDataLabelsInner(h.members[0].node, d)
                    }
                    h.fire("click")
                }
            }
        }, {
            key: "riseCollapsedSeries", value: function (t, e, i) {
                var s = this.w;
                if (t.length > 0) for (var a = 0; a < t.length; a++) t[a].index === i && (s.globals.axisCharts ? (s.config.series[i].data = t[a].data.slice(), t.splice(a, 1), e.splice(a, 1), s.globals.risingSeries.push(i)) : (s.config.series[i] = t[a].data, t.splice(a, 1), e.splice(a, 1), s.globals.risingSeries.push(i)), this.ctx._updateSeries(s.config.series, s.config.chart.animations.dynamicAnimation.enabled))
            }
        }]), t
    }(), lt = function () {
        function t(i) {
            e(this, t), this.ctx = i, this.w = i.w
        }

        return s(t, [{
            key: "checkResponsiveConfig", value: function (t) {
                var e = this, i = this.w, s = i.config;
                if (0 !== s.responsive.length) {
                    var a = s.responsive.slice();
                    a.sort(function (t, e) {
                        return t.breakpoint > e.breakpoint ? 1 : e.breakpoint > t.breakpoint ? -1 : 0
                    }).reverse();
                    var n = new w({}), r = function () {
                        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                            s = a[0].breakpoint, r = window.innerWidth > 0 ? window.innerWidth : screen.width;
                        if (r > s) {
                            var o = y.extendArrayProps(n, i.globals.initialConfig);
                            t = d.extend(o, t), t = d.extend(i.config, t), e.overrideResponsiveOptions(t)
                        } else for (var l = 0; l < a.length; l++) r < a[l].breakpoint && (t = y.extendArrayProps(n, a[l].options), t = d.extend(i.config, t), e.overrideResponsiveOptions(t))
                    };
                    if (t) {
                        var o = y.extendArrayProps(n, t);
                        o = d.extend(i.config, o), r(o = d.extend(o, t))
                    } else r({})
                }
            }
        }, {
            key: "overrideResponsiveOptions", value: function (t) {
                var e = new w(t).init();
                this.w.config = e
            }
        }]), t
    }(), ht = function () {
        function t(i) {
            e(this, t), this.ctx = i, this.w = i.w, this.colors = []
        }

        return s(t, [{
            key: "init", value: function () {
                this.setDefaultColors()
            }
        }, {
            key: "setDefaultColors", value: function () {
                var t = this.w, e = new d;
                if (t.globals.dom.elWrap.classList.add(t.config.theme.mode), void 0 === t.config.colors ? t.globals.colors = this.predefined() : t.globals.colors = t.config.colors, t.config.theme.monochrome.enabled) {
                    var i = [], s = t.globals.series.length;
                    t.config.plotOptions.bar.distributed && "bar" === t.config.chart.type && (s = t.globals.series[0].length * t.globals.series.length);
                    for (var a = t.config.theme.monochrome.color, n = 1 / (s / t.config.theme.monochrome.shadeIntensity), r = t.config.theme.monochrome.shadeTo, o = 0, l = 0; l < s; l++) {
                        var h = void 0;
                        "dark" === r ? (h = e.shadeColor(-1 * o, a), o += n) : (h = e.shadeColor(o, a), o += n), i.push(h)
                    }
                    t.globals.colors = i.slice()
                }
                var c = t.globals.colors.slice();
                this.pushExtraColors(t.globals.colors), void 0 === t.config.stroke.colors ? t.globals.stroke.colors = c : t.globals.stroke.colors = t.config.stroke.colors, this.pushExtraColors(t.globals.stroke.colors), void 0 === t.config.fill.colors ? t.globals.fill.colors = c : t.globals.fill.colors = t.config.fill.colors, this.pushExtraColors(t.globals.fill.colors), void 0 === t.config.dataLabels.style.colors ? t.globals.dataLabels.style.colors = c : t.globals.dataLabels.style.colors = t.config.dataLabels.style.colors, this.pushExtraColors(t.globals.dataLabels.style.colors, 50), void 0 === t.config.plotOptions.radar.polygons.fill.colors ? t.globals.radarPolygons.fill.colors = ["dark" === t.config.theme.mode ? "#202D48" : "#fff"] : t.globals.radarPolygons.fill.colors = t.config.plotOptions.radar.polygons.fill.colors, this.pushExtraColors(t.globals.radarPolygons.fill.colors, 20), void 0 === t.config.markers.colors ? t.globals.markers.colors = c : t.globals.markers.colors = t.config.markers.colors, this.pushExtraColors(t.globals.markers.colors)
            }
        }, {
            key: "pushExtraColors", value: function (t, e) {
                var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null, s = this.w,
                    a = e || s.globals.series.length;
                if (null === i && (i = "bar" === s.config.chart.type && s.config.plotOptions.bar.distributed || "heatmap" === s.config.chart.type && s.config.plotOptions.heatmap.colorScale.inverse), i && (a = s.globals.series[0].length * s.globals.series.length), t.length < a) for (var n = a - t.length, r = 0; r < n; r++) t.push(t[r])
            }
        }, {
            key: "updateThemeOptions", value: function (t) {
                t.chart = t.chart || {}, t.tooltip = t.tooltip || {};
                var e = t.theme.mode || "light",
                    i = t.theme.palette ? t.theme.palette : "dark" === e ? "palette4" : "palette1",
                    s = t.chart.foreColor ? t.chart.foreColor : "dark" === e ? "#f6f7f8" : "#373d3f";
                return t.tooltip.theme = e, t.chart.foreColor = s, t.theme.palette = i, t
            }
        }, {
            key: "predefined", value: function () {
                switch (this.w.config.theme.palette) {
                    case"palette1":
                        this.colors = ["#008FFB", "#00E396", "#FEB019", "#FF4560", "#775DD0"];
                        break;
                    case"palette2":
                        this.colors = ["#3f51b5", "#03a9f4", "#4caf50", "#f9ce1d", "#FF9800"];
                        break;
                    case"palette3":
                        this.colors = ["#33b2df", "#546E7A", "#d4526e", "#13d8aa", "#A5978B"];
                        break;
                    case"palette4":
                        this.colors = ["#4ecdc4", "#c7f464", "#81D4FA", "#fd6a6a", "#546E7A"];
                        break;
                    case"palette5":
                        this.colors = ["#2b908f", "#f9a3a4", "#90ee7e", "#fa4443", "#69d2e7"];
                        break;
                    case"palette6":
                        this.colors = ["#449DD1", "#F86624", "#EA3546", "#662E9B", "#C5D86D"];
                        break;
                    case"palette7":
                        this.colors = ["#D7263D", "#1B998B", "#2E294E", "#F46036", "#E2C044"];
                        break;
                    case"palette8":
                        this.colors = ["#662E9B", "#F86624", "#F9C80E", "#EA3546", "#43BCCD"];
                        break;
                    case"palette9":
                        this.colors = ["#5C4742", "#A5978B", "#8D5B4C", "#5A2A27", "#C4BBAF"];
                        break;
                    case"palette10":
                        this.colors = ["#A300D6", "#7D02EB", "#5653FE", "#2983FF", "#00B1F2"];
                        break;
                    default:
                        this.colors = ["#008FFB", "#00E396", "#FEB019", "#FF4560", "#775DD0"]
                }
                return this.colors
            }
        }]), t
    }(), ct = function () {
        function t(i) {
            e(this, t), this.w = i.w, this.ttCtx = i, this.ctx = i.ctx
        }

        return s(t, [{
            key: "getNearestValues", value: function (t) {
                var e = t.hoverArea, i = t.elGrid, s = t.clientX, a = t.clientY, n = t.hasBars, r = this.w,
                    o = r.globals.gridWidth, l = o / (r.globals.dataPoints - 1), h = i.getBoundingClientRect();
                (n && r.globals.comboCharts || n) && (l = o / r.globals.dataPoints);
                var c = s - h.left, d = a - h.top;
                c < 0 || d < 0 || c > r.globals.gridWidth || d > r.globals.gridHeight ? (e.classList.remove("hovering-zoom"), e.classList.remove("hovering-pan")) : r.globals.zoomEnabled ? (e.classList.remove("hovering-pan"), e.classList.add("hovering-zoom")) : r.globals.panEnabled && (e.classList.remove("hovering-zoom"), e.classList.add("hovering-pan"));
                var u = Math.round(c / l);
                n && (u = Math.ceil(c / l), u -= 1);
                for (var g, f = null, p = null, x = [], b = 0; b < r.globals.seriesXvalues.length; b++) x.push([r.globals.seriesXvalues[b][0] - 1e-6].concat(r.globals.seriesXvalues[b]));
                return x = x.map(function (t) {
                    return t.filter(function (t) {
                        return t
                    })
                }), g = r.globals.seriesYvalues.map(function (t) {
                    return t.filter(function (t) {
                        return t
                    })
                }), r.globals.isXNumeric && (f = (p = this.closestInMultiArray(c, d, x, g)).index, u = p.j, null !== f && (x = r.globals.seriesXvalues[f], u = (p = this.closestInArray(c, x)).index)), (!u || u < 1) && (u = 0), {
                    capturedSeries: f,
                    j: u,
                    hoverX: c,
                    hoverY: d
                }
            }
        }, {
            key: "closestInMultiArray", value: function (t, e, i, s) {
                var a = this.w, n = 0, r = null, o = -1;
                a.globals.series.length > 1 ? n = this.getFirstActiveXArray(i) : r = 0;
                var l = s[n][0], h = i[n][0], c = Math.abs(t - h), d = Math.abs(e - l), u = d + c;
                return s.map(function (a, n) {
                    a.map(function (a, l) {
                        var h = Math.abs(e - s[n][l]), g = Math.abs(t - i[n][l]), f = g + h;
                        f < u && (u = f, c = g, d = h, r = n, o = l)
                    })
                }), {index: r, j: o}
            }
        }, {
            key: "getFirstActiveXArray", value: function (t) {
                for (var e = 0, i = new y(this.ctx), s = t.map(function (t, e) {
                    return t.length > 0 ? e : -1
                }), a = 0; a < s.length; a++) {
                    var n = i.getSeriesTotalByIndex(a);
                    if (-1 !== s[a] && 0 !== n && !i.seriesHaveSameValues(a)) {
                        e = s[a];
                        break
                    }
                }
                return e
            }
        }, {
            key: "closestInArray", value: function (t, e) {
                for (var i = e[0], s = null, a = Math.abs(t - i), n = 0; n < e.length; n++) {
                    var r = Math.abs(t - e[n]);
                    r < a && (a = r, i = e[n], s = n)
                }
                return {index: s}
            }
        }, {
            key: "isXoverlap", value: function (t) {
                var e = [], i = this.w.globals.seriesX.filter(function (t) {
                    return void 0 !== t[0]
                });
                if (i.length > 0) for (var s = 0; s < i.length - 1; s++) void 0 !== i[s][t] && void 0 !== i[s + 1][t] && i[s][t] !== i[s + 1][t] && e.push("unEqual");
                return 0 === e.length
            }
        }, {
            key: "isinitialSeriesSameLen", value: function () {
                for (var t = !0, e = this.w.globals.initialSeries, i = 0; i < e.length - 1; i++) if (e[i].data.length !== e[i + 1].data.length) {
                    t = !1;
                    break
                }
                return t
            }
        }, {
            key: "getBarsHeight", value: function (t) {
                return c(t).reduce(function (t, e) {
                    return t + e.getBBox().height
                }, 0)
            }
        }, {
            key: "toggleAllTooltipSeriesGroups", value: function (t) {
                var e = this.w, i = this.ttCtx;
                0 === i.allTooltipSeriesGroups.length && (i.allTooltipSeriesGroups = e.globals.dom.baseEl.querySelectorAll(".apexcharts-tooltip-series-group"));
                for (var s = i.allTooltipSeriesGroups, a = 0; a < s.length; a++) "enable" === t ? (s[a].classList.add("active"), s[a].style.display = e.config.tooltip.items.display) : (s[a].classList.remove("active"), s[a].style.display = "none")
            }
        }]), t
    }(), dt = function () {
        function t(i) {
            e(this, t), this.w = i.w, this.ctx = i.ctx, this.ttCtx = i, this.tooltipUtil = new ct(i)
        }

        return s(t, [{
            key: "drawSeriesTexts", value: function (t) {
                var e = t.shared, i = void 0 === e || e, s = t.ttItems, a = t.i, n = void 0 === a ? 0 : a, r = t.j,
                    o = void 0 === r ? null : r;
                void 0 !== this.w.config.tooltip.custom ? this.handleCustomTooltip({
                    i: n,
                    j: o
                }) : this.toggleActiveInactiveSeries(i);
                var l = this.getValuesToPrint({i: n, j: o});
                this.printLabels({i: n, j: o, values: l, ttItems: s, shared: i});
                var h = this.ttCtx.getElTooltip();
                this.ttCtx.tooltipRect.ttWidth = h.getBoundingClientRect().width, this.ttCtx.tooltipRect.ttHeight = h.getBoundingClientRect().height
            }
        }, {
            key: "printLabels", value: function (t) {
                var e, i = t.i, s = t.j, a = t.values, n = t.ttItems, r = t.shared, o = this.w, l = a.xVal, h = a.zVal,
                    c = a.xAxisTTVal, d = "", u = o.globals.colors[i];
                null !== s && o.config.plotOptions.bar.distributed && (u = o.globals.colors[s]);
                for (var g = 0, f = o.globals.series.length - 1; g < o.globals.series.length; g++, f--) {
                    var p = this.getFormatters(i);
                    if (d = this.getSeriesName({fn: p.yLbTitleFormatter, index: i, seriesIndex: i, j: s}), r) {
                        var x = o.config.tooltip.inverseOrder ? f : g;
                        p = this.getFormatters(x), d = this.getSeriesName({
                            fn: p.yLbTitleFormatter,
                            index: x,
                            seriesIndex: i,
                            j: s
                        }), u = o.globals.colors[x], e = p.yLbFormatter(o.globals.series[x][s], {
                            series: o.globals.series,
                            seriesIndex: x,
                            dataPointIndex: s,
                            w: o
                        }), (this.ttCtx.hasBars() && o.config.chart.stacked && 0 === o.globals.series[x][s] || void 0 === o.globals.series[x][s]) && (e = void 0)
                    } else e = p.yLbFormatter(o.globals.series[i][s], {
                        series: o.globals.series,
                        seriesIndex: i,
                        dataPointIndex: s,
                        w: o
                    });
                    null === s && (e = p.yLbFormatter(o.globals.series[i], o)), this.DOMHandling({
                        t: g,
                        ttItems: n,
                        values: {val: e, xVal: l, xAxisTTVal: c, zVal: h},
                        seriesName: d,
                        shared: r,
                        pColor: u
                    })
                }
            }
        }, {
            key: "getFormatters", value: function (t) {
                var e, i = this.w, s = i.globals.yLabelFormatters[t];
                return void 0 !== i.globals.ttVal ? Array.isArray(i.globals.ttVal) ? (s = i.globals.ttVal[t] && i.globals.ttVal[t].formatter, e = i.globals.ttVal[t] && i.globals.ttVal[t].title && i.globals.ttVal[t].title.formatter) : (s = i.globals.ttVal.formatter, "function" == typeof i.globals.ttVal.title.formatter && (e = i.globals.ttVal.title.formatter)) : e = i.config.tooltip.y.title.formatter, "function" != typeof s && (s = i.globals.yLabelFormatters[0] ? i.globals.yLabelFormatters[0] : function (t) {
                    return t
                }), "function" != typeof e && (e = function (t) {
                    return t
                }), {yLbFormatter: s, yLbTitleFormatter: e}
            }
        }, {
            key: "getSeriesName", value: function (t) {
                var e = t.fn, i = t.index, s = t.seriesIndex, a = t.j, n = this.w;
                return e(String(n.globals.seriesNames[i]), {
                    series: n.globals.series,
                    seriesIndex: s,
                    dataPointIndex: a,
                    w: n
                })
            }
        }, {
            key: "DOMHandling", value: function (t) {
                var e = t.t, i = t.ttItems, s = t.values, a = t.seriesName, n = t.shared, r = t.pColor, o = this.w,
                    l = this.ttCtx, h = s.val, c = s.xVal, d = s.xAxisTTVal, u = s.zVal, g = null;
                g = i[e].children, o.config.tooltip.fillSeriesColor && (i[e].style.backgroundColor = r, g[0].style.display = "none"), l.showTooltipTitle && (null === l.tooltipTitle && (l.tooltipTitle = o.globals.dom.baseEl.querySelector(".apexcharts-tooltip-title")), l.tooltipTitle.innerHTML = c), l.blxaxisTooltip && (l.xaxisTooltipText.innerHTML = "" !== d ? d : c);
                var f = i[e].querySelector(".apexcharts-tooltip-text-label");
                f && (f.innerHTML = a ? a + ": " : "");
                var p = i[e].querySelector(".apexcharts-tooltip-text-value");
                (p && (p.innerHTML = h), g[0] && g[0].classList.contains("apexcharts-tooltip-marker") && (g[0].style.backgroundColor = r), o.config.tooltip.marker.show || (g[0].style.display = "none"), null !== u) && (i[e].querySelector(".apexcharts-tooltip-text-z-label").innerHTML = o.config.tooltip.z.title, i[e].querySelector(".apexcharts-tooltip-text-z-value").innerHTML = u);
                n && g[0] && (null == h || o.globals.collapsedSeriesIndices.indexOf(e) > -1 ? g[0].parentNode.style.display = "none" : g[0].parentNode.style.display = o.config.tooltip.items.display)
            }
        }, {
            key: "toggleActiveInactiveSeries", value: function (t) {
                var e = this.w;
                if (t) this.tooltipUtil.toggleAllTooltipSeriesGroups("enable"); else {
                    this.tooltipUtil.toggleAllTooltipSeriesGroups("disable");
                    var i = e.globals.dom.baseEl.querySelector(".apexcharts-tooltip-series-group");
                    i && (i.classList.add("active"), i.style.display = e.config.tooltip.items.display)
                }
            }
        }, {
            key: "getValuesToPrint", value: function (t) {
                var e = t.i, i = t.j, s = this.w, a = this.ctx.series.filteredSeriesX(), n = "", r = null, o = null,
                    l = {series: s.globals.series, seriesIndex: e, dataPointIndex: i, w: s}, h = s.globals.ttZFormatter;
                null === i ? o = s.globals.series[e] : s.globals.isXNumeric ? (n = a[e][i], 0 === a[e].length && (n = a[this.tooltipUtil.getFirstActiveXArray(a)][i])) : n = void 0 !== s.globals.labels[i] ? s.globals.labels[i] : "";
                var c = n;
                s.globals.isXNumeric && "datetime" === s.config.xaxis.type ? n = new N(this.ctx).xLabelFormat(s.globals.ttKeyFormatter, c) : n = s.globals.xLabelFormatter(c, l);
                return void 0 !== s.config.tooltip.x.formatter && (n = s.globals.ttKeyFormatter(c, l)), s.globals.seriesZ.length > 0 && s.globals.seriesZ[0].length > 0 && (r = h(s.globals.seriesZ[e][i], s)), {
                    val: o,
                    xVal: n,
                    xAxisTTVal: "function" == typeof s.config.xaxis.tooltip.formatter ? s.globals.xaxisTooltipFormatter(c, l) : n,
                    zVal: r
                }
            }
        }, {
            key: "handleCustomTooltip", value: function (t) {
                var e = t.i, i = t.j, s = this.w;
                this.ttCtx.getElTooltip().innerHTML = s.config.tooltip.custom({
                    ctx: this.ctx,
                    series: s.globals.series,
                    seriesIndex: e,
                    dataPointIndex: i,
                    w: s
                })
            }
        }]), t
    }(), ut = function () {
        function t(i) {
            e(this, t), this.ttCtx = i, this.ctx = i.ctx, this.w = i.w
        }

        return s(t, [{
            key: "moveXCrosshairs", value: function (t) {
                var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null, i = this.ttCtx,
                    s = this.w, a = i.getElXCrosshairs(), n = t - i.xcrosshairsWidth / 2,
                    r = s.globals.labels.slice().length;
                if (null !== e && (n = s.globals.gridWidth / r * e), "tickWidth" === s.config.xaxis.crosshairs.width || "barWidth" === s.config.xaxis.crosshairs.width ? n + i.xcrosshairsWidth > s.globals.gridWidth && (n = s.globals.gridWidth - i.xcrosshairsWidth) : null !== e && (n += s.globals.gridWidth / r / 2), n < 0 && (n = 0), n > s.globals.gridWidth && (n = s.globals.gridWidth), null !== a && (a.setAttribute("x", n), a.setAttribute("x1", n), a.setAttribute("x2", n), a.setAttribute("y2", s.globals.gridHeight), a.classList.add("active")), i.blxaxisTooltip) {
                    var o = n;
                    "tickWidth" !== s.config.xaxis.crosshairs.width && "barWidth" !== s.config.xaxis.crosshairs.width || (o = n + i.xcrosshairsWidth / 2), this.moveXAxisTooltip(o)
                }
            }
        }, {
            key: "moveYCrosshairs", value: function (t) {
                var e = this.ttCtx;
                null !== e.ycrosshairs && (f.setAttrs(e.ycrosshairs, {
                    y1: t,
                    y2: t
                }), f.setAttrs(e.ycrosshairsHidden, {y1: t, y2: t}))
            }
        }, {
            key: "moveXAxisTooltip", value: function (t) {
                var e = this.w, i = this.ttCtx;
                if (null !== i.xaxisTooltip) {
                    i.xaxisTooltip.classList.add("active");
                    var s = i.xaxisOffY + e.config.xaxis.tooltip.offsetY + e.globals.translateY + 1 + e.config.xaxis.offsetY;
                    if (t -= i.xaxisTooltip.getBoundingClientRect().width / 2, !isNaN(t)) {
                        t += e.globals.translateX;
                        var a;
                        a = new f(this.ctx).getTextRects(i.xaxisTooltipText.innerHTML), i.xaxisTooltipText.style.minWidth = a.width + "px", i.xaxisTooltip.style.left = t + "px", i.xaxisTooltip.style.top = s + "px"
                    }
                }
            }
        }, {
            key: "moveYAxisTooltip", value: function (t) {
                var e = this.w, i = this.ttCtx;
                null === i.yaxisTTEls && (i.yaxisTTEls = e.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxistooltip"));
                var s = parseInt(i.ycrosshairsHidden.getAttribute("y1")), a = e.globals.translateY + s,
                    n = i.yaxisTTEls[t].getBoundingClientRect().height, r = e.globals.translateYAxisX[t] - 2;
                e.config.yaxis[t].opposite && (r -= 26), a -= n / 2, -1 === e.globals.ignoreYAxisIndexes.indexOf(t) ? (i.yaxisTTEls[t].classList.add("active"), i.yaxisTTEls[t].style.top = a + "px", i.yaxisTTEls[t].style.left = r + e.config.yaxis[t].tooltip.offsetX + "px") : i.yaxisTTEls[t].classList.remove("active")
            }
        }, {
            key: "moveTooltip", value: function (t, e) {
                var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null, s = this.w,
                    a = this.ttCtx, n = a.getElTooltip(), r = a.tooltipRect, o = null !== i ? parseInt(i) : 1,
                    l = parseInt(t) + o + 5, h = parseInt(e) + o / 2;
                if (l > s.globals.gridWidth / 2 && (l = l - r.ttWidth - o - 15), l > s.globals.gridWidth - r.ttWidth - 10 && (l = s.globals.gridWidth - r.ttWidth), l < -20 && (l = -20), s.config.tooltip.followCursor) {
                    var c = a.getElGrid().getBoundingClientRect();
                    h = a.e.clientY + s.globals.translateY - c.top - r.ttHeight / 2
                }
                var d = this.positionChecks(r, l, h);
                l = d.x, h = d.y, isNaN(l) || (l += s.globals.translateX, n.style.left = l + "px", n.style.top = h + "px")
            }
        }, {
            key: "positionChecks", value: function (t, e, i) {
                var s = this.w;
                return t.ttHeight + i > s.globals.gridHeight && (i = s.globals.gridHeight - t.ttHeight + s.globals.translateY), i < 0 && (i = 0), {
                    x: e,
                    y: i
                }
            }
        }, {
            key: "moveMarkers", value: function (t, e) {
                var i = this.w, s = this.ttCtx;
                if (i.globals.markers.size[t] > 0) for (var a = i.globals.dom.baseEl.querySelectorAll(" .apexcharts-series[data\\:realIndex='".concat(t, "'] .apexcharts-marker")), n = 0; n < a.length; n++) parseInt(a[n].getAttribute("rel")) === e && (s.marker.resetPointsSize(), s.marker.enlargeCurrentPoint(e, a[n])); else s.marker.resetPointsSize(), this.moveDynamicPointOnHover(e, t)
            }
        }, {
            key: "moveDynamicPointOnHover", value: function (t, e) {
                var i, s, a = this.w, n = this.ttCtx, r = a.globals.pointsArray, o = a.config.markers.hover.size;
                void 0 === o && (o = a.globals.markers.size[e] + a.config.markers.hover.sizeOffset), i = r[e][t][0], s = r[e][t][1] ? r[e][t][1] : 0;
                var l = a.globals.dom.baseEl.querySelector(".apexcharts-series[data\\:realIndex='".concat(e, "'] .apexcharts-series-markers circle"));
                l && (l.setAttribute("r", o), l.setAttribute("cx", i), l.setAttribute("cy", s)), this.moveXCrosshairs(i), n.fixedTooltip || this.moveTooltip(i, s, o)
            }
        }, {
            key: "moveDynamicPointsOnHover", value: function (t) {
                var e, i = this.ttCtx, s = i.w, a = 0, n = 0, r = s.globals.pointsArray;
                e = new G(this.ctx).getActiveSeriesIndex();
                var o = s.config.markers.hover.size;
                void 0 === o && (o = s.globals.markers.size[e] + s.config.markers.hover.sizeOffset), r[e] && (a = r[e][t][0], n = r[e][t][1]);
                var l = null, h = i.getAllMarkers();
                if (null !== (l = null !== h ? h : s.globals.dom.baseEl.querySelectorAll(".apexcharts-series-markers circle"))) for (var c = 0; c < l.length; c++) {
                    var d = r[c];
                    if (d && d.length) {
                        var u = r[c][t][1];
                        l[c].setAttribute("cx", a);
                        var g = parseInt(l[c].parentNode.parentNode.parentNode.getAttribute("data:realIndex"));
                        null !== u ? (l[g] && l[g].setAttribute("r", o), l[g] && l[g].setAttribute("cy", u)) : l[g] && l[g].setAttribute("r", 0)
                    }
                }
                if (this.moveXCrosshairs(a), !i.fixedTooltip) {
                    var f = n || s.globals.gridHeight;
                    this.moveTooltip(a, f, o)
                }
            }
        }, {
            key: "moveStickyTooltipOverBars", value: function (t) {
                var e, i = this.w, s = this.ttCtx,
                    a = i.globals.dom.baseEl.querySelector(".apexcharts-bar-series .apexcharts-series[rel='1'] path[j='".concat(t, "'], .apexcharts-candlestick-series .apexcharts-series[rel='1'] path[j='").concat(t, "'], .apexcharts-rangebar-series .apexcharts-series[rel='1'] path[j='").concat(t, "']")),
                    n = a ? parseFloat(a.getAttribute("cx")) : 0, r = a ? parseFloat(a.getAttribute("barWidth")) : 0;
                i.globals.isXNumeric ? n -= r / 2 : (n = s.xAxisTicksPositions[t - 1] + s.dataPointsDividedWidth / 2, isNaN(n) && (n = s.xAxisTicksPositions[t] - s.dataPointsDividedWidth / 2));
                var o = s.getElGrid().getBoundingClientRect();
                if (e = s.e.clientY - o.top - s.tooltipRect.ttHeight / 2, this.moveXCrosshairs(n), !s.fixedTooltip) {
                    var l = e || i.globals.gridHeight;
                    this.moveTooltip(n, l)
                }
            }
        }]), t
    }(), gt = function () {
        function t(i) {
            e(this, t), this.w = i.w, this.ttCtx = i, this.ctx = i.ctx, this.tooltipPosition = new ut(i)
        }

        return s(t, [{
            key: "drawDynamicPoints", value: function () {
                for (var t = this.w, e = new f(this.ctx), i = new C(this.ctx), s = t.globals.dom.baseEl.querySelectorAll(".apexcharts-series"), a = 0; a < s.length; a++) {
                    var n = parseInt(s[a].getAttribute("data:realIndex")),
                        r = t.globals.dom.baseEl.querySelector(".apexcharts-series[data\\:realIndex='".concat(n, "'] .apexcharts-series-markers-wrap"));
                    if (null !== r) {
                        var o = void 0, l = "apexcharts-marker w".concat((Math.random() + 1).toString(36).substring(4));
                        "line" !== t.config.chart.type && "area" !== t.config.chart.type || t.globals.comboCharts || t.config.tooltip.intersect || (l += " no-pointer-events");
                        var h = i.getMarkerConfig(l, n);
                        (o = e.drawMarker(0, 0, h)).node.setAttribute("default-marker-size", 0);
                        var c = document.createElementNS(t.globals.SVGNS, "g");
                        c.classList.add("apexcharts-series-markers"), c.appendChild(o.node), r.appendChild(c)
                    }
                }
            }
        }, {
            key: "enlargeCurrentPoint", value: function (t, e) {
                var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null,
                    s = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null, a = this.w;
                "bubble" !== a.config.chart.type && this.newPointSize(t, e);
                var n = e.getAttribute("cx"), r = e.getAttribute("cy");
                if (null !== i && null !== s && (n = i, r = s), this.tooltipPosition.moveXCrosshairs(n), !this.fixedTooltip) {
                    if ("radar" === a.config.chart.type) {
                        var o = this.ttCtx.getElGrid().getBoundingClientRect();
                        n = this.ttCtx.e.clientX - o.left
                    }
                    this.tooltipPosition.moveTooltip(n, r, a.config.markers.hover.size)
                }
            }
        }, {
            key: "enlargePoints", value: function (t) {
                for (var e = this.w, i = this.ttCtx, s = t, a = e.globals.dom.baseEl.querySelectorAll(".apexcharts-series:not(.apexcharts-series-collapsed) .apexcharts-marker"), n = e.config.markers.hover.size, r = 0; r < a.length; r++) {
                    var o = a[r].getAttribute("rel"), l = a[r].getAttribute("index");
                    if (void 0 === n && (n = e.globals.markers.size[l] + e.config.markers.hover.sizeOffset), s === parseInt(o)) {
                        this.newPointSize(s, a[r]);
                        var h = a[r].getAttribute("cx"), c = a[r].getAttribute("cy");
                        this.tooltipPosition.moveXCrosshairs(h), i.fixedTooltip || this.tooltipPosition.moveTooltip(h, c, n)
                    } else this.oldPointSize(a[r])
                }
            }
        }, {
            key: "newPointSize", value: function (t, e) {
                var i = this.w, s = i.config.markers.hover.size, a = null;
                a = 0 === t ? e.parentNode.firstChild : e.parentNode.lastChild;
                var n = parseInt(a.getAttribute("index"));
                void 0 === s && (s = i.globals.markers.size[n] + i.config.markers.hover.sizeOffset), a.setAttribute("r", s)
            }
        }, {
            key: "oldPointSize", value: function (t) {
                var e = parseInt(t.getAttribute("default-marker-size"));
                t.setAttribute("r", e)
            }
        }, {
            key: "resetPointsSize", value: function () {
                for (var t = this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-series:not(.apexcharts-series-collapsed) .apexcharts-marker"), e = 0; e < t.length; e++) {
                    var i = parseInt(t[e].getAttribute("default-marker-size"));
                    d.isNumber(i) ? t[e].setAttribute("r", i) : t[e].setAttribute("r", 0)
                }
            }
        }]), t
    }(), ft = function () {
        function t(i) {
            e(this, t), this.w = i.w, this.ttCtx = i
        }

        return s(t, [{
            key: "getAttr", value: function (t, e) {
                return parseFloat(t.target.getAttribute(e))
            }
        }, {
            key: "handleHeatTooltip", value: function (t) {
                var e = t.e, i = t.opt, s = t.x, a = t.y, n = this.ttCtx, r = this.w;
                if (e.target.classList.contains("apexcharts-heatmap-rect")) {
                    var o = this.getAttr(e, "i"), l = this.getAttr(e, "j"), h = this.getAttr(e, "cx"),
                        c = this.getAttr(e, "cy"), d = this.getAttr(e, "width"), u = this.getAttr(e, "height");
                    if (n.tooltipLabels.drawSeriesTexts({
                        ttItems: i.ttItems,
                        i: o,
                        j: l,
                        shared: !1
                    }), s = h + n.tooltipRect.ttWidth / 2 + d, a = c + n.tooltipRect.ttHeight / 2 - u / 2, n.tooltipPosition.moveXCrosshairs(h + d / 2), s > r.globals.gridWidth / 2 && (s = h - n.tooltipRect.ttWidth / 2 + d), n.w.config.tooltip.followCursor) {
                        var g = n.getElGrid().getBoundingClientRect();
                        a = n.e.clientY - g.top + r.globals.translateY / 2 - 10
                    }
                }
                return {x: s, y: a}
            }
        }, {
            key: "handleMarkerTooltip", value: function (t) {
                var e, i, s = t.e, a = t.opt, n = t.x, r = t.y, o = this.w, l = this.ttCtx;
                if (s.target.classList.contains("apexcharts-marker")) {
                    var h = parseInt(a.paths.getAttribute("cx")), c = parseInt(a.paths.getAttribute("cy")),
                        u = parseFloat(a.paths.getAttribute("val"));
                    if (i = parseInt(a.paths.getAttribute("rel")), e = parseInt(a.paths.parentNode.parentNode.parentNode.getAttribute("rel")) - 1, l.intersect) {
                        var g = d.findAncestor(a.paths, "apexcharts-series");
                        g && (e = parseInt(g.getAttribute("data:realIndex")))
                    }
                    if (l.tooltipLabels.drawSeriesTexts({
                        ttItems: a.ttItems,
                        i: e,
                        j: i,
                        shared: !l.showOnIntersect && o.config.tooltip.shared
                    }), "mouseup" === s.type && l.markerClick(s, e, i), n = h, r = c + o.globals.translateY - 1.4 * l.tooltipRect.ttHeight, l.w.config.tooltip.followCursor) {
                        var f = l.getElGrid().getBoundingClientRect();
                        r = l.e.clientY + o.globals.translateY - f.top
                    }
                    u < 0 && (r = c), l.marker.enlargeCurrentPoint(i, a.paths, n, r)
                }
                return {x: n, y: r}
            }
        }, {
            key: "handleBarTooltip", value: function (t) {
                var e, i, s = t.e, a = t.opt, n = this.w, r = this.ttCtx, o = r.getElTooltip(), l = 0, h = 0, c = 0,
                    d = this.getBarTooltipXY({e: s, opt: a});
                e = d.i;
                var u = d.barHeight, g = d.j;
                if (n.globals.isBarHorizontal && r.hasBars() || !n.config.tooltip.shared ? (h = d.x, c = d.y, i = Array.isArray(n.config.stroke.width) ? n.config.stroke.width[e] : n.config.stroke.width, l = h) : n.globals.comboCharts || n.config.tooltip.shared || (l /= 2), isNaN(c) && (c = n.globals.svgHeight - r.tooltipRect.ttHeight), h + r.tooltipRect.ttWidth > n.globals.gridWidth ? h -= r.tooltipRect.ttWidth : h < 0 && (h += r.tooltipRect.ttWidth), r.w.config.tooltip.followCursor) {
                    var f = r.getElGrid().getBoundingClientRect();
                    c = r.e.clientY - f.top
                }
                if (null === r.tooltip && (r.tooltip = n.globals.dom.baseEl.querySelector(".apexcharts-tooltip")), n.config.tooltip.shared || (n.globals.comboChartsHasBars ? r.tooltipPosition.moveXCrosshairs(l + i / 2) : r.tooltipPosition.moveXCrosshairs(l)), !r.fixedTooltip && (!n.config.tooltip.shared || n.globals.isBarHorizontal && r.hasBars())) {
                    x && (h = n.globals.gridWidth - h), o.style.left = h + n.globals.translateX + "px";
                    var p = parseInt(a.paths.parentNode.getAttribute("data:realIndex")),
                        x = n.globals.isMultipleYAxis ? n.config.yaxis[p] && n.config.yaxis[p].reversed : n.config.yaxis[0].reversed;
                    !x || n.globals.isBarHorizontal && r.hasBars() || (c = c + u - 2 * (n.globals.series[e][g] < 0 ? u : 0)), r.tooltipRect.ttHeight + c > n.globals.gridHeight ? (c = n.globals.gridHeight - r.tooltipRect.ttHeight + n.globals.translateY, o.style.top = c + "px") : o.style.top = c + n.globals.translateY - r.tooltipRect.ttHeight / 2 + "px"
                }
            }
        }, {
            key: "getBarTooltipXY", value: function (t) {
                var e = t.e, i = t.opt, s = this.w, a = null, n = this.ttCtx, r = 0, o = 0, l = 0, h = 0, c = 0,
                    d = e.target.classList;
                if (d.contains("apexcharts-bar-area") || d.contains("apexcharts-candlestick-area") || d.contains("apexcharts-rangebar-area")) {
                    var u = e.target, g = u.getBoundingClientRect(), f = i.elGrid.getBoundingClientRect(), p = g.height;
                    c = g.height;
                    var x = g.width, b = parseInt(u.getAttribute("cx")), m = parseInt(u.getAttribute("cy"));
                    h = parseFloat(u.getAttribute("barWidth"));
                    var v = "touchmove" === e.type ? e.touches[0].clientX : e.clientX;
                    a = parseInt(u.getAttribute("j")), r = parseInt(u.parentNode.getAttribute("rel")) - 1, s.globals.comboCharts && (r = parseInt(u.parentNode.getAttribute("data:realIndex"))), n.tooltipLabels.drawSeriesTexts({
                        ttItems: i.ttItems,
                        i: r,
                        j: a,
                        shared: !n.showOnIntersect && s.config.tooltip.shared
                    }), s.config.tooltip.followCursor ? s.globals.isBarHorizontal ? (o = v - f.left + 15, l = m - n.dataPointsDividedHeight + p / 2 - n.tooltipRect.ttHeight / 2) : (o = s.globals.isXNumeric ? b - x / 2 : b - n.dataPointsDividedWidth + x / 2, l = e.clientY - f.top - n.tooltipRect.ttHeight / 2 - 15) : s.globals.isBarHorizontal ? ((o = b) < n.xyRatios.baseLineInvertedY && (o = b - n.tooltipRect.ttWidth), l = m - n.dataPointsDividedHeight + p / 2 - n.tooltipRect.ttHeight / 2) : (o = s.globals.isXNumeric ? b - x / 2 : b - n.dataPointsDividedWidth + x / 2, l = m)
                }
                return {x: o, y: l, barHeight: c, barWidth: h, i: r, j: a}
            }
        }]), t
    }(), pt = function () {
        function t(i) {
            e(this, t), this.w = i.w, this.ttCtx = i
        }

        return s(t, [{
            key: "drawXaxisTooltip", value: function () {
                var t = this.w, e = this.ttCtx, i = "bottom" === t.config.xaxis.position;
                e.xaxisOffY = i ? t.globals.gridHeight + 1 : 1;
                var s = i ? "apexcharts-xaxistooltip apexcharts-xaxistooltip-bottom" : "apexcharts-xaxistooltip apexcharts-xaxistooltip-top",
                    a = t.globals.dom.elWrap;
                e.blxaxisTooltip && (null === t.globals.dom.baseEl.querySelector(".apexcharts-xaxistooltip") && (e.xaxisTooltip = document.createElement("div"), e.xaxisTooltip.setAttribute("class", s + " " + t.config.tooltip.theme), a.appendChild(e.xaxisTooltip), e.xaxisTooltipText = document.createElement("div"), e.xaxisTooltipText.classList.add("apexcharts-xaxistooltip-text"), e.xaxisTooltipText.style.fontFamily = t.config.xaxis.tooltip.style.fontFamily || t.config.chart.fontFamily, e.xaxisTooltipText.style.fontSize = t.config.xaxis.tooltip.style.fontSize, e.xaxisTooltip.appendChild(e.xaxisTooltipText)))
            }
        }, {
            key: "drawYaxisTooltip", value: function () {
                for (var t = this.w, e = this.ttCtx, i = 0; i < t.config.yaxis.length; i++) {
                    var s = t.config.yaxis[i].opposite || t.config.yaxis[i].crosshairs.opposite;
                    e.yaxisOffX = s ? t.globals.gridWidth + 1 : 1;
                    var a = "apexcharts-yaxistooltip apexcharts-yaxistooltip-".concat(i, s ? " apexcharts-yaxistooltip-right" : " apexcharts-yaxistooltip-left"),
                        n = t.globals.dom.elWrap;
                    if (e.blyaxisTooltip) null === t.globals.dom.baseEl.querySelector(".apexcharts-yaxistooltip apexcharts-yaxistooltip-".concat(i)) && (e.yaxisTooltip = document.createElement("div"), e.yaxisTooltip.setAttribute("class", a + " " + t.config.tooltip.theme), n.appendChild(e.yaxisTooltip), 0 === i && (e.yaxisTooltipText = []), e.yaxisTooltipText.push(document.createElement("div")), e.yaxisTooltipText[i].classList.add("apexcharts-yaxistooltip-text"), e.yaxisTooltip.appendChild(e.yaxisTooltipText[i]))
                }
            }
        }, {
            key: "setXCrosshairWidth", value: function () {
                var t = this.w, e = this.ttCtx, i = e.getElXCrosshairs();
                if (e.xcrosshairsWidth = parseInt(t.config.xaxis.crosshairs.width), t.globals.comboCharts) {
                    var s = t.globals.dom.baseEl.querySelector(".apexcharts-bar-area");
                    if (null !== s && "barWidth" === t.config.xaxis.crosshairs.width) {
                        var a = parseFloat(s.getAttribute("barWidth"));
                        e.xcrosshairsWidth = a
                    } else if ("tickWidth" === t.config.xaxis.crosshairs.width) {
                        var n = t.globals.labels.length;
                        e.xcrosshairsWidth = t.globals.gridWidth / n
                    }
                } else if ("tickWidth" === t.config.xaxis.crosshairs.width) {
                    var r = t.globals.labels.length;
                    e.xcrosshairsWidth = t.globals.gridWidth / r
                } else if ("barWidth" === t.config.xaxis.crosshairs.width) {
                    var o = t.globals.dom.baseEl.querySelector(".apexcharts-bar-area");
                    if (null !== o) {
                        var l = parseFloat(o.getAttribute("barWidth"));
                        e.xcrosshairsWidth = l
                    } else e.xcrosshairsWidth = 1
                }
                t.globals.isBarHorizontal && (e.xcrosshairsWidth = 0), null !== i && e.xcrosshairsWidth > 0 && i.setAttribute("width", e.xcrosshairsWidth)
            }
        }, {
            key: "handleYCrosshair", value: function () {
                var t = this.w, e = this.ttCtx;
                e.ycrosshairs = t.globals.dom.baseEl.querySelector(".apexcharts-ycrosshairs"), e.ycrosshairsHidden = t.globals.dom.baseEl.querySelector(".apexcharts-ycrosshairs-hidden")
            }
        }, {
            key: "drawYaxisTooltipText", value: function (t, e, i) {
                var s = this.ttCtx, a = this.w, n = a.globals.yLabelFormatters[t];
                if (s.blyaxisTooltip) {
                    var r = s.getElGrid().getBoundingClientRect(), o = (e - r.top) * i.yRatio[t],
                        l = a.globals.maxYArr[t] - a.globals.minYArr[t], h = a.globals.minYArr[t] + (l - o);
                    s.tooltipPosition.moveYCrosshairs(e - r.top), s.yaxisTooltipText[t].innerHTML = n(h), s.tooltipPosition.moveYAxisTooltip(t)
                }
            }
        }]), t
    }(), xt = function () {
        function t(i) {
            e(this, t), this.ctx = i, this.w = i.w;
            var s = this.w;
            this.tConfig = s.config.tooltip, this.tooltipUtil = new ct(this), this.tooltipLabels = new dt(this), this.tooltipPosition = new ut(this), this.marker = new gt(this), this.intersect = new ft(this), this.axesTooltip = new pt(this), this.showOnIntersect = this.tConfig.intersect, this.showTooltipTitle = this.tConfig.x.show, this.fixedTooltip = this.tConfig.fixed.enabled, this.xaxisTooltip = null, this.yaxisTTEls = null, this.isBarShared = !s.globals.isBarHorizontal && this.tConfig.shared
        }

        return s(t, [{
            key: "getElTooltip", value: function (t) {
                return t || (t = this), t.w.globals.dom.baseEl.querySelector(".apexcharts-tooltip")
            }
        }, {
            key: "getElXCrosshairs", value: function () {
                return this.w.globals.dom.baseEl.querySelector(".apexcharts-xcrosshairs")
            }
        }, {
            key: "getElGrid", value: function () {
                return this.w.globals.dom.baseEl.querySelector(".apexcharts-grid")
            }
        }, {
            key: "drawTooltip", value: function (t) {
                var e = this.w;
                this.xyRatios = t, this.blxaxisTooltip = e.config.xaxis.tooltip.enabled && e.globals.axisCharts, this.blyaxisTooltip = e.config.yaxis[0].tooltip.enabled && e.globals.axisCharts, this.allTooltipSeriesGroups = [], e.globals.axisCharts || (this.showTooltipTitle = !1);
                var i = document.createElement("div");
                if (i.classList.add("apexcharts-tooltip"), i.classList.add(this.tConfig.theme), e.globals.dom.elWrap.appendChild(i), e.globals.axisCharts) {
                    this.axesTooltip.drawXaxisTooltip(), this.axesTooltip.drawYaxisTooltip(), this.axesTooltip.setXCrosshairWidth(), this.axesTooltip.handleYCrosshair();
                    var s = new H(this.ctx);
                    this.xAxisTicksPositions = s.getXAxisTicksPositions()
                }
                if ((e.globals.comboCharts && !this.tConfig.shared || this.tConfig.intersect && !this.tConfig.shared || ("bar" === e.config.chart.type || "rangeBar" === e.config.chart.type) && !this.tConfig.shared) && (this.showOnIntersect = !0), 0 !== e.config.markers.size && 0 !== e.globals.markers.largestSize || this.marker.drawDynamicPoints(this), e.globals.collapsedSeries.length !== e.globals.series.length) {
                    this.dataPointsDividedHeight = e.globals.gridHeight / e.globals.dataPoints, this.dataPointsDividedWidth = e.globals.gridWidth / e.globals.dataPoints, this.showTooltipTitle && (this.tooltipTitle = document.createElement("div"), this.tooltipTitle.classList.add("apexcharts-tooltip-title"), this.tooltipTitle.style.fontFamily = this.tConfig.style.fontFamily || e.config.chart.fontFamily, this.tooltipTitle.style.fontSize = this.tConfig.style.fontSize, i.appendChild(this.tooltipTitle));
                    var a = e.globals.series.length;
                    (e.globals.xyCharts || e.globals.comboCharts) && this.tConfig.shared && (a = this.showOnIntersect ? 1 : e.globals.series.length), this.ttItems = this.createTTElements(a), this.addSVGEvents()
                }
            }
        }, {
            key: "createTTElements", value: function (t) {
                for (var e = this.w, i = [], s = this.getElTooltip(), a = 0; a < t; a++) {
                    var n = document.createElement("div");
                    n.classList.add("apexcharts-tooltip-series-group"), this.tConfig.shared && this.tConfig.enabledOnSeries && Array.isArray(this.tConfig.enabledOnSeries) && this.tConfig.enabledOnSeries.indexOf(a) < 0 && n.classList.add("apexcharts-tooltip-series-group-hidden");
                    var r = document.createElement("span");
                    r.classList.add("apexcharts-tooltip-marker"), r.style.backgroundColor = e.globals.colors[a], n.appendChild(r);
                    var o = document.createElement("div");
                    o.classList.add("apexcharts-tooltip-text"), o.style.fontFamily = this.tConfig.style.fontFamily || e.config.chart.fontFamily, o.style.fontSize = this.tConfig.style.fontSize;
                    var l = document.createElement("div");
                    l.classList.add("apexcharts-tooltip-y-group");
                    var h = document.createElement("span");
                    h.classList.add("apexcharts-tooltip-text-label"), l.appendChild(h);
                    var c = document.createElement("span");
                    c.classList.add("apexcharts-tooltip-text-value"), l.appendChild(c);
                    var d = document.createElement("div");
                    d.classList.add("apexcharts-tooltip-z-group");
                    var u = document.createElement("span");
                    u.classList.add("apexcharts-tooltip-text-z-label"), d.appendChild(u);
                    var g = document.createElement("span");
                    g.classList.add("apexcharts-tooltip-text-z-value"), d.appendChild(g), o.appendChild(l), o.appendChild(d), n.appendChild(o), s.appendChild(n), i.push(n)
                }
                return i
            }
        }, {
            key: "addSVGEvents", value: function () {
                var t = this.w, e = t.config.chart.type, i = this.getElTooltip(),
                    s = !("bar" !== e && "candlestick" !== e && "rangeBar" !== e), a = t.globals.dom.Paper.node,
                    n = this.getElGrid();
                n && (this.seriesBound = n.getBoundingClientRect());
                var r, o = [], l = [],
                    h = {hoverArea: a, elGrid: n, tooltipEl: i, tooltipY: o, tooltipX: l, ttItems: this.ttItems};
                if (t.globals.axisCharts && ("area" === e || "line" === e || "scatter" === e || "bubble" === e ? r = t.globals.dom.baseEl.querySelectorAll(".apexcharts-series[data\\:longestSeries='true'] .apexcharts-marker") : s ? r = t.globals.dom.baseEl.querySelectorAll(".apexcharts-series .apexcharts-bar-area, .apexcharts-series .apexcharts-candlestick-area, .apexcharts-series .apexcharts-rangebar-area") : "heatmap" === e ? r = t.globals.dom.baseEl.querySelectorAll(".apexcharts-series .apexcharts-heatmap") : "radar" === e && (r = t.globals.dom.baseEl.querySelectorAll(".apexcharts-series .apexcharts-marker")), r && r.length)) for (var c = 0; c < r.length; c++) o.push(r[c].getAttribute("cy")), l.push(r[c].getAttribute("cx"));
                if (t.globals.xyCharts && !this.showOnIntersect || t.globals.comboCharts && !this.showOnIntersect || s && this.hasBars() && this.tConfig.shared) this.addPathsEventListeners([a], h); else if (s && !t.globals.comboCharts) this.addBarsEventListeners(h); else if ("bubble" === e || "scatter" === e || "radar" === e || this.showOnIntersect && ("area" === e || "line" === e)) this.addPointsEventsListeners(h); else if (!t.globals.axisCharts || "heatmap" === e) {
                    var d = t.globals.dom.baseEl.querySelectorAll(".apexcharts-series");
                    this.addPathsEventListeners(d, h)
                }
                if (this.showOnIntersect) {
                    var u = t.globals.dom.baseEl.querySelectorAll(".apexcharts-line-series .apexcharts-marker");
                    u.length > 0 && this.addPathsEventListeners(u, h);
                    var g = t.globals.dom.baseEl.querySelectorAll(".apexcharts-area-series .apexcharts-marker");
                    g.length > 0 && this.addPathsEventListeners(g, h), this.hasBars() && !this.tConfig.shared && this.addBarsEventListeners(h)
                }
            }
        }, {
            key: "drawFixedTooltipRect", value: function () {
                var t = this.w, e = this.getElTooltip(), i = e.getBoundingClientRect(), s = i.width + 10,
                    a = i.height + 10, n = this.tConfig.fixed.offsetX, r = this.tConfig.fixed.offsetY;
                return this.tConfig.fixed.position.toLowerCase().indexOf("right") > -1 && (n = n + t.globals.svgWidth - s + 10), this.tConfig.fixed.position.toLowerCase().indexOf("bottom") > -1 && (r = r + t.globals.svgHeight - a - 10), e.style.left = n + "px", e.style.top = r + "px", {
                    x: n,
                    y: r,
                    ttWidth: s,
                    ttHeight: a
                }
            }
        }, {
            key: "addPointsEventsListeners", value: function (t) {
                var e = this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-series-markers .apexcharts-marker");
                this.addPathsEventListeners(e, t)
            }
        }, {
            key: "addBarsEventListeners", value: function (t) {
                var e = this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-bar-area, .apexcharts-candlestick-area, .apexcharts-rangebar-area");
                this.addPathsEventListeners(e, t)
            }
        }, {
            key: "addPathsEventListeners", value: function (t, e) {
                for (var i = this, s = this, a = function (a) {
                    var n = {
                        paths: t[a],
                        tooltipEl: e.tooltipEl,
                        tooltipY: e.tooltipY,
                        tooltipX: e.tooltipX,
                        elGrid: e.elGrid,
                        hoverArea: e.hoverArea,
                        ttItems: e.ttItems
                    };
                    i.w.globals.tooltipOpts = n;
                    ["mousemove", "mouseup", "touchmove", "mouseout", "touchend"].map(function (e) {
                        return t[a].addEventListener(e, s.seriesHover.bind(s, n), {capture: !1, passive: !0})
                    })
                }, n = 0; n < t.length; n++) a(n)
            }
        }, {
            key: "seriesHover", value: function (t, e) {
                var i = this, s = [], a = this.w;
                a.config.chart.group && (s = this.ctx.getGroupedCharts()), a.globals.axisCharts && (a.globals.minX === -1 / 0 && a.globals.maxX === 1 / 0 || 0 === a.globals.dataPoints) || (s.length ? s.forEach(function (s) {
                    var a = i.getElTooltip(s), n = {
                        paths: t.paths,
                        tooltipEl: a,
                        tooltipY: t.tooltipY,
                        tooltipX: t.tooltipX,
                        elGrid: t.elGrid,
                        hoverArea: t.hoverArea,
                        ttItems: s.w.globals.tooltip.ttItems
                    };
                    s.w.globals.minX === i.w.globals.minX && s.w.globals.maxX === i.w.globals.maxX && s.w.globals.tooltip.seriesHoverByContext({
                        chartCtx: s,
                        ttCtx: s.w.globals.tooltip,
                        opt: n,
                        e: e
                    })
                }) : this.seriesHoverByContext({chartCtx: this.ctx, ttCtx: this.w.globals.tooltip, opt: t, e: e}))
            }
        }, {
            key: "seriesHoverByContext", value: function (t) {
                var e = t.chartCtx, i = t.ttCtx, s = t.opt, a = t.e, n = e.w, r = this.getElTooltip();
                (i.tooltipRect = {
                    x: 0,
                    y: 0,
                    ttWidth: r.getBoundingClientRect().width,
                    ttHeight: r.getBoundingClientRect().height
                }, i.e = a, !i.hasBars() || n.globals.comboCharts || i.isBarShared) || this.tConfig.onDatasetHover.highlightDataSeries && new G(e).toggleSeriesOnHover(a, a.target.parentNode);
                i.fixedTooltip && i.drawFixedTooltipRect(), n.globals.axisCharts ? i.axisChartsTooltips({
                    e: a,
                    opt: s,
                    tooltipRect: i.tooltipRect
                }) : i.nonAxisChartsTooltips({e: a, opt: s, tooltipRect: i.tooltipRect})
            }
        }, {
            key: "axisChartsTooltips", value: function (t) {
                var e, i, s, a = t.e, n = t.opt, r = this.w, o = null, l = n.elGrid.getBoundingClientRect(),
                    h = "touchmove" === a.type ? a.touches[0].clientX : a.clientX,
                    c = "touchmove" === a.type ? a.touches[0].clientY : a.clientY;
                if (this.clientY = c, this.clientX = h, c < l.top || c > l.top + l.height) this.handleMouseOut(n); else {
                    if (Array.isArray(this.tConfig.enabledOnSeries)) {
                        var d = parseInt(n.paths.getAttribute("index"));
                        if (this.tConfig.enabledOnSeries.indexOf(d) < 0) return void this.handleMouseOut(n)
                    }
                    var u = this.getElTooltip(), g = this.getElXCrosshairs(),
                        f = r.globals.xyCharts || "bar" === r.config.chart.type && !r.globals.isBarHorizontal && this.hasBars() && this.tConfig.shared || r.globals.comboCharts && this.hasBars;
                    if (r.globals.isBarHorizontal && this.hasBars() && (f = !1), "mousemove" === a.type || "touchmove" === a.type || "mouseup" === a.type) {
                        if (null !== g && g.classList.add("active"), null !== this.ycrosshairs && this.blyaxisTooltip && this.ycrosshairs.classList.add("active"), f && !this.showOnIntersect) {
                            e = (o = this.tooltipUtil.getNearestValues({
                                context: this,
                                hoverArea: n.hoverArea,
                                elGrid: n.elGrid,
                                clientX: h,
                                clientY: c,
                                hasBars: this.hasBars
                            })).j;
                            var p = o.capturedSeries;
                            if (o.hoverX < 0 || o.hoverX > r.globals.gridWidth) return void this.handleMouseOut(n);
                            if (null !== p) {
                                if (null === r.globals.series[p][e]) return void n.tooltipEl.classList.remove("active");
                                void 0 !== r.globals.series[p][e] ? this.tConfig.shared && this.tooltipUtil.isXoverlap(e) && this.tooltipUtil.isinitialSeriesSameLen() ? this.create(a, this, p, e, n.ttItems) : this.create(a, this, p, e, n.ttItems, !1) : this.tooltipUtil.isXoverlap(e) && this.create(a, this, 0, e, n.ttItems)
                            } else this.tooltipUtil.isXoverlap(e) && this.create(a, this, 0, e, n.ttItems)
                        } else if ("heatmap" === r.config.chart.type) {
                            var x = this.intersect.handleHeatTooltip({e: a, opt: n, x: i, y: s});
                            i = x.x, s = x.y, u.style.left = i + "px", u.style.top = s + "px"
                        } else this.hasBars && this.intersect.handleBarTooltip({
                            e: a,
                            opt: n
                        }), this.hasMarkers && this.intersect.handleMarkerTooltip({e: a, opt: n, x: i, y: s});
                        if (this.blyaxisTooltip) for (var b = 0; b < r.config.yaxis.length; b++) this.axesTooltip.drawYaxisTooltipText(b, c, this.xyRatios);
                        n.tooltipEl.classList.add("active")
                    } else "mouseout" !== a.type && "touchend" !== a.type || this.handleMouseOut(n)
                }
            }
        }, {
            key: "nonAxisChartsTooltips", value: function (t) {
                var e = t.e, i = t.opt, s = t.tooltipRect, a = this.w, n = i.paths.getAttribute("rel"),
                    r = this.getElTooltip(), o = a.globals.dom.elWrap.getBoundingClientRect();
                if ("mousemove" === e.type || "touchmove" === e.type) {
                    r.classList.add("active"), this.tooltipLabels.drawSeriesTexts({
                        ttItems: i.ttItems,
                        i: parseInt(n) - 1,
                        shared: !1
                    });
                    var l = a.globals.clientX - o.left - s.ttWidth / 2, h = a.globals.clientY - o.top - s.ttHeight - 10;
                    r.style.left = l + "px", r.style.top = h + "px"
                } else "mouseout" !== e.type && "touchend" !== e.type || r.classList.remove("active")
            }
        }, {
            key: "deactivateHoverFilter", value: function () {
                for (var t = this.w, e = new f(this.ctx), i = t.globals.dom.Paper.select(".apexcharts-bar-area"), s = 0; s < i.length; s++) e.pathMouseLeave(i[s])
            }
        }, {
            key: "handleMouseOut", value: function (t) {
                var e = this.w, i = this.getElXCrosshairs();
                if (t.tooltipEl.classList.remove("active"), this.deactivateHoverFilter(), "bubble" !== e.config.chart.type && this.marker.resetPointsSize(), null !== i && i.classList.remove("active"), null !== this.ycrosshairs && this.ycrosshairs.classList.remove("active"), this.blxaxisTooltip && this.xaxisTooltip.classList.remove("active"), this.blyaxisTooltip) {
                    null === this.yaxisTTEls && (this.yaxisTTEls = e.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxistooltip"));
                    for (var s = 0; s < this.yaxisTTEls.length; s++) this.yaxisTTEls[s].classList.remove("active")
                }
            }
        }, {
            key: "getElMarkers", value: function () {
                return this.w.globals.dom.baseEl.querySelectorAll(" .apexcharts-series-markers")
            }
        }, {
            key: "getAllMarkers", value: function () {
                return this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-series-markers .apexcharts-marker")
            }
        }, {
            key: "hasMarkers", value: function () {
                return this.getElMarkers().length > 0
            }
        }, {
            key: "getElBars", value: function () {
                return this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-bar-series,  .apexcharts-candlestick-series, .apexcharts-rangebar-series")
            }
        }, {
            key: "hasBars", value: function () {
                return this.getElBars().length > 0
            }
        }, {
            key: "markerClick", value: function (t, e, i) {
                var s = this.w;
                "function" == typeof s.config.chart.events.markerClick && s.config.chart.events.markerClick(t, this.ctx, {
                    seriesIndex: e,
                    dataPointIndex: i,
                    w: s
                }), this.ctx.fireEvent("markerClick", [t, this.ctx, {seriesIndex: e, dataPointIndex: i, w: s}])
            }
        }, {
            key: "create", value: function (t, e, i, s, a) {
                var n = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : null, r = this.w, o = e;
                "mouseup" === t.type && this.markerClick(t, i, s), null === n && (n = this.tConfig.shared);
                var l = this.hasMarkers(), h = this.getElBars();
                if (n) {
                    if (o.tooltipLabels.drawSeriesTexts({
                        ttItems: a,
                        i: i,
                        j: s,
                        shared: !this.showOnIntersect && this.tConfig.shared
                    }), l && (r.globals.markers.largestSize > 0 ? o.marker.enlargePoints(s) : o.tooltipPosition.moveDynamicPointsOnHover(s)), this.hasBars() && (this.barSeriesHeight = this.tooltipUtil.getBarsHeight(h), this.barSeriesHeight > 0)) {
                        var c = new f(this.ctx),
                            d = r.globals.dom.Paper.select(".apexcharts-bar-area[j='".concat(s, "']"));
                        this.deactivateHoverFilter(), this.tooltipPosition.moveStickyTooltipOverBars(s);
                        for (var u = 0; u < d.length; u++) c.pathMouseEnter(d[u])
                    }
                } else o.tooltipLabels.drawSeriesTexts({
                    shared: !1,
                    ttItems: a,
                    i: i,
                    j: s
                }), this.hasBars() && o.tooltipPosition.moveStickyTooltipOverBars(s), l && o.tooltipPosition.moveMarkers(i, s)
            }
        }]), t
    }(), bt = function () {
        function t(i) {
            e(this, t), this.ctx = i, this.w = i.w, this.ev = this.w.config.chart.events, this.localeValues = this.w.globals.locale.toolbar
        }

        return s(t, [{
            key: "createToolbar", value: function () {
                var t = this.w, e = document.createElement("div");
                if (e.setAttribute("class", "apexcharts-toolbar"), t.globals.dom.elWrap.appendChild(e), this.elZoom = document.createElement("div"), this.elZoomIn = document.createElement("div"), this.elZoomOut = document.createElement("div"), this.elPan = document.createElement("div"), this.elSelection = document.createElement("div"), this.elZoomReset = document.createElement("div"), this.elMenuIcon = document.createElement("div"), this.elMenu = document.createElement("div"), this.elCustomIcons = [], this.t = t.config.chart.toolbar.tools, Array.isArray(this.t.customIcons)) for (var i = 0; i < this.t.customIcons.length; i++) this.elCustomIcons.push(document.createElement("div"));
                this.elMenuItems = [];
                var s = [];
                this.t.zoomin && t.config.chart.zoom.enabled && s.push({
                    el: this.elZoomIn,
                    icon: "string" == typeof this.t.zoomin ? this.t.zoomin : '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">\n    <path d="M0 0h24v24H0z" fill="none"/>\n    <path d="M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"/>\n</svg>\n',
                    title: this.localeValues.zoomIn,
                    class: "apexcharts-zoom-in-icon"
                }), this.t.zoomout && t.config.chart.zoom.enabled && s.push({
                    el: this.elZoomOut,
                    icon: "string" == typeof this.t.zoomout ? this.t.zoomout : '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">\n    <path d="M0 0h24v24H0z" fill="none"/>\n    <path d="M7 11v2h10v-2H7zm5-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"/>\n</svg>\n',
                    title: this.localeValues.zoomOut,
                    class: "apexcharts-zoom-out-icon"
                }), this.t.zoom && t.config.chart.zoom.enabled && s.push({
                    el: this.elZoom,
                    icon: "string" == typeof this.t.zoom ? this.t.zoom : '<svg xmlns="http://www.w3.org/2000/svg" fill="#000000" height="24" viewBox="0 0 24 24" width="24">\n    <path d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"/>\n    <path d="M0 0h24v24H0V0z" fill="none"/>\n    <path d="M12 10h-2v2H9v-2H7V9h2V7h1v2h2v1z"/>\n</svg>',
                    title: this.localeValues.selectionZoom,
                    class: t.globals.isTouchDevice ? "hidden" : "apexcharts-zoom-icon"
                }), this.t.selection && t.config.chart.selection.enabled && s.push({
                    el: this.elSelection,
                    icon: "string" == typeof this.t.selection ? this.t.selection : '<svg fill="#6E8192" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">\n    <path d="M0 0h24v24H0z" fill="none"/>\n    <path d="M3 5h2V3c-1.1 0-2 .9-2 2zm0 8h2v-2H3v2zm4 8h2v-2H7v2zM3 9h2V7H3v2zm10-6h-2v2h2V3zm6 0v2h2c0-1.1-.9-2-2-2zM5 21v-2H3c0 1.1.9 2 2 2zm-2-4h2v-2H3v2zM9 3H7v2h2V3zm2 18h2v-2h-2v2zm8-8h2v-2h-2v2zm0 8c1.1 0 2-.9 2-2h-2v2zm0-12h2V7h-2v2zm0 8h2v-2h-2v2zm-4 4h2v-2h-2v2zm0-16h2V3h-2v2z"/>\n</svg>',
                    title: this.localeValues.selection,
                    class: t.globals.isTouchDevice ? "hidden" : "apexcharts-selection-icon"
                }), this.t.pan && t.config.chart.zoom.enabled && s.push({
                    el: this.elPan,
                    icon: "string" == typeof this.t.pan ? this.t.pan : '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" fill="#000000" height="24" viewBox="0 0 24 24" width="24">\n    <defs>\n        <path d="M0 0h24v24H0z" id="a"/>\n    </defs>\n    <clipPath id="b">\n        <use overflow="visible" xlink:href="#a"/>\n    </clipPath>\n    <path clip-path="url(#b)" d="M23 5.5V20c0 2.2-1.8 4-4 4h-7.3c-1.08 0-2.1-.43-2.85-1.19L1 14.83s1.26-1.23 1.3-1.25c.22-.19.49-.29.79-.29.22 0 .42.06.6.16.04.01 4.31 2.46 4.31 2.46V4c0-.83.67-1.5 1.5-1.5S11 3.17 11 4v7h1V1.5c0-.83.67-1.5 1.5-1.5S15 .67 15 1.5V11h1V2.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5V11h1V5.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5z"/>\n</svg>',
                    title: this.localeValues.pan,
                    class: t.globals.isTouchDevice ? "hidden" : "apexcharts-pan-icon"
                }), this.t.reset && t.config.chart.zoom.enabled && s.push({
                    el: this.elZoomReset,
                    icon: "string" == typeof this.t.reset ? this.t.reset : '<svg fill="#000000" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">\n    <path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"/>\n    <path d="M0 0h24v24H0z" fill="none"/>\n</svg>',
                    title: this.localeValues.reset,
                    class: "apexcharts-reset-zoom-icon"
                }), this.t.download && s.push({
                    el: this.elMenuIcon,
                    icon: "string" == typeof this.t.download ? this.t.download : '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0V0z"/><path d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"/></svg>',
                    title: this.localeValues.menu,
                    class: "apexcharts-menu-icon"
                });
                for (var a = 0; a < this.elCustomIcons.length; a++) s.push({
                    el: this.elCustomIcons[a],
                    icon: this.t.customIcons[a].icon,
                    title: this.t.customIcons[a].title,
                    index: this.t.customIcons[a].index,
                    class: "apexcharts-toolbar-custom-icon " + this.t.customIcons[a].class
                });
                s.forEach(function (t, e) {
                    t.index && d.moveIndexInArray(s, e, t.index)
                });
                for (var n = 0; n < s.length; n++) f.setAttrs(s[n].el, {
                    class: s[n].class,
                    title: s[n].title
                }), s[n].el.innerHTML = s[n].icon, e.appendChild(s[n].el);
                e.appendChild(this.elMenu), f.setAttrs(this.elMenu, {class: "apexcharts-menu"});
                for (var r = [{name: "exportSVG", title: this.localeValues.exportToSVG}, {
                    name: "exportPNG",
                    title: this.localeValues.exportToPNG
                }], o = 0; o < r.length; o++) this.elMenuItems.push(document.createElement("div")), this.elMenuItems[o].innerHTML = r[o].title, f.setAttrs(this.elMenuItems[o], {
                    class: "apexcharts-menu-item ".concat(r[o].name),
                    title: r[o].title
                }), this.elMenu.appendChild(this.elMenuItems[o]);
                t.globals.zoomEnabled ? this.elZoom.classList.add("selected") : t.globals.panEnabled ? this.elPan.classList.add("selected") : t.globals.selectionEnabled && this.elSelection.classList.add("selected"), this.addToolbarEventListeners()
            }
        }, {
            key: "addToolbarEventListeners", value: function () {
                var t = this;
                this.elZoomReset.addEventListener("click", this.handleZoomReset.bind(this)), this.elSelection.addEventListener("click", this.toggleSelection.bind(this)), this.elZoom.addEventListener("click", this.toggleZooming.bind(this)), this.elZoomIn.addEventListener("click", this.handleZoomIn.bind(this)), this.elZoomOut.addEventListener("click", this.handleZoomOut.bind(this)), this.elPan.addEventListener("click", this.togglePanning.bind(this)), this.elMenuIcon.addEventListener("click", this.toggleMenu.bind(this)), this.elMenuItems.forEach(function (e) {
                    e.classList.contains("exportSVG") ? e.addEventListener("click", t.downloadSVG.bind(t)) : e.classList.contains("exportPNG") && e.addEventListener("click", t.downloadPNG.bind(t))
                });
                for (var e = 0; e < this.t.customIcons.length; e++) this.elCustomIcons[e].addEventListener("click", this.t.customIcons[e].click)
            }
        }, {
            key: "toggleSelection", value: function () {
                this.toggleOtherControls(), this.w.globals.selectionEnabled = !this.w.globals.selectionEnabled, this.elSelection.classList.contains("selected") ? this.elSelection.classList.remove("selected") : this.elSelection.classList.add("selected")
            }
        }, {
            key: "toggleZooming", value: function () {
                this.toggleOtherControls(), this.w.globals.zoomEnabled = !this.w.globals.zoomEnabled, this.elZoom.classList.contains("selected") ? this.elZoom.classList.remove("selected") : this.elZoom.classList.add("selected")
            }
        }, {
            key: "getToolbarIconsReference", value: function () {
                var t = this.w;
                this.elZoom || (this.elZoom = t.globals.dom.baseEl.querySelector(".apexcharts-zoom-icon")), this.elPan || (this.elPan = t.globals.dom.baseEl.querySelector(".apexcharts-pan-icon")), this.elSelection || (this.elSelection = t.globals.dom.baseEl.querySelector(".apexcharts-selection-icon"))
            }
        }, {
            key: "enableZooming", value: function () {
                this.toggleOtherControls(), this.w.globals.zoomEnabled = !0, this.elZoom && this.elZoom.classList.add("selected"), this.elPan && this.elPan.classList.remove("selected")
            }
        }, {
            key: "enablePanning", value: function () {
                this.toggleOtherControls(), this.w.globals.panEnabled = !0, this.elPan && this.elPan.classList.add("selected"), this.elZoom && this.elZoom.classList.remove("selected")
            }
        }, {
            key: "togglePanning", value: function () {
                this.toggleOtherControls(), this.w.globals.panEnabled = !this.w.globals.panEnabled, this.elPan.classList.contains("selected") ? this.elPan.classList.remove("selected") : this.elPan.classList.add("selected")
            }
        }, {
            key: "toggleOtherControls", value: function () {
                var t = this.w;
                t.globals.panEnabled = !1, t.globals.zoomEnabled = !1, t.globals.selectionEnabled = !1, this.getToolbarIconsReference(), this.elPan && this.elPan.classList.remove("selected"), this.elSelection && this.elSelection.classList.remove("selected"), this.elZoom && this.elZoom.classList.remove("selected")
            }
        }, {
            key: "handleZoomIn", value: function () {
                var t = this.w, e = (t.globals.minX + t.globals.maxX) / 2, i = (t.globals.minX + e) / 2,
                    s = (t.globals.maxX + e) / 2;
                t.globals.disableZoomIn || this.zoomUpdateOptions(i, s)
            }
        }, {
            key: "handleZoomOut", value: function () {
                var t = this.w;
                if (!("datetime" === t.config.xaxis.type && new Date(t.globals.minX).getUTCFullYear() < 1e3)) {
                    var e = (t.globals.minX + t.globals.maxX) / 2, i = t.globals.minX - (e - t.globals.minX),
                        s = t.globals.maxX - (e - t.globals.maxX);
                    t.globals.disableZoomOut || this.zoomUpdateOptions(i, s)
                }
            }
        }, {
            key: "zoomUpdateOptions", value: function (t, e) {
                var i = {min: t, max: e}, s = this.getBeforeZoomRange(i);
                s && (i = s.xaxis), this.w.globals.zoomed = !0, this.ctx._updateOptions({xaxis: i}, !1, this.w.config.chart.animations.dynamicAnimation.enabled), this.zoomCallback(i)
            }
        }, {
            key: "zoomCallback", value: function (t, e) {
                "function" == typeof this.ev.zoomed && this.ev.zoomed(this.ctx, {xaxis: t, yaxis: e})
            }
        }, {
            key: "getBeforeZoomRange", value: function (t, e) {
                var i = null;
                return "function" == typeof this.ev.beforeZoom && (i = this.ev.beforeZoom(this, {
                    xaxis: t,
                    yaxis: e
                })), i
            }
        }, {
            key: "toggleMenu", value: function () {
                this.elMenu.classList.contains("open") ? this.elMenu.classList.remove("open") : this.elMenu.classList.add("open")
            }
        }, {
            key: "downloadPNG", value: function () {
                var t = new nt(this.ctx);
                t.exportToPng(this.ctx), this.toggleMenu()
            }
        }, {
            key: "downloadSVG", value: function () {
                var t = new nt(this.ctx);
                t.exportToSVG(), this.toggleMenu()
            }
        }, {
            key: "handleZoomReset", value: function (t) {
                var e = this;
                this.ctx.getSyncedCharts().forEach(function (t) {
                    var i = t.w;
                    i.globals.minX !== i.globals.initialminX && i.globals.maxX !== i.globals.initialmaxX && (t.revertDefaultAxisMinMax(), "function" == typeof i.config.chart.events.zoomed && e.zoomCallback({
                        min: i.config.xaxis.min,
                        max: i.config.xaxis.max
                    }), i.globals.zoomed = !1, t._updateSeries(i.globals.initialSeries, i.config.chart.animations.dynamicAnimation.enabled))
                })
            }
        }, {
            key: "destroy", value: function () {
                this.elZoomReset && (this.elZoomReset.removeEventListener("click", this.handleZoomReset.bind(this)), this.elSelection.removeEventListener("click", this.toggleSelection.bind(this)), this.elZoom.removeEventListener("click", this.toggleZooming.bind(this)), this.elZoomIn.removeEventListener("click", this.handleZoomIn.bind(this)), this.elZoomOut.removeEventListener("click", this.handleZoomOut.bind(this)), this.elPan.removeEventListener("click", this.togglePanning.bind(this)), this.elMenuIcon.removeEventListener("click", this.toggleMenu.bind(this))), this.elZoom = null, this.elZoomIn = null, this.elZoomOut = null, this.elPan = null, this.elSelection = null, this.elZoomReset = null, this.elMenuIcon = null
            }
        }]), t
    }(), mt = function (t) {
        function i(t) {
            var s;
            return e(this, i), (s = h(this, o(i).call(this, t))).ctx = t, s.w = t.w, s.dragged = !1, s.graphics = new f(s.ctx), s.eventList = ["mousedown", "mousemove", "touchstart", "touchmove", "mouseup", "touchend"], s.clientX = 0, s.clientY = 0, s.startX = 0, s.endX = 0, s.dragX = 0, s.startY = 0, s.endY = 0, s.dragY = 0, s
        }

        return r(i, bt), s(i, [{
            key: "init", value: function (t) {
                var e = this, i = t.xyRatios, s = this.w, a = this;
                this.xyRatios = i, this.zoomRect = this.graphics.drawRect(0, 0, 0, 0), this.selectionRect = this.graphics.drawRect(0, 0, 0, 0), this.gridRect = s.globals.dom.baseEl.querySelector(".apexcharts-grid"), this.zoomRect.node.classList.add("apexcharts-zoom-rect"), this.selectionRect.node.classList.add("apexcharts-selection-rect"), s.globals.dom.elGraphical.add(this.zoomRect), s.globals.dom.elGraphical.add(this.selectionRect), "x" === s.config.chart.selection.type ? this.slDraggableRect = this.selectionRect.draggable({
                    minX: 0,
                    minY: 0,
                    maxX: s.globals.gridWidth,
                    maxY: s.globals.gridHeight
                }).on("dragmove", this.selectionDragging.bind(this, "dragging")) : "y" === s.config.chart.selection.type ? this.slDraggableRect = this.selectionRect.draggable({
                    minX: 0,
                    maxX: s.globals.gridWidth
                }).on("dragmove", this.selectionDragging.bind(this, "dragging")) : this.slDraggableRect = this.selectionRect.draggable().on("dragmove", this.selectionDragging.bind(this, "dragging")), this.preselectedSelection(), this.hoverArea = s.globals.dom.baseEl.querySelector(s.globals.chartClass), this.hoverArea.classList.add("zoomable"), this.eventList.forEach(function (t) {
                    e.hoverArea.addEventListener(t, a.svgMouseEvents.bind(a, i), {capture: !1, passive: !0})
                })
            }
        }, {
            key: "destroy", value: function () {
                var t = this, e = this;
                this.eventList.forEach(function (i) {
                    t.hoverArea && t.hoverArea.removeEventListener(i, e.svgMouseEvents.bind(e, e.xyRatios), {
                        capture: !1,
                        passive: !0
                    })
                }), this.slDraggableRect && (this.slDraggableRect.draggable(!1), this.slDraggableRect.off(), this.selectionRect.off()), this.selectionRect = null, this.zoomRect = null, this.gridRect = null
            }
        }, {
            key: "svgMouseEvents", value: function (t, e) {
                var i = this.w, s = this, a = this.ctx.toolbar,
                    n = i.globals.zoomEnabled ? i.config.chart.zoom.type : i.config.chart.selection.type;
                if (e.shiftKey ? (this.shiftWasPressed = !0, a.enablePanning()) : this.shiftWasPressed && (a.enableZooming(), this.shiftWasPressed = !1), !(e.target.classList.contains("apexcharts-selection-rect") || e.target.parentNode.classList.contains("apexcharts-toolbar"))) {
                    if (s.clientX = "touchmove" === e.type || "touchstart" === e.type ? e.touches[0].clientX : "touchend" === e.type ? e.changedTouches[0].clientX : e.clientX, s.clientY = "touchmove" === e.type || "touchstart" === e.type ? e.touches[0].clientY : "touchend" === e.type ? e.changedTouches[0].clientY : e.clientY, "mousedown" === e.type && 1 === e.which) {
                        var r = s.gridRect.getBoundingClientRect();
                        s.startX = s.clientX - r.left, s.startY = s.clientY - r.top, s.dragged = !1, s.w.globals.mousedown = !0
                    }
                    if (("mousemove" === e.type && 1 === e.which || "touchmove" === e.type) && (s.dragged = !0, i.globals.panEnabled ? (i.globals.selection = null, s.w.globals.mousedown && s.panDragging({
                        context: s,
                        zoomtype: n,
                        xyRatios: t
                    })) : (s.w.globals.mousedown && i.globals.zoomEnabled || s.w.globals.mousedown && i.globals.selectionEnabled) && (s.selection = s.selectionDrawing({
                        context: s,
                        zoomtype: n
                    }))), "mouseup" === e.type || "touchend" === e.type) {
                        var o = s.gridRect.getBoundingClientRect();
                        s.w.globals.mousedown && (s.endX = s.clientX - o.left, s.endY = s.clientY - o.top, s.dragX = Math.abs(s.endX - s.startX), s.dragY = Math.abs(s.endY - s.startY), (i.globals.zoomEnabled || i.globals.selectionEnabled) && s.selectionDrawn({
                            context: s,
                            zoomtype: n
                        })), i.globals.zoomEnabled && s.hideSelectionRect(this.selectionRect), s.dragged = !1, s.w.globals.mousedown = !1
                    }
                    this.makeSelectionRectDraggable()
                }
            }
        }, {
            key: "makeSelectionRectDraggable", value: function () {
                var t = this.w;
                if (this.selectionRect) {
                    var e = this.selectionRect.node.getBoundingClientRect();
                    e.width > 0 && e.height > 0 && this.slDraggableRect.selectize().resize({
                        constraint: {
                            minX: 0,
                            minY: 0,
                            maxX: t.globals.gridWidth,
                            maxY: t.globals.gridHeight
                        }
                    }).on("resizing", this.selectionDragging.bind(this, "resizing"))
                }
            }
        }, {
            key: "preselectedSelection", value: function () {
                var t = this.w, e = this.xyRatios;
                if (!t.globals.zoomEnabled) if (void 0 !== t.globals.selection && null !== t.globals.selection) this.drawSelectionRect(t.globals.selection); else if (void 0 !== t.config.chart.selection.xaxis.min && void 0 !== t.config.chart.selection.xaxis.max) {
                    var i = (t.config.chart.selection.xaxis.min - t.globals.minX) / e.xRatio, s = {
                        x: i,
                        y: 0,
                        width: t.globals.gridWidth - (t.globals.maxX - t.config.chart.selection.xaxis.max) / e.xRatio - i,
                        height: t.globals.gridHeight,
                        translateX: 0,
                        translateY: 0,
                        selectionEnabled: !0
                    };
                    this.drawSelectionRect(s), this.makeSelectionRectDraggable(), "function" == typeof t.config.chart.events.selection && t.config.chart.events.selection(this.ctx, {
                        xaxis: {
                            min: t.config.chart.selection.xaxis.min,
                            max: t.config.chart.selection.xaxis.max
                        }, yaxis: {}
                    })
                }
            }
        }, {
            key: "drawSelectionRect", value: function (t) {
                var e = t.x, i = t.y, s = t.width, a = t.height, n = t.translateX, r = t.translateY, o = this.w,
                    l = this.zoomRect, h = this.selectionRect;
                if (this.dragged || null !== o.globals.selection) {
                    var c = {transform: "translate(" + n + ", " + r + ")"};
                    o.globals.zoomEnabled && this.dragged && (l.attr({
                        x: e,
                        y: i,
                        width: s,
                        height: a,
                        fill: o.config.chart.zoom.zoomedArea.fill.color,
                        "fill-opacity": o.config.chart.zoom.zoomedArea.fill.opacity,
                        stroke: o.config.chart.zoom.zoomedArea.stroke.color,
                        "stroke-width": o.config.chart.zoom.zoomedArea.stroke.width,
                        "stroke-opacity": o.config.chart.zoom.zoomedArea.stroke.opacity
                    }), f.setAttrs(l.node, c)), o.globals.selectionEnabled && (h.attr({
                        x: e,
                        y: i,
                        width: s > 0 ? s : 0,
                        height: a > 0 ? a : 0,
                        fill: o.config.chart.selection.fill.color,
                        "fill-opacity": o.config.chart.selection.fill.opacity,
                        stroke: o.config.chart.selection.stroke.color,
                        "stroke-width": o.config.chart.selection.stroke.width,
                        "stroke-dasharray": o.config.chart.selection.stroke.dashArray,
                        "stroke-opacity": o.config.chart.selection.stroke.opacity
                    }), f.setAttrs(h.node, c))
                }
            }
        }, {
            key: "hideSelectionRect", value: function (t) {
                t && t.attr({x: 0, y: 0, width: 0, height: 0})
            }
        }, {
            key: "selectionDrawing", value: function (t) {
                var e = t.context, i = t.zoomtype, s = this.w, a = e, n = this.gridRect.getBoundingClientRect(),
                    r = a.startX - 1, o = a.startY, l = a.clientX - n.left - r, h = a.clientY - n.top - o, c = 0, d = 0,
                    u = {};
                return (Math.abs(l + r) > s.globals.gridWidth || a.clientX - n.left < 0) && (a.hideSelectionRect(this.zoomRect), a.dragged = !1, a.w.globals.mousedown = !1), r > a.clientX - n.left && (c = -(l = Math.abs(l))), o > a.clientY - n.top && (d = -(h = Math.abs(h))), u = "x" === i ? {
                    x: r,
                    y: 0,
                    width: l,
                    height: s.globals.gridHeight,
                    translateX: c,
                    translateY: 0
                } : "y" === i ? {
                    x: 0,
                    y: o,
                    width: s.globals.gridWidth,
                    height: h,
                    translateX: 0,
                    translateY: d
                } : {
                    x: r,
                    y: o,
                    width: l,
                    height: h,
                    translateX: c,
                    translateY: d
                }, a.drawSelectionRect(u), a.selectionDragging("resizing"), u
            }
        }, {
            key: "selectionDragging", value: function (t, e) {
                var i = this, s = this.w, a = this.xyRatios, n = this.selectionRect, r = 0;
                "resizing" === t && (r = 30), "function" == typeof s.config.chart.events.selection && s.globals.selectionEnabled && (clearTimeout(this.w.globals.selectionResizeTimer), this.w.globals.selectionResizeTimer = window.setTimeout(function () {
                    var t = i.gridRect.getBoundingClientRect(), e = n.node.getBoundingClientRect(),
                        r = s.globals.xAxisScale.niceMin + (e.left - t.left) * a.xRatio,
                        o = s.globals.xAxisScale.niceMin + (e.right - t.left) * a.xRatio,
                        l = s.globals.yAxisScale[0].niceMin + (t.bottom - e.bottom) * a.yRatio[0],
                        h = s.globals.yAxisScale[0].niceMax - (e.top - t.top) * a.yRatio[0];
                    s.config.chart.events.selection(i.ctx, {xaxis: {min: r, max: o}, yaxis: {min: l, max: h}})
                }, r))
            }
        }, {
            key: "selectionDrawn", value: function (t) {
                var e = t.context, i = t.zoomtype, s = this.w, a = e, n = this.xyRatios, r = this.ctx.toolbar;
                if (a.startX > a.endX) {
                    var o = a.startX;
                    a.startX = a.endX, a.endX = o
                }
                if (a.startY > a.endY) {
                    var l = a.startY;
                    a.startY = a.endY, a.endY = l
                }
                var h = s.globals.xAxisScale.niceMin + a.startX * n.xRatio,
                    c = s.globals.xAxisScale.niceMin + a.endX * n.xRatio, u = [], g = [];
                if (s.config.yaxis.forEach(function (t, e) {
                    u.push(Math.floor(s.globals.yAxisScale[e].niceMax - n.yRatio[e] * a.startY)), g.push(Math.floor(s.globals.yAxisScale[e].niceMax - n.yRatio[e] * a.endY))
                }), a.dragged && (a.dragX > 10 || a.dragY > 10) && h !== c) if (s.globals.zoomEnabled) {
                    var f = d.clone(s.config.yaxis);
                    s.globals.zoomed || (s.globals.lastXAxis = d.clone(s.config.xaxis), s.globals.lastYAxis = d.clone(s.config.yaxis));
                    var p = {min: h, max: c};
                    if ("xy" !== i && "y" !== i || f.forEach(function (t, e) {
                        f[e].min = g[e], f[e].max = u[e]
                    }), s.config.chart.zoom.autoScaleYaxis) {
                        var x = new B(a.ctx);
                        f = x.autoScaleY(a.ctx, {xaxis: p})
                    }
                    if (r) {
                        var b = r.getBeforeZoomRange(p, f);
                        b && (p = b.xaxis ? b.xaxis : p, f = b.yaxis ? b.yaxe : f)
                    }
                    a.ctx._updateOptions({
                        xaxis: p,
                        yaxis: f
                    }, !1, a.w.config.chart.animations.dynamicAnimation.enabled), "function" == typeof s.config.chart.events.zoomed && r.zoomCallback(p, f), s.globals.zoomed = !0
                } else if (s.globals.selectionEnabled) {
                    var m, v = null;
                    m = {
                        min: h,
                        max: c
                    }, "xy" !== i && "y" !== i || (v = d.clone(s.config.yaxis)).forEach(function (t, e) {
                        v[e].min = g[e], v[e].max = u[e]
                    }), s.globals.selection = a.selection, "function" == typeof s.config.chart.events.selection && s.config.chart.events.selection(a.ctx, {
                        xaxis: m,
                        yaxis: v
                    })
                }
            }
        }, {
            key: "panDragging", value: function (t) {
                var e, i = t.context, s = (t.zoomtype, this.w), a = i;
                if (void 0 !== s.globals.lastClientPosition.x) {
                    var n = s.globals.lastClientPosition.x - a.clientX, r = s.globals.lastClientPosition.y - a.clientY;
                    Math.abs(n) > Math.abs(r) && n > 0 ? e = "left" : Math.abs(n) > Math.abs(r) && n < 0 ? e = "right" : Math.abs(r) > Math.abs(n) && r > 0 ? e = "up" : Math.abs(r) > Math.abs(n) && r < 0 && (e = "down")
                }
                s.globals.lastClientPosition = {x: a.clientX, y: a.clientY};
                var o = s.globals.minX, l = s.globals.maxX;
                this.panScrolled(e, o, l)
            }
        }, {
            key: "panScrolled", value: function (t, e, i) {
                var s = this.w, a = this.xyRatios, n = d.clone(s.config.yaxis);
                "left" === t ? (e = s.globals.minX + s.globals.gridWidth / 15 * a.xRatio, i = s.globals.maxX + s.globals.gridWidth / 15 * a.xRatio) : "right" === t && (e = s.globals.minX - s.globals.gridWidth / 15 * a.xRatio, i = s.globals.maxX - s.globals.gridWidth / 15 * a.xRatio), (e < s.globals.initialminX || i > s.globals.initialmaxX) && (e = s.globals.minX, i = s.globals.maxX);
                var r = {min: e, max: i};
                s.config.chart.zoom.autoScaleYaxis && (n = new B(me.ctx).autoScaleY(me.ctx, {xaxis: r}));
                this.ctx._updateOptions({
                    xaxis: {min: e, max: i},
                    yaxis: n
                }, !1, !1), "function" == typeof s.config.chart.events.scrolled && s.config.chart.events.scrolled(this.ctx, {
                    xaxis: {
                        min: e,
                        max: i
                    }
                })
            }
        }]), i
    }(), vt = function () {
        function t(i) {
            e(this, t), this.ctx = i, this.w = i.w
        }

        return s(t, [{
            key: "draw", value: function () {
                this.drawTitleSubtitle("title"), this.drawTitleSubtitle("subtitle")
            }
        }, {
            key: "drawTitleSubtitle", value: function (t) {
                var e = this.w, i = "title" === t ? e.config.title : e.config.subtitle, s = e.globals.svgWidth / 2,
                    a = i.offsetY, n = "middle";
                if ("left" === i.align ? (s = 10, n = "start") : "right" === i.align && (s = e.globals.svgWidth - 10, n = "end"), s += i.offsetX, a = a + parseInt(i.style.fontSize) + 2, void 0 !== i.text) {
                    var r = new f(this.ctx).drawText({
                        x: s,
                        y: a,
                        text: i.text,
                        textAnchor: n,
                        fontSize: i.style.fontSize,
                        fontFamily: i.style.fontFamily,
                        foreColor: i.style.color,
                        opacity: 1
                    });
                    r.node.setAttribute("class", "apexcharts-".concat(t, "-text")), e.globals.dom.Paper.add(r)
                }
            }
        }]), t
    }();
    st = "undefined" != typeof window ? window : void 0, at = function (e, i) {
        var s = (void 0 !== this ? this : e).SVG = function (t) {
            if (s.supported) return t = new s.Doc(t), s.parser.draw || s.prepare(), t
        };
        if (s.ns = "http://www.w3.org/2000/svg", s.xmlns = "http://www.w3.org/2000/xmlns/", s.xlink = "http://www.w3.org/1999/xlink", s.svgjs = "http://svgjs.com/svgjs", s.supported = !0, !s.supported) return !1;
        s.did = 1e3, s.eid = function (t) {
            return "Svgjs" + d(t) + s.did++
        }, s.create = function (t) {
            var e = i.createElementNS(this.ns, t);
            return e.setAttribute("id", this.eid(t)), e
        }, s.extend = function () {
            var t, e, i, a;
            for (e = (t = [].slice.call(arguments)).pop(), a = t.length - 1; a >= 0; a--) if (t[a]) for (i in e) t[a].prototype[i] = e[i];
            s.Set && s.Set.inherit && s.Set.inherit()
        }, s.invent = function (t) {
            var e = "function" == typeof t.create ? t.create : function () {
                this.constructor.call(this, s.create(t.create))
            };
            return t.inherit && (e.prototype = new t.inherit), t.extend && s.extend(e, t.extend), t.construct && s.extend(t.parent || s.Container, t.construct), e
        }, s.adopt = function (t) {
            return t ? t.instance ? t.instance : ((i = "svg" == t.nodeName ? t.parentNode instanceof e.SVGElement ? new s.Nested : new s.Doc : "linearGradient" == t.nodeName ? new s.Gradient("linear") : "radialGradient" == t.nodeName ? new s.Gradient("radial") : s[d(t.nodeName)] ? new (s[d(t.nodeName)]) : new s.Element(t)).type = t.nodeName, i.node = t, t.instance = i, i instanceof s.Doc && i.namespace().defs(), i.setData(JSON.parse(t.getAttribute("svgjs:data")) || {}), i) : null;
            var i
        }, s.prepare = function () {
            var t = i.getElementsByTagName("body")[0],
                e = (t ? new s.Doc(t) : s.adopt(i.documentElement).nested()).size(2, 0);
            s.parser = {
                body: t || i.documentElement,
                draw: e.style("opacity:0;position:absolute;left:-100%;top:-100%;overflow:hidden").node,
                poly: e.polyline().node,
                path: e.path().node,
                native: s.create("svg")
            }
        }, s.parser = {native: s.create("svg")}, i.addEventListener("DOMContentLoaded", function () {
            s.parser.draw || s.prepare()
        }, !1), s.regex = {
            numberAndUnit: /^([+-]?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?)([a-z%]*)$/i,
            hex: /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i,
            rgb: /rgb\((\d+),(\d+),(\d+)\)/,
            reference: /#([a-z0-9\-_]+)/i,
            transforms: /\)\s*,?\s*/,
            whitespace: /\s/g,
            isHex: /^#[a-f0-9]{3,6}$/i,
            isRgb: /^rgb\(/,
            isCss: /[^:]+:[^;]+;?/,
            isBlank: /^(\s+)?$/,
            isNumber: /^[+-]?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,
            isPercent: /^-?[\d\.]+%$/,
            isImage: /\.(jpg|jpeg|png|gif|svg)(\?[^=]+.*)?/i,
            delimiter: /[\s,]+/,
            hyphen: /([^e])\-/gi,
            pathLetters: /[MLHVCSQTAZ]/gi,
            isPathLetter: /[MLHVCSQTAZ]/i,
            numbersWithDots: /((\d?\.\d+(?:e[+-]?\d+)?)((?:\.\d+(?:e[+-]?\d+)?)+))+/gi,
            dots: /\./g
        }, s.utils = {
            map: function (t, e) {
                var i, s = t.length, a = [];
                for (i = 0; i < s; i++) a.push(e(t[i]));
                return a
            }, filter: function (t, e) {
                var i, s = t.length, a = [];
                for (i = 0; i < s; i++) e(t[i]) && a.push(t[i]);
                return a
            }, radians: function (t) {
                return t % 360 * Math.PI / 180
            }, degrees: function (t) {
                return 180 * t / Math.PI % 360
            }, filterSVGElements: function (t) {
                return this.filter(t, function (t) {
                    return t instanceof e.SVGElement
                })
            }
        }, s.defaults = {
            attrs: {
                "fill-opacity": 1,
                "stroke-opacity": 1,
                "stroke-width": 0,
                "stroke-linejoin": "miter",
                "stroke-linecap": "butt",
                fill: "#000000",
                stroke: "#000000",
                opacity: 1,
                x: 0,
                y: 0,
                cx: 0,
                cy: 0,
                width: 0,
                height: 0,
                r: 0,
                rx: 0,
                ry: 0,
                offset: 0,
                "stop-opacity": 1,
                "stop-color": "#000000",
                "font-size": 16,
                "font-family": "Helvetica, Arial, sans-serif",
                "text-anchor": "start"
            }
        }, s.Color = function (e) {
            var i, a;
            (this.r = 0, this.g = 0, this.b = 0, e) && ("string" == typeof e ? s.regex.isRgb.test(e) ? (i = s.regex.rgb.exec(e.replace(s.regex.whitespace, "")), this.r = parseInt(i[1]), this.g = parseInt(i[2]), this.b = parseInt(i[3])) : s.regex.isHex.test(e) && (i = s.regex.hex.exec(4 == (a = e).length ? ["#", a.substring(1, 2), a.substring(1, 2), a.substring(2, 3), a.substring(2, 3), a.substring(3, 4), a.substring(3, 4)].join("") : a), this.r = parseInt(i[1], 16), this.g = parseInt(i[2], 16), this.b = parseInt(i[3], 16)) : "object" === t(e) && (this.r = e.r, this.g = e.g, this.b = e.b))
        }, s.extend(s.Color, {
            toString: function () {
                return this.toHex()
            }, toHex: function () {
                return "#" + u(this.r) + u(this.g) + u(this.b)
            }, toRgb: function () {
                return "rgb(" + [this.r, this.g, this.b].join() + ")"
            }, brightness: function () {
                return this.r / 255 * .3 + this.g / 255 * .59 + this.b / 255 * .11
            }, morph: function (t) {
                return this.destination = new s.Color(t), this
            }, at: function (t) {
                return this.destination ? (t = t < 0 ? 0 : t > 1 ? 1 : t, new s.Color({
                    r: ~~(this.r + (this.destination.r - this.r) * t),
                    g: ~~(this.g + (this.destination.g - this.g) * t),
                    b: ~~(this.b + (this.destination.b - this.b) * t)
                })) : this
            }
        }), s.Color.test = function (t) {
            return t += "", s.regex.isHex.test(t) || s.regex.isRgb.test(t)
        }, s.Color.isRgb = function (t) {
            return t && "number" == typeof t.r && "number" == typeof t.g && "number" == typeof t.b
        }, s.Color.isColor = function (t) {
            return s.Color.isRgb(t) || s.Color.test(t)
        }, s.Array = function (t, e) {
            0 == (t = (t || []).valueOf()).length && e && (t = e.valueOf()), this.value = this.parse(t)
        }, s.extend(s.Array, {
            morph: function (t) {
                if (this.destination = this.parse(t), this.value.length != this.destination.length) {
                    for (var e = this.value[this.value.length - 1], i = this.destination[this.destination.length - 1]; this.value.length > this.destination.length;) this.destination.push(i);
                    for (; this.value.length < this.destination.length;) this.value.push(e)
                }
                return this
            }, settle: function () {
                for (var t = 0, e = this.value.length, i = []; t < e; t++) -1 == i.indexOf(this.value[t]) && i.push(this.value[t]);
                return this.value = i
            }, at: function (t) {
                if (!this.destination) return this;
                for (var e = 0, i = this.value.length, a = []; e < i; e++) a.push(this.value[e] + (this.destination[e] - this.value[e]) * t);
                return new s.Array(a)
            }, toString: function () {
                return this.value.join(" ")
            }, valueOf: function () {
                return this.value
            }, parse: function (t) {
                return t = t.valueOf(), Array.isArray(t) ? t : this.split(t)
            }, split: function (t) {
                return t.trim().split(s.regex.delimiter).map(parseFloat)
            }, reverse: function () {
                return this.value.reverse(), this
            }, clone: function () {
                var t = new this.constructor;
                return t.value = function t(e) {
                    var i = e.slice(0);
                    for (var s = i.length; s--;) Array.isArray(i[s]) && (i[s] = t(i[s]));
                    return i
                }(this.value), t
            }
        }), s.PointArray = function (t, e) {
            s.Array.call(this, t, e || [[0, 0]])
        }, s.PointArray.prototype = new s.Array, s.PointArray.prototype.constructor = s.PointArray, s.extend(s.PointArray, {
            toString: function () {
                for (var t = 0, e = this.value.length, i = []; t < e; t++) i.push(this.value[t].join(","));
                return i.join(" ")
            }, toLine: function () {
                return {x1: this.value[0][0], y1: this.value[0][1], x2: this.value[1][0], y2: this.value[1][1]}
            }, at: function (t) {
                if (!this.destination) return this;
                for (var e = 0, i = this.value.length, a = []; e < i; e++) a.push([this.value[e][0] + (this.destination[e][0] - this.value[e][0]) * t, this.value[e][1] + (this.destination[e][1] - this.value[e][1]) * t]);
                return new s.PointArray(a)
            }, parse: function (t) {
                var e = [];
                if (t = t.valueOf(), Array.isArray(t)) {
                    if (Array.isArray(t[0])) return t.map(function (t) {
                        return t.slice()
                    });
                    if (null != t[0].x) return t.map(function (t) {
                        return [t.x, t.y]
                    })
                } else t = t.trim().split(s.regex.delimiter).map(parseFloat);
                t.length % 2 != 0 && t.pop();
                for (var i = 0, a = t.length; i < a; i += 2) e.push([t[i], t[i + 1]]);
                return e
            }, move: function (t, e) {
                var i = this.bbox();
                if (t -= i.x, e -= i.y, !isNaN(t) && !isNaN(e)) for (var s = this.value.length - 1; s >= 0; s--) this.value[s] = [this.value[s][0] + t, this.value[s][1] + e];
                return this
            }, size: function (t, e) {
                var i, s = this.bbox();
                for (i = this.value.length - 1; i >= 0; i--) s.width && (this.value[i][0] = (this.value[i][0] - s.x) * t / s.width + s.x), s.height && (this.value[i][1] = (this.value[i][1] - s.y) * e / s.height + s.y);
                return this
            }, bbox: function () {
                return s.parser.draw || s.prepare(), s.parser.poly.setAttribute("points", this.toString()), s.parser.poly.getBBox()
            }
        });
        for (var a = {
            M: function (t, e, i) {
                return e.x = i.x = t[0], e.y = i.y = t[1], ["M", e.x, e.y]
            }, L: function (t, e) {
                return e.x = t[0], e.y = t[1], ["L", t[0], t[1]]
            }, H: function (t, e) {
                return e.x = t[0], ["H", t[0]]
            }, V: function (t, e) {
                return e.y = t[0], ["V", t[0]]
            }, C: function (t, e) {
                return e.x = t[4], e.y = t[5], ["C", t[0], t[1], t[2], t[3], t[4], t[5]]
            }, S: function (t, e) {
                return e.x = t[2], e.y = t[3], ["S", t[0], t[1], t[2], t[3]]
            }, Q: function (t, e) {
                return e.x = t[2], e.y = t[3], ["Q", t[0], t[1], t[2], t[3]]
            }, T: function (t, e) {
                return e.x = t[0], e.y = t[1], ["T", t[0], t[1]]
            }, Z: function (t, e, i) {
                return e.x = i.x, e.y = i.y, ["Z"]
            }, A: function (t, e) {
                return e.x = t[5], e.y = t[6], ["A", t[0], t[1], t[2], t[3], t[4], t[5], t[6]]
            }
        }, n = "mlhvqtcsaz".split(""), r = 0, o = n.length; r < o; ++r) a[n[r]] = function (t) {
            return function (e, i, s) {
                if ("H" == t) e[0] = e[0] + i.x; else if ("V" == t) e[0] = e[0] + i.y; else if ("A" == t) e[5] = e[5] + i.x, e[6] = e[6] + i.y; else for (var n = 0, r = e.length; n < r; ++n) e[n] = e[n] + (n % 2 ? i.y : i.x);
                return a[t](e, i, s)
            }
        }(n[r].toUpperCase());
        s.PathArray = function (t, e) {
            s.Array.call(this, t, e || [["M", 0, 0]])
        }, s.PathArray.prototype = new s.Array, s.PathArray.prototype.constructor = s.PathArray, s.extend(s.PathArray, {
            toString: function () {
                return function (t) {
                    for (var e = 0, i = t.length, s = ""; e < i; e++) s += t[e][0], null != t[e][1] && (s += t[e][1], null != t[e][2] && (s += " ", s += t[e][2], null != t[e][3] && (s += " ", s += t[e][3], s += " ", s += t[e][4], null != t[e][5] && (s += " ", s += t[e][5], s += " ", s += t[e][6], null != t[e][7] && (s += " ", s += t[e][7])))));
                    return s + " "
                }(this.value)
            }, move: function (t, e) {
                var i = this.bbox();
                if (t -= i.x, e -= i.y, !isNaN(t) && !isNaN(e)) for (var s, a = this.value.length - 1; a >= 0; a--) "M" == (s = this.value[a][0]) || "L" == s || "T" == s ? (this.value[a][1] += t, this.value[a][2] += e) : "H" == s ? this.value[a][1] += t : "V" == s ? this.value[a][1] += e : "C" == s || "S" == s || "Q" == s ? (this.value[a][1] += t, this.value[a][2] += e, this.value[a][3] += t, this.value[a][4] += e, "C" == s && (this.value[a][5] += t, this.value[a][6] += e)) : "A" == s && (this.value[a][6] += t, this.value[a][7] += e);
                return this
            }, size: function (t, e) {
                var i, s, a = this.bbox();
                for (i = this.value.length - 1; i >= 0; i--) "M" == (s = this.value[i][0]) || "L" == s || "T" == s ? (this.value[i][1] = (this.value[i][1] - a.x) * t / a.width + a.x, this.value[i][2] = (this.value[i][2] - a.y) * e / a.height + a.y) : "H" == s ? this.value[i][1] = (this.value[i][1] - a.x) * t / a.width + a.x : "V" == s ? this.value[i][1] = (this.value[i][1] - a.y) * e / a.height + a.y : "C" == s || "S" == s || "Q" == s ? (this.value[i][1] = (this.value[i][1] - a.x) * t / a.width + a.x, this.value[i][2] = (this.value[i][2] - a.y) * e / a.height + a.y, this.value[i][3] = (this.value[i][3] - a.x) * t / a.width + a.x, this.value[i][4] = (this.value[i][4] - a.y) * e / a.height + a.y, "C" == s && (this.value[i][5] = (this.value[i][5] - a.x) * t / a.width + a.x, this.value[i][6] = (this.value[i][6] - a.y) * e / a.height + a.y)) : "A" == s && (this.value[i][1] = this.value[i][1] * t / a.width, this.value[i][2] = this.value[i][2] * e / a.height, this.value[i][6] = (this.value[i][6] - a.x) * t / a.width + a.x, this.value[i][7] = (this.value[i][7] - a.y) * e / a.height + a.y);
                return this
            }, equalCommands: function (t) {
                var e, i, a;
                for (t = new s.PathArray(t), a = this.value.length === t.value.length, e = 0, i = this.value.length; a && e < i; e++) a = this.value[e][0] === t.value[e][0];
                return a
            }, morph: function (t) {
                return t = new s.PathArray(t), this.equalCommands(t) ? this.destination = t : this.destination = null, this
            }, at: function (t) {
                if (!this.destination) return this;
                var e, i, a, n, r = this.value, o = this.destination.value, l = [], h = new s.PathArray;
                for (e = 0, i = r.length; e < i; e++) {
                    for (l[e] = [r[e][0]], a = 1, n = r[e].length; a < n; a++) l[e][a] = r[e][a] + (o[e][a] - r[e][a]) * t;
                    "A" === l[e][0] && (l[e][4] = +(0 != l[e][4]), l[e][5] = +(0 != l[e][5]))
                }
                return h.value = l, h
            }, parse: function (t) {
                if (t instanceof s.PathArray) return t.valueOf();
                var e, i = {M: 2, L: 2, H: 1, V: 1, C: 6, S: 4, Q: 4, T: 2, A: 7, Z: 0};
                t = "string" == typeof t ? t.replace(s.regex.numbersWithDots, h).replace(s.regex.pathLetters, " $& ").replace(s.regex.hyphen, "$1 -").trim().split(s.regex.delimiter) : t.reduce(function (t, e) {
                    return [].concat.call(t, e)
                }, []);
                var n = [], r = new s.Point, o = new s.Point, l = 0, c = t.length;
                do {
                    s.regex.isPathLetter.test(t[l]) ? (e = t[l], ++l) : "M" == e ? e = "L" : "m" == e && (e = "l"), n.push(a[e].call(null, t.slice(l, l += i[e.toUpperCase()]).map(parseFloat), r, o))
                } while (c > l);
                return n
            }, bbox: function () {
                return s.parser.draw || s.prepare(), s.parser.path.setAttribute("d", this.toString()), s.parser.path.getBBox()
            }
        }), s.Number = s.invent({
            create: function (t, e) {
                this.value = 0, this.unit = e || "", "number" == typeof t ? this.value = isNaN(t) ? 0 : isFinite(t) ? t : t < 0 ? -3.4e38 : 3.4e38 : "string" == typeof t ? (e = t.match(s.regex.numberAndUnit)) && (this.value = parseFloat(e[1]), "%" == e[5] ? this.value /= 100 : "s" == e[5] && (this.value *= 1e3), this.unit = e[5]) : t instanceof s.Number && (this.value = t.valueOf(), this.unit = t.unit)
            }, extend: {
                toString: function () {
                    return ("%" == this.unit ? ~~(1e8 * this.value) / 1e6 : "s" == this.unit ? this.value / 1e3 : this.value) + this.unit
                }, toJSON: function () {
                    return this.toString()
                }, valueOf: function () {
                    return this.value
                }, plus: function (t) {
                    return t = new s.Number(t), new s.Number(this + t, this.unit || t.unit)
                }, minus: function (t) {
                    return t = new s.Number(t), new s.Number(this - t, this.unit || t.unit)
                }, times: function (t) {
                    return t = new s.Number(t), new s.Number(this * t, this.unit || t.unit)
                }, divide: function (t) {
                    return t = new s.Number(t), new s.Number(this / t, this.unit || t.unit)
                }, to: function (t) {
                    var e = new s.Number(this);
                    return "string" == typeof t && (e.unit = t), e
                }, morph: function (t) {
                    return this.destination = new s.Number(t), t.relative && (this.destination.value += this.value), this
                }, at: function (t) {
                    return this.destination ? new s.Number(this.destination).minus(this).times(t).plus(this) : this
                }
            }
        }), s.Element = s.invent({
            create: function (t) {
                this._stroke = s.defaults.attrs.stroke, this._event = null, this.dom = {}, (this.node = t) && (this.type = t.nodeName, this.node.instance = this, this._stroke = t.getAttribute("stroke") || this._stroke)
            }, extend: {
                x: function (t) {
                    return this.attr("x", t)
                }, y: function (t) {
                    return this.attr("y", t)
                }, cx: function (t) {
                    return null == t ? this.x() + this.width() / 2 : this.x(t - this.width() / 2)
                }, cy: function (t) {
                    return null == t ? this.y() + this.height() / 2 : this.y(t - this.height() / 2)
                }, move: function (t, e) {
                    return this.x(t).y(e)
                }, center: function (t, e) {
                    return this.cx(t).cy(e)
                }, width: function (t) {
                    return this.attr("width", t)
                }, height: function (t) {
                    return this.attr("height", t)
                }, size: function (t, e) {
                    var i = g(this, t, e);
                    return this.width(new s.Number(i.width)).height(new s.Number(i.height))
                }, clone: function (t) {
                    this.writeDataToDom();
                    var e = b(this.node.cloneNode(!0));
                    return t ? t.add(e) : this.after(e), e
                }, remove: function () {
                    return this.parent() && this.parent().removeElement(this), this
                }, replace: function (t) {
                    return this.after(t).remove(), t
                }, addTo: function (t) {
                    return t.put(this)
                }, putIn: function (t) {
                    return t.add(this)
                }, id: function (t) {
                    return this.attr("id", t)
                }, inside: function (t, e) {
                    var i = this.bbox();
                    return t > i.x && e > i.y && t < i.x + i.width && e < i.y + i.height
                }, show: function () {
                    return this.style("display", "")
                }, hide: function () {
                    return this.style("display", "none")
                }, visible: function () {
                    return "none" != this.style("display")
                }, toString: function () {
                    return this.attr("id")
                }, classes: function () {
                    var t = this.attr("class");
                    return null == t ? [] : t.trim().split(s.regex.delimiter)
                }, hasClass: function (t) {
                    return -1 != this.classes().indexOf(t)
                }, addClass: function (t) {
                    if (!this.hasClass(t)) {
                        var e = this.classes();
                        e.push(t), this.attr("class", e.join(" "))
                    }
                    return this
                }, removeClass: function (t) {
                    return this.hasClass(t) && this.attr("class", this.classes().filter(function (e) {
                        return e != t
                    }).join(" ")), this
                }, toggleClass: function (t) {
                    return this.hasClass(t) ? this.removeClass(t) : this.addClass(t)
                }, reference: function (t) {
                    return s.get(this.attr(t))
                }, parent: function (t) {
                    var i = this;
                    if (!i.node.parentNode) return null;
                    if (i = s.adopt(i.node.parentNode), !t) return i;
                    for (; i && i.node instanceof e.SVGElement;) {
                        if ("string" == typeof t ? i.matches(t) : i instanceof t) return i;
                        if (!i.node.parentNode || "#document" == i.node.parentNode.nodeName) return null;
                        i = s.adopt(i.node.parentNode)
                    }
                }, doc: function () {
                    return this instanceof s.Doc ? this : this.parent(s.Doc)
                }, parents: function (t) {
                    var e = [], i = this;
                    do {
                        if (!(i = i.parent(t)) || !i.node) break;
                        e.push(i)
                    } while (i.parent);
                    return e
                }, matches: function (t) {
                    return function (t, e) {
                        return (t.matches || t.matchesSelector || t.msMatchesSelector || t.mozMatchesSelector || t.webkitMatchesSelector || t.oMatchesSelector).call(t, e)
                    }(this.node, t)
                }, native: function () {
                    return this.node
                }, svg: function (t) {
                    var e = i.createElement("svg");
                    if (!(t && this instanceof s.Parent)) return e.appendChild(t = i.createElement("svg")), this.writeDataToDom(), t.appendChild(this.node.cloneNode(!0)), e.innerHTML.replace(/^<svg>/, "").replace(/<\/svg>$/, "");
                    e.innerHTML = "<svg>" + t.replace(/\n/, "").replace(/<([\w:-]+)([^<]+?)\/>/g, "<$1$2></$1>") + "</svg>";
                    for (var a = 0, n = e.firstChild.childNodes.length; a < n; a++) this.node.appendChild(e.firstChild.firstChild);
                    return this
                }, writeDataToDom: function () {
                    (this.each || this.lines) && (this.each ? this : this.lines()).each(function () {
                        this.writeDataToDom()
                    });
                    return this.node.removeAttribute("svgjs:data"), Object.keys(this.dom).length && this.node.setAttribute("svgjs:data", JSON.stringify(this.dom)), this
                }, setData: function (t) {
                    return this.dom = t, this
                }, is: function (t) {
                    return function (t, e) {
                        return t instanceof e
                    }(this, t)
                }
            }
        }), s.easing = {
            "-": function (t) {
                return t
            }, "<>": function (t) {
                return -Math.cos(t * Math.PI) / 2 + .5
            }, ">": function (t) {
                return Math.sin(t * Math.PI / 2)
            }, "<": function (t) {
                return 1 - Math.cos(t * Math.PI / 2)
            }
        }, s.morph = function (t) {
            return function (e, i) {
                return new s.MorphObj(e, i).at(t)
            }
        }, s.Situation = s.invent({
            create: function (t) {
                this.init = !1, this.reversed = !1, this.reversing = !1, this.duration = new s.Number(t.duration).valueOf(), this.delay = new s.Number(t.delay).valueOf(), this.start = +new Date + this.delay, this.finish = this.start + this.duration, this.ease = t.ease, this.loop = 0, this.loops = !1, this.animations = {}, this.attrs = {}, this.styles = {}, this.transforms = [], this.once = {}
            }
        }), s.FX = s.invent({
            create: function (t) {
                this._target = t, this.situations = [], this.active = !1, this.situation = null, this.paused = !1, this.lastPos = 0, this.pos = 0, this.absPos = 0, this._speed = 1
            }, extend: {
                animate: function (e, i, a) {
                    "object" === t(e) && (i = e.ease, a = e.delay, e = e.duration);
                    var n = new s.Situation({duration: e || 1e3, delay: a || 0, ease: s.easing[i || "-"] || i});
                    return this.queue(n), this
                }, delay: function (t) {
                    var e = new s.Situation({duration: t, delay: 0, ease: s.easing["-"]});
                    return this.queue(e)
                }, target: function (t) {
                    return t && t instanceof s.Element ? (this._target = t, this) : this._target
                }, timeToAbsPos: function (t) {
                    return (t - this.situation.start) / (this.situation.duration / this._speed)
                }, absPosToTime: function (t) {
                    return this.situation.duration / this._speed * t + this.situation.start
                }, startAnimFrame: function () {
                    this.stopAnimFrame(), this.animationFrame = e.requestAnimationFrame(function () {
                        this.step()
                    }.bind(this))
                }, stopAnimFrame: function () {
                    e.cancelAnimationFrame(this.animationFrame)
                }, start: function () {
                    return !this.active && this.situation && (this.active = !0, this.startCurrent()), this
                }, startCurrent: function () {
                    return this.situation.start = +new Date + this.situation.delay / this._speed, this.situation.finish = this.situation.start + this.situation.duration / this._speed, this.initAnimations().step()
                }, queue: function (t) {
                    return ("function" == typeof t || t instanceof s.Situation) && this.situations.push(t), this.situation || (this.situation = this.situations.shift()), this
                }, dequeue: function () {
                    return this.stop(), this.situation = this.situations.shift(), this.situation && (this.situation instanceof s.Situation ? this.start() : this.situation.call(this)), this
                }, initAnimations: function () {
                    var t, e, i, a = this.situation;
                    if (a.init) return this;
                    for (t in a.animations) for (i = this.target()[t](), Array.isArray(i) || (i = [i]), Array.isArray(a.animations[t]) || (a.animations[t] = [a.animations[t]]), e = i.length; e--;) a.animations[t][e] instanceof s.Number && (i[e] = new s.Number(i[e])), a.animations[t][e] = i[e].morph(a.animations[t][e]);
                    for (t in a.attrs) a.attrs[t] = new s.MorphObj(this.target().attr(t), a.attrs[t]);
                    for (t in a.styles) a.styles[t] = new s.MorphObj(this.target().style(t), a.styles[t]);
                    return a.initialTransformation = this.target().matrixify(), a.init = !0, this
                }, clearQueue: function () {
                    return this.situations = [], this
                }, clearCurrent: function () {
                    return this.situation = null, this
                }, stop: function (t, e) {
                    var i = this.active;
                    return this.active = !1, e && this.clearQueue(), t && this.situation && (!i && this.startCurrent(), this.atEnd()), this.stopAnimFrame(), this.clearCurrent()
                }, reset: function () {
                    if (this.situation) {
                        var t = this.situation;
                        this.stop(), this.situation = t, this.atStart()
                    }
                    return this
                }, finish: function () {
                    for (this.stop(!0, !1); this.dequeue().situation && this.stop(!0, !1);) ;
                    return this.clearQueue().clearCurrent(), this
                }, atStart: function () {
                    return this.at(0, !0)
                }, atEnd: function () {
                    return !0 === this.situation.loops && (this.situation.loops = this.situation.loop + 1), "number" == typeof this.situation.loops ? this.at(this.situation.loops, !0) : this.at(1, !0)
                }, at: function (t, e) {
                    var i = this.situation.duration / this._speed;
                    return this.absPos = t, e || (this.situation.reversed && (this.absPos = 1 - this.absPos), this.absPos += this.situation.loop), this.situation.start = +new Date - this.absPos * i, this.situation.finish = this.situation.start + i, this.step(!0)
                }, speed: function (t) {
                    return 0 === t ? this.pause() : t ? (this._speed = t, this.at(this.absPos, !0)) : this._speed
                }, loop: function (t, e) {
                    var i = this.last();
                    return i.loops = null == t || t, i.loop = 0, e && (i.reversing = !0), this
                }, pause: function () {
                    return this.paused = !0, this.stopAnimFrame(), this
                }, play: function () {
                    return this.paused ? (this.paused = !1, this.at(this.absPos, !0)) : this
                }, reverse: function (t) {
                    var e = this.last();
                    return e.reversed = void 0 === t ? !e.reversed : t, this
                }, progress: function (t) {
                    return t ? this.situation.ease(this.pos) : this.pos
                }, after: function (t) {
                    var e = this.last();
                    return this.target().on("finished.fx", function i(s) {
                        s.detail.situation == e && (t.call(this, e), this.off("finished.fx", i))
                    }), this._callStart()
                }, during: function (t) {
                    var e = this.last(), i = function (i) {
                        i.detail.situation == e && t.call(this, i.detail.pos, s.morph(i.detail.pos), i.detail.eased, e)
                    };
                    return this.target().off("during.fx", i).on("during.fx", i), this.after(function () {
                        this.off("during.fx", i)
                    }), this._callStart()
                }, afterAll: function (t) {
                    var e = function e(i) {
                        t.call(this), this.off("allfinished.fx", e)
                    };
                    return this.target().off("allfinished.fx", e).on("allfinished.fx", e), this._callStart()
                }, duringAll: function (t) {
                    var e = function (e) {
                        t.call(this, e.detail.pos, s.morph(e.detail.pos), e.detail.eased, e.detail.situation)
                    };
                    return this.target().off("during.fx", e).on("during.fx", e), this.afterAll(function () {
                        this.off("during.fx", e)
                    }), this._callStart()
                }, last: function () {
                    return this.situations.length ? this.situations[this.situations.length - 1] : this.situation
                }, add: function (t, e, i) {
                    return this.last()[i || "animations"][t] = e, this._callStart()
                }, step: function (t) {
                    var e, i, s;
                    (t || (this.absPos = this.timeToAbsPos(+new Date)), !1 !== this.situation.loops) ? (e = Math.max(this.absPos, 0), i = Math.floor(e), !0 === this.situation.loops || i < this.situation.loops ? (this.pos = e - i, s = this.situation.loop, this.situation.loop = i) : (this.absPos = this.situation.loops, this.pos = 1, s = this.situation.loop - 1, this.situation.loop = this.situation.loops), this.situation.reversing && (this.situation.reversed = this.situation.reversed != Boolean((this.situation.loop - s) % 2))) : (this.absPos = Math.min(this.absPos, 1), this.pos = this.absPos);
                    this.pos < 0 && (this.pos = 0), this.situation.reversed && (this.pos = 1 - this.pos);
                    var a = this.situation.ease(this.pos);
                    for (var n in this.situation.once) n > this.lastPos && n <= a && (this.situation.once[n].call(this.target(), this.pos, a), delete this.situation.once[n]);
                    return this.active && this.target().fire("during", {
                        pos: this.pos,
                        eased: a,
                        fx: this,
                        situation: this.situation
                    }), this.situation ? (this.eachAt(), 1 == this.pos && !this.situation.reversed || this.situation.reversed && 0 == this.pos ? (this.stopAnimFrame(), this.target().fire("finished", {
                        fx: this,
                        situation: this.situation
                    }), this.situations.length || (this.target().fire("allfinished"), this.situations.length || (this.target().off(".fx"), this.active = !1)), this.active ? this.dequeue() : this.clearCurrent()) : !this.paused && this.active && this.startAnimFrame(), this.lastPos = a, this) : this
                }, eachAt: function () {
                    var t, e, i, a = this, n = this.target(), r = this.situation;
                    for (t in r.animations) i = [].concat(r.animations[t]).map(function (t) {
                        return "string" != typeof t && t.at ? t.at(r.ease(a.pos), a.pos) : t
                    }), n[t].apply(n, i);
                    for (t in r.attrs) i = [t].concat(r.attrs[t]).map(function (t) {
                        return "string" != typeof t && t.at ? t.at(r.ease(a.pos), a.pos) : t
                    }), n.attr.apply(n, i);
                    for (t in r.styles) i = [t].concat(r.styles[t]).map(function (t) {
                        return "string" != typeof t && t.at ? t.at(r.ease(a.pos), a.pos) : t
                    }), n.style.apply(n, i);
                    if (r.transforms.length) {
                        for (i = r.initialTransformation, t = 0, e = r.transforms.length; t < e; t++) {
                            var o = r.transforms[t];
                            o instanceof s.Matrix ? i = o.relative ? i.multiply((new s.Matrix).morph(o).at(r.ease(this.pos))) : i.morph(o).at(r.ease(this.pos)) : (o.relative || o.undo(i.extract()), i = i.multiply(o.at(r.ease(this.pos))))
                        }
                        n.matrix(i)
                    }
                    return this
                }, once: function (t, e, i) {
                    var s = this.last();
                    return i || (t = s.ease(t)), s.once[t] = e, this
                }, _callStart: function () {
                    return setTimeout(function () {
                        this.start()
                    }.bind(this), 0), this
                }
            }, parent: s.Element, construct: {
                animate: function (t, e, i) {
                    return (this.fx || (this.fx = new s.FX(this))).animate(t, e, i)
                }, delay: function (t) {
                    return (this.fx || (this.fx = new s.FX(this))).delay(t)
                }, stop: function (t, e) {
                    return this.fx && this.fx.stop(t, e), this
                }, finish: function () {
                    return this.fx && this.fx.finish(), this
                }, pause: function () {
                    return this.fx && this.fx.pause(), this
                }, play: function () {
                    return this.fx && this.fx.play(), this
                }, speed: function (t) {
                    if (this.fx) {
                        if (null == t) return this.fx.speed();
                        this.fx.speed(t)
                    }
                    return this
                }
            }
        }), s.MorphObj = s.invent({
            create: function (t, e) {
                return s.Color.isColor(e) ? new s.Color(t).morph(e) : s.regex.delimiter.test(t) ? s.regex.pathLetters.test(t) ? new s.PathArray(t).morph(e) : new s.Array(t).morph(e) : s.regex.numberAndUnit.test(e) ? new s.Number(t).morph(e) : (this.value = t, void (this.destination = e))
            }, extend: {
                at: function (t, e) {
                    return e < 1 ? this.value : this.destination
                }, valueOf: function () {
                    return this.value
                }
            }
        }), s.extend(s.FX, {
            attr: function (e, i, s) {
                if ("object" === t(e)) for (var a in e) this.attr(a, e[a]); else this.add(e, i, "attrs");
                return this
            }, style: function (e, i) {
                if ("object" === t(e)) for (var s in e) this.style(s, e[s]); else this.add(e, i, "styles");
                return this
            }, x: function (t, e) {
                if (this.target() instanceof s.G) return this.transform({x: t}, e), this;
                var i = new s.Number(t);
                return i.relative = e, this.add("x", i)
            }, y: function (t, e) {
                if (this.target() instanceof s.G) return this.transform({y: t}, e), this;
                var i = new s.Number(t);
                return i.relative = e, this.add("y", i)
            }, cx: function (t) {
                return this.add("cx", new s.Number(t))
            }, cy: function (t) {
                return this.add("cy", new s.Number(t))
            }, move: function (t, e) {
                return this.x(t).y(e)
            }, center: function (t, e) {
                return this.cx(t).cy(e)
            }, size: function (t, e) {
                var i;
                this.target() instanceof s.Text ? this.attr("font-size", t) : (t && e || (i = this.target().bbox()), t || (t = i.width / i.height * e), e || (e = i.height / i.width * t), this.add("width", new s.Number(t)).add("height", new s.Number(e)));
                return this
            }, width: function (t) {
                return this.add("width", new s.Number(t))
            }, height: function (t) {
                return this.add("height", new s.Number(t))
            }, plot: function (t, e, i, s) {
                return 4 == arguments.length ? this.plot([t, e, i, s]) : this.add("plot", new (this.target().morphArray)(t))
            }, leading: function (t) {
                return this.target().leading ? this.add("leading", new s.Number(t)) : this
            }, viewbox: function (t, e, i, a) {
                return this.target() instanceof s.Container && this.add("viewbox", new s.ViewBox(t, e, i, a)), this
            }, update: function (t) {
                if (this.target() instanceof s.Stop) {
                    if ("number" == typeof t || t instanceof s.Number) return this.update({
                        offset: arguments[0],
                        color: arguments[1],
                        opacity: arguments[2]
                    });
                    null != t.opacity && this.attr("stop-opacity", t.opacity), null != t.color && this.attr("stop-color", t.color), null != t.offset && this.attr("offset", t.offset)
                }
                return this
            }
        }), s.Box = s.invent({
            create: function (e, i, a, n) {
                if (!("object" !== t(e) || e instanceof s.Element)) return s.Box.call(this, null != e.left ? e.left : e.x, null != e.top ? e.top : e.y, e.width, e.height);
                4 == arguments.length && (this.x = e, this.y = i, this.width = a, this.height = n), m(this)
            }, extend: {
                merge: function (t) {
                    var e = new this.constructor;
                    return e.x = Math.min(this.x, t.x), e.y = Math.min(this.y, t.y), e.width = Math.max(this.x + this.width, t.x + t.width) - e.x, e.height = Math.max(this.y + this.height, t.y + t.height) - e.y, m(e)
                }, transform: function (t) {
                    var e, i = 1 / 0, a = -1 / 0, n = 1 / 0, r = -1 / 0;
                    return [new s.Point(this.x, this.y), new s.Point(this.x2, this.y), new s.Point(this.x, this.y2), new s.Point(this.x2, this.y2)].forEach(function (e) {
                        e = e.transform(t), i = Math.min(i, e.x), a = Math.max(a, e.x), n = Math.min(n, e.y), r = Math.max(r, e.y)
                    }), (e = new this.constructor).x = i, e.width = a - i, e.y = n, e.height = r - n, m(e), e
                }
            }
        }), s.BBox = s.invent({
            create: function (t) {
                if (s.Box.apply(this, [].slice.call(arguments)), t instanceof s.Element) {
                    var e;
                    try {
                        if (!i.documentElement.contains) {
                            for (var a = t.node; a.parentNode;) a = a.parentNode;
                            if (a != i) throw new Error("Element not in the dom")
                        }
                        e = t.node.getBBox()
                    } catch (i) {
                        if (t instanceof s.Shape) {
                            s.parser.draw || s.prepare();
                            var n = t.clone(s.parser.draw.instance).show();
                            e = n.node.getBBox(), n.remove()
                        } else e = {
                            x: t.node.clientLeft,
                            y: t.node.clientTop,
                            width: t.node.clientWidth,
                            height: t.node.clientHeight
                        }
                    }
                    s.Box.call(this, e)
                }
            }, inherit: s.Box, parent: s.Element, construct: {
                bbox: function () {
                    return new s.BBox(this)
                }
            }
        }), s.BBox.prototype.constructor = s.BBox, s.extend(s.Element, {
            tbox: function () {
                return console.warn("Use of TBox is deprecated and mapped to RBox. Use .rbox() instead."), this.rbox(this.doc())
            }
        }), s.RBox = s.invent({
            create: function (t) {
                s.Box.apply(this, [].slice.call(arguments)), t instanceof s.Element && s.Box.call(this, t.node.getBoundingClientRect())
            }, inherit: s.Box, parent: s.Element, extend: {
                addOffset: function () {
                    return this.x += e.pageXOffset, this.y += e.pageYOffset, this
                }
            }, construct: {
                rbox: function (t) {
                    return t ? new s.RBox(this).transform(t.screenCTM().inverse()) : new s.RBox(this).addOffset()
                }
            }
        }), s.RBox.prototype.constructor = s.RBox, s.Matrix = s.invent({
            create: function (e) {
                var i, a = p([1, 0, 0, 1, 0, 0]);
                for (e = e instanceof s.Element ? e.matrixify() : "string" == typeof e ? p(e.split(s.regex.delimiter).map(parseFloat)) : 6 == arguments.length ? p([].slice.call(arguments)) : Array.isArray(e) ? p(e) : "object" === t(e) ? e : a, i = y.length - 1; i >= 0; --i) this[y[i]] = null != e[y[i]] ? e[y[i]] : a[y[i]]
            }, extend: {
                extract: function () {
                    var t = f(this, 0, 1), e = f(this, 1, 0), i = 180 / Math.PI * Math.atan2(t.y, t.x) - 90;
                    return {
                        x: this.e,
                        y: this.f,
                        transformedX: (this.e * Math.cos(i * Math.PI / 180) + this.f * Math.sin(i * Math.PI / 180)) / Math.sqrt(this.a * this.a + this.b * this.b),
                        transformedY: (this.f * Math.cos(i * Math.PI / 180) + this.e * Math.sin(-i * Math.PI / 180)) / Math.sqrt(this.c * this.c + this.d * this.d),
                        skewX: -i,
                        skewY: 180 / Math.PI * Math.atan2(e.y, e.x),
                        scaleX: Math.sqrt(this.a * this.a + this.b * this.b),
                        scaleY: Math.sqrt(this.c * this.c + this.d * this.d),
                        rotation: i,
                        a: this.a,
                        b: this.b,
                        c: this.c,
                        d: this.d,
                        e: this.e,
                        f: this.f,
                        matrix: new s.Matrix(this)
                    }
                }, clone: function () {
                    return new s.Matrix(this)
                }, morph: function (t) {
                    return this.destination = new s.Matrix(t), this
                }, at: function (t) {
                    return this.destination ? new s.Matrix({
                        a: this.a + (this.destination.a - this.a) * t,
                        b: this.b + (this.destination.b - this.b) * t,
                        c: this.c + (this.destination.c - this.c) * t,
                        d: this.d + (this.destination.d - this.d) * t,
                        e: this.e + (this.destination.e - this.e) * t,
                        f: this.f + (this.destination.f - this.f) * t
                    }) : this
                }, multiply: function (t) {
                    return new s.Matrix(this.native().multiply(function (t) {
                        t instanceof s.Matrix || (t = new s.Matrix(t));
                        return t
                    }(t).native()))
                }, inverse: function () {
                    return new s.Matrix(this.native().inverse())
                }, translate: function (t, e) {
                    return new s.Matrix(this.native().translate(t || 0, e || 0))
                }, scale: function (t, e, i, a) {
                    return 1 == arguments.length ? e = t : 3 == arguments.length && (a = i, i = e, e = t), this.around(i, a, new s.Matrix(t, 0, 0, e, 0, 0))
                }, rotate: function (t, e, i) {
                    return t = s.utils.radians(t), this.around(e, i, new s.Matrix(Math.cos(t), Math.sin(t), -Math.sin(t), Math.cos(t), 0, 0))
                }, flip: function (t, e) {
                    return "x" == t ? this.scale(-1, 1, e, 0) : "y" == t ? this.scale(1, -1, 0, e) : this.scale(-1, -1, t, null != e ? e : t)
                }, skew: function (t, e, i, a) {
                    return 1 == arguments.length ? e = t : 3 == arguments.length && (a = i, i = e, e = t), t = s.utils.radians(t), e = s.utils.radians(e), this.around(i, a, new s.Matrix(1, Math.tan(e), Math.tan(t), 1, 0, 0))
                }, skewX: function (t, e, i) {
                    return this.skew(t, 0, e, i)
                }, skewY: function (t, e, i) {
                    return this.skew(0, t, e, i)
                }, around: function (t, e, i) {
                    return this.multiply(new s.Matrix(1, 0, 0, 1, t || 0, e || 0)).multiply(i).multiply(new s.Matrix(1, 0, 0, 1, -t || 0, -e || 0))
                }, native: function () {
                    for (var t = s.parser.native.createSVGMatrix(), e = y.length - 1; e >= 0; e--) t[y[e]] = this[y[e]];
                    return t
                }, toString: function () {
                    return "matrix(" + v(this.a) + "," + v(this.b) + "," + v(this.c) + "," + v(this.d) + "," + v(this.e) + "," + v(this.f) + ")"
                }
            }, parent: s.Element, construct: {
                ctm: function () {
                    return new s.Matrix(this.node.getCTM())
                }, screenCTM: function () {
                    if (this instanceof s.Nested) {
                        var t = this.rect(1, 1), e = t.node.getScreenCTM();
                        return t.remove(), new s.Matrix(e)
                    }
                    return new s.Matrix(this.node.getScreenCTM())
                }
            }
        }), s.Point = s.invent({
            create: function (e, i) {
                var s;
                s = Array.isArray(e) ? {x: e[0], y: e[1]} : "object" === t(e) ? {x: e.x, y: e.y} : null != e ? {
                    x: e,
                    y: null != i ? i : e
                } : {x: 0, y: 0}, this.x = s.x, this.y = s.y
            }, extend: {
                clone: function () {
                    return new s.Point(this)
                }, morph: function (t, e) {
                    return this.destination = new s.Point(t, e), this
                }, at: function (t) {
                    return this.destination ? new s.Point({
                        x: this.x + (this.destination.x - this.x) * t,
                        y: this.y + (this.destination.y - this.y) * t
                    }) : this
                }, native: function () {
                    var t = s.parser.native.createSVGPoint();
                    return t.x = this.x, t.y = this.y, t
                }, transform: function (t) {
                    return new s.Point(this.native().matrixTransform(t.native()))
                }
            }
        }), s.extend(s.Element, {
            point: function (t, e) {
                return new s.Point(t, e).transform(this.screenCTM().inverse())
            }
        }), s.extend(s.Element, {
            attr: function (e, i, a) {
                if (null == e) {
                    for (e = {}, a = (i = this.node.attributes).length - 1; a >= 0; a--) e[i[a].nodeName] = s.regex.isNumber.test(i[a].nodeValue) ? parseFloat(i[a].nodeValue) : i[a].nodeValue;
                    return e
                }
                if ("object" === t(e)) for (i in e) this.attr(i, e[i]); else if (null === i) this.node.removeAttribute(e); else {
                    if (null == i) return null == (i = this.node.getAttribute(e)) ? s.defaults.attrs[e] : s.regex.isNumber.test(i) ? parseFloat(i) : i;
                    "stroke-width" == e ? this.attr("stroke", parseFloat(i) > 0 ? this._stroke : null) : "stroke" == e && (this._stroke = i), "fill" != e && "stroke" != e || (s.regex.isImage.test(i) && (i = this.doc().defs().image(i, 0, 0)), i instanceof s.Image && (i = this.doc().defs().pattern(0, 0, function () {
                        this.add(i)
                    }))), "number" == typeof i ? i = new s.Number(i) : s.Color.isColor(i) ? i = new s.Color(i) : Array.isArray(i) && (i = new s.Array(i)), "leading" == e ? this.leading && this.leading(i) : "string" == typeof a ? this.node.setAttributeNS(a, e, i.toString()) : this.node.setAttribute(e, i.toString()), !this.rebuild || "font-size" != e && "x" != e || this.rebuild(e, i)
                }
                return this
            }
        }), s.extend(s.Element, {
            transform: function (e, i) {
                var a, n;
                if ("object" !== t(e)) return a = new s.Matrix(this).extract(), "string" == typeof e ? a[e] : a;
                if (a = new s.Matrix(this), i = !!i || !!e.relative, null != e.a) a = i ? a.multiply(new s.Matrix(e)) : new s.Matrix(e); else if (null != e.rotation) x(e, this), a = i ? a.rotate(e.rotation, e.cx, e.cy) : a.rotate(e.rotation - a.extract().rotation, e.cx, e.cy); else if (null != e.scale || null != e.scaleX || null != e.scaleY) {
                    if (x(e, this), e.scaleX = null != e.scale ? e.scale : null != e.scaleX ? e.scaleX : 1, e.scaleY = null != e.scale ? e.scale : null != e.scaleY ? e.scaleY : 1, !i) {
                        var r = a.extract();
                        e.scaleX = 1 * e.scaleX / r.scaleX, e.scaleY = 1 * e.scaleY / r.scaleY
                    }
                    a = a.scale(e.scaleX, e.scaleY, e.cx, e.cy)
                } else if (null != e.skew || null != e.skewX || null != e.skewY) {
                    if (x(e, this), e.skewX = null != e.skew ? e.skew : null != e.skewX ? e.skewX : 0, e.skewY = null != e.skew ? e.skew : null != e.skewY ? e.skewY : 0, !i) {
                        r = a.extract();
                        a = a.multiply((new s.Matrix).skew(r.skewX, r.skewY, e.cx, e.cy).inverse())
                    }
                    a = a.skew(e.skewX, e.skewY, e.cx, e.cy)
                } else e.flip ? ("x" == e.flip || "y" == e.flip ? e.offset = null == e.offset ? this.bbox()["c" + e.flip] : e.offset : null == e.offset ? (n = this.bbox(), e.flip = n.cx, e.offset = n.cy) : e.flip = e.offset, a = (new s.Matrix).flip(e.flip, e.offset)) : null == e.x && null == e.y || (i ? a = a.translate(e.x, e.y) : (null != e.x && (a.e = e.x), null != e.y && (a.f = e.y)));
                return this.attr("transform", a)
            }
        }), s.extend(s.FX, {
            transform: function (e, i) {
                var a, n, r = this.target();
                return "object" !== t(e) ? (a = new s.Matrix(r).extract(), "string" == typeof e ? a[e] : a) : (i = !!i || !!e.relative, null != e.a ? a = new s.Matrix(e) : null != e.rotation ? (x(e, r), a = new s.Rotate(e.rotation, e.cx, e.cy)) : null != e.scale || null != e.scaleX || null != e.scaleY ? (x(e, r), e.scaleX = null != e.scale ? e.scale : null != e.scaleX ? e.scaleX : 1, e.scaleY = null != e.scale ? e.scale : null != e.scaleY ? e.scaleY : 1, a = new s.Scale(e.scaleX, e.scaleY, e.cx, e.cy)) : null != e.skewX || null != e.skewY ? (x(e, r), e.skewX = null != e.skewX ? e.skewX : 0, e.skewY = null != e.skewY ? e.skewY : 0, a = new s.Skew(e.skewX, e.skewY, e.cx, e.cy)) : e.flip ? ("x" == e.flip || "y" == e.flip ? e.offset = null == e.offset ? r.bbox()["c" + e.flip] : e.offset : null == e.offset ? (n = r.bbox(), e.flip = n.cx, e.offset = n.cy) : e.flip = e.offset, a = (new s.Matrix).flip(e.flip, e.offset)) : null == e.x && null == e.y || (a = new s.Translate(e.x, e.y)), a ? (a.relative = i, this.last().transforms.push(a), this._callStart()) : this)
            }
        }), s.extend(s.Element, {
            untransform: function () {
                return this.attr("transform", null)
            }, matrixify: function () {
                return (this.attr("transform") || "").split(s.regex.transforms).slice(0, -1).map(function (t) {
                    var e = t.trim().split("(");
                    return [e[0], e[1].split(s.regex.delimiter).map(function (t) {
                        return parseFloat(t)
                    })]
                }).reduce(function (t, e) {
                    return "matrix" == e[0] ? t.multiply(p(e[1])) : t[e[0]].apply(t, e[1])
                }, new s.Matrix)
            }, toParent: function (t) {
                if (this == t) return this;
                var e = this.screenCTM(), i = t.screenCTM().inverse();
                return this.addTo(t).untransform().transform(i.multiply(e)), this
            }, toDoc: function () {
                return this.toParent(this.doc())
            }
        }), s.Transformation = s.invent({
            create: function (e, i) {
                if (arguments.length > 1 && "boolean" != typeof i) return this.constructor.call(this, [].slice.call(arguments));
                if (Array.isArray(e)) for (var s = 0, a = this.arguments.length; s < a; ++s) this[this.arguments[s]] = e[s]; else if ("object" === t(e)) for (s = 0, a = this.arguments.length; s < a; ++s) this[this.arguments[s]] = e[this.arguments[s]];
                this.inversed = !1, !0 === i && (this.inversed = !0)
            }, extend: {
                arguments: [], method: "", at: function (t) {
                    for (var e = [], i = 0, a = this.arguments.length; i < a; ++i) e.push(this[this.arguments[i]]);
                    var n = this._undo || new s.Matrix;
                    return n = (new s.Matrix).morph(s.Matrix.prototype[this.method].apply(n, e)).at(t), this.inversed ? n.inverse() : n
                }, undo: function (t) {
                    for (var e = 0, i = this.arguments.length; e < i; ++e) t[this.arguments[e]] = void 0 === this[this.arguments[e]] ? 0 : t[this.arguments[e]];
                    return t.cx = this.cx, t.cy = this.cy, this._undo = new (s[d(this.method)])(t, !0).at(1), this
                }
            }
        }), s.Translate = s.invent({
            parent: s.Matrix, inherit: s.Transformation, create: function (t, e) {
                this.constructor.apply(this, [].slice.call(arguments))
            }, extend: {arguments: ["transformedX", "transformedY"], method: "translate"}
        }), s.Rotate = s.invent({
            parent: s.Matrix, inherit: s.Transformation, create: function (t, e) {
                this.constructor.apply(this, [].slice.call(arguments))
            }, extend: {
                arguments: ["rotation", "cx", "cy"], method: "rotate", at: function (t) {
                    var e = (new s.Matrix).rotate((new s.Number).morph(this.rotation - (this._undo ? this._undo.rotation : 0)).at(t), this.cx, this.cy);
                    return this.inversed ? e.inverse() : e
                }, undo: function (t) {
                    return this._undo = t, this
                }
            }
        }), s.Scale = s.invent({
            parent: s.Matrix, inherit: s.Transformation, create: function (t, e) {
                this.constructor.apply(this, [].slice.call(arguments))
            }, extend: {arguments: ["scaleX", "scaleY", "cx", "cy"], method: "scale"}
        }), s.Skew = s.invent({
            parent: s.Matrix, inherit: s.Transformation, create: function (t, e) {
                this.constructor.apply(this, [].slice.call(arguments))
            }, extend: {arguments: ["skewX", "skewY", "cx", "cy"], method: "skew"}
        }), s.extend(s.Element, {
            style: function (e, i) {
                if (0 == arguments.length) return this.node.style.cssText || "";
                if (arguments.length < 2) if ("object" === t(e)) for (i in e) this.style(i, e[i]); else {
                    if (!s.regex.isCss.test(e)) return this.node.style[c(e)];
                    for (e = e.split(/\s*;\s*/).filter(function (t) {
                        return !!t
                    }).map(function (t) {
                        return t.split(/\s*:\s*/)
                    }); i = e.pop();) this.style(i[0], i[1])
                } else this.node.style[c(e)] = null === i || s.regex.isBlank.test(i) ? "" : i;
                return this
            }
        }), s.Parent = s.invent({
            create: function (t) {
                this.constructor.call(this, t)
            }, inherit: s.Element, extend: {
                children: function () {
                    return s.utils.map(s.utils.filterSVGElements(this.node.childNodes), function (t) {
                        return s.adopt(t)
                    })
                }, add: function (t, e) {
                    return null == e ? this.node.appendChild(t.node) : t.node != this.node.childNodes[e] && this.node.insertBefore(t.node, this.node.childNodes[e]), this
                }, put: function (t, e) {
                    return this.add(t, e), t
                }, has: function (t) {
                    return this.index(t) >= 0
                }, index: function (t) {
                    return [].slice.call(this.node.childNodes).indexOf(t.node)
                }, get: function (t) {
                    return s.adopt(this.node.childNodes[t])
                }, first: function () {
                    return this.get(0)
                }, last: function () {
                    return this.get(this.node.childNodes.length - 1)
                }, each: function (t, e) {
                    var i, a, n = this.children();
                    for (i = 0, a = n.length; i < a; i++) n[i] instanceof s.Element && t.apply(n[i], [i, n]), e && n[i] instanceof s.Container && n[i].each(t, e);
                    return this
                }, removeElement: function (t) {
                    return this.node.removeChild(t.node), this
                }, clear: function () {
                    for (; this.node.hasChildNodes();) this.node.removeChild(this.node.lastChild);
                    return delete this._defs, this
                }, defs: function () {
                    return this.doc().defs()
                }
            }
        }), s.extend(s.Parent, {
            ungroup: function (t, e) {
                return 0 === e || this instanceof s.Defs || this.node == s.parser.draw ? this : (t = t || (this instanceof s.Doc ? this : this.parent(s.Parent)), e = e || 1 / 0, this.each(function () {
                    return this instanceof s.Defs ? this : this instanceof s.Parent ? this.ungroup(t, e - 1) : this.toParent(t)
                }), this.node.firstChild || this.remove(), this)
            }, flatten: function (t, e) {
                return this.ungroup(t, e)
            }
        }), s.Container = s.invent({
            create: function (t) {
                this.constructor.call(this, t)
            }, inherit: s.Parent
        }), s.ViewBox = s.invent({
            create: function (e) {
                var i, a, n, r, o, l, h, c = 1, d = 1, u = /[+-]?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?/gi;
                if (e instanceof s.Element) {
                    for (l = e, h = e, o = (e.attr("viewBox") || "").match(u), e.bbox, n = new s.Number(e.width()), r = new s.Number(e.height()); "%" == n.unit;) c *= n.value, n = new s.Number(l instanceof s.Doc ? l.parent().offsetWidth : l.parent().width()), l = l.parent();
                    for (; "%" == r.unit;) d *= r.value, r = new s.Number(h instanceof s.Doc ? h.parent().offsetHeight : h.parent().height()), h = h.parent();
                    this.x = 0, this.y = 0, this.width = n * c, this.height = r * d, this.zoom = 1, o && (i = parseFloat(o[0]), a = parseFloat(o[1]), n = parseFloat(o[2]), r = parseFloat(o[3]), this.zoom = this.width / this.height > n / r ? this.height / r : this.width / n, this.x = i, this.y = a, this.width = n, this.height = r)
                } else e = "string" == typeof e ? e.match(u).map(function (t) {
                    return parseFloat(t)
                }) : Array.isArray(e) ? e : "object" === t(e) ? [e.x, e.y, e.width, e.height] : 4 == arguments.length ? [].slice.call(arguments) : [0, 0, 0, 0], this.x = e[0], this.y = e[1], this.width = e[2], this.height = e[3]
            }, extend: {
                toString: function () {
                    return this.x + " " + this.y + " " + this.width + " " + this.height
                }, morph: function (t, e, i, a) {
                    return this.destination = new s.ViewBox(t, e, i, a), this
                }, at: function (t) {
                    return this.destination ? new s.ViewBox([this.x + (this.destination.x - this.x) * t, this.y + (this.destination.y - this.y) * t, this.width + (this.destination.width - this.width) * t, this.height + (this.destination.height - this.height) * t]) : this
                }
            }, parent: s.Container, construct: {
                viewbox: function (t, e, i, a) {
                    return 0 == arguments.length ? new s.ViewBox(this) : this.attr("viewBox", new s.ViewBox(t, e, i, a))
                }
            }
        }), ["click", "dblclick", "mousedown", "mouseup", "mouseover", "mouseout", "mousemove", "touchstart", "touchmove", "touchleave", "touchend", "touchcancel"].forEach(function (t) {
            s.Element.prototype[t] = function (e) {
                return s.on(this.node, t, e), this
            }
        }), s.listeners = [], s.handlerMap = [], s.listenerId = 0, s.on = function (t, e, i, a, n) {
            var r = i.bind(a || t.instance || t), o = (s.handlerMap.indexOf(t) + 1 || s.handlerMap.push(t)) - 1,
                l = e.split(".")[0], h = e.split(".")[1] || "*";
            s.listeners[o] = s.listeners[o] || {}, s.listeners[o][l] = s.listeners[o][l] || {}, s.listeners[o][l][h] = s.listeners[o][l][h] || {}, i._svgjsListenerId || (i._svgjsListenerId = ++s.listenerId), s.listeners[o][l][h][i._svgjsListenerId] = r, t.addEventListener(l, r, n || !1)
        }, s.off = function (t, e, i) {
            var a = s.handlerMap.indexOf(t), n = e && e.split(".")[0], r = e && e.split(".")[1], o = "";
            if (-1 != a) if (i) {
                if ("function" == typeof i && (i = i._svgjsListenerId), !i) return;
                s.listeners[a][n] && s.listeners[a][n][r || "*"] && (t.removeEventListener(n, s.listeners[a][n][r || "*"][i], !1), delete s.listeners[a][n][r || "*"][i])
            } else if (r && n) {
                if (s.listeners[a][n] && s.listeners[a][n][r]) {
                    for (i in s.listeners[a][n][r]) s.off(t, [n, r].join("."), i);
                    delete s.listeners[a][n][r]
                }
            } else if (r) for (e in s.listeners[a]) for (o in s.listeners[a][e]) r === o && s.off(t, [e, r].join(".")); else if (n) {
                if (s.listeners[a][n]) {
                    for (o in s.listeners[a][n]) s.off(t, [n, o].join("."));
                    delete s.listeners[a][n]
                }
            } else {
                for (e in s.listeners[a]) s.off(t, e);
                delete s.listeners[a], delete s.handlerMap[a]
            }
        }, s.extend(s.Element, {
            on: function (t, e, i, a) {
                return s.on(this.node, t, e, i, a), this
            }, off: function (t, e) {
                return s.off(this.node, t, e), this
            }, fire: function (t, i) {
                return t instanceof e.Event ? this.node.dispatchEvent(t) : this.node.dispatchEvent(t = new s.CustomEvent(t, {
                    detail: i,
                    cancelable: !0
                })), this._event = t, this
            }, event: function () {
                return this._event
            }
        }), s.Defs = s.invent({create: "defs", inherit: s.Container}), s.G = s.invent({
            create: "g",
            inherit: s.Container,
            extend: {
                x: function (t) {
                    return null == t ? this.transform("x") : this.transform({x: t - this.x()}, !0)
                }, y: function (t) {
                    return null == t ? this.transform("y") : this.transform({y: t - this.y()}, !0)
                }, cx: function (t) {
                    return null == t ? this.gbox().cx : this.x(t - this.gbox().width / 2)
                }, cy: function (t) {
                    return null == t ? this.gbox().cy : this.y(t - this.gbox().height / 2)
                }, gbox: function () {
                    var t = this.bbox(), e = this.transform();
                    return t.x += e.x, t.x2 += e.x, t.cx += e.x, t.y += e.y, t.y2 += e.y, t.cy += e.y, t
                }
            },
            construct: {
                group: function () {
                    return this.put(new s.G)
                }
            }
        }), s.Doc = s.invent({
            create: function (t) {
                t && ("svg" == (t = "string" == typeof t ? i.getElementById(t) : t).nodeName ? this.constructor.call(this, t) : (this.constructor.call(this, s.create("svg")), t.appendChild(this.node), this.size("100%", "100%")), this.namespace().defs())
            }, inherit: s.Container, extend: {
                namespace: function () {
                    return this.attr({
                        xmlns: s.ns,
                        version: "1.1"
                    }).attr("xmlns:xlink", s.xlink, s.xmlns).attr("xmlns:svgjs", s.svgjs, s.xmlns)
                }, defs: function () {
                    var t;
                    this._defs || ((t = this.node.getElementsByTagName("defs")[0]) ? this._defs = s.adopt(t) : this._defs = new s.Defs, this.node.appendChild(this._defs.node));
                    return this._defs
                }, parent: function () {
                    return this.node.parentNode && "#document" != this.node.parentNode.nodeName ? this.node.parentNode : null
                }, spof: function () {
                    var t = this.node.getScreenCTM();
                    return t && this.style("left", -t.e % 1 + "px").style("top", -t.f % 1 + "px"), this
                }, remove: function () {
                    return this.parent() && this.parent().removeChild(this.node), this
                }, clear: function () {
                    for (; this.node.hasChildNodes();) this.node.removeChild(this.node.lastChild);
                    return delete this._defs, s.parser.draw && !s.parser.draw.parentNode && this.node.appendChild(s.parser.draw), this
                }, clone: function (t) {
                    this.writeDataToDom();
                    var e = this.node, i = b(e.cloneNode(!0));
                    return t ? (t.node || t).appendChild(i.node) : e.parentNode.insertBefore(i.node, e.nextSibling), i
                }
            }
        }), s.extend(s.Element, {
            siblings: function () {
                return this.parent().children()
            }, position: function () {
                return this.parent().index(this)
            }, next: function () {
                return this.siblings()[this.position() + 1]
            }, previous: function () {
                return this.siblings()[this.position() - 1]
            }, forward: function () {
                var t = this.position() + 1, e = this.parent();
                return e.removeElement(this).add(this, t), e instanceof s.Doc && e.node.appendChild(e.defs().node), this
            }, backward: function () {
                var t = this.position();
                return t > 0 && this.parent().removeElement(this).add(this, t - 1), this
            }, front: function () {
                var t = this.parent();
                return t.node.appendChild(this.node), t instanceof s.Doc && t.node.appendChild(t.defs().node), this
            }, back: function () {
                return this.position() > 0 && this.parent().removeElement(this).add(this, 0), this
            }, before: function (t) {
                t.remove();
                var e = this.position();
                return this.parent().add(t, e), this
            }, after: function (t) {
                t.remove();
                var e = this.position();
                return this.parent().add(t, e + 1), this
            }
        }), s.Mask = s.invent({
            create: function () {
                this.constructor.call(this, s.create("mask")), this.targets = []
            }, inherit: s.Container, extend: {
                remove: function () {
                    for (var t = this.targets.length - 1; t >= 0; t--) this.targets[t] && this.targets[t].unmask();
                    return this.targets = [], s.Element.prototype.remove.call(this), this
                }
            }, construct: {
                mask: function () {
                    return this.defs().put(new s.Mask)
                }
            }
        }), s.extend(s.Element, {
            maskWith: function (t) {
                return this.masker = t instanceof s.Mask ? t : this.parent().mask().add(t), this.masker.targets.push(this), this.attr("mask", 'url("#' + this.masker.attr("id") + '")')
            }, unmask: function () {
                return delete this.masker, this.attr("mask", null)
            }
        }), s.ClipPath = s.invent({
            create: function () {
                this.constructor.call(this, s.create("clipPath")), this.targets = []
            }, inherit: s.Container, extend: {
                remove: function () {
                    for (var t = this.targets.length - 1; t >= 0; t--) this.targets[t] && this.targets[t].unclip();
                    return this.targets = [], this.parent().removeElement(this), this
                }
            }, construct: {
                clip: function () {
                    return this.defs().put(new s.ClipPath)
                }
            }
        }), s.extend(s.Element, {
            clipWith: function (t) {
                return this.clipper = t instanceof s.ClipPath ? t : this.parent().clip().add(t), this.clipper.targets.push(this), this.attr("clip-path", 'url("#' + this.clipper.attr("id") + '")')
            }, unclip: function () {
                return delete this.clipper, this.attr("clip-path", null)
            }
        }), s.Gradient = s.invent({
            create: function (t) {
                this.constructor.call(this, s.create(t + "Gradient")), this.type = t
            }, inherit: s.Container, extend: {
                at: function (t, e, i) {
                    return this.put(new s.Stop).update(t, e, i)
                }, update: function (t) {
                    return this.clear(), "function" == typeof t && t.call(this, this), this
                }, fill: function () {
                    return "url(#" + this.id() + ")"
                }, toString: function () {
                    return this.fill()
                }, attr: function (t, e, i) {
                    return "transform" == t && (t = "gradientTransform"), s.Container.prototype.attr.call(this, t, e, i)
                }
            }, construct: {
                gradient: function (t, e) {
                    return this.defs().gradient(t, e)
                }
            }
        }), s.extend(s.Gradient, s.FX, {
            from: function (t, e) {
                return "radial" == (this._target || this).type ? this.attr({
                    fx: new s.Number(t),
                    fy: new s.Number(e)
                }) : this.attr({x1: new s.Number(t), y1: new s.Number(e)})
            }, to: function (t, e) {
                return "radial" == (this._target || this).type ? this.attr({
                    cx: new s.Number(t),
                    cy: new s.Number(e)
                }) : this.attr({x2: new s.Number(t), y2: new s.Number(e)})
            }
        }), s.extend(s.Defs, {
            gradient: function (t, e) {
                return this.put(new s.Gradient(t)).update(e)
            }
        }), s.Stop = s.invent({
            create: "stop", inherit: s.Element, extend: {
                update: function (t) {
                    return ("number" == typeof t || t instanceof s.Number) && (t = {
                        offset: arguments[0],
                        color: arguments[1],
                        opacity: arguments[2]
                    }), null != t.opacity && this.attr("stop-opacity", t.opacity), null != t.color && this.attr("stop-color", t.color), null != t.offset && this.attr("offset", new s.Number(t.offset)), this
                }
            }
        }), s.Pattern = s.invent({
            create: "pattern", inherit: s.Container, extend: {
                fill: function () {
                    return "url(#" + this.id() + ")"
                }, update: function (t) {
                    return this.clear(), "function" == typeof t && t.call(this, this), this
                }, toString: function () {
                    return this.fill()
                }, attr: function (t, e, i) {
                    return "transform" == t && (t = "patternTransform"), s.Container.prototype.attr.call(this, t, e, i)
                }
            }, construct: {
                pattern: function (t, e, i) {
                    return this.defs().pattern(t, e, i)
                }
            }
        }), s.extend(s.Defs, {
            pattern: function (t, e, i) {
                return this.put(new s.Pattern).update(i).attr({
                    x: 0,
                    y: 0,
                    width: t,
                    height: e,
                    patternUnits: "userSpaceOnUse"
                })
            }
        }), s.Shape = s.invent({
            create: function (t) {
                this.constructor.call(this, t)
            }, inherit: s.Element
        }), s.Bare = s.invent({
            create: function (t, e) {
                if (this.constructor.call(this, s.create(t)), e) for (var i in e.prototype) "function" == typeof e.prototype[i] && (this[i] = e.prototype[i])
            }, inherit: s.Element, extend: {
                words: function (t) {
                    for (; this.node.hasChildNodes();) this.node.removeChild(this.node.lastChild);
                    return this.node.appendChild(i.createTextNode(t)), this
                }
            }
        }), s.extend(s.Parent, {
            element: function (t, e) {
                return this.put(new s.Bare(t, e))
            }
        }), s.Symbol = s.invent({
            create: "symbol", inherit: s.Container, construct: {
                symbol: function () {
                    return this.put(new s.Symbol)
                }
            }
        }), s.Use = s.invent({
            create: "use", inherit: s.Shape, extend: {
                element: function (t, e) {
                    return this.attr("href", (e || "") + "#" + t, s.xlink)
                }
            }, construct: {
                use: function (t, e) {
                    return this.put(new s.Use).element(t, e)
                }
            }
        }), s.Rect = s.invent({
            create: "rect", inherit: s.Shape, construct: {
                rect: function (t, e) {
                    return this.put(new s.Rect).size(t, e)
                }
            }
        }), s.Circle = s.invent({
            create: "circle", inherit: s.Shape, construct: {
                circle: function (t) {
                    return this.put(new s.Circle).rx(new s.Number(t).divide(2)).move(0, 0)
                }
            }
        }), s.extend(s.Circle, s.FX, {
            rx: function (t) {
                return this.attr("r", t)
            }, ry: function (t) {
                return this.rx(t)
            }
        }), s.Ellipse = s.invent({
            create: "ellipse", inherit: s.Shape, construct: {
                ellipse: function (t, e) {
                    return this.put(new s.Ellipse).size(t, e).move(0, 0)
                }
            }
        }), s.extend(s.Ellipse, s.Rect, s.FX, {
            rx: function (t) {
                return this.attr("rx", t)
            }, ry: function (t) {
                return this.attr("ry", t)
            }
        }), s.extend(s.Circle, s.Ellipse, {
            x: function (t) {
                return null == t ? this.cx() - this.rx() : this.cx(t + this.rx())
            }, y: function (t) {
                return null == t ? this.cy() - this.ry() : this.cy(t + this.ry())
            }, cx: function (t) {
                return null == t ? this.attr("cx") : this.attr("cx", t)
            }, cy: function (t) {
                return null == t ? this.attr("cy") : this.attr("cy", t)
            }, width: function (t) {
                return null == t ? 2 * this.rx() : this.rx(new s.Number(t).divide(2))
            }, height: function (t) {
                return null == t ? 2 * this.ry() : this.ry(new s.Number(t).divide(2))
            }, size: function (t, e) {
                var i = g(this, t, e);
                return this.rx(new s.Number(i.width).divide(2)).ry(new s.Number(i.height).divide(2))
            }
        }), s.Line = s.invent({
            create: "line", inherit: s.Shape, extend: {
                array: function () {
                    return new s.PointArray([[this.attr("x1"), this.attr("y1")], [this.attr("x2"), this.attr("y2")]])
                }, plot: function (t, e, i, a) {
                    return null == t ? this.array() : (t = void 0 !== e ? {
                        x1: t,
                        y1: e,
                        x2: i,
                        y2: a
                    } : new s.PointArray(t).toLine(), this.attr(t))
                }, move: function (t, e) {
                    return this.attr(this.array().move(t, e).toLine())
                }, size: function (t, e) {
                    var i = g(this, t, e);
                    return this.attr(this.array().size(i.width, i.height).toLine())
                }
            }, construct: {
                line: function (t, e, i, a) {
                    return s.Line.prototype.plot.apply(this.put(new s.Line), null != t ? [t, e, i, a] : [0, 0, 0, 0])
                }
            }
        }), s.Polyline = s.invent({
            create: "polyline", inherit: s.Shape, construct: {
                polyline: function (t) {
                    return this.put(new s.Polyline).plot(t || new s.PointArray)
                }
            }
        }), s.Polygon = s.invent({
            create: "polygon", inherit: s.Shape, construct: {
                polygon: function (t) {
                    return this.put(new s.Polygon).plot(t || new s.PointArray)
                }
            }
        }), s.extend(s.Polyline, s.Polygon, {
            array: function () {
                return this._array || (this._array = new s.PointArray(this.attr("points")))
            }, plot: function (t) {
                return null == t ? this.array() : this.clear().attr("points", "string" == typeof t ? t : this._array = new s.PointArray(t))
            }, clear: function () {
                return delete this._array, this
            }, move: function (t, e) {
                return this.attr("points", this.array().move(t, e))
            }, size: function (t, e) {
                var i = g(this, t, e);
                return this.attr("points", this.array().size(i.width, i.height))
            }
        }), s.extend(s.Line, s.Polyline, s.Polygon, {
            morphArray: s.PointArray, x: function (t) {
                return null == t ? this.bbox().x : this.move(t, this.bbox().y)
            }, y: function (t) {
                return null == t ? this.bbox().y : this.move(this.bbox().x, t)
            }, width: function (t) {
                var e = this.bbox();
                return null == t ? e.width : this.size(t, e.height)
            }, height: function (t) {
                var e = this.bbox();
                return null == t ? e.height : this.size(e.width, t)
            }
        }), s.Path = s.invent({
            create: "path", inherit: s.Shape, extend: {
                morphArray: s.PathArray, array: function () {
                    return this._array || (this._array = new s.PathArray(this.attr("d")))
                }, plot: function (t) {
                    return null == t ? this.array() : this.clear().attr("d", "string" == typeof t ? t : this._array = new s.PathArray(t))
                }, clear: function () {
                    return delete this._array, this
                }, move: function (t, e) {
                    return this.attr("d", this.array().move(t, e))
                }, x: function (t) {
                    return null == t ? this.bbox().x : this.move(t, this.bbox().y)
                }, y: function (t) {
                    return null == t ? this.bbox().y : this.move(this.bbox().x, t)
                }, size: function (t, e) {
                    var i = g(this, t, e);
                    return this.attr("d", this.array().size(i.width, i.height))
                }, width: function (t) {
                    return null == t ? this.bbox().width : this.size(t, this.bbox().height)
                }, height: function (t) {
                    return null == t ? this.bbox().height : this.size(this.bbox().width, t)
                }
            }, construct: {
                path: function (t) {
                    return this.put(new s.Path).plot(t || new s.PathArray)
                }
            }
        }), s.Image = s.invent({
            create: "image", inherit: s.Shape, extend: {
                load: function (t) {
                    if (!t) return this;
                    var i = this, a = new e.Image;
                    return s.on(a, "load", function () {
                        s.off(a);
                        var e = i.parent(s.Pattern);
                        null !== e && (0 == i.width() && 0 == i.height() && i.size(a.width, a.height), e && 0 == e.width() && 0 == e.height() && e.size(i.width(), i.height()), "function" == typeof i._loaded && i._loaded.call(i, {
                            width: a.width,
                            height: a.height,
                            ratio: a.width / a.height,
                            url: t
                        }))
                    }), s.on(a, "error", function (t) {
                        s.off(a), "function" == typeof i._error && i._error.call(i, t)
                    }), this.attr("href", a.src = this.src = t, s.xlink)
                }, loaded: function (t) {
                    return this._loaded = t, this
                }, error: function (t) {
                    return this._error = t, this
                }
            }, construct: {
                image: function (t, e, i) {
                    return this.put(new s.Image).load(t).size(e || 0, i || e || 0)
                }
            }
        }), s.Text = s.invent({
            create: function () {
                this.constructor.call(this, s.create("text")), this.dom.leading = new s.Number(1.3), this._rebuild = !0, this._build = !1, this.attr("font-family", s.defaults.attrs["font-family"])
            }, inherit: s.Shape, extend: {
                x: function (t) {
                    return null == t ? this.attr("x") : this.attr("x", t)
                }, y: function (t) {
                    var e = this.attr("y"), i = "number" == typeof e ? e - this.bbox().y : 0;
                    return null == t ? "number" == typeof e ? e - i : e : this.attr("y", "number" == typeof t.valueOf() ? t + i : t)
                }, cx: function (t) {
                    return null == t ? this.bbox().cx : this.x(t - this.bbox().width / 2)
                }, cy: function (t) {
                    return null == t ? this.bbox().cy : this.y(t - this.bbox().height / 2)
                }, text: function (t) {
                    if (void 0 === t) {
                        t = "";
                        for (var e = this.node.childNodes, i = 0, a = e.length; i < a; ++i) 0 != i && 3 != e[i].nodeType && 1 == s.adopt(e[i]).dom.newLined && (t += "\n"), t += e[i].textContent;
                        return t
                    }
                    if (this.clear().build(!0), "function" == typeof t) t.call(this, this); else {
                        i = 0;
                        for (var n = (t = t.split("\n")).length; i < n; i++) this.tspan(t[i]).newLine()
                    }
                    return this.build(!1).rebuild()
                }, size: function (t) {
                    return this.attr("font-size", t).rebuild()
                }, leading: function (t) {
                    return null == t ? this.dom.leading : (this.dom.leading = new s.Number(t), this.rebuild())
                }, lines: function () {
                    var t = (this.textPath && this.textPath() || this).node,
                        e = s.utils.map(s.utils.filterSVGElements(t.childNodes), function (t) {
                            return s.adopt(t)
                        });
                    return new s.Set(e)
                }, rebuild: function (t) {
                    if ("boolean" == typeof t && (this._rebuild = t), this._rebuild) {
                        var e = this, i = 0, a = this.dom.leading * new s.Number(this.attr("font-size"));
                        this.lines().each(function () {
                            this.dom.newLined && (e.textPath() || this.attr("x", e.attr("x")), "\n" == this.text() ? i += a : (this.attr("dy", a + i), i = 0))
                        }), this.fire("rebuild")
                    }
                    return this
                }, build: function (t) {
                    return this._build = !!t, this
                }, setData: function (t) {
                    return this.dom = t, this.dom.leading = new s.Number(t.leading || 1.3), this
                }
            }, construct: {
                text: function (t) {
                    return this.put(new s.Text).text(t)
                }, plain: function (t) {
                    return this.put(new s.Text).plain(t)
                }
            }
        }), s.Tspan = s.invent({
            create: "tspan", inherit: s.Shape, extend: {
                text: function (t) {
                    return null == t ? this.node.textContent + (this.dom.newLined ? "\n" : "") : ("function" == typeof t ? t.call(this, this) : this.plain(t), this)
                }, dx: function (t) {
                    return this.attr("dx", t)
                }, dy: function (t) {
                    return this.attr("dy", t)
                }, newLine: function () {
                    var t = this.parent(s.Text);
                    return this.dom.newLined = !0, this.dy(t.dom.leading * t.attr("font-size")).attr("x", t.x())
                }
            }
        }), s.extend(s.Text, s.Tspan, {
            plain: function (t) {
                return !1 === this._build && this.clear(), this.node.appendChild(i.createTextNode(t)), this
            }, tspan: function (t) {
                var e = (this.textPath && this.textPath() || this).node, i = new s.Tspan;
                return !1 === this._build && this.clear(), e.appendChild(i.node), i.text(t)
            }, clear: function () {
                for (var t = (this.textPath && this.textPath() || this).node; t.hasChildNodes();) t.removeChild(t.lastChild);
                return this
            }, length: function () {
                return this.node.getComputedTextLength()
            }
        }), s.TextPath = s.invent({
            create: "textPath",
            inherit: s.Parent,
            parent: s.Text,
            construct: {
                morphArray: s.PathArray, path: function (t) {
                    for (var e = new s.TextPath, i = this.doc().defs().path(t); this.node.hasChildNodes();) e.node.appendChild(this.node.firstChild);
                    return this.node.appendChild(e.node), e.attr("href", "#" + i, s.xlink), this
                }, array: function () {
                    var t = this.track();
                    return t ? t.array() : null
                }, plot: function (t) {
                    var e = this.track(), i = null;
                    return e && (i = e.plot(t)), null == t ? i : this
                }, track: function () {
                    var t = this.textPath();
                    if (t) return t.reference("href")
                }, textPath: function () {
                    if (this.node.firstChild && "textPath" == this.node.firstChild.nodeName) return s.adopt(this.node.firstChild)
                }
            }
        }), s.Nested = s.invent({
            create: function () {
                this.constructor.call(this, s.create("svg")), this.style("overflow", "visible")
            }, inherit: s.Container, construct: {
                nested: function () {
                    return this.put(new s.Nested)
                }
            }
        }), s.A = s.invent({
            create: "a", inherit: s.Container, extend: {
                to: function (t) {
                    return this.attr("href", t, s.xlink)
                }, show: function (t) {
                    return this.attr("show", t, s.xlink)
                }, target: function (t) {
                    return this.attr("target", t)
                }
            }, construct: {
                link: function (t) {
                    return this.put(new s.A).to(t)
                }
            }
        }), s.extend(s.Element, {
            linkTo: function (t) {
                var e = new s.A;
                return "function" == typeof t ? t.call(e, e) : e.to(t), this.parent().put(e).put(this)
            }
        }), s.Marker = s.invent({
            create: "marker", inherit: s.Container, extend: {
                width: function (t) {
                    return this.attr("markerWidth", t)
                }, height: function (t) {
                    return this.attr("markerHeight", t)
                }, ref: function (t, e) {
                    return this.attr("refX", t).attr("refY", e)
                }, update: function (t) {
                    return this.clear(), "function" == typeof t && t.call(this, this), this
                }, toString: function () {
                    return "url(#" + this.id() + ")"
                }
            }, construct: {
                marker: function (t, e, i) {
                    return this.defs().marker(t, e, i)
                }
            }
        }), s.extend(s.Defs, {
            marker: function (t, e, i) {
                return this.put(new s.Marker).size(t, e).ref(t / 2, e / 2).viewbox(0, 0, t, e).attr("orient", "auto").update(i)
            }
        }), s.extend(s.Line, s.Polyline, s.Polygon, s.Path, {
            marker: function (t, e, i, a) {
                var n = ["marker"];
                return "all" != t && n.push(t), n = n.join("-"), t = arguments[1] instanceof s.Marker ? arguments[1] : this.doc().marker(e, i, a), this.attr(n, t)
            }
        });
        var l = {
            stroke: ["color", "width", "opacity", "linecap", "linejoin", "miterlimit", "dasharray", "dashoffset"],
            fill: ["color", "opacity", "rule"],
            prefix: function (t, e) {
                return "color" == e ? t : t + "-" + e
            }
        };

        function h(t, e, i, a) {
            return i + a.replace(s.regex.dots, " .")
        }

        function c(t) {
            return t.toLowerCase().replace(/-(.)/g, function (t, e) {
                return e.toUpperCase()
            })
        }

        function d(t) {
            return t.charAt(0).toUpperCase() + t.slice(1)
        }

        function u(t) {
            var e = t.toString(16);
            return 1 == e.length ? "0" + e : e
        }

        function g(t, e, i) {
            if (null == e || null == i) {
                var s = t.bbox();
                null == e ? e = s.width / s.height * i : null == i && (i = s.height / s.width * e)
            }
            return {width: e, height: i}
        }

        function f(t, e, i) {
            return {x: e * t.a + i * t.c + 0, y: e * t.b + i * t.d + 0}
        }

        function p(t) {
            return {a: t[0], b: t[1], c: t[2], d: t[3], e: t[4], f: t[5]}
        }

        function x(t, e) {
            t.cx = null == t.cx ? e.bbox().cx : t.cx, t.cy = null == t.cy ? e.bbox().cy : t.cy
        }

        function b(t) {
            for (var i = t.childNodes.length - 1; i >= 0; i--) t.childNodes[i] instanceof e.SVGElement && b(t.childNodes[i]);
            return s.adopt(t).id(s.eid(t.nodeName))
        }

        function m(t) {
            return null == t.x && (t.x = 0, t.y = 0, t.width = 0, t.height = 0), t.w = t.width, t.h = t.height, t.x2 = t.x + t.width, t.y2 = t.y + t.height, t.cx = t.x + t.width / 2, t.cy = t.y + t.height / 2, t
        }

        function v(t) {
            return Math.abs(t) > 1e-37 ? t : 0
        }

        ["fill", "stroke"].forEach(function (t) {
            var e, i = {};
            i[t] = function (i) {
                if (void 0 === i) return this;
                if ("string" == typeof i || s.Color.isRgb(i) || i && "function" == typeof i.fill) this.attr(t, i); else for (e = l[t].length - 1; e >= 0; e--) null != i[l[t][e]] && this.attr(l.prefix(t, l[t][e]), i[l[t][e]]);
                return this
            }, s.extend(s.Element, s.FX, i)
        }), s.extend(s.Element, s.FX, {
            rotate: function (t, e, i) {
                return this.transform({rotation: t, cx: e, cy: i})
            }, skew: function (t, e, i, s) {
                return 1 == arguments.length || 3 == arguments.length ? this.transform({
                    skew: t,
                    cx: e,
                    cy: i
                }) : this.transform({skewX: t, skewY: e, cx: i, cy: s})
            }, scale: function (t, e, i, s) {
                return 1 == arguments.length || 3 == arguments.length ? this.transform({
                    scale: t,
                    cx: e,
                    cy: i
                }) : this.transform({scaleX: t, scaleY: e, cx: i, cy: s})
            }, translate: function (t, e) {
                return this.transform({x: t, y: e})
            }, flip: function (t, e) {
                return e = "number" == typeof t ? t : e, this.transform({flip: t || "both", offset: e})
            }, matrix: function (t) {
                return this.attr("transform", new s.Matrix(6 == arguments.length ? [].slice.call(arguments) : t))
            }, opacity: function (t) {
                return this.attr("opacity", t)
            }, dx: function (t) {
                return this.x(new s.Number(t).plus(this instanceof s.FX ? 0 : this.x()), !0)
            }, dy: function (t) {
                return this.y(new s.Number(t).plus(this instanceof s.FX ? 0 : this.y()), !0)
            }, dmove: function (t, e) {
                return this.dx(t).dy(e)
            }
        }), s.extend(s.Rect, s.Ellipse, s.Circle, s.Gradient, s.FX, {
            radius: function (t, e) {
                var i = (this._target || this).type;
                return "radial" == i || "circle" == i ? this.attr("r", new s.Number(t)) : this.rx(t).ry(null == e ? t : e)
            }
        }), s.extend(s.Path, {
            length: function () {
                return this.node.getTotalLength()
            }, pointAt: function (t) {
                return this.node.getPointAtLength(t)
            }
        }), s.extend(s.Parent, s.Text, s.Tspan, s.FX, {
            font: function (e, i) {
                if ("object" === t(e)) for (i in e) this.font(i, e[i]);
                return "leading" == e ? this.leading(i) : "anchor" == e ? this.attr("text-anchor", i) : "size" == e || "family" == e || "weight" == e || "stretch" == e || "variant" == e || "style" == e ? this.attr("font-" + e, i) : this.attr(e, i)
            }
        }), s.Set = s.invent({
            create: function (t) {
                Array.isArray(t) ? this.members = t : this.clear()
            }, extend: {
                add: function () {
                    var t, e, i = [].slice.call(arguments);
                    for (t = 0, e = i.length; t < e; t++) this.members.push(i[t]);
                    return this
                }, remove: function (t) {
                    var e = this.index(t);
                    return e > -1 && this.members.splice(e, 1), this
                }, each: function (t) {
                    for (var e = 0, i = this.members.length; e < i; e++) t.apply(this.members[e], [e, this.members]);
                    return this
                }, clear: function () {
                    return this.members = [], this
                }, length: function () {
                    return this.members.length
                }, has: function (t) {
                    return this.index(t) >= 0
                }, index: function (t) {
                    return this.members.indexOf(t)
                }, get: function (t) {
                    return this.members[t]
                }, first: function () {
                    return this.get(0)
                }, last: function () {
                    return this.get(this.members.length - 1)
                }, valueOf: function () {
                    return this.members
                }, bbox: function () {
                    if (0 == this.members.length) return new s.RBox;
                    var t = this.members[0].rbox(this.members[0].doc());
                    return this.each(function () {
                        t = t.merge(this.rbox(this.doc()))
                    }), t
                }
            }, construct: {
                set: function (t) {
                    return new s.Set(t)
                }
            }
        }), s.FX.Set = s.invent({
            create: function (t) {
                this.set = t
            }
        }), s.Set.inherit = function () {
            var t = [];
            for (var e in s.Shape.prototype) "function" == typeof s.Shape.prototype[e] && "function" != typeof s.Set.prototype[e] && t.push(e);
            for (var e in t.forEach(function (t) {
                s.Set.prototype[t] = function () {
                    for (var e = 0, i = this.members.length; e < i; e++) this.members[e] && "function" == typeof this.members[e][t] && this.members[e][t].apply(this.members[e], arguments);
                    return "animate" == t ? this.fx || (this.fx = new s.FX.Set(this)) : this
                }
            }), t = [], s.FX.prototype) "function" == typeof s.FX.prototype[e] && "function" != typeof s.FX.Set.prototype[e] && t.push(e);
            t.forEach(function (t) {
                s.FX.Set.prototype[t] = function () {
                    for (var e = 0, i = this.set.members.length; e < i; e++) this.set.members[e].fx[t].apply(this.set.members[e].fx, arguments);
                    return this
                }
            })
        }, s.extend(s.Element, {
            data: function (e, i, s) {
                if ("object" === t(e)) for (i in e) this.data(i, e[i]); else if (arguments.length < 2) try {
                    return JSON.parse(this.attr("data-" + e))
                } catch (t) {
                    return this.attr("data-" + e)
                } else this.attr("data-" + e, null === i ? null : !0 === s || "string" == typeof i || "number" == typeof i ? i : JSON.stringify(i));
                return this
            }
        }), s.extend(s.Element, {
            remember: function (e, i) {
                if ("object" === t(arguments[0])) for (var i in e) this.remember(i, e[i]); else {
                    if (1 == arguments.length) return this.memory()[e];
                    this.memory()[e] = i
                }
                return this
            }, forget: function () {
                if (0 == arguments.length) this._memory = {}; else for (var t = arguments.length - 1; t >= 0; t--) delete this.memory()[arguments[t]];
                return this
            }, memory: function () {
                return this._memory || (this._memory = {})
            }
        }), s.get = function (t) {
            var e = i.getElementById(function (t) {
                var e = (t || "").toString().match(s.regex.reference);
                if (e) return e[1]
            }(t) || t);
            return s.adopt(e)
        }, s.select = function (t, e) {
            return new s.Set(s.utils.map((e || i).querySelectorAll(t), function (t) {
                return s.adopt(t)
            }))
        }, s.extend(s.Parent, {
            select: function (t) {
                return s.select(t, this.node)
            }
        });
        var y = "abcdef".split("");
        if ("function" != typeof e.CustomEvent) {
            var w = function (t, e) {
                e = e || {bubbles: !1, cancelable: !1, detail: void 0};
                var s = i.createEvent("CustomEvent");
                return s.initCustomEvent(t, e.bubbles, e.cancelable, e.detail), s
            };
            w.prototype = e.Event.prototype, s.CustomEvent = w
        } else s.CustomEvent = e.CustomEvent;
        return function (t) {
            for (var i = 0, s = ["moz", "webkit"], a = 0; a < s.length && !e.requestAnimationFrame; ++a) t.requestAnimationFrame = t[s[a] + "RequestAnimationFrame"], t.cancelAnimationFrame = t[s[a] + "CancelAnimationFrame"] || t[s[a] + "CancelRequestAnimationFrame"];
            t.requestAnimationFrame = t.requestAnimationFrame || function (e) {
                var s = (new Date).getTime(), a = Math.max(0, 16 - (s - i)), n = t.setTimeout(function () {
                    e(s + a)
                }, a);
                return i = s + a, n
            }, t.cancelAnimationFrame = t.cancelAnimationFrame || t.clearTimeout
        }(e), s
    }, "function" == typeof define && define.amd ? define(function () {
        return at(st, st.document)
    }) : "object" === ("undefined" == typeof exports ? "undefined" : t(exports)) && "undefined" != typeof module ? module.exports = st.document ? at(st, st.document) : function (t) {
        return at(t, t.document)
    } : st.SVG = at(st, st.document), function () {
        SVG.Filter = SVG.invent({
            create: "filter", inherit: SVG.Parent, extend: {
                source: "SourceGraphic",
                sourceAlpha: "SourceAlpha",
                background: "BackgroundImage",
                backgroundAlpha: "BackgroundAlpha",
                fill: "FillPaint",
                stroke: "StrokePaint",
                autoSetIn: !0,
                put: function (t, e) {
                    return this.add(t, e), !t.attr("in") && this.autoSetIn && t.attr("in", this.source), t.attr("result") || t.attr("result", t), t
                },
                blend: function (t, e, i) {
                    return this.put(new SVG.BlendEffect(t, e, i))
                },
                colorMatrix: function (t, e) {
                    return this.put(new SVG.ColorMatrixEffect(t, e))
                },
                convolveMatrix: function (t) {
                    return this.put(new SVG.ConvolveMatrixEffect(t))
                },
                componentTransfer: function (t) {
                    return this.put(new SVG.ComponentTransferEffect(t))
                },
                composite: function (t, e, i) {
                    return this.put(new SVG.CompositeEffect(t, e, i))
                },
                flood: function (t, e) {
                    return this.put(new SVG.FloodEffect(t, e))
                },
                offset: function (t, e) {
                    return this.put(new SVG.OffsetEffect(t, e))
                },
                image: function (t) {
                    return this.put(new SVG.ImageEffect(t))
                },
                merge: function () {
                    var t = [void 0];
                    for (var e in arguments) t.push(arguments[e]);
                    return this.put(new (SVG.MergeEffect.bind.apply(SVG.MergeEffect, t)))
                },
                gaussianBlur: function (t, e) {
                    return this.put(new SVG.GaussianBlurEffect(t, e))
                },
                morphology: function (t, e) {
                    return this.put(new SVG.MorphologyEffect(t, e))
                },
                diffuseLighting: function (t, e, i) {
                    return this.put(new SVG.DiffuseLightingEffect(t, e, i))
                },
                displacementMap: function (t, e, i, s, a) {
                    return this.put(new SVG.DisplacementMapEffect(t, e, i, s, a))
                },
                specularLighting: function (t, e, i, s) {
                    return this.put(new SVG.SpecularLightingEffect(t, e, i, s))
                },
                tile: function () {
                    return this.put(new SVG.TileEffect)
                },
                turbulence: function (t, e, i, s, a) {
                    return this.put(new SVG.TurbulenceEffect(t, e, i, s, a))
                },
                toString: function () {
                    return "url(#" + this.attr("id") + ")"
                }
            }
        }), SVG.extend(SVG.Defs, {
            filter: function (t) {
                var e = this.put(new SVG.Filter);
                return "function" == typeof t && t.call(e, e), e
            }
        }), SVG.extend(SVG.Container, {
            filter: function (t) {
                return this.defs().filter(t)
            }
        }), SVG.extend(SVG.Element, SVG.G, SVG.Nested, {
            filter: function (t) {
                return this.filterer = t instanceof SVG.Element ? t : this.doc().filter(t), this.doc() && this.filterer.doc() !== this.doc() && this.doc().defs().add(this.filterer), this.attr("filter", this.filterer), this.filterer
            }, unfilter: function (t) {
                return this.filterer && !0 === t && this.filterer.remove(), delete this.filterer, this.attr("filter", null)
            }
        }), SVG.Effect = SVG.invent({
            create: function () {
                this.constructor.call(this)
            }, inherit: SVG.Element, extend: {
                in: function (t) {
                    return null == t ? this.parent() && this.parent().select('[result="' + this.attr("in") + '"]').get(0) || this.attr("in") : this.attr("in", t)
                }, result: function (t) {
                    return null == t ? this.attr("result") : this.attr("result", t)
                }, toString: function () {
                    return this.result()
                }
            }
        }), SVG.ParentEffect = SVG.invent({
            create: function () {
                this.constructor.call(this)
            }, inherit: SVG.Parent, extend: {
                in: function (t) {
                    return null == t ? this.parent() && this.parent().select('[result="' + this.attr("in") + '"]').get(0) || this.attr("in") : this.attr("in", t)
                }, result: function (t) {
                    return null == t ? this.attr("result") : this.attr("result", t)
                }, toString: function () {
                    return this.result()
                }
            }
        });
        var t = {
            blend: function (t, e) {
                return this.parent() && this.parent().blend(this, t, e)
            }, colorMatrix: function (t, e) {
                return this.parent() && this.parent().colorMatrix(t, e).in(this)
            }, convolveMatrix: function (t) {
                return this.parent() && this.parent().convolveMatrix(t).in(this)
            }, componentTransfer: function (t) {
                return this.parent() && this.parent().componentTransfer(t).in(this)
            }, composite: function (t, e) {
                return this.parent() && this.parent().composite(this, t, e)
            }, flood: function (t, e) {
                return this.parent() && this.parent().flood(t, e)
            }, offset: function (t, e) {
                return this.parent() && this.parent().offset(t, e).in(this)
            }, image: function (t) {
                return this.parent() && this.parent().image(t)
            }, merge: function () {
                return this.parent() && this.parent().merge.apply(this.parent(), [this].concat(arguments))
            }, gaussianBlur: function (t, e) {
                return this.parent() && this.parent().gaussianBlur(t, e).in(this)
            }, morphology: function (t, e) {
                return this.parent() && this.parent().morphology(t, e).in(this)
            }, diffuseLighting: function (t, e, i) {
                return this.parent() && this.parent().diffuseLighting(t, e, i).in(this)
            }, displacementMap: function (t, e, i, s) {
                return this.parent() && this.parent().displacementMap(this, t, e, i, s)
            }, specularLighting: function (t, e, i, s) {
                return this.parent() && this.parent().specularLighting(t, e, i, s).in(this)
            }, tile: function () {
                return this.parent() && this.parent().tile().in(this)
            }, turbulence: function (t, e, i, s, a) {
                return this.parent() && this.parent().turbulence(t, e, i, s, a).in(this)
            }
        };
        SVG.extend(SVG.Effect, t), SVG.extend(SVG.ParentEffect, t), SVG.ChildEffect = SVG.invent({
            create: function () {
                this.constructor.call(this)
            }, inherit: SVG.Element, extend: {
                in: function (t) {
                    this.attr("in", t)
                }
            }
        });
        var e = {
            blend: function (t, e, i) {
                this.attr({in: t, in2: e, mode: i || "normal"})
            }, colorMatrix: function (t, e) {
                "matrix" == t && (e = a(e)), this.attr({type: t, values: void 0 === e ? null : e})
            }, convolveMatrix: function (t) {
                t = a(t), this.attr({order: Math.sqrt(t.split(" ").length), kernelMatrix: t})
            }, composite: function (t, e, i) {
                this.attr({in: t, in2: e, operator: i})
            }, flood: function (t, e) {
                this.attr("flood-color", t), null != e && this.attr("flood-opacity", e)
            }, offset: function (t, e) {
                this.attr({dx: t, dy: e})
            }, image: function (t) {
                this.attr("href", t, SVG.xlink)
            }, displacementMap: function (t, e, i, s, a) {
                this.attr({in: t, in2: e, scale: i, xChannelSelector: s, yChannelSelector: a})
            }, gaussianBlur: function (t, e) {
                null != t || null != e ? this.attr("stdDeviation", function (t) {
                    if (!Array.isArray(t)) return t;
                    for (var e = 0, i = t.length, s = []; e < i; e++) s.push(t[e]);
                    return s.join(" ")
                }(Array.prototype.slice.call(arguments))) : this.attr("stdDeviation", "0 0")
            }, morphology: function (t, e) {
                this.attr({operator: t, radius: e})
            }, tile: function () {
            }, turbulence: function (t, e, i, s, a) {
                this.attr({numOctaves: e, seed: i, stitchTiles: s, baseFrequency: t, type: a})
            }
        }, i = {
            merge: function () {
                var t;
                if (arguments[0] instanceof SVG.Set) {
                    var e = this;
                    arguments[0].each(function (t) {
                        this instanceof SVG.MergeNode ? e.put(this) : (this instanceof SVG.Effect || this instanceof SVG.ParentEffect) && e.put(new SVG.MergeNode(this))
                    })
                } else {
                    t = Array.isArray(arguments[0]) ? arguments[0] : arguments;
                    for (var i = 0; i < t.length; i++) t[i] instanceof SVG.MergeNode ? this.put(t[i]) : this.put(new SVG.MergeNode(t[i]))
                }
            }, componentTransfer: function (t) {
                if (this.rgb = new SVG.Set, ["r", "g", "b", "a"].forEach(function (t) {
                    this[t] = new (SVG["Func" + t.toUpperCase()])("identity"), this.rgb.add(this[t]), this.node.appendChild(this[t].node)
                }.bind(this)), t) for (var e in t.rgb && (["r", "g", "b"].forEach(function (e) {
                    this[e].attr(t.rgb)
                }.bind(this)), delete t.rgb), t) this[e].attr(t[e])
            }, diffuseLighting: function (t, e, i) {
                this.attr({surfaceScale: t, diffuseConstant: e, kernelUnitLength: i})
            }, specularLighting: function (t, e, i, s) {
                this.attr({surfaceScale: t, diffuseConstant: e, specularExponent: i, kernelUnitLength: s})
            }
        }, s = {
            distantLight: function (t, e) {
                this.attr({azimuth: t, elevation: e})
            }, pointLight: function (t, e, i) {
                this.attr({x: t, y: e, z: i})
            }, spotLight: function (t, e, i, s, a, n) {
                this.attr({x: t, y: e, z: i, pointsAtX: s, pointsAtY: a, pointsAtZ: n})
            }, mergeNode: function (t) {
                this.attr("in", t)
            }
        };

        function a(t) {
            return Array.isArray(t) && (t = new SVG.Array(t)), t.toString().replace(/^\s+/, "").replace(/\s+$/, "").replace(/\s+/g, " ")
        }

        function n() {
            var t = function () {
            };
            for (var e in "function" == typeof arguments[arguments.length - 1] && (t = arguments[arguments.length - 1], Array.prototype.splice.call(arguments, arguments.length - 1, 1)), arguments) for (var i in arguments[e]) t(arguments[e][i], i, arguments[e])
        }

        ["r", "g", "b", "a"].forEach(function (t) {
            s["Func" + t.toUpperCase()] = function (t) {
                switch (this.attr("type", t), t) {
                    case"table":
                        this.attr("tableValues", arguments[1]);
                        break;
                    case"linear":
                        this.attr("slope", arguments[1]), this.attr("intercept", arguments[2]);
                        break;
                    case"gamma":
                        this.attr("amplitude", arguments[1]), this.attr("exponent", arguments[2]), this.attr("offset", arguments[2])
                }
            }
        }), n(e, function (t, e) {
            var i = e.charAt(0).toUpperCase() + e.slice(1);
            SVG[i + "Effect"] = SVG.invent({
                create: function () {
                    this.constructor.call(this, SVG.create("fe" + i)), t.apply(this, arguments), this.result(this.attr("id") + "Out")
                }, inherit: SVG.Effect, extend: {}
            })
        }), n(i, function (t, e) {
            var i = e.charAt(0).toUpperCase() + e.slice(1);
            SVG[i + "Effect"] = SVG.invent({
                create: function () {
                    this.constructor.call(this, SVG.create("fe" + i)), t.apply(this, arguments), this.result(this.attr("id") + "Out")
                }, inherit: SVG.ParentEffect, extend: {}
            })
        }), n(s, function (t, e) {
            var i = e.charAt(0).toUpperCase() + e.slice(1);
            SVG[i] = SVG.invent({
                create: function () {
                    this.constructor.call(this, SVG.create("fe" + i)), t.apply(this, arguments)
                }, inherit: SVG.ChildEffect, extend: {}
            })
        }), SVG.extend(SVG.MergeEffect, {
            in: function (t) {
                return t instanceof SVG.MergeNode ? this.add(t, 0) : this.add(new SVG.MergeNode(t), 0), this
            }
        }), SVG.extend(SVG.CompositeEffect, SVG.BlendEffect, SVG.DisplacementMapEffect, {
            in2: function (t) {
                return null == t ? this.parent() && this.parent().select('[result="' + this.attr("in2") + '"]').get(0) || this.attr("in2") : this.attr("in2", t)
            }
        }), SVG.filter = {sepiatone: [.343, .669, .119, 0, 0, .249, .626, .13, 0, 0, .172, .334, .111, 0, 0, 0, 0, 0, 1, 0]}
    }.call(void 0), function () {
        function t(t, a, n, r, o, l, h) {
            for (var c = t.slice(a, n || h), d = r.slice(o, l || h), u = 0, g = {
                pos: [0, 0],
                start: [0, 0]
            }, f = {pos: [0, 0], start: [0, 0]}; ;) {
                if (c[u] = e.call(g, c[u]), d[u] = e.call(f, d[u]), c[u][0] != d[u][0] || "M" == c[u][0] || "A" == c[u][0] && (c[u][4] != d[u][4] || c[u][5] != d[u][5]) ? (Array.prototype.splice.apply(c, [u, 1].concat(s.call(g, c[u]))), Array.prototype.splice.apply(d, [u, 1].concat(s.call(f, d[u])))) : (c[u] = i.call(g, c[u]), d[u] = i.call(f, d[u])), ++u == c.length && u == d.length) break;
                u == c.length && c.push(["C", g.pos[0], g.pos[1], g.pos[0], g.pos[1], g.pos[0], g.pos[1]]), u == d.length && d.push(["C", f.pos[0], f.pos[1], f.pos[0], f.pos[1], f.pos[0], f.pos[1]])
            }
            return {start: c, dest: d}
        }

        function e(t) {
            switch (t[0]) {
                case"z":
                case"Z":
                    t[0] = "L", t[1] = this.start[0], t[2] = this.start[1];
                    break;
                case"H":
                    t[0] = "L", t[2] = this.pos[1];
                    break;
                case"V":
                    t[0] = "L", t[2] = t[1], t[1] = this.pos[0];
                    break;
                case"T":
                    t[0] = "Q", t[3] = t[1], t[4] = t[2], t[1] = this.reflection[1], t[2] = this.reflection[0];
                    break;
                case"S":
                    t[0] = "C", t[6] = t[4], t[5] = t[3], t[4] = t[2], t[3] = t[1], t[2] = this.reflection[1], t[1] = this.reflection[0]
            }
            return t
        }

        function i(t) {
            var e = t.length;
            return this.pos = [t[e - 2], t[e - 1]], -1 != "SCQT".indexOf(t[0]) && (this.reflection = [2 * this.pos[0] - t[e - 4], 2 * this.pos[1] - t[e - 3]]), t
        }

        function s(t) {
            var e = [t];
            switch (t[0]) {
                case"M":
                    return this.pos = this.start = [t[1], t[2]], e;
                case"L":
                    t[5] = t[3] = t[1], t[6] = t[4] = t[2], t[1] = this.pos[0], t[2] = this.pos[1];
                    break;
                case"Q":
                    t[6] = t[4], t[5] = t[3], t[4] = 1 * t[4] / 3 + 2 * t[2] / 3, t[3] = 1 * t[3] / 3 + 2 * t[1] / 3, t[2] = 1 * this.pos[1] / 3 + 2 * t[2] / 3, t[1] = 1 * this.pos[0] / 3 + 2 * t[1] / 3;
                    break;
                case"A":
                    t = (e = function (t, e) {
                        var i, s, a, n, r, o, l, h, c, d, u, g, f, p, x, b, m, v, y, w, k, A, S, C, L, z,
                            P = Math.abs(e[1]), M = Math.abs(e[2]), E = e[3] % 360, T = e[4], X = e[5], I = e[6],
                            Y = e[7], F = new SVG.Point(t), R = new SVG.Point(I, Y), D = [];
                        if (0 === P || 0 === M || F.x === R.x && F.y === R.y) return [["C", F.x, F.y, R.x, R.y, R.x, R.y]];
                        i = new SVG.Point((F.x - R.x) / 2, (F.y - R.y) / 2).transform((new SVG.Matrix).rotate(E)), (s = i.x * i.x / (P * P) + i.y * i.y / (M * M)) > 1 && (s = Math.sqrt(s), P *= s, M *= s);
                        a = (new SVG.Matrix).rotate(E).scale(1 / P, 1 / M).rotate(-E), F = F.transform(a), R = R.transform(a), n = [R.x - F.x, R.y - F.y], o = n[0] * n[0] + n[1] * n[1], r = Math.sqrt(o), n[0] /= r, n[1] /= r, l = o < 4 ? Math.sqrt(1 - o / 4) : 0, T === X && (l *= -1);
                        h = new SVG.Point((R.x + F.x) / 2 + l * -n[1], (R.y + F.y) / 2 + l * n[0]), c = new SVG.Point(F.x - h.x, F.y - h.y), d = new SVG.Point(R.x - h.x, R.y - h.y), u = Math.acos(c.x / Math.sqrt(c.x * c.x + c.y * c.y)), c.y < 0 && (u *= -1);
                        g = Math.acos(d.x / Math.sqrt(d.x * d.x + d.y * d.y)), d.y < 0 && (g *= -1);
                        X && u > g && (g += 2 * Math.PI);
                        !X && u < g && (g -= 2 * Math.PI);
                        for (p = Math.ceil(2 * Math.abs(u - g) / Math.PI), b = [], m = u, f = (g - u) / p, x = 4 * Math.tan(f / 4) / 3, k = 0; k <= p; k++) y = Math.cos(m), v = Math.sin(m), w = new SVG.Point(h.x + y, h.y + v), b[k] = [new SVG.Point(w.x + x * v, w.y - x * y), w, new SVG.Point(w.x - x * v, w.y + x * y)], m += f;
                        for (b[0][0] = b[0][1].clone(), b[b.length - 1][2] = b[b.length - 1][1].clone(), a = (new SVG.Matrix).rotate(E).scale(P, M).rotate(-E), k = 0, A = b.length; k < A; k++) b[k][0] = b[k][0].transform(a), b[k][1] = b[k][1].transform(a), b[k][2] = b[k][2].transform(a);
                        for (k = 1, A = b.length; k < A; k++) w = b[k - 1][2], S = w.x, C = w.y, w = b[k][0], L = w.x, z = w.y, w = b[k][1], I = w.x, Y = w.y, D.push(["C", S, C, L, z, I, Y]);
                        return D
                    }(this.pos, t))[0]
            }
            return t[0] = "C", this.pos = [t[5], t[6]], this.reflection = [2 * t[5] - t[3], 2 * t[6] - t[4]], e
        }

        function a(t, e) {
            if (!1 === e) return !1;
            for (var i = e, s = t.length; i < s; ++i) if ("M" == t[i][0]) return i;
            return !1
        }

        SVG.extend(SVG.PathArray, {
            morph: function (e) {
                for (var i = this.value, s = this.parse(e), n = 0, r = 0, o = !1, l = !1; !1 !== n || !1 !== r;) {
                    var h;
                    o = a(i, !1 !== n && n + 1), l = a(s, !1 !== r && r + 1), !1 === n && (n = 0 == (h = new SVG.PathArray(c.start).bbox()).height || 0 == h.width ? i.push(i[0]) - 1 : i.push(["M", h.x + h.width / 2, h.y + h.height / 2]) - 1), !1 === r && (r = 0 == (h = new SVG.PathArray(c.dest).bbox()).height || 0 == h.width ? s.push(s[0]) - 1 : s.push(["M", h.x + h.width / 2, h.y + h.height / 2]) - 1);
                    var c = t(i, n, o, s, r, l);
                    i = i.slice(0, n).concat(c.start, !1 === o ? [] : i.slice(o)), s = s.slice(0, r).concat(c.dest, !1 === l ? [] : s.slice(l)), n = !1 !== o && n + c.start.length, r = !1 !== l && r + c.dest.length
                }
                return this.value = i, this.destination = new SVG.PathArray, this.destination.value = s, this
            }
        })
    }(), function () {
        function t(t) {
            t.remember("_draggable", this), this.el = t
        }

        t.prototype.init = function (t, e) {
            var i = this;
            this.constraint = t, this.value = e, this.el.on("mousedown.drag", function (t) {
                i.start(t)
            }), this.el.on("touchstart.drag", function (t) {
                i.start(t)
            })
        }, t.prototype.transformPoint = function (t, e) {
            var i = (t = t || window.event).changedTouches && t.changedTouches[0] || t;
            return this.p.x = i.pageX - (e || 0), this.p.y = i.pageY, this.p.matrixTransform(this.m)
        }, t.prototype.getBBox = function () {
            var t = this.el.bbox();
            return this.el instanceof SVG.Nested && (t = this.el.rbox()), (this.el instanceof SVG.G || this.el instanceof SVG.Use || this.el instanceof SVG.Nested) && (t.x = this.el.x(), t.y = this.el.y()), t
        }, t.prototype.start = function (t) {
            if ("click" != t.type && "mousedown" != t.type && "mousemove" != t.type || 1 == (t.which || t.buttons)) {
                var e = this;
                this.el.fire("beforedrag", {
                    event: t,
                    handler: this
                }), this.parent = this.parent || this.el.parent(SVG.Nested) || this.el.parent(SVG.Doc), this.p = this.parent.node.createSVGPoint(), this.m = this.el.node.getScreenCTM().inverse();
                var i, s = this.getBBox();
                if (this.el instanceof SVG.Text) switch (i = this.el.node.getComputedTextLength(), this.el.attr("text-anchor")) {
                    case"middle":
                        i /= 2;
                        break;
                    case"start":
                        i = 0
                }
                this.startPoints = {
                    point: this.transformPoint(t, i),
                    box: s,
                    transform: this.el.transform()
                }, SVG.on(window, "mousemove.drag", function (t) {
                    e.drag(t)
                }), SVG.on(window, "touchmove.drag", function (t) {
                    e.drag(t)
                }), SVG.on(window, "mouseup.drag", function (t) {
                    e.end(t)
                }), SVG.on(window, "touchend.drag", function (t) {
                    e.end(t)
                }), this.el.fire("dragstart", {
                    event: t,
                    p: this.startPoints.point,
                    m: this.m,
                    handler: this
                }), t.preventDefault(), t.stopPropagation()
            }
        }, t.prototype.drag = function (t) {
            var e = this.getBBox(), i = this.transformPoint(t),
                s = this.startPoints.box.x + i.x - this.startPoints.point.x,
                a = this.startPoints.box.y + i.y - this.startPoints.point.y, n = this.constraint,
                r = i.x - this.startPoints.point.x, o = i.y - this.startPoints.point.y,
                l = new CustomEvent("dragmove", {detail: {event: t, p: i, m: this.m, handler: this}, cancelable: !0});
            if (this.el.fire(l), l.defaultPrevented) return i;
            if ("function" == typeof n) {
                var h = n.call(this.el, s, a, this.m);
                "boolean" == typeof h && (h = {
                    x: h,
                    y: h
                }), !0 === h.x ? this.el.x(s) : !1 !== h.x && this.el.x(h.x), !0 === h.y ? this.el.y(a) : !1 !== h.y && this.el.y(h.y)
            } else "object" == typeof n && (null != n.minX && s < n.minX ? s = n.minX : null != n.maxX && s > n.maxX - e.width && (s = n.maxX - e.width), null != n.minY && a < n.minY ? a = n.minY : null != n.maxY && a > n.maxY - e.height && (a = n.maxY - e.height), this.el instanceof SVG.G ? this.el.matrix(this.startPoints.transform).transform({
                x: r,
                y: o
            }, !0) : this.el.move(s, a));
            return i
        }, t.prototype.end = function (t) {
            var e = this.drag(t);
            this.el.fire("dragend", {
                event: t,
                p: e,
                m: this.m,
                handler: this
            }), SVG.off(window, "mousemove.drag"), SVG.off(window, "touchmove.drag"), SVG.off(window, "mouseup.drag"), SVG.off(window, "touchend.drag")
        }, SVG.extend(SVG.Element, {
            draggable: function (e, i) {
                "function" != typeof e && "object" != typeof e || (i = e, e = !0);
                var s = this.remember("_draggable") || new t(this);
                return (e = void 0 === e || e) ? s.init(i || {}, e) : (this.off("mousedown.drag"), this.off("touchstart.drag")), this
            }
        })
    }.call(void 0), function () {
        function t(t) {
            this.el = t, t.remember("_selectHandler", this), this.pointSelection = {isSelected: !1}, this.rectSelection = {isSelected: !1}
        }

        t.prototype.init = function (t, e) {
            var i = this.el.bbox();
            for (var s in this.options = {}, this.el.selectize.defaults) this.options[s] = this.el.selectize.defaults[s], void 0 !== e[s] && (this.options[s] = e[s]);
            this.parent = this.el.parent(), this.nested = this.nested || this.parent.group(), this.nested.matrix(new SVG.Matrix(this.el).translate(i.x, i.y)), this.options.deepSelect && -1 !== ["line", "polyline", "polygon"].indexOf(this.el.type) ? this.selectPoints(t) : this.selectRect(t), this.observe(), this.cleanup()
        }, t.prototype.selectPoints = function (t) {
            return this.pointSelection.isSelected = t, this.pointSelection.set ? this : (this.pointSelection.set = this.parent.set(), this.drawCircles(), this)
        }, t.prototype.getPointArray = function () {
            var t = this.el.bbox();
            return this.el.array().valueOf().map(function (e) {
                return [e[0] - t.x, e[1] - t.y]
            })
        }, t.prototype.drawCircles = function () {
            for (var t = this, e = this.getPointArray(), i = 0, s = e.length; i < s; ++i) {
                var a = function (e) {
                    return function (i) {
                        (i = i || window.event).preventDefault ? i.preventDefault() : i.returnValue = !1, i.stopPropagation();
                        var s = i.pageX || i.touches[0].pageX, a = i.pageY || i.touches[0].pageY;
                        t.el.fire("point", {x: s, y: a, i: e, event: i})
                    }
                }(i);
                this.pointSelection.set.add(this.nested.circle(this.options.radius).center(e[i][0], e[i][1]).addClass(this.options.classPoints).addClass(this.options.classPoints + "_point").on("touchstart", a).on("mousedown", a))
            }
        }, t.prototype.updatePointSelection = function () {
            var t = this.getPointArray();
            this.pointSelection.set.each(function (e) {
                this.cx() === t[e][0] && this.cy() === t[e][1] || this.center(t[e][0], t[e][1])
            })
        }, t.prototype.updateRectSelection = function () {
            var t = this.el.bbox();
            this.rectSelection.set.get(0).attr({
                width: t.width,
                height: t.height
            }), this.options.points && (this.rectSelection.set.get(2).center(t.width, 0), this.rectSelection.set.get(3).center(t.width, t.height), this.rectSelection.set.get(4).center(0, t.height), this.rectSelection.set.get(5).center(t.width / 2, 0), this.rectSelection.set.get(6).center(t.width, t.height / 2), this.rectSelection.set.get(7).center(t.width / 2, t.height), this.rectSelection.set.get(8).center(0, t.height / 2)), this.options.rotationPoint && (this.options.points ? this.rectSelection.set.get(9).center(t.width / 2, 20) : this.rectSelection.set.get(1).center(t.width / 2, 20))
        }, t.prototype.selectRect = function (t) {
            var e = this, i = this.el.bbox();

            function s(t) {
                return function (i) {
                    (i = i || window.event).preventDefault ? i.preventDefault() : i.returnValue = !1, i.stopPropagation();
                    var s = i.pageX || i.touches[0].pageX, a = i.pageY || i.touches[0].pageY;
                    e.el.fire(t, {x: s, y: a, event: i})
                }
            }

            if (this.rectSelection.isSelected = t, this.rectSelection.set = this.rectSelection.set || this.parent.set(), this.rectSelection.set.get(0) || this.rectSelection.set.add(this.nested.rect(i.width, i.height).addClass(this.options.classRect)), this.options.points && !this.rectSelection.set.get(1)) {
                var a = "touchstart", n = "mousedown";
                this.rectSelection.set.add(this.nested.circle(this.options.radius).center(0, 0).attr("class", this.options.classPoints + "_lt").on(n, s("lt")).on(a, s("lt"))), this.rectSelection.set.add(this.nested.circle(this.options.radius).center(i.width, 0).attr("class", this.options.classPoints + "_rt").on(n, s("rt")).on(a, s("rt"))), this.rectSelection.set.add(this.nested.circle(this.options.radius).center(i.width, i.height).attr("class", this.options.classPoints + "_rb").on(n, s("rb")).on(a, s("rb"))), this.rectSelection.set.add(this.nested.circle(this.options.radius).center(0, i.height).attr("class", this.options.classPoints + "_lb").on(n, s("lb")).on(a, s("lb"))), this.rectSelection.set.add(this.nested.circle(this.options.radius).center(i.width / 2, 0).attr("class", this.options.classPoints + "_t").on(n, s("t")).on(a, s("t"))), this.rectSelection.set.add(this.nested.circle(this.options.radius).center(i.width, i.height / 2).attr("class", this.options.classPoints + "_r").on(n, s("r")).on(a, s("r"))), this.rectSelection.set.add(this.nested.circle(this.options.radius).center(i.width / 2, i.height).attr("class", this.options.classPoints + "_b").on(n, s("b")).on(a, s("b"))), this.rectSelection.set.add(this.nested.circle(this.options.radius).center(0, i.height / 2).attr("class", this.options.classPoints + "_l").on(n, s("l")).on(a, s("l"))), this.rectSelection.set.each(function () {
                    this.addClass(e.options.classPoints)
                })
            }
            if (this.options.rotationPoint && (this.options.points && !this.rectSelection.set.get(9) || !this.options.points && !this.rectSelection.set.get(1))) {
                var r = function (t) {
                    (t = t || window.event).preventDefault ? t.preventDefault() : t.returnValue = !1, t.stopPropagation();
                    var i = t.pageX || t.touches[0].pageX, s = t.pageY || t.touches[0].pageY;
                    e.el.fire("rot", {x: i, y: s, event: t})
                };
                this.rectSelection.set.add(this.nested.circle(this.options.radius).center(i.width / 2, 20).attr("class", this.options.classPoints + "_rot").on("touchstart", r).on("mousedown", r))
            }
        }, t.prototype.handler = function () {
            var t = this.el.bbox();
            this.nested.matrix(new SVG.Matrix(this.el).translate(t.x, t.y)), this.rectSelection.isSelected && this.updateRectSelection(), this.pointSelection.isSelected && this.updatePointSelection()
        }, t.prototype.observe = function () {
            var t = this;
            if (MutationObserver) if (this.rectSelection.isSelected || this.pointSelection.isSelected) this.observerInst = this.observerInst || new MutationObserver(function () {
                t.handler()
            }), this.observerInst.observe(this.el.node, {attributes: !0}); else try {
                this.observerInst.disconnect(), delete this.observerInst
            } catch (t) {
            } else this.el.off("DOMAttrModified.select"), (this.rectSelection.isSelected || this.pointSelection.isSelected) && this.el.on("DOMAttrModified.select", function () {
                t.handler()
            })
        }, t.prototype.cleanup = function () {
            !this.rectSelection.isSelected && this.rectSelection.set && (this.rectSelection.set.each(function () {
                this.remove()
            }), this.rectSelection.set.clear(), delete this.rectSelection.set), !this.pointSelection.isSelected && this.pointSelection.set && (this.pointSelection.set.each(function () {
                this.remove()
            }), this.pointSelection.set.clear(), delete this.pointSelection.set), this.pointSelection.isSelected || this.rectSelection.isSelected || (this.nested.remove(), delete this.nested)
        }, SVG.extend(SVG.Element, {
            selectize: function (e, i) {
                return "object" == typeof e && (i = e, e = !0), (this.remember("_selectHandler") || new t(this)).init(void 0 === e || e, i || {}), this
            }
        }), SVG.Element.prototype.selectize.defaults = {
            points: !0,
            classRect: "svg_select_boundingRect",
            classPoints: "svg_select_points",
            radius: 7,
            rotationPoint: !0,
            deepSelect: !1
        }
    }(), function () {
        (function () {
            function t(t) {
                t.remember("_resizeHandler", this), this.el = t, this.parameters = {}, this.lastUpdateCall = null, this.p = t.doc().node.createSVGPoint()
            }

            t.prototype.transformPoint = function (t, e, i) {
                return this.p.x = t - (this.offset.x - window.pageXOffset), this.p.y = e - (this.offset.y - window.pageYOffset), this.p.matrixTransform(i || this.m)
            }, t.prototype._extractPosition = function (t) {
                return {
                    x: null != t.clientX ? t.clientX : t.touches[0].clientX,
                    y: null != t.clientY ? t.clientY : t.touches[0].clientY
                }
            }, t.prototype.init = function (t) {
                var e = this;
                if (this.stop(), "stop" !== t) {
                    for (var i in this.options = {}, this.el.resize.defaults) this.options[i] = this.el.resize.defaults[i], void 0 !== t[i] && (this.options[i] = t[i]);
                    this.el.on("lt.resize", function (t) {
                        e.resize(t || window.event)
                    }), this.el.on("rt.resize", function (t) {
                        e.resize(t || window.event)
                    }), this.el.on("rb.resize", function (t) {
                        e.resize(t || window.event)
                    }), this.el.on("lb.resize", function (t) {
                        e.resize(t || window.event)
                    }), this.el.on("t.resize", function (t) {
                        e.resize(t || window.event)
                    }), this.el.on("r.resize", function (t) {
                        e.resize(t || window.event)
                    }), this.el.on("b.resize", function (t) {
                        e.resize(t || window.event)
                    }), this.el.on("l.resize", function (t) {
                        e.resize(t || window.event)
                    }), this.el.on("rot.resize", function (t) {
                        e.resize(t || window.event)
                    }), this.el.on("point.resize", function (t) {
                        e.resize(t || window.event)
                    }), this.update()
                }
            }, t.prototype.stop = function () {
                return this.el.off("lt.resize"), this.el.off("rt.resize"), this.el.off("rb.resize"), this.el.off("lb.resize"), this.el.off("t.resize"), this.el.off("r.resize"), this.el.off("b.resize"), this.el.off("l.resize"), this.el.off("rot.resize"), this.el.off("point.resize"), this
            }, t.prototype.resize = function (t) {
                var e = this;
                this.m = this.el.node.getScreenCTM().inverse(), this.offset = {
                    x: window.pageXOffset,
                    y: window.pageYOffset
                };
                var i = this._extractPosition(t.detail.event);
                if (this.parameters = {
                    type: this.el.type,
                    p: this.transformPoint(i.x, i.y),
                    x: t.detail.x,
                    y: t.detail.y,
                    box: this.el.bbox(),
                    rotation: this.el.transform().rotation
                }, "text" === this.el.type && (this.parameters.fontSize = this.el.attr()["font-size"]), void 0 !== t.detail.i) {
                    var s = this.el.array().valueOf();
                    this.parameters.i = t.detail.i, this.parameters.pointCoords = [s[t.detail.i][0], s[t.detail.i][1]]
                }
                switch (t.type) {
                    case"lt":
                        this.calc = function (t, e) {
                            var i = this.snapToGrid(t, e);
                            if (this.parameters.box.width - i[0] > 0 && this.parameters.box.height - i[1] > 0) {
                                if ("text" === this.parameters.type) return this.el.move(this.parameters.box.x + i[0], this.parameters.box.y), void this.el.attr("font-size", this.parameters.fontSize - i[0]);
                                i = this.checkAspectRatio(i), this.el.move(this.parameters.box.x + i[0], this.parameters.box.y + i[1]).size(this.parameters.box.width - i[0], this.parameters.box.height - i[1])
                            }
                        };
                        break;
                    case"rt":
                        this.calc = function (t, e) {
                            var i = this.snapToGrid(t, e, 2);
                            if (this.parameters.box.width + i[0] > 0 && this.parameters.box.height - i[1] > 0) {
                                if ("text" === this.parameters.type) return this.el.move(this.parameters.box.x - i[0], this.parameters.box.y), void this.el.attr("font-size", this.parameters.fontSize + i[0]);
                                i = this.checkAspectRatio(i), this.el.move(this.parameters.box.x, this.parameters.box.y + i[1]).size(this.parameters.box.width + i[0], this.parameters.box.height - i[1])
                            }
                        };
                        break;
                    case"rb":
                        this.calc = function (t, e) {
                            var i = this.snapToGrid(t, e, 0);
                            if (this.parameters.box.width + i[0] > 0 && this.parameters.box.height + i[1] > 0) {
                                if ("text" === this.parameters.type) return this.el.move(this.parameters.box.x - i[0], this.parameters.box.y), void this.el.attr("font-size", this.parameters.fontSize + i[0]);
                                i = this.checkAspectRatio(i), this.el.move(this.parameters.box.x, this.parameters.box.y).size(this.parameters.box.width + i[0], this.parameters.box.height + i[1])
                            }
                        };
                        break;
                    case"lb":
                        this.calc = function (t, e) {
                            var i = this.snapToGrid(t, e, 1);
                            if (this.parameters.box.width - i[0] > 0 && this.parameters.box.height + i[1] > 0) {
                                if ("text" === this.parameters.type) return this.el.move(this.parameters.box.x + i[0], this.parameters.box.y), void this.el.attr("font-size", this.parameters.fontSize - i[0]);
                                i = this.checkAspectRatio(i), this.el.move(this.parameters.box.x + i[0], this.parameters.box.y).size(this.parameters.box.width - i[0], this.parameters.box.height + i[1])
                            }
                        };
                        break;
                    case"t":
                        this.calc = function (t, e) {
                            var i = this.snapToGrid(t, e, 2);
                            if (this.parameters.box.height - i[1] > 0) {
                                if ("text" === this.parameters.type) return;
                                this.el.move(this.parameters.box.x, this.parameters.box.y + i[1]).height(this.parameters.box.height - i[1])
                            }
                        };
                        break;
                    case"r":
                        this.calc = function (t, e) {
                            var i = this.snapToGrid(t, e, 0);
                            if (this.parameters.box.width + i[0] > 0) {
                                if ("text" === this.parameters.type) return;
                                this.el.move(this.parameters.box.x, this.parameters.box.y).width(this.parameters.box.width + i[0])
                            }
                        };
                        break;
                    case"b":
                        this.calc = function (t, e) {
                            var i = this.snapToGrid(t, e, 0);
                            if (this.parameters.box.height + i[1] > 0) {
                                if ("text" === this.parameters.type) return;
                                this.el.move(this.parameters.box.x, this.parameters.box.y).height(this.parameters.box.height + i[1])
                            }
                        };
                        break;
                    case"l":
                        this.calc = function (t, e) {
                            var i = this.snapToGrid(t, e, 1);
                            if (this.parameters.box.width - i[0] > 0) {
                                if ("text" === this.parameters.type) return;
                                this.el.move(this.parameters.box.x + i[0], this.parameters.box.y).width(this.parameters.box.width - i[0])
                            }
                        };
                        break;
                    case"rot":
                        this.calc = function (t, e) {
                            var i = t + this.parameters.p.x, s = e + this.parameters.p.y,
                                a = Math.atan2(this.parameters.p.y - this.parameters.box.y - this.parameters.box.height / 2, this.parameters.p.x - this.parameters.box.x - this.parameters.box.width / 2),
                                n = 180 * (Math.atan2(s - this.parameters.box.y - this.parameters.box.height / 2, i - this.parameters.box.x - this.parameters.box.width / 2) - a) / Math.PI;
                            this.el.center(this.parameters.box.cx, this.parameters.box.cy).rotate(this.parameters.rotation + n - n % this.options.snapToAngle, this.parameters.box.cx, this.parameters.box.cy)
                        };
                        break;
                    case"point":
                        this.calc = function (t, e) {
                            var i = this.snapToGrid(t, e, this.parameters.pointCoords[0], this.parameters.pointCoords[1]),
                                s = this.el.array().valueOf();
                            s[this.parameters.i][0] = this.parameters.pointCoords[0] + i[0], s[this.parameters.i][1] = this.parameters.pointCoords[1] + i[1], this.el.plot(s)
                        }
                }
                this.el.fire("resizestart", {
                    dx: this.parameters.x,
                    dy: this.parameters.y,
                    event: t
                }), SVG.on(window, "touchmove.resize", function (t) {
                    e.update(t || window.event)
                }), SVG.on(window, "touchend.resize", function () {
                    e.done()
                }), SVG.on(window, "mousemove.resize", function (t) {
                    e.update(t || window.event)
                }), SVG.on(window, "mouseup.resize", function () {
                    e.done()
                })
            }, t.prototype.update = function (t) {
                if (t) {
                    var e = this._extractPosition(t), i = this.transformPoint(e.x, e.y), s = i.x - this.parameters.p.x,
                        a = i.y - this.parameters.p.y;
                    this.lastUpdateCall = [s, a], this.calc(s, a), this.el.fire("resizing", {dx: s, dy: a, event: t})
                } else this.lastUpdateCall && this.calc(this.lastUpdateCall[0], this.lastUpdateCall[1])
            }, t.prototype.done = function () {
                this.lastUpdateCall = null, SVG.off(window, "mousemove.resize"), SVG.off(window, "mouseup.resize"), SVG.off(window, "touchmove.resize"), SVG.off(window, "touchend.resize"), this.el.fire("resizedone")
            }, t.prototype.snapToGrid = function (t, e, i, s) {
                var a;
                return void 0 !== s ? a = [(i + t) % this.options.snapToGrid, (s + e) % this.options.snapToGrid] : (i = null == i ? 3 : i, a = [(this.parameters.box.x + t + (1 & i ? 0 : this.parameters.box.width)) % this.options.snapToGrid, (this.parameters.box.y + e + (2 & i ? 0 : this.parameters.box.height)) % this.options.snapToGrid]), t -= Math.abs(a[0]) < this.options.snapToGrid / 2 ? a[0] : a[0] - (t < 0 ? -this.options.snapToGrid : this.options.snapToGrid), e -= Math.abs(a[1]) < this.options.snapToGrid / 2 ? a[1] : a[1] - (e < 0 ? -this.options.snapToGrid : this.options.snapToGrid), this.constraintToBox(t, e, i, s)
            }, t.prototype.constraintToBox = function (t, e, i, s) {
                var a, n, r = this.options.constraint || {};
                return void 0 !== s ? (a = i, n = s) : (a = this.parameters.box.x + (1 & i ? 0 : this.parameters.box.width), n = this.parameters.box.y + (2 & i ? 0 : this.parameters.box.height)), void 0 !== r.minX && a + t < r.minX && (t = r.minX - a), void 0 !== r.maxX && a + t > r.maxX && (t = r.maxX - a), void 0 !== r.minY && n + e < r.minY && (e = r.minY - n), void 0 !== r.maxY && n + e > r.maxY && (e = r.maxY - n), [t, e]
            }, t.prototype.checkAspectRatio = function (t) {
                if (!this.options.saveAspectRatio) return t;
                var e = t.slice(), i = this.parameters.box.width / this.parameters.box.height,
                    s = this.parameters.box.width + t[0], a = this.parameters.box.height - t[1], n = s / a;
                return n < i ? e[1] = s / i - this.parameters.box.height : n > i && (e[0] = this.parameters.box.width - a * i), e
            }, SVG.extend(SVG.Element, {
                resize: function (e) {
                    return (this.remember("_resizeHandler") || new t(this)).init(e || {}), this
                }
            }), SVG.Element.prototype.resize.defaults = {
                snapToAngle: .1,
                snapToGrid: 1,
                constraint: {},
                saveAspectRatio: !1
            }
        }).call(this)
    }();
    return function (t, e) {
        void 0 === e && (e = {});
        var i = e.insertAt;
        if (t && "undefined" != typeof document) {
            var s = document.head || document.getElementsByTagName("head")[0], a = document.createElement("style");
            a.type = "text/css", "top" === i && s.firstChild ? s.insertBefore(a, s.firstChild) : s.appendChild(a), a.styleSheet ? a.styleSheet.cssText = t : a.appendChild(document.createTextNode(t))
        }
    }('.apexcharts-canvas {\n  position: relative;\n  user-select: none;\n  /* cannot give overflow: hidden as it will crop tooltips which overflow outside chart area */\n}\n\n/* scrollbar is not visible by default for legend, hence forcing the visibility */\n.apexcharts-canvas ::-webkit-scrollbar {\n  -webkit-appearance: none;\n  width: 6px;\n}\n.apexcharts-canvas ::-webkit-scrollbar-thumb {\n  border-radius: 4px;\n  background-color: rgba(0,0,0,.5);\n  box-shadow: 0 0 1px rgba(255,255,255,.5);\n  -webkit-box-shadow: 0 0 1px rgba(255,255,255,.5);\n}\n.apexcharts-canvas.dark {\n  background: #343F57;\n}\n\n.apexcharts-inner {\n  position: relative;\n}\n\n.legend-mouseover-inactive {\n  transition: 0.15s ease all;\n  opacity: 0.20;\n}\n\n.apexcharts-series-collapsed {\n  opacity: 0;\n}\n\n.apexcharts-gridline, .apexcharts-text {\n  pointer-events: none;\n}\n\n.apexcharts-tooltip {\n  border-radius: 5px;\n  box-shadow: 2px 2px 6px -4px #999;\n  cursor: default;\n  font-size: 14px;\n  left: 62px;\n  opacity: 0;\n  pointer-events: none;\n  position: absolute;\n  top: 20px;\n  overflow: hidden;\n  white-space: nowrap;\n  z-index: 12;\n  transition: 0.15s ease all;\n}\n.apexcharts-tooltip.light {\n  border: 1px solid #e3e3e3;\n  background: rgba(255, 255, 255, 0.96);\n}\n.apexcharts-tooltip.dark {\n  color: #fff;\n  background: rgba(30,30,30, 0.8);\n}\n.apexcharts-tooltip * {\n  font-family: inherit;\n}\n\n.apexcharts-tooltip .apexcharts-marker,\n.apexcharts-area-series .apexcharts-area,\n.apexcharts-line {\n  pointer-events: none;\n}\n\n.apexcharts-tooltip.active {\n  opacity: 1;\n  transition: 0.15s ease all;\n}\n\n.apexcharts-tooltip-title {\n  padding: 6px;\n  font-size: 15px;\n  margin-bottom: 4px;\n}\n.apexcharts-tooltip.light .apexcharts-tooltip-title {\n  background: #ECEFF1;\n  border-bottom: 1px solid #ddd;\n}\n.apexcharts-tooltip.dark .apexcharts-tooltip-title {\n  background: rgba(0, 0, 0, 0.7);\n  border-bottom: 1px solid #333;\n}\n\n.apexcharts-tooltip-text-value,\n.apexcharts-tooltip-text-z-value {\n  display: inline-block;\n  font-weight: 600;\n  margin-left: 5px;\n}\n\n.apexcharts-tooltip-text-z-label:empty,\n.apexcharts-tooltip-text-z-value:empty {\n  display: none;\n}\n\n.apexcharts-tooltip-text-value, \n.apexcharts-tooltip-text-z-value {\n  font-weight: 600;\n}\n\n.apexcharts-tooltip-marker {\n  width: 12px;\n  height: 12px;\n  position: relative;\n  top: 0px;\n  margin-right: 10px;\n  border-radius: 50%;\n}\n\n.apexcharts-tooltip-series-group {\n  padding: 0 10px;\n  display: none;\n  text-align: left;\n  justify-content: left;\n  align-items: center;\n}\n\n.apexcharts-tooltip-series-group.active .apexcharts-tooltip-marker {\n  opacity: 1;\n}\n.apexcharts-tooltip-series-group.active, .apexcharts-tooltip-series-group:last-child {\n  padding-bottom: 4px;\n}\n.apexcharts-tooltip-series-group-hidden {\n  opacity: 0;\n  height: 0;\n  line-height: 0;\n  padding: 0 !important;\n}\n.apexcharts-tooltip-y-group {\n  padding: 6px 0 5px;\n}\n.apexcharts-tooltip-candlestick {\n  padding: 4px 8px;\n}\n.apexcharts-tooltip-candlestick > div {\n  margin: 4px 0;\n}\n.apexcharts-tooltip-candlestick span.value {\n  font-weight: bold;\n}\n\n.apexcharts-tooltip-rangebar {\n  padding: 5px 8px;\n}\n\n.apexcharts-tooltip-rangebar .category {\n  font-weight: 600;\n  color: #777;\n}\n\n.apexcharts-tooltip-rangebar .series-name {\n  font-weight: bold;\n  display: block;\n  margin-bottom: 5px;\n}\n\n.apexcharts-xaxistooltip {\n  opacity: 0;\n  padding: 9px 10px;\n  pointer-events: none;\n  color: #373d3f;\n  font-size: 13px;\n  text-align: center;\n  border-radius: 2px;\n  position: absolute;\n  z-index: 10;\n\tbackground: #ECEFF1;\n  border: 1px solid #90A4AE;\n  transition: 0.15s ease all;\n}\n\n.apexcharts-xaxistooltip.dark {\n  background: rgba(0, 0, 0, 0.7);\n  border: 1px solid rgba(0, 0, 0, 0.5);\n  color: #fff;\n}\n\n.apexcharts-xaxistooltip:after, .apexcharts-xaxistooltip:before {\n\tleft: 50%;\n\tborder: solid transparent;\n\tcontent: " ";\n\theight: 0;\n\twidth: 0;\n\tposition: absolute;\n\tpointer-events: none;\n}\n\n.apexcharts-xaxistooltip:after {\n\tborder-color: rgba(236, 239, 241, 0);\n\tborder-width: 6px;\n\tmargin-left: -6px;\n}\n.apexcharts-xaxistooltip:before {\n\tborder-color: rgba(144, 164, 174, 0);\n\tborder-width: 7px;\n\tmargin-left: -7px;\n}\n\n.apexcharts-xaxistooltip-bottom:after, .apexcharts-xaxistooltip-bottom:before {\n  bottom: 100%;\n}\n\n.apexcharts-xaxistooltip-top:after, .apexcharts-xaxistooltip-top:before {\n  top: 100%;\n}\n\n.apexcharts-xaxistooltip-bottom:after {\n  border-bottom-color: #ECEFF1;\n}\n.apexcharts-xaxistooltip-bottom:before {\n  border-bottom-color: #90A4AE;\n}\n\n.apexcharts-xaxistooltip-bottom.dark:after {\n  border-bottom-color: rgba(0, 0, 0, 0.5);\n}\n.apexcharts-xaxistooltip-bottom.dark:before {\n  border-bottom-color: rgba(0, 0, 0, 0.5);\n}\n\n.apexcharts-xaxistooltip-top:after {\n  border-top-color:#ECEFF1\n}\n.apexcharts-xaxistooltip-top:before {\n  border-top-color: #90A4AE;\n}\n.apexcharts-xaxistooltip-top.dark:after {\n  border-top-color:rgba(0, 0, 0, 0.5);\n}\n.apexcharts-xaxistooltip-top.dark:before {\n  border-top-color: rgba(0, 0, 0, 0.5);\n}\n\n\n.apexcharts-xaxistooltip.active {\n  opacity: 1;\n  transition: 0.15s ease all;\n}\n\n.apexcharts-yaxistooltip {\n  opacity: 0;\n  padding: 4px 10px;\n  pointer-events: none;\n  color: #373d3f;\n  font-size: 13px;\n  text-align: center;\n  border-radius: 2px;\n  position: absolute;\n  z-index: 10;\n\tbackground: #ECEFF1;\n  border: 1px solid #90A4AE;\n}\n\n.apexcharts-yaxistooltip.dark {\n  background: rgba(0, 0, 0, 0.7);\n  border: 1px solid rgba(0, 0, 0, 0.5);\n  color: #fff;\n}\n\n.apexcharts-yaxistooltip:after, .apexcharts-yaxistooltip:before {\n\ttop: 50%;\n\tborder: solid transparent;\n\tcontent: " ";\n\theight: 0;\n\twidth: 0;\n\tposition: absolute;\n\tpointer-events: none;\n}\n.apexcharts-yaxistooltip:after {\n\tborder-color: rgba(236, 239, 241, 0);\n\tborder-width: 6px;\n\tmargin-top: -6px;\n}\n.apexcharts-yaxistooltip:before {\n\tborder-color: rgba(144, 164, 174, 0);\n\tborder-width: 7px;\n\tmargin-top: -7px;\n}\n\n.apexcharts-yaxistooltip-left:after, .apexcharts-yaxistooltip-left:before {\n  left: 100%;\n}\n\n.apexcharts-yaxistooltip-right:after, .apexcharts-yaxistooltip-right:before {\n  right: 100%;\n}\n\n.apexcharts-yaxistooltip-left:after {\n  border-left-color: #ECEFF1;\n}\n.apexcharts-yaxistooltip-left:before {\n  border-left-color: #90A4AE;\n}\n.apexcharts-yaxistooltip-left.dark:after {\n  border-left-color: rgba(0, 0, 0, 0.5);\n}\n.apexcharts-yaxistooltip-left.dark:before {\n  border-left-color: rgba(0, 0, 0, 0.5);\n}\n\n.apexcharts-yaxistooltip-right:after {\n  border-right-color: #ECEFF1;\n}\n.apexcharts-yaxistooltip-right:before {\n  border-right-color: #90A4AE;\n}\n.apexcharts-yaxistooltip-right.dark:after {\n  border-right-color: rgba(0, 0, 0, 0.5);\n}\n.apexcharts-yaxistooltip-right.dark:before {\n  border-right-color: rgba(0, 0, 0, 0.5);\n}\n\n.apexcharts-yaxistooltip.active {\n  opacity: 1;\n}\n\n.apexcharts-xcrosshairs, .apexcharts-ycrosshairs {\n  pointer-events: none;\n  opacity: 0;\n  transition: 0.15s ease all;\n}\n\n.apexcharts-xcrosshairs.active, .apexcharts-ycrosshairs.active {\n  opacity: 1;\n  transition: 0.15s ease all;\n}\n\n.apexcharts-ycrosshairs-hidden {\n  opacity: 0;\n}\n\n.apexcharts-zoom-rect {\n  pointer-events: none;\n}\n.apexcharts-selection-rect {\n  cursor: move;\n}\n\n.svg_select_points, .svg_select_points_rot {\n  opacity: 0;\n  visibility: hidden;\n}\n.svg_select_points_l, .svg_select_points_r {\n  cursor: ew-resize;\n  opacity: 1;\n  visibility: visible;\n  fill: #888;\n}\n.apexcharts-canvas.zoomable .hovering-zoom {\n  cursor: crosshair\n}\n.apexcharts-canvas.zoomable .hovering-pan {\n  cursor: move\n}\n\n.apexcharts-xaxis,\n.apexcharts-yaxis {\n  pointer-events: none;\n}\n\n.apexcharts-zoom-icon, \n.apexcharts-zoom-in-icon,\n.apexcharts-zoom-out-icon,\n.apexcharts-reset-zoom-icon, \n.apexcharts-pan-icon, \n.apexcharts-selection-icon,\n.apexcharts-menu-icon, \n.apexcharts-toolbar-custom-icon {\n  cursor: pointer;\n  width: 20px;\n  height: 20px;\n  line-height: 24px;\n  color: #6E8192;\n  text-align: center;\n}\n\n\n.apexcharts-zoom-icon svg, \n.apexcharts-zoom-in-icon svg,\n.apexcharts-zoom-out-icon svg,\n.apexcharts-reset-zoom-icon svg,\n.apexcharts-menu-icon svg {\n  fill: #6E8192;\n}\n.apexcharts-selection-icon svg {\n  fill: #444;\n  transform: scale(0.76)\n}\n\n.dark .apexcharts-zoom-icon svg, \n.dark .apexcharts-zoom-in-icon svg,\n.dark .apexcharts-zoom-out-icon svg,\n.dark .apexcharts-reset-zoom-icon svg, \n.dark .apexcharts-pan-icon svg, \n.dark .apexcharts-selection-icon svg,\n.dark .apexcharts-menu-icon svg, \n.dark .apexcharts-toolbar-custom-icon svg{\n  fill: #f3f4f5;\n}\n\n.apexcharts-canvas .apexcharts-zoom-icon.selected svg, \n.apexcharts-canvas .apexcharts-selection-icon.selected svg, \n.apexcharts-canvas .apexcharts-reset-zoom-icon.selected svg {\n  fill: #008FFB;\n}\n.light .apexcharts-selection-icon:not(.selected):hover svg,\n.light .apexcharts-zoom-icon:not(.selected):hover svg, \n.light .apexcharts-zoom-in-icon:hover svg, \n.light .apexcharts-zoom-out-icon:hover svg, \n.light .apexcharts-reset-zoom-icon:hover svg, \n.light .apexcharts-menu-icon:hover svg {\n  fill: #333;\n}\n\n.apexcharts-selection-icon, .apexcharts-menu-icon {\n  position: relative;\n}\n.apexcharts-reset-zoom-icon {\n  margin-left: 5px;\n}\n.apexcharts-zoom-icon, .apexcharts-reset-zoom-icon, .apexcharts-menu-icon {\n  transform: scale(0.85);\n}\n\n.apexcharts-zoom-in-icon, .apexcharts-zoom-out-icon {\n  transform: scale(0.7)\n}\n\n.apexcharts-zoom-out-icon {\n  margin-right: 3px;\n}\n\n.apexcharts-pan-icon {\n  transform: scale(0.62);\n  position: relative;\n  left: 1px;\n  top: 0px;\n}\n.apexcharts-pan-icon svg {\n  fill: #fff;\n  stroke: #6E8192;\n  stroke-width: 2;\n}\n.apexcharts-pan-icon.selected svg {\n  stroke: #008FFB;\n}\n.apexcharts-pan-icon:not(.selected):hover svg {\n  stroke: #333;\n}\n\n.apexcharts-toolbar {\n  position: absolute;\n  z-index: 11;\n  top: 0px;\n  right: 3px;\n  max-width: 176px;\n  text-align: right;\n  border-radius: 3px;\n  padding: 0px 6px 2px 6px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center; \n}\n\n.apexcharts-toolbar svg {\n  pointer-events: none;\n}\n\n.apexcharts-menu {\n  background: #fff;\n  position: absolute;\n  top: 100%;\n  border: 1px solid #ddd;\n  border-radius: 3px;\n  padding: 3px;\n  right: 10px;\n  opacity: 0;\n  min-width: 110px;\n  transition: 0.15s ease all;\n  pointer-events: none;\n}\n\n.apexcharts-menu.open {\n  opacity: 1;\n  pointer-events: all;\n  transition: 0.15s ease all;\n}\n\n.apexcharts-menu-item {\n  padding: 6px 7px;\n  font-size: 12px;\n  cursor: pointer;\n}\n.light .apexcharts-menu-item:hover {\n  background: #eee;\n}\n.dark .apexcharts-menu {\n  background: rgba(0, 0, 0, 0.7);\n  color: #fff;\n}\n\n@media screen and (min-width: 768px) {\n  .apexcharts-toolbar {\n    /*opacity: 0;*/\n  }\n\n  .apexcharts-canvas:hover .apexcharts-toolbar {\n    opacity: 1;\n  } \n}\n\n.apexcharts-datalabel.hidden {\n  opacity: 0;\n}\n\n.apexcharts-pie-label,\n.apexcharts-datalabel, .apexcharts-datalabel-label, .apexcharts-datalabel-value {\n  cursor: default;\n  pointer-events: none;\n}\n\n.apexcharts-pie-label-delay {\n  opacity: 0;\n  animation-name: opaque;\n  animation-duration: 0.3s;\n  animation-fill-mode: forwards;\n  animation-timing-function: ease;\n}\n\n.apexcharts-canvas .hidden {\n  opacity: 0;\n}\n\n.apexcharts-hide .apexcharts-series-points {\n  opacity: 0;\n}\n\n.apexcharts-area-series .apexcharts-series-markers .apexcharts-marker.no-pointer-events,\n.apexcharts-line-series .apexcharts-series-markers .apexcharts-marker.no-pointer-events, .apexcharts-radar-series path, .apexcharts-radar-series polygon {\n  pointer-events: none;\n}\n\n/* markers */\n\n.apexcharts-marker {\n  transition: 0.15s ease all;\n}\n\n@keyframes opaque {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}'), "document" in self && ("classList" in document.createElement("_") && (!document.createElementNS || "classList" in document.createElementNS("http://www.w3.org/2000/svg", "g")) || function (t) {
        if ("Element" in t) {
            var e = t.Element.prototype, i = Object, s = String.prototype.trim || function () {
                return this.replace(/^\s+|\s+$/g, "")
            }, a = Array.prototype.indexOf || function (t) {
                for (var e = 0, i = this.length; e < i; e++) if (e in this && this[e] === t) return e;
                return -1
            }, n = function (t, e) {
                this.name = t, this.code = DOMException[t], this.message = e
            }, r = function (t, e) {
                if ("" === e) throw new n("SYNTAX_ERR", "The token must not be empty.");
                if (/\s/.test(e)) throw new n("INVALID_CHARACTER_ERR", "The token must not contain space characters.");
                return a.call(t, e)
            }, o = function (t) {
                for (var e = s.call(t.getAttribute("class") || ""), i = e ? e.split(/\s+/) : [], a = 0, n = i.length; a < n; a++) this.push(i[a]);
                this._updateClassName = function () {
                    t.setAttribute("class", this.toString())
                }
            }, l = o.prototype = [], h = function () {
                return new o(this)
            };
            if (n.prototype = Error.prototype, l.item = function (t) {
                return this[t] || null
            }, l.contains = function (t) {
                return ~r(this, t + "")
            }, l.add = function () {
                var t, e = arguments, i = 0, s = e.length, a = !1;
                do {
                    t = e[i] + "", ~r(this, t) || (this.push(t), a = !0)
                } while (++i < s);
                a && this._updateClassName()
            }, l.remove = function () {
                var t, e, i = arguments, s = 0, a = i.length, n = !1;
                do {
                    for (t = i[s] + "", e = r(this, t); ~e;) this.splice(e, 1), n = !0, e = r(this, t)
                } while (++s < a);
                n && this._updateClassName()
            }, l.toggle = function (t, e) {
                var i = this.contains(t), s = i ? !0 !== e && "remove" : !1 !== e && "add";
                return s && this[s](t), !0 === e || !1 === e ? e : !i
            }, l.replace = function (t, e) {
                var i = r(t + "");
                ~i && (this.splice(i, 1, e), this._updateClassName())
            }, l.toString = function () {
                return this.join(" ")
            }, i.defineProperty) {
                var c = {get: h, enumerable: !0, configurable: !0};
                try {
                    i.defineProperty(e, "classList", c)
                } catch (t) {
                    void 0 !== t.number && -2146823252 !== t.number || (c.enumerable = !1, i.defineProperty(e, "classList", c))
                }
            } else i.prototype.__defineGetter__ && e.__defineGetter__("classList", h)
        }
    }(self), function () {
        var t = document.createElement("_");
        if (t.classList.add("c1", "c2"), !t.classList.contains("c2")) {
            var e = function (t) {
                var e = DOMTokenList.prototype[t];
                DOMTokenList.prototype[t] = function (t) {
                    var i, s = arguments.length;
                    for (i = 0; i < s; i++) t = arguments[i], e.call(this, t)
                }
            };
            e("add"), e("remove")
        }
        if (t.classList.toggle("c3", !1), t.classList.contains("c3")) {
            var i = DOMTokenList.prototype.toggle;
            DOMTokenList.prototype.toggle = function (t, e) {
                return 1 in arguments && !this.contains(t) == !e ? e : i.call(this, t)
            }
        }
        "replace" in document.createElement("_").classList || (DOMTokenList.prototype.replace = function (t, e) {
            var i = this.toString().split(" "), s = i.indexOf(t + "");
            ~s && (i = i.slice(s), this.remove.apply(this, i), this.add(e), this.add.apply(this, i.slice(1)))
        }), t = null
    }()), function () {
        var t = !1;

        function e(t) {
            var e = t.__resizeTriggers__, i = e.firstElementChild, s = e.lastElementChild, a = i.firstElementChild;
            s.scrollLeft = s.scrollWidth, s.scrollTop = s.scrollHeight, a.style.width = i.offsetWidth + 1 + "px", a.style.height = i.offsetHeight + 1 + "px", i.scrollLeft = i.scrollWidth, i.scrollTop = i.scrollHeight
        }

        function i(t) {
            var i = this;
            e(this), this.__resizeRAF__ && r(this.__resizeRAF__), this.__resizeRAF__ = n(function () {
                (function (t) {
                    return t.offsetWidth != t.__resizeLast__.width || t.offsetHeight != t.__resizeLast__.height
                })(i) && (i.__resizeLast__.width = i.offsetWidth, i.__resizeLast__.height = i.offsetHeight, i.__resizeListeners__.forEach(function (e) {
                    e.call(t)
                }))
            })
        }

        var s, a,
            n = (s = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || function (t) {
                return window.setTimeout(t, 20)
            }, function (t) {
                return s(t)
            }),
            r = (a = window.cancelAnimationFrame || window.mozCancelAnimationFrame || window.webkitCancelAnimationFrame || window.clearTimeout, function (t) {
                return a(t)
            }), o = !1, l = "", h = "animationstart", c = "Webkit Moz O ms".split(" "),
            d = "webkitAnimationStart animationstart oAnimationStart MSAnimationStart".split(" "),
            u = document.createElement("fakeelement");
        if (void 0 !== u.style.animationName && (o = !0), !1 === o) for (var g = 0; g < c.length; g++) if (void 0 !== u.style[c[g] + "AnimationName"]) {
            l = "-" + c[g].toLowerCase() + "-", h = d[g];
            break
        }
        var f = "@" + l + "keyframes resizeanim { from { opacity: 0; } to { opacity: 0; } } ",
            p = l + "animation: 1ms resizeanim; ";
        window.addResizeListener = function (s, a) {
            s.__resizeTriggers__ || ("static" == getComputedStyle(s).position && (s.style.position = "relative"), function () {
                if (!t) {
                    var e = (f || "") + ".resize-triggers { " + (p || "") + 'visibility: hidden; opacity: 0; } .resize-triggers, .resize-triggers > div, .contract-trigger:before { content: " "; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',
                        i = document.head || document.getElementsByTagName("head")[0],
                        s = document.createElement("style");
                    s.type = "text/css", s.styleSheet ? s.styleSheet.cssText = e : s.appendChild(document.createTextNode(e)), i.appendChild(s), t = !0
                }
            }(), s.__resizeLast__ = {}, s.__resizeListeners__ = [], (s.__resizeTriggers__ = document.createElement("div")).className = "resize-triggers", s.__resizeTriggers__.innerHTML = '<div class="expand-trigger"><div></div></div><div class="contract-trigger"></div>', s.appendChild(s.__resizeTriggers__), e(s), s.addEventListener("scroll", i, !0), h && s.__resizeTriggers__.addEventListener(h, function (t) {
                "resizeanim" == t.animationName && e(s)
            })), s.__resizeListeners__.push(a)
        }, window.removeResizeListener = function (t, e) {
            t && (t.__resizeListeners__.splice(t.__resizeListeners__.indexOf(e), 1), t.__resizeListeners__.length || (t.removeEventListener("scroll", i), t.__resizeTriggers__ = !t.removeChild(t.__resizeTriggers__)))
        }
    }(), window.Apex = {}, function () {
        function i(t, s) {
            e(this, i), this.opts = s, this.ctx = this, this.w = new A(s).init(), this.el = t, this.w.globals.cuid = (Math.random() + 1).toString(36).substring(4), this.w.globals.chartID = this.w.config.chart.id ? this.w.config.chart.id : this.w.globals.cuid, this.initModules(), this.create = d.bind(this.create, this), this.windowResizeHandler = this.windowResize.bind(this)
        }

        return s(i, [{
            key: "render", value: function () {
                var t = this;
                return new $(function (e, i) {
                    if (null !== t.el) {
                        void 0 === Apex._chartInstances && (Apex._chartInstances = []), t.w.config.chart.id && Apex._chartInstances.push({
                            id: t.w.globals.chartID,
                            group: t.w.config.chart.group,
                            chart: t
                        }), t.setLocale(t.w.config.chart.defaultLocale);
                        var s = t.w.config.chart.events.beforeMount;
                        "function" == typeof s && s(t, t.w), t.fireEvent("beforeMount", [t, t.w]), window.addEventListener("resize", t.windowResizeHandler), window.addResizeListener(t.el.parentNode, t.parentResizeCallback.bind(t));
                        var a = t.create(t.w.config.series, {});
                        if (!a) return e(t);
                        t.mount(a).then(function () {
                            e(a), "function" == typeof t.w.config.chart.events.mounted && t.w.config.chart.events.mounted(t, t.w), t.fireEvent("mounted", [t, t.w])
                        }).catch(function (t) {
                            i(t)
                        })
                    } else i(new Error("Element not found"))
                })
            }
        }, {
            key: "initModules", value: function () {
                this.animations = new g(this), this.core = new U(this.el, this), this.grid = new rt(this), this.coreUtils = new y(this), this.config = new w({}), this.crosshairs = new T(this), this.options = new x, this.responsive = new lt(this), this.series = new G(this), this.theme = new ht(this), this.formatters = new N(this), this.titleSubtitle = new vt(this), this.legend = new ot(this), this.toolbar = new bt(this), this.dimensions = new _(this), this.zoomPanSelection = new mt(this), this.w.globals.tooltip = new xt(this)
            }
        }, {
            key: "addEventListener", value: function (t, e) {
                var i = this.w;
                i.globals.events.hasOwnProperty(t) ? i.globals.events[t].push(e) : i.globals.events[t] = [e]
            }
        }, {
            key: "removeEventListener", value: function (t, e) {
                var i = this.w;
                if (i.globals.events.hasOwnProperty(t)) {
                    var s = i.globals.events[t].indexOf(e);
                    -1 !== s && i.globals.events[t].splice(s, 1)
                }
            }
        }, {
            key: "fireEvent", value: function (t, e) {
                var i = this.w;
                if (i.globals.events.hasOwnProperty(t)) {
                    e && e.length || (e = []);
                    for (var s = i.globals.events[t], a = s.length, n = 0; n < a; n++) s[n].apply(null, e)
                }
            }
        }, {
            key: "create", value: function (t, e) {
                var i = this.w;
                this.initModules();
                var s = this.w.globals;
                if (s.noData = !1, s.animationEnded = !1, this.responsive.checkResponsiveConfig(e), null === this.el) return s.animationEnded = !0, null;
                if (this.core.setupElements(), 0 === s.svgWidth) return s.animationEnded = !0, null;
                var a = y.checkComboSeries(t);
                s.comboCharts = a.comboCharts, s.comboChartsHasBars = a.comboChartsHasBars, (0 === t.length || 1 === t.length && t[0].data && 0 === t[0].data.length) && this.series.handleNoData(), this.setupEventHandlers(), this.core.parseData(t), this.theme.init(), new C(this).setGlobalMarkerSize(), this.formatters.setLabelFormatters(), this.titleSubtitle.draw(), this.legend.init(), this.series.hasAllSeriesEqualX(), s.axisCharts && (this.core.coreCalculations(), "category" !== i.config.xaxis.type && this.formatters.setLabelFormatters()), this.formatters.heatmapLabelFormatters(), this.dimensions.plotCoords();
                var n = this.core.xySettings();
                this.grid.createGridMask();
                var r = this.core.plotChartType(t, n);
                this.core.shiftGraphPosition();
                var o = {
                    plot: {
                        left: i.globals.translateX,
                        top: i.globals.translateY,
                        width: i.globals.gridWidth,
                        height: i.globals.gridHeight
                    }
                };
                return {elGraph: r, xyRatios: n, elInner: i.globals.dom.elGraphical, dimensions: o}
            }
        }, {
            key: "mount", value: function () {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null, e = this, i = e.w;
                return new $(function (s, a) {
                    if (null === e.el) return a(new Error("Not enough data to display or target element not found"));
                    if ((null === t || i.globals.allSeriesCollapsed) && e.series.handleNoData(), e.annotations = new b(e), e.core.drawAxis(i.config.chart.type, t.xyRatios), e.grid = new rt(e), "back" === i.config.grid.position && e.grid.drawGrid(), "back" === i.config.annotations.position && e.annotations.drawAnnotations(), t.elGraph instanceof Array) for (var n = 0; n < t.elGraph.length; n++) i.globals.dom.elGraphical.add(t.elGraph[n]); else i.globals.dom.elGraphical.add(t.elGraph);
                    if ("front" === i.config.grid.position && e.grid.drawGrid(), "front" === i.config.xaxis.crosshairs.position && e.crosshairs.drawXCrosshairs(), "front" === i.config.yaxis[0].crosshairs.position && e.crosshairs.drawYCrosshairs(), "front" === i.config.annotations.position && e.annotations.drawAnnotations(), !i.globals.noData) {
                        if (i.config.tooltip.enabled && !i.globals.noData && e.w.globals.tooltip.drawTooltip(t.xyRatios), i.globals.axisCharts && i.globals.isXNumeric) (i.config.chart.zoom.enabled || i.config.chart.selection && i.config.chart.selection.enabled || i.config.chart.pan && i.config.chart.pan.enabled) && e.zoomPanSelection.init({xyRatios: t.xyRatios}); else {
                            var r = i.config.chart.toolbar.tools;
                            r.zoom = !1, r.zoomin = !1, r.zoomout = !1, r.selection = !1, r.pan = !1, r.reset = !1
                        }
                        i.config.chart.toolbar.show && !i.globals.allSeriesCollapsed && e.toolbar.createToolbar()
                    }
                    i.globals.memory.methodsToExec.length > 0 && i.globals.memory.methodsToExec.forEach(function (t) {
                        t.method(t.params, !1, t.context)
                    }), s(e)
                })
            }
        }, {
            key: "clearPreviousPaths", value: function () {
                var t = this.w;
                t.globals.previousPaths = [], t.globals.allSeriesCollapsed = !1, t.globals.collapsedSeries = [], t.globals.collapsedSeriesIndices = []
            }
        }, {
            key: "updateOptions", value: function (t) {
                var e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                    i = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2],
                    s = !(arguments.length > 3 && void 0 !== arguments[3]) || arguments[3], a = this.w;
                return t.series && (t.series[0].data && (t.series = t.series.map(function (t, e) {
                    return n({}, a.config.series[e], {
                        name: t.name ? t.name : a.config.series[e] && a.config.series[e].name,
                        type: t.type ? t.type : a.config.series[e] && a.config.series[e].type,
                        data: t.data ? t.data : a.config.series[e] && a.config.series[e].data
                    })
                })), this.revertDefaultAxisMinMax()), t.xaxis && ((t.xaxis.min || t.xaxis.max) && this.forceXAxisUpdate(t), t.xaxis.categories && t.xaxis.categories.length && a.config.xaxis.convertedCatToNumeric && (t = v.convertCatToNumeric(t))), a.globals.collapsedSeriesIndices.length > 0 && this.clearPreviousPaths(), t.theme && (t = this.theme.updateThemeOptions(t)), this._updateOptions(t, e, i, s)
            }
        }, {
            key: "_updateOptions", value: function (e) {
                var i = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                    s = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2],
                    a = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
                this.getSyncedCharts().forEach(function (n) {
                    var r = n.w;
                    return r.globals.shouldAnimate = s, i || (r.globals.resized = !0, r.globals.dataChanged = !0, s && n.series.getPreviousPaths()), e && "object" === t(e) && (n.config = new w(e), e = y.extendArrayProps(n.config, e), r.config = d.extend(r.config, e), a && (r.globals.lastXAxis = [], r.globals.lastYAxis = [], r.globals.initialConfig = d.extend({}, r.config), r.globals.initialSeries = JSON.parse(JSON.stringify(r.config.series)))), n.update(e)
                })
            }
        }, {
            key: "updateSeries", value: function () {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
                    e = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1],
                    i = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2];
                return this.revertDefaultAxisMinMax(), this._updateSeries(t, e, i)
            }
        }, {
            key: "appendSeries", value: function (t) {
                var e = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1],
                    i = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2],
                    s = this.w.config.series.slice();
                return s.push(t), this.revertDefaultAxisMinMax(), this._updateSeries(s, e, i)
            }
        }, {
            key: "_updateSeries", value: function (t, e) {
                var i, s = arguments.length > 2 && void 0 !== arguments[2] && arguments[2], a = this.w;
                return this.w.globals.shouldAnimate = e, a.globals.dataChanged = !0, a.globals.allSeriesCollapsed && (a.globals.allSeriesCollapsed = !1), e && this.series.getPreviousPaths(), a.globals.axisCharts ? (0 === (i = t.map(function (t, e) {
                    return n({}, a.config.series[e], {
                        name: t.name ? t.name : a.config.series[e] && a.config.series[e].name,
                        type: t.type ? t.type : a.config.series[e] && a.config.series[e].type,
                        data: t.data ? t.data : a.config.series[e] && a.config.series[e].data
                    })
                })).length && (i = [{data: []}]), a.config.series = i) : a.config.series = t.slice(), s && (a.globals.initialConfig.series = JSON.parse(JSON.stringify(a.config.series)), a.globals.initialSeries = JSON.parse(JSON.stringify(a.config.series))), this.update()
            }
        }, {
            key: "getSyncedCharts", value: function () {
                var t = this.getGroupedCharts(), e = [this];
                return t.length && (e = [], t.forEach(function (t) {
                    e.push(t)
                })), e
            }
        }, {
            key: "getGroupedCharts", value: function () {
                var t = this;
                return Apex._chartInstances.filter(function (t) {
                    if (t.group) return !0
                }).map(function (e) {
                    return t.w.config.chart.group === e.group ? e.chart : t
                })
            }
        }, {
            key: "appendData", value: function (t) {
                var e = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1], i = this;
                i.w.globals.dataChanged = !0, i.series.getPreviousPaths();
                for (var s = i.w.config.series.slice(), a = 0; a < s.length; a++) if (void 0 !== t[a]) for (var n = 0; n < t[a].data.length; n++) s[a].data.push(t[a].data[n]);
                return i.w.config.series = s, e && (i.w.globals.initialSeries = JSON.parse(JSON.stringify(i.w.config.series))), this.update()
            }
        }, {
            key: "update", value: function (t) {
                var e = this;
                return new $(function (i, s) {
                    e.clear();
                    var a = e.create(e.w.config.series, t);
                    if (!a) return i(e);
                    e.mount(a).then(function () {
                        "function" == typeof e.w.config.chart.events.updated && e.w.config.chart.events.updated(e, e.w), e.fireEvent("updated", [e, e.w]), e.w.globals.isDirty = !0, i(e)
                    }).catch(function (t) {
                        s(t)
                    })
                })
            }
        }, {
            key: "forceXAxisUpdate", value: function (t) {
                var e = this.w;
                void 0 !== t.xaxis.min && (e.config.xaxis.min = t.xaxis.min, e.globals.lastXAxis.min = t.xaxis.min), void 0 !== t.xaxis.max && (e.config.xaxis.max = t.xaxis.max, e.globals.lastXAxis.max = t.xaxis.max)
            }
        }, {
            key: "revertDefaultAxisMinMax", value: function () {
                var t = this.w;
                t.config.xaxis.min = t.globals.lastXAxis.min, t.config.xaxis.max = t.globals.lastXAxis.max, t.config.yaxis.map(function (e, i) {
                    t.globals.zoomed && void 0 !== t.globals.lastYAxis[i] && (e.min = t.globals.lastYAxis[i].min, e.max = t.globals.lastYAxis[i].max)
                })
            }
        }, {
            key: "clear", value: function () {
                this.zoomPanSelection && this.zoomPanSelection.destroy(), this.toolbar && this.toolbar.destroy(), this.animations = null, this.annotations = null, this.core = null, this.grid = null, this.series = null, this.responsive = null, this.theme = null, this.formatters = null, this.titleSubtitle = null, this.legend = null, this.dimensions = null, this.options = null, this.crosshairs = null, this.zoomPanSelection = null, this.toolbar = null, this.w.globals.tooltip = null, this.clearDomElements()
            }
        }, {
            key: "killSVG", value: function (t) {
                return new $(function (e, i) {
                    t.each(function (t, e) {
                        this.removeClass("*"), this.off(), this.stop()
                    }, !0), t.ungroup(), t.clear(), e("done")
                })
            }
        }, {
            key: "clearDomElements", value: function () {
                var t = this.w.globals.dom;
                if (null !== this.el) for (; this.el.firstChild;) this.el.removeChild(this.el.firstChild);
                this.killSVG(t.Paper), t.Paper.remove(), t.elWrap = null, t.elGraphical = null, t.elLegendWrap = null, t.baseEl = null, t.elGridRect = null, t.elGridRectMask = null, t.elGridRectMarkerMask = null, t.elDefs = null
            }
        }, {
            key: "destroy", value: function () {
                this.clear();
                var t = this.w.config.chart.id;
                t && Apex._chartInstances.forEach(function (e, i) {
                    e.id === t && Apex._chartInstances.splice(i, 1)
                }), window.removeEventListener("resize", this.windowResizeHandler), window.removeResizeListener(this.el.parentNode, this.parentResizeCallback.bind(this))
            }
        }, {
            key: "toggleSeries", value: function (t) {
                var e = this.series.getSeriesByName(t), i = parseInt(e.getAttribute("data:realIndex")),
                    s = e.classList.contains("apexcharts-series-collapsed");
                this.legend.toggleDataSeries(i, s)
            }
        }, {
            key: "resetToggleSeries", value: function () {
                this.legend.resetToggleDataSeries()
            }
        }, {
            key: "setupEventHandlers", value: function () {
                var t = this.w, e = this, i = t.globals.dom.baseEl.querySelector(t.globals.chartClass),
                    s = ["mousedown", "mousemove", "touchstart", "touchmove", "mouseup", "touchend"];
                s.forEach(function (s) {
                    i.addEventListener(s, function (i) {
                        "mousedown" === i.type && 1 === i.which || ("mouseup" === i.type && 1 === i.which || "touchend" === i.type) && ("function" == typeof t.config.chart.events.click && t.config.chart.events.click(i, e, t), e.fireEvent("click", [i, e, t]))
                    }, {capture: !1, passive: !0})
                }), s.forEach(function (e) {
                    document.addEventListener(e, function (e) {
                        t.globals.clientX = "touchmove" === e.type ? e.touches[0].clientX : e.clientX, t.globals.clientY = "touchmove" === e.type ? e.touches[0].clientY : e.clientY
                    })
                }), this.core.setupBrushHandler()
            }
        }, {
            key: "addXaxisAnnotation", value: function (t) {
                var e = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1],
                    i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : void 0, s = this;
                i && (s = i), s.annotations.addXaxisAnnotationExternal(t, e, s)
            }
        }, {
            key: "addYaxisAnnotation", value: function (t) {
                var e = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1],
                    i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : void 0, s = this;
                i && (s = i), s.annotations.addYaxisAnnotationExternal(t, e, s)
            }
        }, {
            key: "addPointAnnotation", value: function (t) {
                var e = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1],
                    i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : void 0, s = this;
                i && (s = i), s.annotations.addPointAnnotationExternal(t, e, s)
            }
        }, {
            key: "clearAnnotations", value: function () {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : void 0, e = this;
                t && (e = t), e.annotations.clearAnnotations(e)
            }
        }, {
            key: "addText", value: function (t) {
                var e = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1],
                    i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : void 0, s = this;
                i && (s = i), s.annotations.addText(t, e, s)
            }
        }, {
            key: "getChartArea", value: function () {
                return this.w.globals.dom.baseEl.querySelector(".apexcharts-inner")
            }
        }, {
            key: "getSeriesTotalXRange", value: function (t, e) {
                return this.coreUtils.getSeriesTotalsXRange(t, e)
            }
        }, {
            key: "getHighestValueInSeries", value: function () {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
                return new V(this.ctx).getMinYMaxY(t).highestY
            }
        }, {
            key: "getLowestValueInSeries", value: function () {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
                return new V(this.ctx).getMinYMaxY(t).lowestY
            }
        }, {
            key: "getSeriesTotal", value: function () {
                return this.w.globals.seriesTotals
            }
        }, {
            key: "setLocale", value: function (t) {
                this.setCurrentLocaleValues(t)
            }
        }, {
            key: "setCurrentLocaleValues", value: function (t) {
                var e = this.w.config.chart.locales;
                window.Apex.chart && window.Apex.chart.locales && window.Apex.chart.locales.length > 0 && (e = this.w.config.chart.locales.concat(window.Apex.chart.locales));
                var i = e.filter(function (e) {
                    return e.name === t
                })[0];
                if (!i) throw new Error("Wrong locale name provided. Please make sure you set the correct locale name in options");
                var s = d.extend(p, i);
                this.w.globals.locale = s.options
            }
        }, {
            key: "dataURI", value: function () {
                return new nt(this.ctx).dataURI()
            }
        }, {
            key: "paper", value: function () {
                return this.w.globals.dom.Paper
            }
        }, {
            key: "parentResizeCallback", value: function () {
                this.w.globals.animationEnded && this.windowResize()
            }
        }, {
            key: "windowResize", value: function () {
                var t = this;
                clearTimeout(this.w.globals.resizeTimer), this.w.globals.resizeTimer = window.setTimeout(function () {
                    t.w.globals.resized = !0, t.w.globals.dataChanged = !1, t.update()
                }, 150)
            }
        }], [{
            key: "initOnLoad", value: function () {
                for (var t = document.querySelectorAll("[data-apexcharts]"), e = 0; e < t.length; e++) {
                    new i(t[e], JSON.parse(t[e].getAttribute("data-options"))).render()
                }
            }
        }, {
            key: "exec", value: function (t, e) {
                var i = this.getChartByID(t);
                if (i) {
                    for (var s = arguments.length, a = new Array(s > 2 ? s - 2 : 0), n = 2; n < s; n++) a[n - 2] = arguments[n];
                    switch (e) {
                        case"updateOptions":
                            return i.updateOptions.apply(i, a);
                        case"updateSeries":
                            return i.updateSeries.apply(i, a);
                        case"appendData":
                            return i.appendData.apply(i, a);
                        case"appendSeries":
                            return i.appendSeries.apply(i, a);
                        case"toggleSeries":
                            return i.toggleSeries.apply(i, a);
                        case"dataURI":
                            return i.dataURI.apply(i, a);
                        case"addXaxisAnnotation":
                            return i.addXaxisAnnotation.apply(i, a);
                        case"addYaxisAnnotation":
                            return i.addYaxisAnnotation.apply(i, a);
                        case"addPointAnnotation":
                            return i.addPointAnnotation.apply(i, a);
                        case"addText":
                            return i.addText.apply(i, a);
                        case"clearAnnotations":
                            return i.clearAnnotations.apply(i, a);
                        case"paper":
                            return i.paper.apply(i, a);
                        case"destroy":
                            return i.destroy()
                    }
                }
            }
        }, {
            key: "merge", value: function (t, e) {
                return d.extend(t, e)
            }
        }, {
            key: "getChartByID", value: function (t) {
                return Apex._chartInstances.filter(function (e) {
                    return e.id === t
                })[0].chart
            }
        }]), i
    }()
});

(function (b) {
    function a(c) {
        this.init(c)
    }

    a.prototype = {
        value: 0,
        size: 100,
        startAngle: -Math.PI,
        thickness: "auto",
        fill: {gradient: ["#3aeabb", "#fdd250"]},
        emptyFill: "rgba(0, 0, 0, .1)",
        animation: {duration: 1200, easing: "circleProgressEasing"},
        animationStartValue: 0,
        reverse: false,
        lineCap: "butt",
        constructor: a,
        el: null,
        canvas: null,
        ctx: null,
        radius: 0,
        arcFill: null,
        lastFrameValue: 0,
        init: function (c) {
            b.extend(this, c);
            this.radius = this.size / 2;
            this.initWidget();
            this.initFill();
            this.draw()
        },
        initWidget: function () {
            var c = this.canvas = this.canvas || b("<canvas>").prependTo(this.el)[0];
            c.width = this.size;
            c.height = this.size;
            this.ctx = c.getContext("2d")
        },
        initFill: function () {
            var m = this, l = this.fill, o = this.ctx, p = this.size;
            if (!l) {
                throw Error("The fill is not specified!")
            }
            if (l.color) {
                this.arcFill = l.color
            }
            if (l.gradient) {
                var c = l.gradient;
                if (c.length == 1) {
                    this.arcFill = c[0]
                } else {
                    if (c.length > 1) {
                        var k = l.gradientAngle || 0,
                            j = l.gradientDirection || [p / 2 * (1 - Math.cos(k)), p / 2 * (1 + Math.sin(k)), p / 2 * (1 + Math.cos(k)), p / 2 * (1 - Math.sin(k))];
                        var n = o.createLinearGradient.apply(o, j);
                        for (var f = 0; f < c.length; f++) {
                            var d = c[f], g = f / (c.length - 1);
                            if (b.isArray(d)) {
                                g = d[1];
                                d = d[0]
                            }
                            n.addColorStop(g, d)
                        }
                        this.arcFill = n
                    }
                }
            }
            if (l.image) {
                var e;
                if (l.image instanceof Image) {
                    e = l.image
                } else {
                    e = new Image();
                    e.src = l.image
                }
                if (e.complete) {
                    h()
                } else {
                    e.onload = h
                }
            }

            function h() {
                var i = b("<canvas>")[0];
                i.width = m.size;
                i.height = m.size;
                i.getContext("2d").drawImage(e, 0, 0, p, p);
                m.arcFill = m.ctx.createPattern(i, "no-repeat");
                m.drawFrame(m.lastFrameValue)
            }
        },
        draw: function () {
            if (this.animation) {
                this.drawAnimated(this.value)
            } else {
                this.drawFrame(this.value)
            }
        },
        drawFrame: function (c) {
            this.lastFrameValue = c;
            this.ctx.clearRect(0, 0, this.size, this.size);
            this.drawEmptyArc(c);
            this.drawArc(c)
        },
        drawArc: function (e) {
            var d = this.ctx, g = this.radius, f = this.getThickness(), c = this.startAngle;
            d.save();
            d.beginPath();
            if (!this.reverse) {
                d.arc(g, g, g - f / 2, c, c + Math.PI * 2 * e)
            } else {
                d.arc(g, g, g - f / 2, c - Math.PI * 2 * e, c)
            }
            d.lineWidth = f;
            d.lineCap = this.lineCap;
            d.strokeStyle = this.arcFill;
            d.stroke();
            d.restore()
        },
        drawEmptyArc: function (e) {
            var d = this.ctx, g = this.radius, f = this.getThickness(), c = this.startAngle;
            if (e < 1) {
                d.save();
                d.beginPath();
                if (e <= 0) {
                    d.arc(g, g, g - f / 2, 0, Math.PI * 2)
                } else {
                    if (!this.reverse) {
                        d.arc(g, g, g - f / 2, c + Math.PI * 2 * e, c)
                    } else {
                        d.arc(g, g, g - f / 2, c, c - Math.PI * 2 * e)
                    }
                }
                d.lineWidth = f;
                d.strokeStyle = this.emptyFill;
                d.stroke();
                d.restore()
            }
        },
        drawAnimated: function (d) {
            var c = this, f = this.el, e = b(this.canvas);
            e.stop(true, false);
            f.trigger("circle-animation-start");
            e.css({animationProgress: 0}).animate({animationProgress: 1}, b.extend({}, this.animation, {
                step: function (h) {
                    var g = c.animationStartValue * (1 - h) + d * h;
                    c.drawFrame(g);
                    f.trigger("circle-animation-progress", [h, g])
                }
            })).promise().always(function () {
                f.trigger("circle-animation-end")
            })
        },
        getThickness: function () {
            return b.isNumeric(this.thickness) ? this.thickness : this.size / 14
        },
        getValue: function () {
            return this.value
        },
        setValue: function (c) {
            if (this.animation) {
                this.animationStartValue = this.lastFrameValue
            }
            this.value = c;
            this.draw()
        }
    };
    b.circleProgress = {defaults: a.prototype};
    b.easing.circleProgressEasing = function (f, g, e, i, h) {
        if ((g /= h / 2) < 1) {
            return i / 2 * g * g * g + e
        }
        return i / 2 * ((g -= 2) * g * g + 2) + e
    };
    b.fn.circleProgress = function (e, d) {
        var c = "circle-progress", f = this.data(c);
        if (e == "widget") {
            if (!f) {
                throw Error('Calling "widget" method on not initialized instance is forbidden')
            }
            return f.canvas
        }
        if (e == "value") {
            if (!f) {
                throw Error('Calling "value" method on not initialized instance is forbidden')
            }
            if (typeof d == "undefined") {
                return f.getValue()
            } else {
                var g = arguments[1];
                return this.each(function () {
                    b(this).data(c).setValue(g)
                })
            }
        }
        return this.each(function () {
            var j = b(this), h = j.data(c), i = b.isPlainObject(e) ? e : {};
            if (h) {
                h.init(i)
            } else {
                var k = b.extend({}, j.data());
                if (typeof k.fill == "string") {
                    k.fill = JSON.parse(k.fill)
                }
                if (typeof k.animation == "string") {
                    k.animation = JSON.parse(k.animation)
                }
                i = b.extend(k, i);
                i.el = j;
                h = new a(i);
                j.data(c, h)
            }
        })
    }
})(jQuery);

'use strict';
$(document).ready(function () {

    var colors = {
        primary: $('.colors .bg-primary').css('background-color'),
        primaryLight: $('.colors .bg-primary-bright').css('background-color'),
        secondary: $('.colors .bg-secondary').css('background-color'),
        secondaryLight: $('.colors .bg-secondary-bright').css('background-color'),
        info: $('.colors .bg-info').css('background-color'),
        infoLight: $('.colors .bg-info-bright').css('background-color'),
        success: $('.colors .bg-success').css('background-color'),
        successLight: $('.colors .bg-success-bright').css('background-color'),
        danger: $('.colors .bg-danger').css('background-color'),
        dangerLight: $('.colors .bg-danger-bright').css('background-color'),
        warning: $('.colors .bg-warning').css('background-color'),
        warningLight: $('.colors .bg-warning-bright').css('background-color'),
    };

    /**
     *  Slick slide example
     **/

    if ($('.slick-single-item').length) {
        $('.slick-single-item').slick({
            autoplay: true,
            autoplaySpeed: 3000,
            infinite: true,
            slidesToShow: 4,
            slidesToScroll: 4,
            prevArrow: '.slick-single-arrows a:eq(0)',
            nextArrow: '.slick-single-arrows a:eq(1)',
            responsive: [
                {
                    breakpoint: 1300,
                    settings: {
                        slidesToShow: 3,
                        slidesToScroll: 3,
                    }
                },
                {
                    breakpoint: 992,
                    settings: {
                        slidesToShow: 3,
                        slidesToScroll: 3,
                    }
                },
                {
                    breakpoint: 768,
                    settings: {
                        slidesToShow: 2,
                        slidesToScroll: 2
                    }
                },
                {
                    breakpoint: 540,
                    settings: {
                        slidesToShow: 1,
                        slidesToScroll: 1
                    }
                }
            ]
        });
    }

    if ($('.reportrange').length > 0) {
        var start = moment().subtract(29, 'days');
        var end = moment();

        function cb(start, end) {
            $('.reportrange .text').html(start.format('MMMM D, YYYY') + ' - ' + end.format('MMMM D, YYYY'));
        }

        $('.reportrange').daterangepicker({
            startDate: start,
            endDate: end,
            ranges: {
                'Today': [moment(), moment()],
                'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                'Last 7 Days': [moment().subtract(6, 'days'), moment()],
                'Last 30 Days': [moment().subtract(29, 'days'), moment()],
                'This Month': [moment().startOf('month'), moment().endOf('month')],
                'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
            }
        }, cb);

        cb(start, end);
    }

    var chartColors = {
        primary: {
            base: '#3f51b5',
            light: '#c0c5e4'
        },
        danger: {
            base: '#f2125e',
            light: '#fcd0df'
        },
        success: {
            base: '#0acf97',
            light: '#cef5ea'
        },
        warning: {
            base: '#ff8300',
            light: '#ffe6cc'
        },
        info: {
            base: '#00bcd4',
            light: '#e1efff'
        },
        dark: '#37474f',
        facebook: '#3b5998',
        twitter: '#55acee',
        linkedin: '#0077b5',
        instagram: '#517fa4',
        whatsapp: '#25D366',
        dribbble: '#ea4c89',
        google: '#DB4437',
        borderColor: '#e8e8e8',
        fontColor: '#999'
    };

    if ($('body').hasClass('dark')) {
        chartColors.borderColor = 'rgba(255, 255, 255, .1)';
        chartColors.fontColor = 'rgba(255, 255, 255, .4)';
    }

    /// Chartssssss

    chart_demo_1();

    chart_demo_2();

    chart_demo_3();

    chart_demo_4();

    chart_demo_5();

    chart_demo_6();

    chart_demo_7();

    chart_demo_8();

    chart_demo_9();

    chart_demo_10();

    function chart_demo_1() {
        if ($('#chart_demo_1').length) {
            var element = document.getElementById("chart_demo_1");
            element.height = 146;
            new Chart(element, {
                type: 'bar',
                data: {
                    labels: ["2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"],
                    datasets: [
                        {
                            label: "Total Sales",
                            backgroundColor: colors.primary,
                            data: [133, 221, 783, 978, 214, 421, 211, 577]
                        }, {
                            label: "Average",
                            backgroundColor: colors.info,
                            data: [408, 947, 675, 734, 325, 672, 632, 213]
                        }
                    ]
                },
                options: {
                    legend: {
                        display: false
                    },
                    scales: {
                        xAxes: [{
                            ticks: {
                                fontSize: 11,
                                fontColor: chartColors.fontColor
                            },
                            gridLines: {
                                display: false,
                            }
                        }],
                        yAxes: [{
                            ticks: {
                                fontSize: 11,
                                fontColor: chartColors.fontColor
                            },
                            gridLines: {
                                color: chartColors.borderColor
                            }
                        }],
                    }
                }
            })
        }
    }

    function chart_demo_2() {
        if ($('#chart_demo_2').length) {
            var ctx = document.getElementById('chart_demo_2').getContext('2d');
            new Chart(ctx, {
                type: 'line',
                data: {
                    labels: ["Jun 2016", "Jul 2016", "Aug 2016", "Sep 2016", "Oct 2016", "Nov 2016", "Dec 2016", "Jan 2017", "Feb 2017", "Mar 2017", "Apr 2017", "May 2017"],
                    datasets: [{
                        label: "Rainfall",
                        backgroundColor: chartColors.primary.light,
                        borderColor: chartColors.primary.base,
                        data: [26.4, 39.8, 66.8, 66.4, 40.6, 55.2, 77.4, 69.8, 57.8, 76, 110.8, 142.6],
                    }]
                },
                options: {
                    legend: {
                        display: false,
                        labels: {
                            fontColor: chartColors.fontColor
                        }
                    },
                    title: {
                        display: true,
                        text: 'Precipitation in Toronto',
                        fontColor: chartColors.fontColor,
                    },
                    scales: {
                        yAxes: [{
                            gridLines: {
                                color: chartColors.borderColor
                            },
                            ticks: {
                                fontColor: chartColors.fontColor,
                                beginAtZero: true
                            },
                            scaleLabel: {
                                display: true,
                                labelString: 'Precipitation in mm',
                                fontColor: chartColors.fontColor,
                            }
                        }],
                        xAxes: [{
                            gridLines: {
                                color: chartColors.borderColor
                            },
                            ticks: {
                                fontColor: chartColors.fontColor,
                                beginAtZero: true
                            }
                        }]
                    }
                }
            });
        }
    }

    function chart_demo_3() {
        if ($('#chart_demo_3').length) {
            var element = document.getElementById("chart_demo_3"),
                ctx = element.getContext("2d");


            new Chart(ctx, {
                type: 'line',
                data: {
                    labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
                    datasets: [{
                        label: 'Success',
                        borderColor: colors.success,
                        data: [-10, 30, -20, 0, 25, 44, 30, 15, 20, 10, 5, -5],
                        pointRadius: 5,
                        pointHoverRadius: 7,
                        borderDash: [2, 2],
                        fill: false
                    }, {
                        label: 'Return',
                        fill: false,
                        borderDash: [2, 2],
                        borderColor: colors.danger,
                        data: [20, 0, 22, 39, -10, 19, -7, 0, 15, 0, -10, 5],
                        pointRadius: 5,
                        pointHoverRadius: 7
                    }]
                },
                options: {
                    responsive: true,
                    legend: {
                        display: false,
                        labels: {
                            fontColor: chartColors.fontColor
                        }
                    },
                    title: {
                        display: false,
                        fontColor: chartColors.fontColor
                    },
                    scales: {
                        xAxes: [{
                            gridLines: {
                                display: false,
                                color: chartColors.borderColor
                            },
                            ticks: {
                                fontColor: chartColors.fontColor,
                                display: false
                            }
                        }],
                        yAxes: [{
                            gridLines: {
                                color: chartColors.borderColor
                            },
                            ticks: {
                                fontColor: chartColors.fontColor,
                                min: -50,
                                max: 50
                            }
                        }],
                    }
                }
            });

        }
    }

    function chart_demo_4() {
        if ($('#chart_demo_4').length) {
            var ctx = document.getElementById("chart_demo_4").getContext("2d");
            var densityData = {
                backgroundColor: chartColors.primary.light,
                data: [10, 20, 40, 60, 80, 40, 60, 80, 40, 80, 20, 59]
            };
            new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
                    datasets: [densityData]
                },
                options: {
                    scaleFontColor: "#FFFFFF",
                    legend: {
                        display: false,
                        labels: {
                            fontColor: chartColors.fontColor
                        }
                    },
                    scales: {
                        xAxes: [{
                            gridLines: {
                                color: chartColors.borderColor
                            },
                            ticks: {
                                fontColor: chartColors.fontColor
                            }
                        }],
                        yAxes: [{
                            gridLines: {
                                color: chartColors.borderColor
                            },
                            ticks: {
                                fontColor: chartColors.fontColor,
                                min: 0,
                                max: 100,
                                beginAtZero: true
                            }
                        }]
                    }
                }
            });
        }
    }

    function chart_demo_5() {
        if ($('#chart_demo_5').length) {
            var ctx = document.getElementById('chart_demo_5').getContext('2d');
            window.myBar = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: ['January', 'February', 'March', 'April', 'May'],
                    datasets: [
                        {
                            label: 'Dataset 1',
                            backgroundColor: [
                                chartColors.info.base,
                                chartColors.success.base,
                                chartColors.danger.base,
                                chartColors.dark,
                                chartColors.warning.base,
                            ],
                            yAxisID: 'y-axis-1',
                            data: [33, 56, -40, 25, 45]
                        },
                        {
                            label: 'Dataset 2',
                            backgroundColor: chartColors.info.base,
                            yAxisID: 'y-axis-2',
                            data: [23, 86, -40, 5, 45]
                        }
                    ]
                },
                options: {
                    legend: {
                        labels: {
                            fontColor: chartColors.fontColor
                        }
                    },
                    responsive: true,
                    title: {
                        display: true,
                        text: 'Chart.js Bar Chart - Multi Axis',
                        fontColor: chartColors.fontColor
                    },
                    tooltips: {
                        mode: 'index',
                        intersect: true
                    },
                    scales: {
                        xAxes: [{
                            gridLines: {
                                color: chartColors.borderColor
                            },
                            ticks: {
                                fontColor: chartColors.fontColor
                            }
                        }],
                        yAxes: [
                            {
                                type: 'linear',
                                display: true,
                                position: 'left',
                                id: 'y-axis-1',
                            },
                            {
                                gridLines: {
                                    color: chartColors.borderColor
                                },
                                ticks: {
                                    fontColor: chartColors.fontColor
                                }
                            },
                            {
                                type: 'linear',
                                display: true,
                                position: 'right',
                                id: 'y-axis-2',
                                gridLines: {
                                    drawOnChartArea: false
                                },
                                ticks: {
                                    fontColor: chartColors.fontColor
                                }
                            }
                        ],
                    }
                }
            });
        }
    }

    function chart_demo_6() {
        if ($('#chart_demo_6').length) {
            var ctx = document.getElementById("chart_demo_6").getContext("2d");
            var speedData = {
                labels: ["0s", "10s", "20s", "30s", "40s", "50s", "60s"],
                datasets: [{
                    label: "Car Speed (mph)",
                    borderColor: chartColors.primary.base,
                    backgroundColor: 'rgba(0, 0, 0, 0',
                    data: [0, 59, 75, 20, 20, 55, 40]
                }]
            };
            var chartOptions = {
                legend: {
                    scaleFontColor: "#FFFFFF",
                    position: 'top',
                    labels: {
                        fontColor: chartColors.fontColor
                    }
                },
                scales: {
                    xAxes: [{
                        gridLines: {
                            color: chartColors.borderColor
                        },
                        ticks: {
                            fontColor: chartColors.fontColor
                        }
                    }],
                    yAxes: [{
                        gridLines: {
                            color: chartColors.borderColor
                        },
                        ticks: {
                            fontColor: chartColors.fontColor
                        }
                    }]
                }
            };
            new Chart(ctx, {
                type: 'line',
                data: speedData,
                options: chartOptions
            });
        }
    }

    function chart_demo_7() {
        if ($('#chart_demo_7').length) {
            var config = {
                type: 'pie',
                data: {
                    datasets: [{
                        borderWidth: 3,
                        borderColor: $('body').hasClass('dark') ? "#313852" : "rgba(255, 255, 255, 1)",
                        data: [
                            1242,
                            742,
                            442,
                            1742
                        ],
                        backgroundColor: [
                            colors.danger,
                            colors.info,
                            colors.warning,
                            colors.success
                        ],
                        label: 'Dataset 1'
                    }],
                    labels: [
                        'Organic Search',
                        'Email',
                        'Refferal',
                        'Social Media',
                    ]
                },
                options: {
                    responsive: true,
                    legend: {
                        display: false
                    }
                }
            };

            var ctx = document.getElementById('chart_demo_7').getContext('2d');
            new Chart(ctx, config);
        }
    }

    function chart_demo_8() {
        if ($('#chart_demo_8').length) {
            new Chart(document.getElementById("chart_demo_8"), {
                type: 'radar',
                data: {
                    labels: ["Africa", "Asia", "Europe", "Latin America", "North America"],
                    datasets: [
                        {
                            label: "1950",
                            fill: true,
                            backgroundColor: "rgba(179,181,198,0.2)",
                            borderColor: "rgba(179,181,198,1)",
                            pointBorderColor: "#fff",
                            pointBackgroundColor: "rgba(179,181,198,1)",
                            data: [-8.77, -55.61, 21.69, 6.62, 6.82]
                        }, {
                            label: "2050",
                            fill: true,
                            backgroundColor: "rgba(255,99,132,0.2)",
                            borderColor: "rgba(255,99,132,1)",
                            pointBorderColor: "#fff",
                            pointBackgroundColor: "rgba(255,99,132,1)",
                            data: [-25.48, 54.16, 7.61, 8.06, 4.45]
                        }
                    ]
                },
                options: {
                    legend: {
                        labels: {
                            fontColor: chartColors.fontColor
                        }
                    },
                    scale: {
                        gridLines: {
                            color: chartColors.borderColor
                        }
                    },
                    title: {
                        display: true,
                        text: 'Distribution in % of world population',
                        fontColor: chartColors.fontColor
                    }
                }
            });
        }
    }

    function chart_demo_9() {
        if ($('#chart_demo_9').length) {
            new Chart(document.getElementById("chart_demo_9"), {
                type: 'horizontalBar',
                data: {
                    labels: ["Africa", "Asia", "Europe", "Latin America", "North America"],
                    datasets: [
                        {
                            label: "Population (millions)",
                            backgroundColor: colors.primary,
                            data: [2478, 2267, 734, 1284, 1933]
                        }
                    ]
                },
                options: {
                    legend: {
                        display: false
                    },
                    scales: {
                        xAxes: [{
                            gridLines: {
                                color: chartColors.borderColor
                            },
                            ticks: {
                                fontColor: chartColors.fontColor,
                                display: false
                            }
                        }],
                        yAxes: [{
                            gridLines: {
                                color: chartColors.borderColor,
                                display: false
                            },
                            ticks: {
                                fontColor: chartColors.fontColor
                            },
                            barPercentage: 0.5
                        }]
                    }
                }
            });
        }
    }

    function chart_demo_10() {
        if ($('#chart_demo_10').length) {
            var element = document.getElementById("chart_demo_10");
            new Chart(element, {
                type: 'bar',
                data: {
                    labels: ["1900", "1950", "1999", "2050"],
                    datasets: [
                        {
                            label: "Europe",
                            type: "line",
                            borderColor: "#8e5ea2",
                            data: [408, 547, 675, 734],
                            fill: false
                        },
                        {
                            label: "Africa",
                            type: "line",
                            borderColor: "#3e95cd",
                            data: [133, 221, 783, 2478],
                            fill: false
                        },
                        {
                            label: "Europe",
                            type: "bar",
                            backgroundColor: chartColors.primary.base,
                            data: [408, 547, 675, 734],
                        },
                        {
                            label: "Africa",
                            type: "bar",
                            backgroundColor: chartColors.primary.light,
                            data: [133, 221, 783, 2478]
                        }
                    ]
                },
                options: {
                    title: {
                        display: true,
                        text: 'Population growth (millions): Europe & Africa',
                        fontColor: chartColors.fontColor
                    },
                    legend: {
                        display: true,
                        labels: {
                            fontColor: chartColors.fontColor
                        }
                    },
                    scales: {
                        xAxes: [{
                            gridLines: {
                                color: chartColors.borderColor
                            },
                            ticks: {
                                fontColor: chartColors.fontColor
                            }
                        }],
                        yAxes: [{
                            gridLines: {
                                color: chartColors.borderColor
                            },
                            ticks: {
                                fontColor: chartColors.fontColor
                            }
                        }]
                    }
                }
            });
        }
    }

    if ($('#circle-1').length) {
        $('#circle-1').circleProgress({
            startAngle: 1.55,
            value: 0.65,
            size: 90,
            thickness: 10,
            fill: {
                color: colors.primary
            }
        });
    }

    if ($('#sales-circle-graphic').length) {
        $('#sales-circle-graphic').circleProgress({
            startAngle: 1.55,
            value: 0.65,
            size: 180,
            thickness: 30,
            fill: {
                color: colors.primary
            }
        });
    }

    if ($('#circle-2').length) {
        $('#circle-2').circleProgress({
            startAngle: 1.55,
            value: 0.35,
            size: 90,
            thickness: 10,
            fill: {
                color: colors.warning
            }
        });
    }

    ////////////////////////////////////////////

    if ($(".dashboard-pie-1").length) {
        $(".dashboard-pie-1").peity("pie", {
            fill: [colors.primaryLight, colors.primary],
            radius: 30
        });
    }

    if ($(".dashboard-pie-2").length) {
        $(".dashboard-pie-2").peity("pie", {
            fill: [colors.successLight, colors.success],
            radius: 30
        });
    }

    if ($(".dashboard-pie-3").length) {
        $(".dashboard-pie-3").peity("pie", {
            fill: [colors.warningLight, colors.warning],
            radius: 30
        });
    }

    if ($(".dashboard-pie-4").length) {
        $(".dashboard-pie-4").peity("pie", {
            fill: [colors.infoLight, colors.info],
            radius: 30
        });
    }

    ////////////////////////////////////////////

    function bar_chart() {
        if ($('#chart-ticket-status').length > 0) {
            var dataSource = [
                {country: "USA", hydro: 59.8, oil: 937.6, gas: 582, coal: 564.3, nuclear: 187.9},
                {country: "China", hydro: 74.2, oil: 308.6, gas: 35.1, coal: 956.9, nuclear: 11.3},
                {country: "Russia", hydro: 40, oil: 128.5, gas: 361.8, coal: 105, nuclear: 32.4},
                {country: "Japan", hydro: 22.6, oil: 241.5, gas: 64.9, coal: 120.8, nuclear: 64.8},
                {country: "India", hydro: 19, oil: 119.3, gas: 28.9, coal: 204.8, nuclear: 3.8},
                {country: "Germany", hydro: 6.1, oil: 123.6, gas: 77.3, coal: 85.7, nuclear: 37.8}
            ];

            // Return with commas in between
            var numberWithCommas = function (x) {
                return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
            };

            var dataPack1 = [40, 47, 44, 38, 27, 40, 47, 44, 38, 27, 40, 27];
            var dataPack2 = [10, 12, 7, 5, 4, 10, 12, 7, 5, 4, 10, 12];
            var dataPack3 = [17, 11, 22, 18, 12, 17, 11, 22, 18, 12, 17, 11];
            var dates = ["Jan", "Jan", "Jan", "Apr", "May", "Jun", "Jul", "Aug", "Sept", "Oct", "Nov", "Dec"];

            var bar_ctx = document.getElementById('chart-ticket-status');

            bar_ctx.height = 115;

            new Chart(bar_ctx, {
                    type: 'bar',
                    data: {
                        labels: dates,
                        datasets: [
                            {
                                label: 'New Tickets',
                                data: dataPack1,
                                backgroundColor: colors.primary,
                                hoverBorderWidth: 0
                            },
                            {
                                label: 'Solved Tickets',
                                data: dataPack2,
                                backgroundColor: colors.success,
                                hoverBorderWidth: 0
                            },
                            {
                                label: 'Pending Tickets',
                                data: dataPack3,
                                backgroundColor: colors.info,
                                hoverBorderWidth: 0
                            },
                        ]
                    },
                    options: {
                        legend: {
                            display: false
                        },
                        animation: {
                            duration: 10,
                        },
                        tooltips: {
                            mode: 'label',
                            callbacks: {
                                label: function (tooltipItem, data) {
                                    return data.datasets[tooltipItem.datasetIndex].label + ": " + numberWithCommas(tooltipItem.yLabel);
                                }
                            }
                        },
                        scales: {
                            xAxes: [{
                                stacked: true,
                                gridLines: {display: false},
                                ticks: {
                                    fontSize: 11,
                                    fontColor: chartColors.fontColor
                                }
                            }],
                            yAxes: [{
                                stacked: true,
                                ticks: {
                                    callback: function (value) {
                                        return numberWithCommas(value);
                                    },
                                    fontSize: 11,
                                    fontColor: chartColors.fontColor
                                },
                            }],
                        }
                    },
                    plugins: [{
                        beforeInit: function (chart) {
                            chart.data.labels.forEach(function (value, index, array) {
                                var a = [];
                                a.push(value.slice(0, 5));
                                var i = 1;
                                while (value.length > (i * 5)) {
                                    a.push(value.slice(i * 5, (i + 1) * 5));
                                    i++;
                                }
                                array[index] = a;
                            })
                        }
                    }]
                }
            );
        }
    }

    bar_chart();

    function users_chart() {
        if ($('#users-chart').length > 0) {
            var lastDate = 0;
            var data = []
            var TICKINTERVAL = 86400000
            let XAXISRANGE = 777600000

            function getDayWiseTimeSeries(baseval, count, yrange) {
                var i = 0;
                while (i < count) {
                    var x = baseval;
                    var y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;

                    data.push({
                        x, y
                    });
                    lastDate = baseval
                    baseval += TICKINTERVAL;
                    i++;
                }
            }

            getDayWiseTimeSeries(new Date('11 Feb 2017 GMT').getTime(), 10, {
                min: 10,
                max: 90
            });

            function getNewSeries(baseval, yrange) {
                var newDate = baseval + TICKINTERVAL;
                lastDate = newDate;

                for (var i = 0; i < data.length - 10; i++) {
                    // IMPORTANT
                    // we reset the x and y of the data which is out of drawing area
                    // to prevent memory leaks
                    data[i].x = newDate - XAXISRANGE - TICKINTERVAL
                    data[i].y = 0
                }

                data.push({
                    x: newDate,
                    y: Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min
                })

            }

            function resetData() {
                // Alternatively, you can also reset the data at certain intervals to prevent creating a huge series
                data = data.slice(data.length - 10, data.length);
            }

            var options = {
                chart: {
                    height: 270,
                    type: 'line',
                    animations: {
                        enabled: true,
                        easing: 'linear',
                        dynamicAnimation: {
                            speed: 1000
                        }
                    },
                    toolbar: {
                        show: false
                    },
                    zoom: {
                        enabled: false
                    }
                },
                dataLabels: {
                    enabled: false
                },
                stroke: {
                    curve: 'smooth',
                    width: 2
                },
                series: [{
                    data: data
                }],
                markers: {
                    size: 0
                },
                xaxis: {
                    type: 'datetime',
                    range: XAXISRANGE,
                },
                yaxis: {
                    max: 100
                },
                legend: {
                    show: false
                },
            }

            var chart = new ApexCharts(
                document.querySelector("#users-chart"),
                options
            );

            chart.render();

            window.setInterval(function () {
                getNewSeries(lastDate, {
                    min: 10,
                    max: 90
                })
                chart.updateSeries([{
                    data: data
                }])
            }, 1000)
        }
    }

    users_chart();

    function device_session_chart() {
        if ($('#device_session_chart').length) {
            var options = {
                chart: {
                    type: 'area',
                    stacked: true,
                    events: {
                        selection: function (chart, e) {
                            // console.log(new Date(e.xaxis.min))
                        }
                    },
                    toolbar: {
                        show: false,
                    }

                },
                colors: ['#008FFB', '#00E396', '#CED4DC'],
                dataLabels: {
                    enabled: false
                },
                stroke: {
                    curve: 'smooth',
                    width: 1
                },
                series: [{
                    name: 'South',
                    data: generateDayWiseTimeSeries(new Date('11 Feb 2017 GMT').getTime(), 20, {
                        min: 10,
                        max: 60
                    })
                },
                    {
                        name: 'North',
                        data: generateDayWiseTimeSeries(new Date('11 Feb 2017 GMT').getTime(), 20, {
                            min: 10,
                            max: 20
                        })
                    },

                    {
                        name: 'Central',
                        data: generateDayWiseTimeSeries(new Date('11 Feb 2017 GMT').getTime(), 20, {
                            min: 10,
                            max: 15
                        })
                    }
                ],
                fill: {
                    type: 'gradient',
                    gradient: {
                        opacityFrom: 0.6,
                        opacityTo: 0,
                    }
                },
                legend: {
                    show: false,
                    position: 'top',
                    horizontalAlign: 'left'
                },
                xaxis: {
                    type: 'datetime'
                },
            };

            var chart = new ApexCharts(
                document.querySelector("#device_session_chart"),
                options
            );

            chart.render();

            /*
              // this function will generate output in this format
              // data = [
                  [timestamp, 23],
                  [timestamp, 33],
                  [timestamp, 12]
                  ...
              ]
              */
            function generateDayWiseTimeSeries(baseval, count, yrange) {
                var i = 0;
                var series = [];
                while (i < count) {
                    var x = baseval;
                    var y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;

                    series.push([x, y]);
                    baseval += 86400000;
                    i++;
                }
                return series;
            }
        }
    }

    device_session_chart();

    function chart1() {
        if ($('#chart1').length) {
            var options = {
                chart: {
                    type: 'bar',
                    toolbar: {
                        show: false
                    }
                },
                plotOptions: {
                    bar: {
                        horizontal: false,
                        columnWidth: '55%',
                        backgroundBarColors: ['red']
                    },
                },
                dataLabels: {
                    enabled: false
                },
                stroke: {
                    show: true,
                    width: 1,
                    colors: ['transparent']
                },
                colors: [colors.secondary, colors.info, colors.warning],
                series: [{
                    name: 'Net Profit',
                    data: [44, 55, 57, 56, 61, 58, 63, 60, 66]
                }, {
                    name: 'Revenue',
                    data: [76, 85, 101, 98, 87, 105, 91, 114, 94]
                }, {
                    name: 'Free Cash Flow',
                    data: [35, 41, 36, 26, 45, 48, 52, 53, 41]
                }],
                xaxis: {
                    categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct'],
                },
                legend: {
                    position: 'bottom',
                    offsetY: -10
                },
                tooltip: {
                    y: {
                        formatter: function (val) {
                            return "$ " + val + " thousands"
                        }
                    }
                }
            };

            var chart = new ApexCharts(
                document.querySelector("#chart1"),
                options
            );

            chart.render();
        }
    }

    chart1();

    function widget_chart1() {
        if ($('#widget-chart1').length) {
            var ctx = document.getElementById("widget-chart1");
            ctx.height = 50;
            new Chart(ctx.getContext('2d'), {
                type: 'line',
                data: {
                    labels: ["Mon", "Tue", "Wed", "Thu", "Fri", "Sst", "Sun"],
                    datasets: [{
                        label: 'data-2',
                        data: [5, 15, 5, 20, 5, 15, 5],
                        backgroundColor: "rgba(0,0,255,0)",
                        borderWidth: 1,
                        borderColor: colors.success,
                        pointBorder: false,
                    }]
                },
                options: {
                    elements: {
                        point: {
                            radius: 0
                        }
                    },
                    tooltips: {
                        enabled: false
                    },
                    legend: {
                        display: false
                    },
                    scales: {
                        yAxes: [{
                            display: false,
                        }],
                        xAxes: [{
                            display: false
                        }]
                    },
                }
            });
        }
    }

    widget_chart1();

    function widget_chart2() {
        if ($('#widget-chart2').length) {
            var ctx = document.getElementById("widget-chart2");
            ctx.height = 50;
            var barChart = new Chart(ctx.getContext('2d'), {
                type: 'line',
                data: {
                    labels: ["Mon", "Tue", "Wed", "Thu", "Fri", "Sst", "Sun"],
                    datasets: [{
                        label: 'data-2',
                        data: [5, 10, 10, 10, 5, 15, 10],
                        backgroundColor: "rgba(0,0,255,0)",
                        borderColor: colors.warning,
                        borderWidth: 1,
                        pointBorder: false,
                    }]
                },
                options: {
                    elements: {
                        point: {
                            radius: 0
                        }
                    },
                    tooltips: {
                        enabled: false
                    },
                    legend: {
                        display: false
                    },
                    scales: {
                        yAxes: [{
                            display: false
                        }],
                        xAxes: [{
                            display: false
                        }]
                    },
                }
            });
        }
    }

    widget_chart2();

    function widget_chart3() {
        if ($('#widget-chart3').length) {
            var ctx = document.getElementById("widget-chart3");
            ctx.height = 50;
            var barChart = new Chart(ctx.getContext('2d'), {
                type: 'line',
                data: {
                    labels: ["Mon", "Tue", "Wed", "Thu", "Fri", "Sst", "Sun"],
                    datasets: [{
                        label: 'data-2',
                        data: [10, 5, 15, 5, 15, 5, 15],
                        backgroundColor: "rgba(0,0,255,0)",
                        borderColor: colors.danger,
                        borderWidth: 1,
                        pointBorder: false,
                    }]
                },
                options: {
                    elements: {
                        point: {
                            radius: 0
                        }
                    },
                    tooltips: {
                        enabled: false
                    },
                    legend: {
                        display: false
                    },
                    scales: {
                        yAxes: [{
                            display: false
                        }],
                        xAxes: [{
                            display: false
                        }]
                    },
                }
            });
        }
    }

    widget_chart3();

    function contactsStatuses() {
        if ($('#contacts-statuses').length) {
            var chart = new ApexCharts(
                document.querySelector("#contacts-statuses"), {
                    chart: {
                        width: "100%",
                        type: 'donut',
                    },
                    dataLabels: {
                        enabled: false
                    },
                    stroke: {
                        width: 3,
                        colors: $('body').hasClass('dark') ? "#313852" : "rgba(255, 255, 255, 1)",
                    },
                    series: [44, 55, 13, 33],
                    labels: ['New Contact', 'NR1', 'NR2', 'NR3'],
                    colors: [colors.warning, colors.info, colors.success, colors.danger],
                    legend: {
                        position: 'bottom',
                    }
                }
            );

            chart.render();
        }
    }

    contactsStatuses();

    function numberOfOrders() {
        if ($('#number-of-orders').length) {
            var ts2 = 1484418600000;
            var dates = [];
            for (var i = 0; i < 120; i++) {
                ts2 = ts2 + 86400000;
                var innerArr = [ts2, dataSeries[1][i].value];
                dates.push(innerArr)
            }

            console.log(dates);

            var options = {
                chart: {
                    type: 'area',
                    stacked: false,
                    height: 350,
                    toolbar: {
                        show: false
                    }
                },
                dataLabels: {
                    enabled: false
                },
                series: [{
                    name: 'Number of orders',
                    data: dates
                }],
                stroke: {
                    colors: [colors.primary],
                    width: 1
                },
                markers: {
                    size: 0,
                    strokeColors: 'white',
                    colors: colors.primary
                },
                fill: {
                    type: 'gradient',
                    gradient: {
                        opacityFrom: 0.6,
                        opacityTo: 0,
                    }
                },
                yaxis: {
                    labels: {
                        formatter: function (val) {
                            return (val / 1000000).toFixed(0);
                        },
                    },
                    title: {
                        text: 'Price'
                    },
                },
                xaxis: {
                    type: 'datetime',
                },

                tooltip: {
                    shared: false,
                    y: {
                        formatter: function (val) {
                            return (val / 1000000).toFixed(0)
                        }
                    }
                }
            };

            var chart = new ApexCharts(
                document.querySelector("#number-of-orders"),
                options
            );

            chart.render();
        }
    }

    numberOfOrders();

    function hotProducts() {
        if ($('#hot-products').length) {
            var randomScalingFactor = function () {
                return Math.round(Math.random() * 100);
            };

            var config = {
                type: 'pie',
                data: {
                    datasets: [{
                        data: [
                            randomScalingFactor(),
                            randomScalingFactor(),
                            randomScalingFactor(),
                            randomScalingFactor(),
                            randomScalingFactor(),
                        ],
                        backgroundColor: [
                            colors.primary,
                            colors.success,
                            colors.info,
                            colors.secondary,
                            colors.warning,
                        ],
                        borderColor: $('body').hasClass('dark') ? chartColors.dark : 'white',
                        label: 'Dataset 1'
                    }],
                    labels: [
                        'Apple iPhone XR 256GB red',
                        'Samsung Galaxy A30 3/32GB blue',
                        'Apple iPhone XS 64GB gold',
                        'Samsung Galaxy Note9 6/128GB',
                        'Apple iPhone XR 256GB red'
                    ]
                },
                options: {
                    legend: {
                        display: false
                    },
                    responsive: true,
                    legendCallback: function (chart) {
                        var text = [];
                        text.push('<ul class="' + chart.id + '-legend">');
                        for (var i = 0; i < chart.legend.legendItems.length; i++) {
                            text.push('<li><div class="legendValue"><span style="background-color:' + chart.legend.legendItems[i].fillStyle + '">&nbsp;&nbsp;&nbsp;&nbsp;</span>');

                            if (chart.legend.legendItems[i].text) {
                                text.push('<span class="label ml-2">' + chart.legend.legendItems[i].text + '</span>');
                            }

                            text.push('</div></li><div class="clear"></div>');
                        }

                        text.push('</ul>');

                        return text.join('');
                    },
                },
            };


            window.onload = function () {
                var ctx = document.getElementById('hot-products').getContext('2d');

                var chart = new Chart(ctx, config);

                document.getElementById('hot-products-legends').innerHTML = chart.generateLegend();
            };
        }
    }

    hotProducts();

    function revenue() {
        if ($('#revenue').length) {

            let url = location.origin + '/ecommerce/sales';
            fetch(url)
                .then((response) => {
                    return response.json();
                })
                .then((data) => {
                    var options = {
                        chart: {
                            type: 'line',
                            zoom: {
                                enabled: false
                            },
                            toolbar: {
                                show: false
                            }
                        },
                        series: [{
                            name: "Desktops",
                            //data: [10, 41, 35, 51, 49, 62, 69, 91, 200, 170, 200, 300]
                            data: [
                                data['01']===undefined ? 0 : data['01'],
                                data['02']===undefined ? 0 : data['02'],
                                data['03']===undefined ? 0 : data['03'],
                                data['04']===undefined ? 0 : data['04'],
                                data['05']===undefined ? 0 : data['05'],
                                data['06']===undefined ? 0 : data['06'],
                                data['07']===undefined ? 0 : data['07'],
                                data['08']===undefined ? 0 : data['08'],
                                data['09']===undefined ? 0 : data['09'],
                                data['10']===undefined ? 0 : data['10'],
                                data['11']===undefined ? 0 : data['11'],
                                data['12']===undefined ? 0 : data['12'],
                            ]
                        }],
                        dataLabels: {
                            enabled: false
                        },
                        stroke: {
                            curve: 'straight',
                            colors: [colors.primary]
                        },
                        markers: {
                            strokeColors: 'white',
                            colors: colors.primary
                        },
                        xaxis: {
                            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
                        }
                    };

                    var chart = new ApexCharts(
                        document.querySelector("#revenue"),
                        options
                    );

                    chart.render();





                });




        }
    }

    revenue();

    function projectTasks() {
        if ($('#project-tasks').length) {
            var options = {
                colors: [colors.primary, colors.success, colors.info, colors.warning],
                chart: {
                    height: 362,
                    type: 'bar',
                    stacked: true,
                    toolbar: {
                        show: false
                    },
                    zoom: {
                        enabled: false
                    }
                },
                plotOptions: {
                    bar: {
                        horizontal: false,
                    },
                },
                series: [{
                    name: 'Project A',
                    data: [44, 55, 41, 67, 22, 43]
                }, {
                    name: 'Project B',
                    data: [13, 23, 20, 8, 13, 27]
                }, {
                    name: 'Project C',
                    data: [11, 17, 15, 15, 21, 14]
                }, {
                    name: 'Project D',
                    data: [21, 7, 25, 13, 22, 8]
                }],
                xaxis: {
                    type: 'datetime',
                    categories: ['01/01/2011 GMT', '01/02/2011 GMT', '01/03/2011 GMT', '01/04/2011 GMT', '01/05/2011 GMT', '01/06/2011 GMT'],
                },
                legend: {
                    position: 'bottom',
                    offsetY: -10
                },
                fill: {
                    opacity: 1
                },
            };

            var chart = new ApexCharts(
                document.querySelector("#project-tasks"),
                options
            );

            chart.render();
        }
    }

    projectTasks();

});

"use strict";(function(a){var h=a(window),b=a("body");feather.replace({"stroke-width":1});a(document).on("click",'[data-toggle="fullscreen"]',function(){a(this).toggleClass("active-fullscreen");if(document.fullscreenEnabled){if(a(this).hasClass("active-fullscreen")){document.documentElement.requestFullscreen()}else{document.exitFullscreen()}}else{alert("Your browser does not support fullscreen.")}return false});a(document).on("click",".overlay",function(){a.removeOverlay();if(b.hasClass("hidden-navigation")){a(".navigation .navigation-menu-body").niceScroll().remove()}b.removeClass("navigation-show")});a.createOverlay=function(){if(a(".overlay").length<1){b.addClass("no-scroll").append('<div class="overlay"></div>');a(".overlay").addClass("show")}};a.removeOverlay=function(){b.removeClass("no-scroll");a(".overlay").remove()};a("[data-backround-image]").each(function(i){a(this).css("background","url("+a(this).data("backround-image")+")")});h.on("load",function(){a(".preloader").fadeOut(400,function(){setTimeout(function(){toastr.options={timeOut:2000,progressBar:true,showMethod:"slideDown",hideMethod:"slideUp",showDuration:200,hideDuration:200,positionClass:"toast-top-center",};toastr.success("Welcome Roxana Roussell.");a(".theme-switcher").removeClass("open")},500)})});h.on("load",function(){setTimeout(function(){a(".navigation .navigation-menu-body ul li a").each(function(){var i=a(this);if(i.next("ul").length){i.append('<i class="sub-menu-arrow ti-angle-up"></i>')}});a(".navigation .navigation-menu-body ul li.open>a>.sub-menu-arrow").removeClass("ti-plus").addClass("ti-minus").addClass("rotate-in")},200)});a(document).on("click","[data-nav-target]",function(){var i=a(this),j=i.data("nav-target");if(b.hasClass("navigation-toggle-one")){b.addClass("navigation-show")}a(".navigation .navigation-menu-body .navigation-menu-group > div").removeClass("open");a(".navigation .navigation-menu-body .navigation-menu-group "+j).addClass("open");a("[data-nav-target]").removeClass("active");i.addClass("active");i.tooltip("hide")});a(document).on("click",".navigation-toggler a",function(){if(h.width()<1200){a.createOverlay();b.addClass("navigation-show")}else{if(!b.hasClass("navigation-toggle-one")&&!b.hasClass("navigation-toggle-two")){b.addClass("navigation-toggle-one")}else{if(b.hasClass("navigation-toggle-one")&&!b.hasClass("navigation-toggle-two")){b.addClass("navigation-toggle-two");b.removeClass("navigation-toggle-one")}else{if(!b.hasClass("navigation-toggle-one")&&b.hasClass("navigation-toggle-two")){b.removeClass("navigation-toggle-two");b.removeClass("navigation-toggle-one")}}}}return false});a(document).on("click",".header-toggler a",function(){a(".header ul.navbar-nav").toggleClass("open");return false});a(document).on("click","*",function(i){if(!a(i.target).is(a(".navigation, .navigation *, .navigation-toggler *"))&&b.hasClass("navigation-toggle-one")){b.removeClass("navigation-show")}});a(document).on("click","*",function(i){if(!a(i.target).is(".header ul.navbar-nav, .header ul.navbar-nav *, .header-toggler, .header-toggler *")){a(".header ul.navbar-nav").removeClass("open")}});window.addEventListener("load",function(){var i=document.getElementsByClassName("needs-validation");Array.prototype.filter.call(i,function(j){j.addEventListener("submit",function(k){if(j.checkValidity()===false){k.preventDefault();k.stopPropagation()}j.classList.add("was-validated")},false)})},false);var g=a(".table-responsive-stack");g.find("th").each(function(j){a(".table-responsive-stack td:nth-child("+(j+1)+")").prepend('<span class="table-responsive-stack-thead">'+a(this).text()+":</span> ");a(".table-responsive-stack-thead").hide()});g.each(function(){var j=a(this).find("th").length,i=100/j+"%";a(this).find("th, td").css("flex-basis",i)});function e(){if(h.width()<768){a(".table-responsive-stack").each(function(j){a(this).find(".table-responsive-stack-thead").show();a(this).find("thead").hide()})}else{a(".table-responsive-stack").each(function(j){a(this).find(".table-responsive-stack-thead").hide();a(this).find("thead").show()})}}e();window.onresize=function(i){e()};a(document).on("click",'[data-toggle="search"], [data-toggle="search"] *',function(){a(".header .header-body .header-search").show().find(".form-control").focus();return false});a(document).on("click",".close-header-search, .close-header-search svg",function(){a(".header .header-body .header-search").hide();return false});a(document).on("click","*",function(i){if(!a(i.target).is(a('.header, .header *, [data-toggle="search"], [data-toggle="search"] *'))){a(".header .header-body .header-search").hide()}});a(document).on("click",".accordion.custom-accordion .accordion-row a.accordion-header",function(){var i=a(this);i.closest(".accordion.custom-accordion").find(".accordion-row").not(i.parent()).removeClass("open");i.parent(".accordion-row").toggleClass("open");return false});var d,f=a(".table-responsive");f.on("show.bs.dropdown",function(i){d=a(i.target).find(".dropdown-menu");b.append(d.detach());var j=a(i.target).offset();d.css({display:"block",top:j.top+a(i.target).outerHeight(),left:j.left,width:"184px","font-size":"14px"});d.addClass("mobPosDropdown")});f.on("hide.bs.dropdown",function(i){a(i.target).append(d.detach());d.hide()});a(document).on("click",".chat-app-wrapper .btn-chat-sidebar-open",function(){a(".chat-app-wrapper .chat-sidebar").addClass("chat-sidebar-opened");return false});a(document).on("click","*",function(i){if(!a(i.target).is(".chat-app-wrapper .chat-sidebar, .chat-app-wrapper .chat-sidebar *, .chat-app-wrapper .btn-chat-sidebar-open, .chat-app-wrapper .btn-chat-sidebar-open *")){a(".chat-app-wrapper .chat-sidebar").removeClass("chat-sidebar-opened")}});a(document).on("click",".navigation ul li a",function(){var i=a(this);if(i.next("ul").length){var j=i.find(".sub-menu-arrow");j.toggleClass("rotate-in");i.next("ul").toggle(200);i.parent("li").siblings().find("ul").not(i.parent("li").find("ul")).slideUp(200);i.next("ul").find("li ul").slideUp(200);i.next("ul").find("li>a").find(".sub-menu-arrow").removeClass("ti-minus").addClass("ti-plus");i.next("ul").find("li>a").find(".sub-menu-arrow").removeClass("rotate-in");i.parent("li").siblings().not(i.parent("li").find("ul")).find(">a").find(".sub-menu-arrow").removeClass("ti-minus").addClass("ti-plus");i.parent("li").siblings().not(i.parent("li").find("ul")).find(">a").find(".sub-menu-arrow").removeClass("rotate-in");if(j.hasClass("rotate-in")){setTimeout(function(){j.removeClass("ti-plus").addClass("ti-minus")},200)}else{j.removeClass("ti-minus").addClass("ti-plus")}if(!b.hasClass("horizontal-side-menu")&&h.width()>=1200){setTimeout(function(k){a(".navigation .navigation-menu-body").getNiceScroll().resize()},300)}return false}});a("body.small-navigation .navigation").hover(function(i){if(b.hasClass("small-navigation")&&!b.hasClass("horizontal-navigation")&&!b.hasClass("hidden-navigation")&&h.width()>=992){a(".navigation .navigation-menu-body").niceScroll()}},function(){a(".navigation .navigation-menu-body").getNiceScroll().remove();a(".navigation ul").attr("style",null)});a(document).on("click",".dropdown-menu",function(i){i.stopPropagation()});a("#exampleModal").on("show.bs.modal",function(j){var i=a(j.relatedTarget),l=i.data("whatever"),k=a(this);k.find(".modal-title").text("New message to "+l);k.find(".modal-body input").val(l)});a('[data-toggle="tooltip"]').tooltip({container:"body"});a('[data-toggle="popover"]').popover();a(".carousel").carousel();if(h.width()>=992){a(".card-scroll").niceScroll();a(".table-responsive").niceScroll();a(".app-block .app-content .app-lists").niceScroll();a(".app-block .app-sidebar .app-sidebar-menu").niceScroll();a(".chat-block .chat-sidebar .chat-sidebar-content").niceScroll();var c=a(".chat-block .chat-content .messages");if(c.length){c.niceScroll({horizrailenabled:false});c.getNiceScroll(0).doScrollTop(c.get(0).scrollHeight,-1)}}if(!b.hasClass("small-navigation")&&!b.hasClass("horizontal-navigation")&&!b.hasClass("hidden-navigation")&&h.width()>=992){a(".navigation .navigation-menu-body").niceScroll()}a(".dropdown-menu ul.list-group").niceScroll();a(document).on("click",".chat-block .chat-content .mobile-chat-close-btn a",function(){a(".chat-block .chat-content").removeClass("mobile-open");return false})})(jQuery);